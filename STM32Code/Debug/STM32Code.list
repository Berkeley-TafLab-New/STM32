
STM32Code.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000d6c4  080002d0  080002d0  000012d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000858  0800d998  0800d998  0000e998  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  0800e1f0  0800e1f0  0000f1f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  0800e1f8  0800e1f8  0000f1f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .fini_array   00000004  0800e1fc  0800e1fc  0000f1fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         000001e0  24000000  0800e200  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000858  240001e0  0800e3e0  000101e0  2**2
                  ALLOC
  8 ._user_heap_stack 00000600  24000a38  0800e3e0  00010a38  2**0
                  ALLOC
  9 .ARM.attributes 0000002e  00000000  00000000  000101e0  2**0
                  CONTENTS, READONLY
 10 .debug_info   0001b5b4  00000000  00000000  0001020e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 00003419  00000000  00000000  0002b7c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00001618  00000000  00000000  0002ebe0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 00001150  00000000  00000000  000301f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  00035475  00000000  00000000  00031348  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   0001e708  00000000  00000000  000667bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    00151fcf  00000000  00000000  00084ec5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000043  00000000  00000000  001d6e94  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00006d80  00000000  00000000  001d6ed8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 00000060  00000000  00000000  001ddc58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	@ (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	@ (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	@ (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	240001e0 	.word	0x240001e0
 80002ec:	00000000 	.word	0x00000000
 80002f0:	0800d97c 	.word	0x0800d97c

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	@ (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	@ (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	@ (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	240001e4 	.word	0x240001e4
 800030c:	0800d97c 	.word	0x0800d97c

08000310 <strcmp>:
 8000310:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000314:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000318:	2a01      	cmp	r2, #1
 800031a:	bf28      	it	cs
 800031c:	429a      	cmpcs	r2, r3
 800031e:	d0f7      	beq.n	8000310 <strcmp>
 8000320:	1ad0      	subs	r0, r2, r3
 8000322:	4770      	bx	lr
	...

08000330 <memchr>:
 8000330:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000334:	2a10      	cmp	r2, #16
 8000336:	db2b      	blt.n	8000390 <memchr+0x60>
 8000338:	f010 0f07 	tst.w	r0, #7
 800033c:	d008      	beq.n	8000350 <memchr+0x20>
 800033e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000342:	3a01      	subs	r2, #1
 8000344:	428b      	cmp	r3, r1
 8000346:	d02d      	beq.n	80003a4 <memchr+0x74>
 8000348:	f010 0f07 	tst.w	r0, #7
 800034c:	b342      	cbz	r2, 80003a0 <memchr+0x70>
 800034e:	d1f6      	bne.n	800033e <memchr+0xe>
 8000350:	b4f0      	push	{r4, r5, r6, r7}
 8000352:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000356:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800035a:	f022 0407 	bic.w	r4, r2, #7
 800035e:	f07f 0700 	mvns.w	r7, #0
 8000362:	2300      	movs	r3, #0
 8000364:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000368:	3c08      	subs	r4, #8
 800036a:	ea85 0501 	eor.w	r5, r5, r1
 800036e:	ea86 0601 	eor.w	r6, r6, r1
 8000372:	fa85 f547 	uadd8	r5, r5, r7
 8000376:	faa3 f587 	sel	r5, r3, r7
 800037a:	fa86 f647 	uadd8	r6, r6, r7
 800037e:	faa5 f687 	sel	r6, r5, r7
 8000382:	b98e      	cbnz	r6, 80003a8 <memchr+0x78>
 8000384:	d1ee      	bne.n	8000364 <memchr+0x34>
 8000386:	bcf0      	pop	{r4, r5, r6, r7}
 8000388:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800038c:	f002 0207 	and.w	r2, r2, #7
 8000390:	b132      	cbz	r2, 80003a0 <memchr+0x70>
 8000392:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000396:	3a01      	subs	r2, #1
 8000398:	ea83 0301 	eor.w	r3, r3, r1
 800039c:	b113      	cbz	r3, 80003a4 <memchr+0x74>
 800039e:	d1f8      	bne.n	8000392 <memchr+0x62>
 80003a0:	2000      	movs	r0, #0
 80003a2:	4770      	bx	lr
 80003a4:	3801      	subs	r0, #1
 80003a6:	4770      	bx	lr
 80003a8:	2d00      	cmp	r5, #0
 80003aa:	bf06      	itte	eq
 80003ac:	4635      	moveq	r5, r6
 80003ae:	3803      	subeq	r0, #3
 80003b0:	3807      	subne	r0, #7
 80003b2:	f015 0f01 	tst.w	r5, #1
 80003b6:	d107      	bne.n	80003c8 <memchr+0x98>
 80003b8:	3001      	adds	r0, #1
 80003ba:	f415 7f80 	tst.w	r5, #256	@ 0x100
 80003be:	bf02      	ittt	eq
 80003c0:	3001      	addeq	r0, #1
 80003c2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80003c6:	3001      	addeq	r0, #1
 80003c8:	bcf0      	pop	{r4, r5, r6, r7}
 80003ca:	3801      	subs	r0, #1
 80003cc:	4770      	bx	lr
 80003ce:	bf00      	nop

080003d0 <strlen>:
 80003d0:	4603      	mov	r3, r0
 80003d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80003d6:	2a00      	cmp	r2, #0
 80003d8:	d1fb      	bne.n	80003d2 <strlen+0x2>
 80003da:	1a18      	subs	r0, r3, r0
 80003dc:	3801      	subs	r0, #1
 80003de:	4770      	bx	lr

080003e0 <__aeabi_uldivmod>:
 80003e0:	b953      	cbnz	r3, 80003f8 <__aeabi_uldivmod+0x18>
 80003e2:	b94a      	cbnz	r2, 80003f8 <__aeabi_uldivmod+0x18>
 80003e4:	2900      	cmp	r1, #0
 80003e6:	bf08      	it	eq
 80003e8:	2800      	cmpeq	r0, #0
 80003ea:	bf1c      	itt	ne
 80003ec:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 80003f0:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 80003f4:	f000 b988 	b.w	8000708 <__aeabi_idiv0>
 80003f8:	f1ad 0c08 	sub.w	ip, sp, #8
 80003fc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000400:	f000 f806 	bl	8000410 <__udivmoddi4>
 8000404:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000408:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800040c:	b004      	add	sp, #16
 800040e:	4770      	bx	lr

08000410 <__udivmoddi4>:
 8000410:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000414:	9d08      	ldr	r5, [sp, #32]
 8000416:	468e      	mov	lr, r1
 8000418:	4604      	mov	r4, r0
 800041a:	4688      	mov	r8, r1
 800041c:	2b00      	cmp	r3, #0
 800041e:	d14a      	bne.n	80004b6 <__udivmoddi4+0xa6>
 8000420:	428a      	cmp	r2, r1
 8000422:	4617      	mov	r7, r2
 8000424:	d962      	bls.n	80004ec <__udivmoddi4+0xdc>
 8000426:	fab2 f682 	clz	r6, r2
 800042a:	b14e      	cbz	r6, 8000440 <__udivmoddi4+0x30>
 800042c:	f1c6 0320 	rsb	r3, r6, #32
 8000430:	fa01 f806 	lsl.w	r8, r1, r6
 8000434:	fa20 f303 	lsr.w	r3, r0, r3
 8000438:	40b7      	lsls	r7, r6
 800043a:	ea43 0808 	orr.w	r8, r3, r8
 800043e:	40b4      	lsls	r4, r6
 8000440:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000444:	fa1f fc87 	uxth.w	ip, r7
 8000448:	fbb8 f1fe 	udiv	r1, r8, lr
 800044c:	0c23      	lsrs	r3, r4, #16
 800044e:	fb0e 8811 	mls	r8, lr, r1, r8
 8000452:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000456:	fb01 f20c 	mul.w	r2, r1, ip
 800045a:	429a      	cmp	r2, r3
 800045c:	d909      	bls.n	8000472 <__udivmoddi4+0x62>
 800045e:	18fb      	adds	r3, r7, r3
 8000460:	f101 30ff 	add.w	r0, r1, #4294967295	@ 0xffffffff
 8000464:	f080 80ea 	bcs.w	800063c <__udivmoddi4+0x22c>
 8000468:	429a      	cmp	r2, r3
 800046a:	f240 80e7 	bls.w	800063c <__udivmoddi4+0x22c>
 800046e:	3902      	subs	r1, #2
 8000470:	443b      	add	r3, r7
 8000472:	1a9a      	subs	r2, r3, r2
 8000474:	b2a3      	uxth	r3, r4
 8000476:	fbb2 f0fe 	udiv	r0, r2, lr
 800047a:	fb0e 2210 	mls	r2, lr, r0, r2
 800047e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000482:	fb00 fc0c 	mul.w	ip, r0, ip
 8000486:	459c      	cmp	ip, r3
 8000488:	d909      	bls.n	800049e <__udivmoddi4+0x8e>
 800048a:	18fb      	adds	r3, r7, r3
 800048c:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
 8000490:	f080 80d6 	bcs.w	8000640 <__udivmoddi4+0x230>
 8000494:	459c      	cmp	ip, r3
 8000496:	f240 80d3 	bls.w	8000640 <__udivmoddi4+0x230>
 800049a:	443b      	add	r3, r7
 800049c:	3802      	subs	r0, #2
 800049e:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 80004a2:	eba3 030c 	sub.w	r3, r3, ip
 80004a6:	2100      	movs	r1, #0
 80004a8:	b11d      	cbz	r5, 80004b2 <__udivmoddi4+0xa2>
 80004aa:	40f3      	lsrs	r3, r6
 80004ac:	2200      	movs	r2, #0
 80004ae:	e9c5 3200 	strd	r3, r2, [r5]
 80004b2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004b6:	428b      	cmp	r3, r1
 80004b8:	d905      	bls.n	80004c6 <__udivmoddi4+0xb6>
 80004ba:	b10d      	cbz	r5, 80004c0 <__udivmoddi4+0xb0>
 80004bc:	e9c5 0100 	strd	r0, r1, [r5]
 80004c0:	2100      	movs	r1, #0
 80004c2:	4608      	mov	r0, r1
 80004c4:	e7f5      	b.n	80004b2 <__udivmoddi4+0xa2>
 80004c6:	fab3 f183 	clz	r1, r3
 80004ca:	2900      	cmp	r1, #0
 80004cc:	d146      	bne.n	800055c <__udivmoddi4+0x14c>
 80004ce:	4573      	cmp	r3, lr
 80004d0:	d302      	bcc.n	80004d8 <__udivmoddi4+0xc8>
 80004d2:	4282      	cmp	r2, r0
 80004d4:	f200 8105 	bhi.w	80006e2 <__udivmoddi4+0x2d2>
 80004d8:	1a84      	subs	r4, r0, r2
 80004da:	eb6e 0203 	sbc.w	r2, lr, r3
 80004de:	2001      	movs	r0, #1
 80004e0:	4690      	mov	r8, r2
 80004e2:	2d00      	cmp	r5, #0
 80004e4:	d0e5      	beq.n	80004b2 <__udivmoddi4+0xa2>
 80004e6:	e9c5 4800 	strd	r4, r8, [r5]
 80004ea:	e7e2      	b.n	80004b2 <__udivmoddi4+0xa2>
 80004ec:	2a00      	cmp	r2, #0
 80004ee:	f000 8090 	beq.w	8000612 <__udivmoddi4+0x202>
 80004f2:	fab2 f682 	clz	r6, r2
 80004f6:	2e00      	cmp	r6, #0
 80004f8:	f040 80a4 	bne.w	8000644 <__udivmoddi4+0x234>
 80004fc:	1a8a      	subs	r2, r1, r2
 80004fe:	0c03      	lsrs	r3, r0, #16
 8000500:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000504:	b280      	uxth	r0, r0
 8000506:	b2bc      	uxth	r4, r7
 8000508:	2101      	movs	r1, #1
 800050a:	fbb2 fcfe 	udiv	ip, r2, lr
 800050e:	fb0e 221c 	mls	r2, lr, ip, r2
 8000512:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000516:	fb04 f20c 	mul.w	r2, r4, ip
 800051a:	429a      	cmp	r2, r3
 800051c:	d907      	bls.n	800052e <__udivmoddi4+0x11e>
 800051e:	18fb      	adds	r3, r7, r3
 8000520:	f10c 38ff 	add.w	r8, ip, #4294967295	@ 0xffffffff
 8000524:	d202      	bcs.n	800052c <__udivmoddi4+0x11c>
 8000526:	429a      	cmp	r2, r3
 8000528:	f200 80e0 	bhi.w	80006ec <__udivmoddi4+0x2dc>
 800052c:	46c4      	mov	ip, r8
 800052e:	1a9b      	subs	r3, r3, r2
 8000530:	fbb3 f2fe 	udiv	r2, r3, lr
 8000534:	fb0e 3312 	mls	r3, lr, r2, r3
 8000538:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 800053c:	fb02 f404 	mul.w	r4, r2, r4
 8000540:	429c      	cmp	r4, r3
 8000542:	d907      	bls.n	8000554 <__udivmoddi4+0x144>
 8000544:	18fb      	adds	r3, r7, r3
 8000546:	f102 30ff 	add.w	r0, r2, #4294967295	@ 0xffffffff
 800054a:	d202      	bcs.n	8000552 <__udivmoddi4+0x142>
 800054c:	429c      	cmp	r4, r3
 800054e:	f200 80ca 	bhi.w	80006e6 <__udivmoddi4+0x2d6>
 8000552:	4602      	mov	r2, r0
 8000554:	1b1b      	subs	r3, r3, r4
 8000556:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 800055a:	e7a5      	b.n	80004a8 <__udivmoddi4+0x98>
 800055c:	f1c1 0620 	rsb	r6, r1, #32
 8000560:	408b      	lsls	r3, r1
 8000562:	fa22 f706 	lsr.w	r7, r2, r6
 8000566:	431f      	orrs	r7, r3
 8000568:	fa0e f401 	lsl.w	r4, lr, r1
 800056c:	fa20 f306 	lsr.w	r3, r0, r6
 8000570:	fa2e fe06 	lsr.w	lr, lr, r6
 8000574:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000578:	4323      	orrs	r3, r4
 800057a:	fa00 f801 	lsl.w	r8, r0, r1
 800057e:	fa1f fc87 	uxth.w	ip, r7
 8000582:	fbbe f0f9 	udiv	r0, lr, r9
 8000586:	0c1c      	lsrs	r4, r3, #16
 8000588:	fb09 ee10 	mls	lr, r9, r0, lr
 800058c:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000590:	fb00 fe0c 	mul.w	lr, r0, ip
 8000594:	45a6      	cmp	lr, r4
 8000596:	fa02 f201 	lsl.w	r2, r2, r1
 800059a:	d909      	bls.n	80005b0 <__udivmoddi4+0x1a0>
 800059c:	193c      	adds	r4, r7, r4
 800059e:	f100 3aff 	add.w	sl, r0, #4294967295	@ 0xffffffff
 80005a2:	f080 809c 	bcs.w	80006de <__udivmoddi4+0x2ce>
 80005a6:	45a6      	cmp	lr, r4
 80005a8:	f240 8099 	bls.w	80006de <__udivmoddi4+0x2ce>
 80005ac:	3802      	subs	r0, #2
 80005ae:	443c      	add	r4, r7
 80005b0:	eba4 040e 	sub.w	r4, r4, lr
 80005b4:	fa1f fe83 	uxth.w	lr, r3
 80005b8:	fbb4 f3f9 	udiv	r3, r4, r9
 80005bc:	fb09 4413 	mls	r4, r9, r3, r4
 80005c0:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 80005c4:	fb03 fc0c 	mul.w	ip, r3, ip
 80005c8:	45a4      	cmp	ip, r4
 80005ca:	d908      	bls.n	80005de <__udivmoddi4+0x1ce>
 80005cc:	193c      	adds	r4, r7, r4
 80005ce:	f103 3eff 	add.w	lr, r3, #4294967295	@ 0xffffffff
 80005d2:	f080 8082 	bcs.w	80006da <__udivmoddi4+0x2ca>
 80005d6:	45a4      	cmp	ip, r4
 80005d8:	d97f      	bls.n	80006da <__udivmoddi4+0x2ca>
 80005da:	3b02      	subs	r3, #2
 80005dc:	443c      	add	r4, r7
 80005de:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80005e2:	eba4 040c 	sub.w	r4, r4, ip
 80005e6:	fba0 ec02 	umull	lr, ip, r0, r2
 80005ea:	4564      	cmp	r4, ip
 80005ec:	4673      	mov	r3, lr
 80005ee:	46e1      	mov	r9, ip
 80005f0:	d362      	bcc.n	80006b8 <__udivmoddi4+0x2a8>
 80005f2:	d05f      	beq.n	80006b4 <__udivmoddi4+0x2a4>
 80005f4:	b15d      	cbz	r5, 800060e <__udivmoddi4+0x1fe>
 80005f6:	ebb8 0203 	subs.w	r2, r8, r3
 80005fa:	eb64 0409 	sbc.w	r4, r4, r9
 80005fe:	fa04 f606 	lsl.w	r6, r4, r6
 8000602:	fa22 f301 	lsr.w	r3, r2, r1
 8000606:	431e      	orrs	r6, r3
 8000608:	40cc      	lsrs	r4, r1
 800060a:	e9c5 6400 	strd	r6, r4, [r5]
 800060e:	2100      	movs	r1, #0
 8000610:	e74f      	b.n	80004b2 <__udivmoddi4+0xa2>
 8000612:	fbb1 fcf2 	udiv	ip, r1, r2
 8000616:	0c01      	lsrs	r1, r0, #16
 8000618:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 800061c:	b280      	uxth	r0, r0
 800061e:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000622:	463b      	mov	r3, r7
 8000624:	4638      	mov	r0, r7
 8000626:	463c      	mov	r4, r7
 8000628:	46b8      	mov	r8, r7
 800062a:	46be      	mov	lr, r7
 800062c:	2620      	movs	r6, #32
 800062e:	fbb1 f1f7 	udiv	r1, r1, r7
 8000632:	eba2 0208 	sub.w	r2, r2, r8
 8000636:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 800063a:	e766      	b.n	800050a <__udivmoddi4+0xfa>
 800063c:	4601      	mov	r1, r0
 800063e:	e718      	b.n	8000472 <__udivmoddi4+0x62>
 8000640:	4610      	mov	r0, r2
 8000642:	e72c      	b.n	800049e <__udivmoddi4+0x8e>
 8000644:	f1c6 0220 	rsb	r2, r6, #32
 8000648:	fa2e f302 	lsr.w	r3, lr, r2
 800064c:	40b7      	lsls	r7, r6
 800064e:	40b1      	lsls	r1, r6
 8000650:	fa20 f202 	lsr.w	r2, r0, r2
 8000654:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000658:	430a      	orrs	r2, r1
 800065a:	fbb3 f8fe 	udiv	r8, r3, lr
 800065e:	b2bc      	uxth	r4, r7
 8000660:	fb0e 3318 	mls	r3, lr, r8, r3
 8000664:	0c11      	lsrs	r1, r2, #16
 8000666:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800066a:	fb08 f904 	mul.w	r9, r8, r4
 800066e:	40b0      	lsls	r0, r6
 8000670:	4589      	cmp	r9, r1
 8000672:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000676:	b280      	uxth	r0, r0
 8000678:	d93e      	bls.n	80006f8 <__udivmoddi4+0x2e8>
 800067a:	1879      	adds	r1, r7, r1
 800067c:	f108 3cff 	add.w	ip, r8, #4294967295	@ 0xffffffff
 8000680:	d201      	bcs.n	8000686 <__udivmoddi4+0x276>
 8000682:	4589      	cmp	r9, r1
 8000684:	d81f      	bhi.n	80006c6 <__udivmoddi4+0x2b6>
 8000686:	eba1 0109 	sub.w	r1, r1, r9
 800068a:	fbb1 f9fe 	udiv	r9, r1, lr
 800068e:	fb09 f804 	mul.w	r8, r9, r4
 8000692:	fb0e 1119 	mls	r1, lr, r9, r1
 8000696:	b292      	uxth	r2, r2
 8000698:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800069c:	4542      	cmp	r2, r8
 800069e:	d229      	bcs.n	80006f4 <__udivmoddi4+0x2e4>
 80006a0:	18ba      	adds	r2, r7, r2
 80006a2:	f109 31ff 	add.w	r1, r9, #4294967295	@ 0xffffffff
 80006a6:	d2c4      	bcs.n	8000632 <__udivmoddi4+0x222>
 80006a8:	4542      	cmp	r2, r8
 80006aa:	d2c2      	bcs.n	8000632 <__udivmoddi4+0x222>
 80006ac:	f1a9 0102 	sub.w	r1, r9, #2
 80006b0:	443a      	add	r2, r7
 80006b2:	e7be      	b.n	8000632 <__udivmoddi4+0x222>
 80006b4:	45f0      	cmp	r8, lr
 80006b6:	d29d      	bcs.n	80005f4 <__udivmoddi4+0x1e4>
 80006b8:	ebbe 0302 	subs.w	r3, lr, r2
 80006bc:	eb6c 0c07 	sbc.w	ip, ip, r7
 80006c0:	3801      	subs	r0, #1
 80006c2:	46e1      	mov	r9, ip
 80006c4:	e796      	b.n	80005f4 <__udivmoddi4+0x1e4>
 80006c6:	eba7 0909 	sub.w	r9, r7, r9
 80006ca:	4449      	add	r1, r9
 80006cc:	f1a8 0c02 	sub.w	ip, r8, #2
 80006d0:	fbb1 f9fe 	udiv	r9, r1, lr
 80006d4:	fb09 f804 	mul.w	r8, r9, r4
 80006d8:	e7db      	b.n	8000692 <__udivmoddi4+0x282>
 80006da:	4673      	mov	r3, lr
 80006dc:	e77f      	b.n	80005de <__udivmoddi4+0x1ce>
 80006de:	4650      	mov	r0, sl
 80006e0:	e766      	b.n	80005b0 <__udivmoddi4+0x1a0>
 80006e2:	4608      	mov	r0, r1
 80006e4:	e6fd      	b.n	80004e2 <__udivmoddi4+0xd2>
 80006e6:	443b      	add	r3, r7
 80006e8:	3a02      	subs	r2, #2
 80006ea:	e733      	b.n	8000554 <__udivmoddi4+0x144>
 80006ec:	f1ac 0c02 	sub.w	ip, ip, #2
 80006f0:	443b      	add	r3, r7
 80006f2:	e71c      	b.n	800052e <__udivmoddi4+0x11e>
 80006f4:	4649      	mov	r1, r9
 80006f6:	e79c      	b.n	8000632 <__udivmoddi4+0x222>
 80006f8:	eba1 0109 	sub.w	r1, r1, r9
 80006fc:	46c4      	mov	ip, r8
 80006fe:	fbb1 f9fe 	udiv	r9, r1, lr
 8000702:	fb09 f804 	mul.w	r8, r9, r4
 8000706:	e7c4      	b.n	8000692 <__udivmoddi4+0x282>

08000708 <__aeabi_idiv0>:
 8000708:	4770      	bx	lr
 800070a:	bf00      	nop

0800070c <AS5600_read_angle>:
 */

#include "AS5600.h"
#include "stdint.h"

HAL_StatusTypeDef AS5600_read_angle(I2C_HandleTypeDef *hi2c, float *angle){
 800070c:	b580      	push	{r7, lr}
 800070e:	b088      	sub	sp, #32
 8000710:	af04      	add	r7, sp, #16
 8000712:	6078      	str	r0, [r7, #4]
 8000714:	6039      	str	r1, [r7, #0]
    
    HAL_StatusTypeDef ret ;
    uint8_t angle_buff[2]; // hold the 2 bits from the Raw Angle 
    ret = HAL_I2C_Mem_Read(hi2c, (AS5600_ADRESS<<1), AS5600_RAW_ANGLE_REG, I2C_MEMADD_SIZE_8BIT,angle_buff,2,HAL_MAX_DELAY);//HAL_MAX_DELAY is blockling 
 8000716:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800071a:	9302      	str	r3, [sp, #8]
 800071c:	2302      	movs	r3, #2
 800071e:	9301      	str	r3, [sp, #4]
 8000720:	f107 0308 	add.w	r3, r7, #8
 8000724:	9300      	str	r3, [sp, #0]
 8000726:	2301      	movs	r3, #1
 8000728:	220c      	movs	r2, #12
 800072a:	216c      	movs	r1, #108	@ 0x6c
 800072c:	6878      	ldr	r0, [r7, #4]
 800072e:	f003 fce1 	bl	80040f4 <HAL_I2C_Mem_Read>
 8000732:	4603      	mov	r3, r0
 8000734:	73fb      	strb	r3, [r7, #15]
    if (ret != HAL_OK){
 8000736:	7bfb      	ldrb	r3, [r7, #15]
 8000738:	2b00      	cmp	r3, #0
 800073a:	d003      	beq.n	8000744 <AS5600_read_angle+0x38>
    	handle_error(ret);
 800073c:	7bfb      	ldrb	r3, [r7, #15]
 800073e:	4618      	mov	r0, r3
 8000740:	f000 f87e 	bl	8000840 <handle_error>
    }
    uint16_t raw_angle = (((angle_buff[0]<<8)|angle_buff[1])&0x0FFF);
 8000744:	7a3b      	ldrb	r3, [r7, #8]
 8000746:	b21b      	sxth	r3, r3
 8000748:	021b      	lsls	r3, r3, #8
 800074a:	b21a      	sxth	r2, r3
 800074c:	7a7b      	ldrb	r3, [r7, #9]
 800074e:	b21b      	sxth	r3, r3
 8000750:	4313      	orrs	r3, r2
 8000752:	b21b      	sxth	r3, r3
 8000754:	b29b      	uxth	r3, r3
 8000756:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800075a:	81bb      	strh	r3, [r7, #12]

    *angle = 360.0f*((float)raw_angle/4096.0f);
 800075c:	89bb      	ldrh	r3, [r7, #12]
 800075e:	ee07 3a90 	vmov	s15, r3
 8000762:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8000766:	eddf 6a08 	vldr	s13, [pc, #32]	@ 8000788 <AS5600_read_angle+0x7c>
 800076a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800076e:	ed9f 7a07 	vldr	s14, [pc, #28]	@ 800078c <AS5600_read_angle+0x80>
 8000772:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000776:	683b      	ldr	r3, [r7, #0]
 8000778:	edc3 7a00 	vstr	s15, [r3]
    return HAL_OK;
 800077c:	2300      	movs	r3, #0
}
 800077e:	4618      	mov	r0, r3
 8000780:	3710      	adds	r7, #16
 8000782:	46bd      	mov	sp, r7
 8000784:	bd80      	pop	{r7, pc}
 8000786:	bf00      	nop
 8000788:	45800000 	.word	0x45800000
 800078c:	43b40000 	.word	0x43b40000

08000790 <AS5600_config_ZPOS>:
    }
}



HAL_StatusTypeDef AS5600_config_ZPOS(I2C_HandleTypeDef *hi2c) {
 8000790:	b580      	push	{r7, lr}
 8000792:	b088      	sub	sp, #32
 8000794:	af04      	add	r7, sp, #16
 8000796:	6078      	str	r0, [r7, #4]
    HAL_StatusTypeDef ret;
    uint8_t angle_buff;

    // Read current raw angle
    ret = HAL_I2C_Mem_Read(hi2c, (AS5600_ADRESS<<1), AS5600_RAW_ANGLE_REG,
 8000798:	7bfb      	ldrb	r3, [r7, #15]
 800079a:	461a      	mov	r2, r3
 800079c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80007a0:	9302      	str	r3, [sp, #8]
 80007a2:	2302      	movs	r3, #2
 80007a4:	9301      	str	r3, [sp, #4]
 80007a6:	9200      	str	r2, [sp, #0]
 80007a8:	2301      	movs	r3, #1
 80007aa:	220c      	movs	r2, #12
 80007ac:	216c      	movs	r1, #108	@ 0x6c
 80007ae:	6878      	ldr	r0, [r7, #4]
 80007b0:	f003 fca0 	bl	80040f4 <HAL_I2C_Mem_Read>
 80007b4:	4603      	mov	r3, r0
 80007b6:	73bb      	strb	r3, [r7, #14]
                          I2C_MEMADD_SIZE_8BIT, angle_buff, 2, HAL_MAX_DELAY);
    if (ret != HAL_OK) {
 80007b8:	7bbb      	ldrb	r3, [r7, #14]
 80007ba:	2b00      	cmp	r3, #0
 80007bc:	d005      	beq.n	80007ca <AS5600_config_ZPOS+0x3a>
        handle_error(ret);
 80007be:	7bbb      	ldrb	r3, [r7, #14]
 80007c0:	4618      	mov	r0, r3
 80007c2:	f000 f83d 	bl	8000840 <handle_error>
        return ret;
 80007c6:	7bbb      	ldrb	r3, [r7, #14]
 80007c8:	e036      	b.n	8000838 <AS5600_config_ZPOS+0xa8>
    }

    // Extract 12-bit raw angle
    uint16_t raw_angle = ((angle_buff << 8) | angle_buff) & 0x0FFF;
 80007ca:	7bfb      	ldrb	r3, [r7, #15]
 80007cc:	b29b      	uxth	r3, r3
 80007ce:	461a      	mov	r2, r3
 80007d0:	0212      	lsls	r2, r2, #8
 80007d2:	4413      	add	r3, r2
 80007d4:	b29b      	uxth	r3, r3
 80007d6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80007da:	81bb      	strh	r3, [r7, #12]

    // Split into ZPOS register values
    uint8_t zpos_data = {
        (uint8_t)((raw_angle >> 8) & 0x0F),  // High byte (4 bits)
 80007dc:	89bb      	ldrh	r3, [r7, #12]
 80007de:	0a1b      	lsrs	r3, r3, #8
 80007e0:	b29b      	uxth	r3, r3
 80007e2:	b2db      	uxtb	r3, r3
 80007e4:	f003 030f 	and.w	r3, r3, #15
 80007e8:	b2db      	uxtb	r3, r3
    uint8_t zpos_data = {
 80007ea:	72fb      	strb	r3, [r7, #11]
        (uint8_t)(raw_angle & 0xFF)          // Low byte (8 bits)
    };

    // Write to ZPOS registers
    ret = HAL_I2C_Mem_Write(hi2c, (AS5600_ADRESS<<1), AS5600_ZPOS_HI_REG,
 80007ec:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80007f0:	9302      	str	r3, [sp, #8]
 80007f2:	2301      	movs	r3, #1
 80007f4:	9301      	str	r3, [sp, #4]
 80007f6:	f107 030b 	add.w	r3, r7, #11
 80007fa:	9300      	str	r3, [sp, #0]
 80007fc:	2301      	movs	r3, #1
 80007fe:	2201      	movs	r2, #1
 8000800:	216c      	movs	r1, #108	@ 0x6c
 8000802:	6878      	ldr	r0, [r7, #4]
 8000804:	f003 fb62 	bl	8003ecc <HAL_I2C_Mem_Write>
 8000808:	4603      	mov	r3, r0
 800080a:	73bb      	strb	r3, [r7, #14]
                           I2C_MEMADD_SIZE_8BIT, &zpos_data, 1, HAL_MAX_DELAY);
    if (ret != HAL_OK) return ret;
 800080c:	7bbb      	ldrb	r3, [r7, #14]
 800080e:	2b00      	cmp	r3, #0
 8000810:	d001      	beq.n	8000816 <AS5600_config_ZPOS+0x86>
 8000812:	7bbb      	ldrb	r3, [r7, #14]
 8000814:	e010      	b.n	8000838 <AS5600_config_ZPOS+0xa8>

    ret = HAL_I2C_Mem_Write(hi2c, (AS5600_ADRESS<<1), AS5600_ZPOS_LO_REG,
 8000816:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800081a:	9302      	str	r3, [sp, #8]
 800081c:	2301      	movs	r3, #1
 800081e:	9301      	str	r3, [sp, #4]
 8000820:	f107 030b 	add.w	r3, r7, #11
 8000824:	9300      	str	r3, [sp, #0]
 8000826:	2301      	movs	r3, #1
 8000828:	2202      	movs	r2, #2
 800082a:	216c      	movs	r1, #108	@ 0x6c
 800082c:	6878      	ldr	r0, [r7, #4]
 800082e:	f003 fb4d 	bl	8003ecc <HAL_I2C_Mem_Write>
 8000832:	4603      	mov	r3, r0
 8000834:	73bb      	strb	r3, [r7, #14]
                           I2C_MEMADD_SIZE_8BIT, &zpos_data, 1, HAL_MAX_DELAY);
    return ret;
 8000836:	7bbb      	ldrb	r3, [r7, #14]

    }
 8000838:	4618      	mov	r0, r3
 800083a:	3710      	adds	r7, #16
 800083c:	46bd      	mov	sp, r7
 800083e:	bd80      	pop	{r7, pc}

08000840 <handle_error>:





void handle_error(HAL_StatusTypeDef status) {
 8000840:	b580      	push	{r7, lr}
 8000842:	b082      	sub	sp, #8
 8000844:	af00      	add	r7, sp, #0
 8000846:	4603      	mov	r3, r0
 8000848:	71fb      	strb	r3, [r7, #7]
    if (status != HAL_OK) {
 800084a:	79fb      	ldrb	r3, [r7, #7]
 800084c:	2b00      	cmp	r3, #0
 800084e:	d004      	beq.n	800085a <handle_error+0x1a>
        // Implement error handling logic (e.g., log error or reset I²C bus)
        printf("I2C Error: %d\n", status);
 8000850:	79fb      	ldrb	r3, [r7, #7]
 8000852:	4619      	mov	r1, r3
 8000854:	4803      	ldr	r0, [pc, #12]	@ (8000864 <handle_error+0x24>)
 8000856:	f00a ffbf 	bl	800b7d8 <iprintf>
    }
}
 800085a:	bf00      	nop
 800085c:	3708      	adds	r7, #8
 800085e:	46bd      	mov	sp, r7
 8000860:	bd80      	pop	{r7, pc}
 8000862:	bf00      	nop
 8000864:	0800d9dc 	.word	0x0800d9dc

08000868 <__io_putchar>:
static void CopeSensorData(uint32_t uiReg, uint32_t uiRegNum);
/* USER CODE END PFP */

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */
int __io_putchar(int ch) {
 8000868:	b580      	push	{r7, lr}
 800086a:	b082      	sub	sp, #8
 800086c:	af00      	add	r7, sp, #0
 800086e:	6078      	str	r0, [r7, #4]
    HAL_UART_Transmit(&huart2, (uint8_t *)&ch, 1, HAL_MAX_DELAY);
 8000870:	1d39      	adds	r1, r7, #4
 8000872:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000876:	2201      	movs	r2, #1
 8000878:	4803      	ldr	r0, [pc, #12]	@ (8000888 <__io_putchar+0x20>)
 800087a:	f007 fdb9 	bl	80083f0 <HAL_UART_Transmit>
     //HAL_UART_Transmit(&huart3, (uint8_t *)&ch, 1, HAL_MAX_DELAY); enable to get debug over STLINK

    return ch;
 800087e:	687b      	ldr	r3, [r7, #4]
}
 8000880:	4618      	mov	r0, r3
 8000882:	3708      	adds	r7, #8
 8000884:	46bd      	mov	sp, r7
 8000886:	bd80      	pop	{r7, pc}
 8000888:	24000330 	.word	0x24000330

0800088c <System_Init>:
//uart interrupt ring buffer init
void System_Init(void) {
 800088c:	b580      	push	{r7, lr}
 800088e:	af00      	add	r7, sp, #0
  // Initialize ring buffer
  ring_buffer_init(&uart_ring_buffer);
 8000890:	480b      	ldr	r0, [pc, #44]	@ (80008c0 <System_Init+0x34>)
 8000892:	f001 f879 	bl	8001988 <ring_buffer_init>
  ring_buffer_init(&uart2_ring_buffer);
 8000896:	480b      	ldr	r0, [pc, #44]	@ (80008c4 <System_Init+0x38>)
 8000898:	f001 f876 	bl	8001988 <ring_buffer_init>

  // Start UART reception in interrupt mode
  HAL_UART_Receive_IT(&huart3, &rx_data_s, 1); // initialising Stlink interrupts
 800089c:	2201      	movs	r2, #1
 800089e:	490a      	ldr	r1, [pc, #40]	@ (80008c8 <System_Init+0x3c>)
 80008a0:	480a      	ldr	r0, [pc, #40]	@ (80008cc <System_Init+0x40>)
 80008a2:	f007 fe33 	bl	800850c <HAL_UART_Receive_IT>
  HAL_UART_Receive_IT(&huart2, &rx_data_xbee, 1); // initialising XBee interrupts
 80008a6:	2201      	movs	r2, #1
 80008a8:	4909      	ldr	r1, [pc, #36]	@ (80008d0 <System_Init+0x44>)
 80008aa:	480a      	ldr	r0, [pc, #40]	@ (80008d4 <System_Init+0x48>)
 80008ac:	f007 fe2e 	bl	800850c <HAL_UART_Receive_IT>
  HAL_UART_Receive_IT(&huart1, &ucRxData, 1);
 80008b0:	2201      	movs	r2, #1
 80008b2:	4909      	ldr	r1, [pc, #36]	@ (80008d8 <System_Init+0x4c>)
 80008b4:	4809      	ldr	r0, [pc, #36]	@ (80008dc <System_Init+0x50>)
 80008b6:	f007 fe29 	bl	800850c <HAL_UART_Receive_IT>

 }
 80008ba:	bf00      	nop
 80008bc:	bd80      	pop	{r7, pc}
 80008be:	bf00      	nop
 80008c0:	2400045c 	.word	0x2400045c
 80008c4:	24000560 	.word	0x24000560
 80008c8:	24000665 	.word	0x24000665
 80008cc:	240003c4 	.word	0x240003c4
 80008d0:	24000666 	.word	0x24000666
 80008d4:	24000330 	.word	0x24000330
 80008d8:	24000667 	.word	0x24000667
 80008dc:	2400029c 	.word	0x2400029c

080008e0 <HAL_UART_RxCpltCallback>:
 

 void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 80008e0:	b580      	push	{r7, lr}
 80008e2:	b088      	sub	sp, #32
 80008e4:	af00      	add	r7, sp, #0
 80008e6:	6078      	str	r0, [r7, #4]


  if(huart->Instance==USART1)
 80008e8:	687b      	ldr	r3, [r7, #4]
 80008ea:	681b      	ldr	r3, [r3, #0]
 80008ec:	4a69      	ldr	r2, [pc, #420]	@ (8000a94 <HAL_UART_RxCpltCallback+0x1b4>)
 80008ee:	4293      	cmp	r3, r2
 80008f0:	d109      	bne.n	8000906 <HAL_UART_RxCpltCallback+0x26>
	   {
	       WitSerialDataIn(ucRxData);
 80008f2:	4b69      	ldr	r3, [pc, #420]	@ (8000a98 <HAL_UART_RxCpltCallback+0x1b8>)
 80008f4:	781b      	ldrb	r3, [r3, #0]
 80008f6:	4618      	mov	r0, r3
 80008f8:	f001 fe4c 	bl	8002594 <WitSerialDataIn>
	       UART_Start_Receive_IT(huart, &ucRxData, 1);
 80008fc:	2201      	movs	r2, #1
 80008fe:	4966      	ldr	r1, [pc, #408]	@ (8000a98 <HAL_UART_RxCpltCallback+0x1b8>)
 8000900:	6878      	ldr	r0, [r7, #4]
 8000902:	f009 fa6b 	bl	8009ddc <UART_Start_Receive_IT>
	   }


  if (huart->Instance == USART3) { // Ensure this is for the correct UART instance
 8000906:	687b      	ldr	r3, [r7, #4]
 8000908:	681b      	ldr	r3, [r3, #0]
 800090a:	4a64      	ldr	r2, [pc, #400]	@ (8000a9c <HAL_UART_RxCpltCallback+0x1bc>)
 800090c:	4293      	cmp	r3, r2
 800090e:	d15d      	bne.n	80009cc <HAL_UART_RxCpltCallback+0xec>
      // Add received byte to the ring buffer
     printf("Received");
 8000910:	4863      	ldr	r0, [pc, #396]	@ (8000aa0 <HAL_UART_RxCpltCallback+0x1c0>)
 8000912:	f00a ff61 	bl	800b7d8 <iprintf>
      ring_buffer_put(&uart_ring_buffer, rx_data_s);
 8000916:	4b63      	ldr	r3, [pc, #396]	@ (8000aa4 <HAL_UART_RxCpltCallback+0x1c4>)
 8000918:	781b      	ldrb	r3, [r3, #0]
 800091a:	4619      	mov	r1, r3
 800091c:	4862      	ldr	r0, [pc, #392]	@ (8000aa8 <HAL_UART_RxCpltCallback+0x1c8>)
 800091e:	f001 f845 	bl	80019ac <ring_buffer_put>
      // Check if we received a carriage return '\r' (end of command)
      if (rx_data_s == '\r') {
 8000922:	4b60      	ldr	r3, [pc, #384]	@ (8000aa4 <HAL_UART_RxCpltCallback+0x1c4>)
 8000924:	781b      	ldrb	r3, [r3, #0]
 8000926:	2b0d      	cmp	r3, #13
 8000928:	d14b      	bne.n	80009c2 <HAL_UART_RxCpltCallback+0xe2>
          uint8_t data;
          uint16_t index = 0;
 800092a:	2300      	movs	r3, #0
 800092c:	83fb      	strh	r3, [r7, #30]
          // Extract the command from the ring buffer
          while (ring_buffer_get(&uart_ring_buffer, &data) && data != '\r' && index < COMMAND_MAX_LENGTH - 1) {
 800092e:	e006      	b.n	800093e <HAL_UART_RxCpltCallback+0x5e>
              command_buffer[index++] = (char)data;
 8000930:	8bfb      	ldrh	r3, [r7, #30]
 8000932:	1c5a      	adds	r2, r3, #1
 8000934:	83fa      	strh	r2, [r7, #30]
 8000936:	461a      	mov	r2, r3
 8000938:	7bf9      	ldrb	r1, [r7, #15]
 800093a:	4b5c      	ldr	r3, [pc, #368]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 800093c:	5499      	strb	r1, [r3, r2]
          while (ring_buffer_get(&uart_ring_buffer, &data) && data != '\r' && index < COMMAND_MAX_LENGTH - 1) {
 800093e:	f107 030f 	add.w	r3, r7, #15
 8000942:	4619      	mov	r1, r3
 8000944:	4858      	ldr	r0, [pc, #352]	@ (8000aa8 <HAL_UART_RxCpltCallback+0x1c8>)
 8000946:	f001 f85e 	bl	8001a06 <ring_buffer_get>
 800094a:	4603      	mov	r3, r0
 800094c:	2b00      	cmp	r3, #0
 800094e:	d005      	beq.n	800095c <HAL_UART_RxCpltCallback+0x7c>
 8000950:	7bfb      	ldrb	r3, [r7, #15]
 8000952:	2b0d      	cmp	r3, #13
 8000954:	d002      	beq.n	800095c <HAL_UART_RxCpltCallback+0x7c>
 8000956:	8bfb      	ldrh	r3, [r7, #30]
 8000958:	2b3e      	cmp	r3, #62	@ 0x3e
 800095a:	d9e9      	bls.n	8000930 <HAL_UART_RxCpltCallback+0x50>
          }
          command_buffer[index] = '\0'; // Null-terminate the string
 800095c:	8bfb      	ldrh	r3, [r7, #30]
 800095e:	4a53      	ldr	r2, [pc, #332]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 8000960:	2100      	movs	r1, #0
 8000962:	54d1      	strb	r1, [r2, r3]
          // Process the command
          const char *response;
          if (strcmp(command_buffer, "hello") == 0) {
 8000964:	4952      	ldr	r1, [pc, #328]	@ (8000ab0 <HAL_UART_RxCpltCallback+0x1d0>)
 8000966:	4851      	ldr	r0, [pc, #324]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 8000968:	f7ff fcd2 	bl	8000310 <strcmp>
 800096c:	4603      	mov	r3, r0
 800096e:	2b00      	cmp	r3, #0
 8000970:	d102      	bne.n	8000978 <HAL_UART_RxCpltCallback+0x98>
              response = "Hello to you too!\n";
 8000972:	4b50      	ldr	r3, [pc, #320]	@ (8000ab4 <HAL_UART_RxCpltCallback+0x1d4>)
 8000974:	61bb      	str	r3, [r7, #24]
 8000976:	e014      	b.n	80009a2 <HAL_UART_RxCpltCallback+0xc2>
          } else if (strcmp(command_buffer, "setzero") == 0) {
 8000978:	494f      	ldr	r1, [pc, #316]	@ (8000ab8 <HAL_UART_RxCpltCallback+0x1d8>)
 800097a:	484c      	ldr	r0, [pc, #304]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 800097c:	f7ff fcc8 	bl	8000310 <strcmp>
 8000980:	4603      	mov	r3, r0
 8000982:	2b00      	cmp	r3, #0
 8000984:	d10b      	bne.n	800099e <HAL_UART_RxCpltCallback+0xbe>
              if (AS5600_config_ZPOS(&hi2c1) == HAL_OK) {
 8000986:	484d      	ldr	r0, [pc, #308]	@ (8000abc <HAL_UART_RxCpltCallback+0x1dc>)
 8000988:	f7ff ff02 	bl	8000790 <AS5600_config_ZPOS>
 800098c:	4603      	mov	r3, r0
 800098e:	2b00      	cmp	r3, #0
 8000990:	d102      	bne.n	8000998 <HAL_UART_RxCpltCallback+0xb8>
                  response = "ZPOS set successfully.\n";
 8000992:	4b4b      	ldr	r3, [pc, #300]	@ (8000ac0 <HAL_UART_RxCpltCallback+0x1e0>)
 8000994:	61bb      	str	r3, [r7, #24]
 8000996:	e004      	b.n	80009a2 <HAL_UART_RxCpltCallback+0xc2>
              } else {
                  response = "Failed to set ZPOS.\n";
 8000998:	4b4a      	ldr	r3, [pc, #296]	@ (8000ac4 <HAL_UART_RxCpltCallback+0x1e4>)
 800099a:	61bb      	str	r3, [r7, #24]
 800099c:	e001      	b.n	80009a2 <HAL_UART_RxCpltCallback+0xc2>
              }
          } else {
              response = "Uh oh, something didn't work...\n";
 800099e:	4b4a      	ldr	r3, [pc, #296]	@ (8000ac8 <HAL_UART_RxCpltCallback+0x1e8>)
 80009a0:	61bb      	str	r3, [r7, #24]
          }
          // Transmit the response
          HAL_UART_Transmit(&huart3, (uint8_t *)response, strlen(response), HAL_MAX_DELAY);
 80009a2:	69b8      	ldr	r0, [r7, #24]
 80009a4:	f7ff fd14 	bl	80003d0 <strlen>
 80009a8:	4603      	mov	r3, r0
 80009aa:	b29a      	uxth	r2, r3
 80009ac:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80009b0:	69b9      	ldr	r1, [r7, #24]
 80009b2:	4846      	ldr	r0, [pc, #280]	@ (8000acc <HAL_UART_RxCpltCallback+0x1ec>)
 80009b4:	f007 fd1c 	bl	80083f0 <HAL_UART_Transmit>
          // Clear the command buffer for reuse
          memset(command_buffer, 0, COMMAND_MAX_LENGTH);
 80009b8:	2240      	movs	r2, #64	@ 0x40
 80009ba:	2100      	movs	r1, #0
 80009bc:	483b      	ldr	r0, [pc, #236]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 80009be:	f00a ff83 	bl	800b8c8 <memset>
      }
      // Re-enable UART interrupt for next byte reception
      HAL_UART_Receive_IT(&huart3, &rx_data_s, 1);
 80009c2:	2201      	movs	r2, #1
 80009c4:	4937      	ldr	r1, [pc, #220]	@ (8000aa4 <HAL_UART_RxCpltCallback+0x1c4>)
 80009c6:	4841      	ldr	r0, [pc, #260]	@ (8000acc <HAL_UART_RxCpltCallback+0x1ec>)
 80009c8:	f007 fda0 	bl	800850c <HAL_UART_Receive_IT>
  }
    
  if (huart->Instance == USART2) {
 80009cc:	687b      	ldr	r3, [r7, #4]
 80009ce:	681b      	ldr	r3, [r3, #0]
 80009d0:	4a3f      	ldr	r2, [pc, #252]	@ (8000ad0 <HAL_UART_RxCpltCallback+0x1f0>)
 80009d2:	4293      	cmp	r3, r2
 80009d4:	d15a      	bne.n	8000a8c <HAL_UART_RxCpltCallback+0x1ac>
    ring_buffer_put(&uart2_ring_buffer, rx_data_uart2);
 80009d6:	4b3f      	ldr	r3, [pc, #252]	@ (8000ad4 <HAL_UART_RxCpltCallback+0x1f4>)
 80009d8:	781b      	ldrb	r3, [r3, #0]
 80009da:	4619      	mov	r1, r3
 80009dc:	483e      	ldr	r0, [pc, #248]	@ (8000ad8 <HAL_UART_RxCpltCallback+0x1f8>)
 80009de:	f000 ffe5 	bl	80019ac <ring_buffer_put>

    if (rx_data_uart2 == '\r') {
 80009e2:	4b3c      	ldr	r3, [pc, #240]	@ (8000ad4 <HAL_UART_RxCpltCallback+0x1f4>)
 80009e4:	781b      	ldrb	r3, [r3, #0]
 80009e6:	2b0d      	cmp	r3, #13
 80009e8:	d14b      	bne.n	8000a82 <HAL_UART_RxCpltCallback+0x1a2>
        uint8_t data;
        uint16_t index = 0;
 80009ea:	2300      	movs	r3, #0
 80009ec:	82fb      	strh	r3, [r7, #22]

        while (ring_buffer_get(&uart2_ring_buffer, &data) && data != '\r' && index < COMMAND_MAX_LENGTH - 1) {
 80009ee:	e006      	b.n	80009fe <HAL_UART_RxCpltCallback+0x11e>
            command_buffer[index++] = (char)data;
 80009f0:	8afb      	ldrh	r3, [r7, #22]
 80009f2:	1c5a      	adds	r2, r3, #1
 80009f4:	82fa      	strh	r2, [r7, #22]
 80009f6:	461a      	mov	r2, r3
 80009f8:	7bb9      	ldrb	r1, [r7, #14]
 80009fa:	4b2c      	ldr	r3, [pc, #176]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 80009fc:	5499      	strb	r1, [r3, r2]
        while (ring_buffer_get(&uart2_ring_buffer, &data) && data != '\r' && index < COMMAND_MAX_LENGTH - 1) {
 80009fe:	f107 030e 	add.w	r3, r7, #14
 8000a02:	4619      	mov	r1, r3
 8000a04:	4834      	ldr	r0, [pc, #208]	@ (8000ad8 <HAL_UART_RxCpltCallback+0x1f8>)
 8000a06:	f000 fffe 	bl	8001a06 <ring_buffer_get>
 8000a0a:	4603      	mov	r3, r0
 8000a0c:	2b00      	cmp	r3, #0
 8000a0e:	d005      	beq.n	8000a1c <HAL_UART_RxCpltCallback+0x13c>
 8000a10:	7bbb      	ldrb	r3, [r7, #14]
 8000a12:	2b0d      	cmp	r3, #13
 8000a14:	d002      	beq.n	8000a1c <HAL_UART_RxCpltCallback+0x13c>
 8000a16:	8afb      	ldrh	r3, [r7, #22]
 8000a18:	2b3e      	cmp	r3, #62	@ 0x3e
 8000a1a:	d9e9      	bls.n	80009f0 <HAL_UART_RxCpltCallback+0x110>
        }
        command_buffer[index] = '\0';
 8000a1c:	8afb      	ldrh	r3, [r7, #22]
 8000a1e:	4a23      	ldr	r2, [pc, #140]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 8000a20:	2100      	movs	r1, #0
 8000a22:	54d1      	strb	r1, [r2, r3]

        const char *response;
        if (strcmp(command_buffer, "hello") == 0) {
 8000a24:	4922      	ldr	r1, [pc, #136]	@ (8000ab0 <HAL_UART_RxCpltCallback+0x1d0>)
 8000a26:	4821      	ldr	r0, [pc, #132]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 8000a28:	f7ff fc72 	bl	8000310 <strcmp>
 8000a2c:	4603      	mov	r3, r0
 8000a2e:	2b00      	cmp	r3, #0
 8000a30:	d102      	bne.n	8000a38 <HAL_UART_RxCpltCallback+0x158>
            response = "Hello to you Xbee!\n";
 8000a32:	4b2a      	ldr	r3, [pc, #168]	@ (8000adc <HAL_UART_RxCpltCallback+0x1fc>)
 8000a34:	613b      	str	r3, [r7, #16]
 8000a36:	e014      	b.n	8000a62 <HAL_UART_RxCpltCallback+0x182>
        } else if (strcmp(command_buffer, "setzero") == 0) {
 8000a38:	491f      	ldr	r1, [pc, #124]	@ (8000ab8 <HAL_UART_RxCpltCallback+0x1d8>)
 8000a3a:	481c      	ldr	r0, [pc, #112]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 8000a3c:	f7ff fc68 	bl	8000310 <strcmp>
 8000a40:	4603      	mov	r3, r0
 8000a42:	2b00      	cmp	r3, #0
 8000a44:	d10b      	bne.n	8000a5e <HAL_UART_RxCpltCallback+0x17e>
            if (AS5600_config_ZPOS(&hi2c1) == HAL_OK) {
 8000a46:	481d      	ldr	r0, [pc, #116]	@ (8000abc <HAL_UART_RxCpltCallback+0x1dc>)
 8000a48:	f7ff fea2 	bl	8000790 <AS5600_config_ZPOS>
 8000a4c:	4603      	mov	r3, r0
 8000a4e:	2b00      	cmp	r3, #0
 8000a50:	d102      	bne.n	8000a58 <HAL_UART_RxCpltCallback+0x178>
                response = "ZPOS set successfully.\n";
 8000a52:	4b1b      	ldr	r3, [pc, #108]	@ (8000ac0 <HAL_UART_RxCpltCallback+0x1e0>)
 8000a54:	613b      	str	r3, [r7, #16]
 8000a56:	e004      	b.n	8000a62 <HAL_UART_RxCpltCallback+0x182>
            } else {
                response = "Failed to set ZPOS.\n";
 8000a58:	4b1a      	ldr	r3, [pc, #104]	@ (8000ac4 <HAL_UART_RxCpltCallback+0x1e4>)
 8000a5a:	613b      	str	r3, [r7, #16]
 8000a5c:	e001      	b.n	8000a62 <HAL_UART_RxCpltCallback+0x182>
            }
        } else {
            response = "Unrecognized command from XBee\n";
 8000a5e:	4b20      	ldr	r3, [pc, #128]	@ (8000ae0 <HAL_UART_RxCpltCallback+0x200>)
 8000a60:	613b      	str	r3, [r7, #16]
        }

        HAL_UART_Transmit(&huart2, (uint8_t *)response, strlen(response), HAL_MAX_DELAY);
 8000a62:	6938      	ldr	r0, [r7, #16]
 8000a64:	f7ff fcb4 	bl	80003d0 <strlen>
 8000a68:	4603      	mov	r3, r0
 8000a6a:	b29a      	uxth	r2, r3
 8000a6c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8000a70:	6939      	ldr	r1, [r7, #16]
 8000a72:	481c      	ldr	r0, [pc, #112]	@ (8000ae4 <HAL_UART_RxCpltCallback+0x204>)
 8000a74:	f007 fcbc 	bl	80083f0 <HAL_UART_Transmit>
        memset(command_buffer, 0, COMMAND_MAX_LENGTH);
 8000a78:	2240      	movs	r2, #64	@ 0x40
 8000a7a:	2100      	movs	r1, #0
 8000a7c:	480b      	ldr	r0, [pc, #44]	@ (8000aac <HAL_UART_RxCpltCallback+0x1cc>)
 8000a7e:	f00a ff23 	bl	800b8c8 <memset>
    }

    HAL_UART_Receive_IT(&huart2, &rx_data_uart2, 1); // Restart interrupt
 8000a82:	2201      	movs	r2, #1
 8000a84:	4913      	ldr	r1, [pc, #76]	@ (8000ad4 <HAL_UART_RxCpltCallback+0x1f4>)
 8000a86:	4817      	ldr	r0, [pc, #92]	@ (8000ae4 <HAL_UART_RxCpltCallback+0x204>)
 8000a88:	f007 fd40 	bl	800850c <HAL_UART_Receive_IT>
  }


 }
 8000a8c:	bf00      	nop
 8000a8e:	3720      	adds	r7, #32
 8000a90:	46bd      	mov	sp, r7
 8000a92:	bd80      	pop	{r7, pc}
 8000a94:	40011000 	.word	0x40011000
 8000a98:	24000667 	.word	0x24000667
 8000a9c:	40004800 	.word	0x40004800
 8000aa0:	0800d9ec 	.word	0x0800d9ec
 8000aa4:	24000665 	.word	0x24000665
 8000aa8:	2400045c 	.word	0x2400045c
 8000aac:	24000668 	.word	0x24000668
 8000ab0:	0800d9f8 	.word	0x0800d9f8
 8000ab4:	0800da00 	.word	0x0800da00
 8000ab8:	0800da14 	.word	0x0800da14
 8000abc:	240001fc 	.word	0x240001fc
 8000ac0:	0800da1c 	.word	0x0800da1c
 8000ac4:	0800da34 	.word	0x0800da34
 8000ac8:	0800da4c 	.word	0x0800da4c
 8000acc:	240003c4 	.word	0x240003c4
 8000ad0:	40004400 	.word	0x40004400
 8000ad4:	24000664 	.word	0x24000664
 8000ad8:	24000560 	.word	0x24000560
 8000adc:	0800da70 	.word	0x0800da70
 8000ae0:	0800da84 	.word	0x0800da84
 8000ae4:	24000330 	.word	0x24000330

08000ae8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000ae8:	b590      	push	{r4, r7, lr}
 8000aea:	b0b1      	sub	sp, #196	@ 0xc4
 8000aec:	af06      	add	r7, sp, #24
  float fAcc[3], fGyro[3], fAngle[3], fYaw;
  int i;
  /* USER CODE END 1 */

  /* MPU Configuration--------------------------------------------------------*/
  MPU_Config();
 8000aee:	f000 ff19 	bl	8001924 <MPU_Config>

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000af2:	f001 ffeb 	bl	8002acc <HAL_Init>

  /* USER CODE BEGIN Init */
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000af6:	f000 faa5 	bl	8001044 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000afa:	f000 fcc5 	bl	8001488 <MX_GPIO_Init>
  MX_TIM1_Init();
 8000afe:	f000 fb3f 	bl	8001180 <MX_TIM1_Init>
  MX_USART1_UART_Init();
 8000b02:	f000 fbdd 	bl	80012c0 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 8000b06:	f000 fc27 	bl	8001358 <MX_USART2_UART_Init>
  MX_USART3_UART_Init();
 8000b0a:	f000 fc71 	bl	80013f0 <MX_USART3_UART_Init>
  MX_I2C1_Init();
 8000b0e:	f000 faf7 	bl	8001100 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */


  WitInit(WIT_PROTOCOL_NORMAL, 0x50);
 8000b12:	2150      	movs	r1, #80	@ 0x50
 8000b14:	2000      	movs	r0, #0
 8000b16:	f001 ff8b 	bl	8002a30 <WitInit>
  WitSerialWriteRegister(SensorUartSend);
 8000b1a:	482b      	ldr	r0, [pc, #172]	@ (8000bc8 <main+0xe0>)
 8000b1c:	f001 fc7e 	bl	800241c <WitSerialWriteRegister>
  WitRegisterCallBack(CopeSensorData);
 8000b20:	482a      	ldr	r0, [pc, #168]	@ (8000bcc <main+0xe4>)
 8000b22:	f001 fe65 	bl	80027f0 <WitRegisterCallBack>

  System_Init();
 8000b26:	f7ff feb1 	bl	800088c <System_Init>
  AutoScanSensor();
 8000b2a:	f000 fe11 	bl	8001750 <AutoScanSensor>

  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 8000b2e:	2100      	movs	r1, #0
 8000b30:	4827      	ldr	r0, [pc, #156]	@ (8000bd0 <main+0xe8>)
 8000b32:	f006 fd0d 	bl	8007550 <HAL_TIM_PWM_Start>

  float angle;
  char str[] = "System Booted";
 8000b36:	4b27      	ldr	r3, [pc, #156]	@ (8000bd4 <main+0xec>)
 8000b38:	f107 0424 	add.w	r4, r7, #36	@ 0x24
 8000b3c:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8000b3e:	c407      	stmia	r4!, {r0, r1, r2}
 8000b40:	8023      	strh	r3, [r4, #0]
  HAL_UART_Transmit(&huart3, (uint8_t*)str, strlen(str), 2000);
 8000b42:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000b46:	4618      	mov	r0, r3
 8000b48:	f7ff fc42 	bl	80003d0 <strlen>
 8000b4c:	4603      	mov	r3, r0
 8000b4e:	b29a      	uxth	r2, r3
 8000b50:	f107 0124 	add.w	r1, r7, #36	@ 0x24
 8000b54:	f44f 63fa 	mov.w	r3, #2000	@ 0x7d0
 8000b58:	481f      	ldr	r0, [pc, #124]	@ (8000bd8 <main+0xf0>)
 8000b5a:	f007 fc49 	bl	80083f0 <HAL_UART_Transmit>
  HAL_Delay(500);
 8000b5e:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000b62:	f002 f845 	bl	8002bf0 <HAL_Delay>
  ServoController sail_servo;
  sail_servo.htim= &htim1;
 8000b66:	4b1a      	ldr	r3, [pc, #104]	@ (8000bd0 <main+0xe8>)
 8000b68:	61fb      	str	r3, [r7, #28]
  sail_servo.channel = TIM_CHANNEL_1;
 8000b6a:	2300      	movs	r3, #0
 8000b6c:	623b      	str	r3, [r7, #32]
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  ServoController sail_servo;   //just put this in today
	  sail_servo.htim = &htim1;
 8000b6e:	4b18      	ldr	r3, [pc, #96]	@ (8000bd0 <main+0xe8>)
 8000b70:	60fb      	str	r3, [r7, #12]
	  sail_servo.channel = TIM_CHANNEL_1;
 8000b72:	2300      	movs	r3, #0
 8000b74:	613b      	str	r3, [r7, #16]

	  test_servo_sweep(&sail_servo);
 8000b76:	1d3b      	adds	r3, r7, #4
 8000b78:	4618      	mov	r0, r3
 8000b7a:	f000 fe3f 	bl	80017fc <test_servo_sweep>

	  HAL_StatusTypeDef i2c_status = AS5600_read_angle(&hi2c1, &angle);
 8000b7e:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 8000b82:	4619      	mov	r1, r3
 8000b84:	4815      	ldr	r0, [pc, #84]	@ (8000bdc <main+0xf4>)
 8000b86:	f7ff fdc1 	bl	800070c <AS5600_read_angle>
 8000b8a:	4603      	mov	r3, r0
 8000b8c:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
	  if (i2c_status== HAL_OK){
		 // printf("the angle is %f \n", angle);
	  }
	  
	  if (i2c_status != HAL_OK) {
 8000b90:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 8000b94:	2b00      	cmp	r3, #0
 8000b96:	d003      	beq.n	8000ba0 <main+0xb8>
	      printf("Error reading angle from AS5600\n");
 8000b98:	4811      	ldr	r0, [pc, #68]	@ (8000be0 <main+0xf8>)
 8000b9a:	f00a fe8d 	bl	800b8b8 <puts>
 8000b9e:	e7e6      	b.n	8000b6e <main+0x86>
	      continue; // Skip to the next iteration
	  }
    
	  copy_wind_pos(&sail_servo, angle);
 8000ba0:	edd7 7a0d 	vldr	s15, [r7, #52]	@ 0x34
 8000ba4:	1d3b      	adds	r3, r7, #4
 8000ba6:	eeb0 0a67 	vmov.f32	s0, s15
 8000baa:	4618      	mov	r0, r3
 8000bac:	f000 ffdc 	bl	8001b68 <copy_wind_pos>


    if(s_cDataUpdate)
 8000bb0:	4b0c      	ldr	r3, [pc, #48]	@ (8000be4 <main+0xfc>)
 8000bb2:	781b      	ldrb	r3, [r3, #0]
 8000bb4:	2b00      	cmp	r3, #0
 8000bb6:	d0da      	beq.n	8000b6e <main+0x86>
    		{
    			printf("3");
 8000bb8:	2033      	movs	r0, #51	@ 0x33
 8000bba:	f00a fe1f 	bl	800b7fc <putchar>
            // Assumes AX, AY, AZ are sequential registers starting at AX
            // Assumes GX, GY, GZ are sequential registers starting at GX
            // Assumes Roll, Pitch, Yaw are sequential registers starting at Roll
    			for(i = 0; i < 3; i++)
 8000bbe:	2300      	movs	r3, #0
 8000bc0:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8000bc4:	e063      	b.n	8000c8e <main+0x1a6>
 8000bc6:	bf00      	nop
 8000bc8:	080015f5 	.word	0x080015f5
 8000bcc:	0800161d 	.word	0x0800161d
 8000bd0:	24000250 	.word	0x24000250
 8000bd4:	0800dba8 	.word	0x0800dba8
 8000bd8:	240003c4 	.word	0x240003c4
 8000bdc:	240001fc 	.word	0x240001fc
 8000be0:	0800daa4 	.word	0x0800daa4
 8000be4:	24000458 	.word	0x24000458
    			{
    				fAcc[i] = sReg[AX+i] / 32768.0f * 16.0f;
 8000be8:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8000bec:	3334      	adds	r3, #52	@ 0x34
 8000bee:	4adc      	ldr	r2, [pc, #880]	@ (8000f60 <main+0x478>)
 8000bf0:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8000bf4:	ee07 3a90 	vmov	s15, r3
 8000bf8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000bfc:	eddf 6ad9 	vldr	s13, [pc, #868]	@ 8000f64 <main+0x47c>
 8000c00:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000c04:	eeb3 7a00 	vmov.f32	s14, #48	@ 0x41800000  16.0
 8000c08:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000c0c:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8000c10:	009b      	lsls	r3, r3, #2
 8000c12:	33a8      	adds	r3, #168	@ 0xa8
 8000c14:	443b      	add	r3, r7
 8000c16:	3b58      	subs	r3, #88	@ 0x58
 8000c18:	edc3 7a00 	vstr	s15, [r3]
    				fGyro[i] = sReg[GX+i] / 32768.0f * 2000.0f;
 8000c1c:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8000c20:	3337      	adds	r3, #55	@ 0x37
 8000c22:	4acf      	ldr	r2, [pc, #828]	@ (8000f60 <main+0x478>)
 8000c24:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8000c28:	ee07 3a90 	vmov	s15, r3
 8000c2c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000c30:	eddf 6acc 	vldr	s13, [pc, #816]	@ 8000f64 <main+0x47c>
 8000c34:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000c38:	ed9f 7acb 	vldr	s14, [pc, #812]	@ 8000f68 <main+0x480>
 8000c3c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000c40:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8000c44:	009b      	lsls	r3, r3, #2
 8000c46:	33a8      	adds	r3, #168	@ 0xa8
 8000c48:	443b      	add	r3, r7
 8000c4a:	3b64      	subs	r3, #100	@ 0x64
 8000c4c:	edc3 7a00 	vstr	s15, [r3]
    				fAngle[i] = sReg[Roll+i] / 32768.0f * 180.0f;
 8000c50:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8000c54:	333d      	adds	r3, #61	@ 0x3d
 8000c56:	4ac2      	ldr	r2, [pc, #776]	@ (8000f60 <main+0x478>)
 8000c58:	f932 3013 	ldrsh.w	r3, [r2, r3, lsl #1]
 8000c5c:	ee07 3a90 	vmov	s15, r3
 8000c60:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000c64:	eddf 6abf 	vldr	s13, [pc, #764]	@ 8000f64 <main+0x47c>
 8000c68:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000c6c:	ed9f 7abf 	vldr	s14, [pc, #764]	@ 8000f6c <main+0x484>
 8000c70:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000c74:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8000c78:	009b      	lsls	r3, r3, #2
 8000c7a:	33a8      	adds	r3, #168	@ 0xa8
 8000c7c:	443b      	add	r3, r7
 8000c7e:	3b70      	subs	r3, #112	@ 0x70
 8000c80:	edc3 7a00 	vstr	s15, [r3]
    			for(i = 0; i < 3; i++)
 8000c84:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8000c88:	3301      	adds	r3, #1
 8000c8a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8000c8e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8000c92:	2b02      	cmp	r3, #2
 8000c94:	dda8      	ble.n	8000be8 <main+0x100>
				// Use int32_t for intermediate signed 32-bit values
				// Use uint16_t cast for low words when combining to avoid sign extension issues
				// Use float for final calculated values

				// Longitude & Latitude Calculation
				int32_t iLon = ((int32_t)(short)sReg[LonH] << 16) | (uint16_t)sReg[LonL];
 8000c96:	4bb2      	ldr	r3, [pc, #712]	@ (8000f60 <main+0x478>)
 8000c98:	f9b3 3094 	ldrsh.w	r3, [r3, #148]	@ 0x94
 8000c9c:	041b      	lsls	r3, r3, #16
 8000c9e:	4ab0      	ldr	r2, [pc, #704]	@ (8000f60 <main+0x478>)
 8000ca0:	f9b2 2092 	ldrsh.w	r2, [r2, #146]	@ 0x92
 8000ca4:	b292      	uxth	r2, r2
 8000ca6:	4313      	orrs	r3, r2
 8000ca8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
				int32_t iLat = ((int32_t)(short)sReg[LatH] << 16) | (uint16_t)sReg[LatL];
 8000cac:	4bac      	ldr	r3, [pc, #688]	@ (8000f60 <main+0x478>)
 8000cae:	f9b3 3098 	ldrsh.w	r3, [r3, #152]	@ 0x98
 8000cb2:	041b      	lsls	r3, r3, #16
 8000cb4:	4aaa      	ldr	r2, [pc, #680]	@ (8000f60 <main+0x478>)
 8000cb6:	f9b2 2096 	ldrsh.w	r2, [r2, #150]	@ 0x96
 8000cba:	b292      	uxth	r2, r2
 8000cbc:	4313      	orrs	r3, r2
 8000cbe:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98

				// Convert from ddmm.mmmmm format (scaled by 100000) to decimal degrees
				float fLon_deg = (float)(iLon / 10000000); // Extract degrees (dd)
 8000cc2:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8000cc6:	4aaa      	ldr	r2, [pc, #680]	@ (8000f70 <main+0x488>)
 8000cc8:	fb82 1203 	smull	r1, r2, r2, r3
 8000ccc:	1592      	asrs	r2, r2, #22
 8000cce:	17db      	asrs	r3, r3, #31
 8000cd0:	1ad3      	subs	r3, r2, r3
 8000cd2:	ee07 3a90 	vmov	s15, r3
 8000cd6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000cda:	edc7 7a25 	vstr	s15, [r7, #148]	@ 0x94
				float fLon_min = (float)((iLon % 10000000) / 100000.0f); // Extract minutes (mm.mmmmm)
 8000cde:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 8000ce2:	4aa3      	ldr	r2, [pc, #652]	@ (8000f70 <main+0x488>)
 8000ce4:	fb82 1203 	smull	r1, r2, r2, r3
 8000ce8:	1591      	asrs	r1, r2, #22
 8000cea:	17da      	asrs	r2, r3, #31
 8000cec:	1a8a      	subs	r2, r1, r2
 8000cee:	49a1      	ldr	r1, [pc, #644]	@ (8000f74 <main+0x48c>)
 8000cf0:	fb01 f202 	mul.w	r2, r1, r2
 8000cf4:	1a9a      	subs	r2, r3, r2
 8000cf6:	ee07 2a90 	vmov	s15, r2
 8000cfa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000cfe:	eddf 6a9e 	vldr	s13, [pc, #632]	@ 8000f78 <main+0x490>
 8000d02:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000d06:	edc7 7a24 	vstr	s15, [r7, #144]	@ 0x90
				float fLongitude = fLon_deg + fLon_min / 60.0f;
 8000d0a:	ed97 7a24 	vldr	s14, [r7, #144]	@ 0x90
 8000d0e:	eddf 6a9b 	vldr	s13, [pc, #620]	@ 8000f7c <main+0x494>
 8000d12:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000d16:	ed97 7a25 	vldr	s14, [r7, #148]	@ 0x94
 8000d1a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000d1e:	edc7 7a23 	vstr	s15, [r7, #140]	@ 0x8c

				float fLat_deg = (float)(iLat / 10000000); // Extract degrees (dd)
 8000d22:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8000d26:	4a92      	ldr	r2, [pc, #584]	@ (8000f70 <main+0x488>)
 8000d28:	fb82 1203 	smull	r1, r2, r2, r3
 8000d2c:	1592      	asrs	r2, r2, #22
 8000d2e:	17db      	asrs	r3, r3, #31
 8000d30:	1ad3      	subs	r3, r2, r3
 8000d32:	ee07 3a90 	vmov	s15, r3
 8000d36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000d3a:	edc7 7a22 	vstr	s15, [r7, #136]	@ 0x88
				float fLat_min = (float)((iLat % 10000000) / 100000.0f); // Extract minutes (mm.mmmmm)
 8000d3e:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 8000d42:	4a8b      	ldr	r2, [pc, #556]	@ (8000f70 <main+0x488>)
 8000d44:	fb82 1203 	smull	r1, r2, r2, r3
 8000d48:	1591      	asrs	r1, r2, #22
 8000d4a:	17da      	asrs	r2, r3, #31
 8000d4c:	1a8a      	subs	r2, r1, r2
 8000d4e:	4989      	ldr	r1, [pc, #548]	@ (8000f74 <main+0x48c>)
 8000d50:	fb01 f202 	mul.w	r2, r1, r2
 8000d54:	1a9a      	subs	r2, r3, r2
 8000d56:	ee07 2a90 	vmov	s15, r2
 8000d5a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000d5e:	eddf 6a86 	vldr	s13, [pc, #536]	@ 8000f78 <main+0x490>
 8000d62:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000d66:	edc7 7a21 	vstr	s15, [r7, #132]	@ 0x84
				float fLatitude = fLat_deg + fLat_min / 60.0f;
 8000d6a:	ed97 7a21 	vldr	s14, [r7, #132]	@ 0x84
 8000d6e:	eddf 6a83 	vldr	s13, [pc, #524]	@ 8000f7c <main+0x494>
 8000d72:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000d76:	ed97 7a22 	vldr	s14, [r7, #136]	@ 0x88
 8000d7a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000d7e:	edc7 7a20 	vstr	s15, [r7, #128]	@ 0x80

				// GPS Altitude (m)
				float fGpsAltitude = (float)(short)sReg[GPSHeight] / 10.0f;
 8000d82:	4b77      	ldr	r3, [pc, #476]	@ (8000f60 <main+0x478>)
 8000d84:	f9b3 309a 	ldrsh.w	r3, [r3, #154]	@ 0x9a
 8000d88:	ee07 3a90 	vmov	s15, r3
 8000d8c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000d90:	eef2 6a04 	vmov.f32	s13, #36	@ 0x41200000  10.0
 8000d94:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000d98:	edc7 7a1f 	vstr	s15, [r7, #124]	@ 0x7c

				// GPS Heading/Course (°). Note: This is course over ground, not magnetic heading.
				float fGpsCourse = (float)(short)sReg[GPSYAW] / 100.0f;
 8000d9c:	4b70      	ldr	r3, [pc, #448]	@ (8000f60 <main+0x478>)
 8000d9e:	f9b3 309c 	ldrsh.w	r3, [r3, #156]	@ 0x9c
 8000da2:	ee07 3a90 	vmov	s15, r3
 8000da6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000daa:	eddf 6a75 	vldr	s13, [pc, #468]	@ 8000f80 <main+0x498>
 8000dae:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000db2:	edc7 7a1e 	vstr	s15, [r7, #120]	@ 0x78

				// GPS Ground Speed (km/h)
				int32_t iGpsSpeed = ((int32_t)(short)sReg[GPSVH] << 16) | (uint16_t)sReg[GPSVL];
 8000db6:	4b6a      	ldr	r3, [pc, #424]	@ (8000f60 <main+0x478>)
 8000db8:	f9b3 30a0 	ldrsh.w	r3, [r3, #160]	@ 0xa0
 8000dbc:	041b      	lsls	r3, r3, #16
 8000dbe:	4a68      	ldr	r2, [pc, #416]	@ (8000f60 <main+0x478>)
 8000dc0:	f9b2 209e 	ldrsh.w	r2, [r2, #158]	@ 0x9e
 8000dc4:	b292      	uxth	r2, r2
 8000dc6:	4313      	orrs	r3, r2
 8000dc8:	677b      	str	r3, [r7, #116]	@ 0x74
				float fGpsSpeed_kmh = (float)iGpsSpeed / 1000.0f;
 8000dca:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8000dcc:	ee07 3a90 	vmov	s15, r3
 8000dd0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000dd4:	eddf 6a6b 	vldr	s13, [pc, #428]	@ 8000f84 <main+0x49c>
 8000dd8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000ddc:	edc7 7a1c 	vstr	s15, [r7, #112]	@ 0x70

				// Satellite Info & Accuracy Metrics
				int iSatellites = (uint16_t)sReg[SVNUM]; // Number of satellites is likely unsigned
 8000de0:	4b5f      	ldr	r3, [pc, #380]	@ (8000f60 <main+0x478>)
 8000de2:	f9b3 30aa 	ldrsh.w	r3, [r3, #170]	@ 0xaa
 8000de6:	b29b      	uxth	r3, r3
 8000de8:	66fb      	str	r3, [r7, #108]	@ 0x6c
				float fPDOP = (float)(short)sReg[PDOP] / 100.0f;
 8000dea:	4b5d      	ldr	r3, [pc, #372]	@ (8000f60 <main+0x478>)
 8000dec:	f9b3 30ac 	ldrsh.w	r3, [r3, #172]	@ 0xac
 8000df0:	ee07 3a90 	vmov	s15, r3
 8000df4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000df8:	eddf 6a61 	vldr	s13, [pc, #388]	@ 8000f80 <main+0x498>
 8000dfc:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000e00:	edc7 7a1a 	vstr	s15, [r7, #104]	@ 0x68
				float fHDOP = (float)(short)sReg[HDOP] / 100.0f;
 8000e04:	4b56      	ldr	r3, [pc, #344]	@ (8000f60 <main+0x478>)
 8000e06:	f9b3 30ae 	ldrsh.w	r3, [r3, #174]	@ 0xae
 8000e0a:	ee07 3a90 	vmov	s15, r3
 8000e0e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000e12:	eddf 6a5b 	vldr	s13, [pc, #364]	@ 8000f80 <main+0x498>
 8000e16:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000e1a:	edc7 7a19 	vstr	s15, [r7, #100]	@ 0x64
				float fVDOP = (float)(short)sReg[VDOP] / 100.0f;
 8000e1e:	4b50      	ldr	r3, [pc, #320]	@ (8000f60 <main+0x478>)
 8000e20:	f9b3 30b0 	ldrsh.w	r3, [r3, #176]	@ 0xb0
 8000e24:	ee07 3a90 	vmov	s15, r3
 8000e28:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000e2c:	eddf 6a54 	vldr	s13, [pc, #336]	@ 8000f80 <main+0x498>
 8000e30:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000e34:	edc7 7a18 	vstr	s15, [r7, #96]	@ 0x60


    			if(s_cDataUpdate & ACC_UPDATE)
 8000e38:	4b53      	ldr	r3, [pc, #332]	@ (8000f88 <main+0x4a0>)
 8000e3a:	781b      	ldrb	r3, [r3, #0]
 8000e3c:	f003 0301 	and.w	r3, r3, #1
 8000e40:	2b00      	cmp	r3, #0
 8000e42:	d01b      	beq.n	8000e7c <main+0x394>
    			{
    				printf("acc:%.3f %.3f %.3f\r\n", fAcc[0], fAcc[1], fAcc[2]);
 8000e44:	edd7 7a14 	vldr	s15, [r7, #80]	@ 0x50
 8000e48:	eeb7 5ae7 	vcvt.f64.f32	d5, s15
 8000e4c:	edd7 7a15 	vldr	s15, [r7, #84]	@ 0x54
 8000e50:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8000e54:	edd7 6a16 	vldr	s13, [r7, #88]	@ 0x58
 8000e58:	eeb7 6ae6 	vcvt.f64.f32	d6, s13
 8000e5c:	ed8d 6b02 	vstr	d6, [sp, #8]
 8000e60:	ed8d 7b00 	vstr	d7, [sp]
 8000e64:	ec53 2b15 	vmov	r2, r3, d5
 8000e68:	4848      	ldr	r0, [pc, #288]	@ (8000f8c <main+0x4a4>)
 8000e6a:	f00a fcb5 	bl	800b7d8 <iprintf>
    				s_cDataUpdate &= ~ACC_UPDATE;
 8000e6e:	4b46      	ldr	r3, [pc, #280]	@ (8000f88 <main+0x4a0>)
 8000e70:	781b      	ldrb	r3, [r3, #0]
 8000e72:	f023 0301 	bic.w	r3, r3, #1
 8000e76:	b2da      	uxtb	r2, r3
 8000e78:	4b43      	ldr	r3, [pc, #268]	@ (8000f88 <main+0x4a0>)
 8000e7a:	701a      	strb	r2, [r3, #0]
    			}
    			if(s_cDataUpdate & GYRO_UPDATE)
 8000e7c:	4b42      	ldr	r3, [pc, #264]	@ (8000f88 <main+0x4a0>)
 8000e7e:	781b      	ldrb	r3, [r3, #0]
 8000e80:	f003 0302 	and.w	r3, r3, #2
 8000e84:	2b00      	cmp	r3, #0
 8000e86:	d01b      	beq.n	8000ec0 <main+0x3d8>
    			{
    				printf("gyro:%.3f %.3f %.3f\r\n", fGyro[0], fGyro[1], fGyro[2]);
 8000e88:	edd7 7a11 	vldr	s15, [r7, #68]	@ 0x44
 8000e8c:	eeb7 5ae7 	vcvt.f64.f32	d5, s15
 8000e90:	edd7 7a12 	vldr	s15, [r7, #72]	@ 0x48
 8000e94:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8000e98:	edd7 6a13 	vldr	s13, [r7, #76]	@ 0x4c
 8000e9c:	eeb7 6ae6 	vcvt.f64.f32	d6, s13
 8000ea0:	ed8d 6b02 	vstr	d6, [sp, #8]
 8000ea4:	ed8d 7b00 	vstr	d7, [sp]
 8000ea8:	ec53 2b15 	vmov	r2, r3, d5
 8000eac:	4838      	ldr	r0, [pc, #224]	@ (8000f90 <main+0x4a8>)
 8000eae:	f00a fc93 	bl	800b7d8 <iprintf>
    				s_cDataUpdate &= ~GYRO_UPDATE;
 8000eb2:	4b35      	ldr	r3, [pc, #212]	@ (8000f88 <main+0x4a0>)
 8000eb4:	781b      	ldrb	r3, [r3, #0]
 8000eb6:	f023 0302 	bic.w	r3, r3, #2
 8000eba:	b2da      	uxtb	r2, r3
 8000ebc:	4b32      	ldr	r3, [pc, #200]	@ (8000f88 <main+0x4a0>)
 8000ebe:	701a      	strb	r2, [r3, #0]
    			}
    			if(s_cDataUpdate & ANGLE_UPDATE)
 8000ec0:	4b31      	ldr	r3, [pc, #196]	@ (8000f88 <main+0x4a0>)
 8000ec2:	781b      	ldrb	r3, [r3, #0]
 8000ec4:	f003 0304 	and.w	r3, r3, #4
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d033      	beq.n	8000f34 <main+0x44c>
    			{
                    fYaw = (float)((unsigned short)sReg[Yaw]) / 32768 * 180.0;
 8000ecc:	4b24      	ldr	r3, [pc, #144]	@ (8000f60 <main+0x478>)
 8000ece:	f9b3 307e 	ldrsh.w	r3, [r3, #126]	@ 0x7e
 8000ed2:	b29b      	uxth	r3, r3
 8000ed4:	ee07 3a90 	vmov	s15, r3
 8000ed8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8000edc:	eddf 6a21 	vldr	s13, [pc, #132]	@ 8000f64 <main+0x47c>
 8000ee0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8000ee4:	ed9f 7a21 	vldr	s14, [pc, #132]	@ 8000f6c <main+0x484>
 8000ee8:	ee67 7a87 	vmul.f32	s15, s15, s14
 8000eec:	edc7 7a17 	vstr	s15, [r7, #92]	@ 0x5c
    				printf("angle:%.3f %.3f %.3f(%.3f)\r\n", fAngle[0], fAngle[1], fAngle[2], fYaw);
 8000ef0:	edd7 7a0e 	vldr	s15, [r7, #56]	@ 0x38
 8000ef4:	eeb7 4ae7 	vcvt.f64.f32	d4, s15
 8000ef8:	edd7 7a0f 	vldr	s15, [r7, #60]	@ 0x3c
 8000efc:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8000f00:	edd7 6a10 	vldr	s13, [r7, #64]	@ 0x40
 8000f04:	eeb7 6ae6 	vcvt.f64.f32	d6, s13
 8000f08:	edd7 5a17 	vldr	s11, [r7, #92]	@ 0x5c
 8000f0c:	eeb7 5ae5 	vcvt.f64.f32	d5, s11
 8000f10:	ed8d 5b04 	vstr	d5, [sp, #16]
 8000f14:	ed8d 6b02 	vstr	d6, [sp, #8]
 8000f18:	ed8d 7b00 	vstr	d7, [sp]
 8000f1c:	ec53 2b14 	vmov	r2, r3, d4
 8000f20:	481c      	ldr	r0, [pc, #112]	@ (8000f94 <main+0x4ac>)
 8000f22:	f00a fc59 	bl	800b7d8 <iprintf>
    				s_cDataUpdate &= ~ANGLE_UPDATE;
 8000f26:	4b18      	ldr	r3, [pc, #96]	@ (8000f88 <main+0x4a0>)
 8000f28:	781b      	ldrb	r3, [r3, #0]
 8000f2a:	f023 0304 	bic.w	r3, r3, #4
 8000f2e:	b2da      	uxtb	r2, r3
 8000f30:	4b15      	ldr	r3, [pc, #84]	@ (8000f88 <main+0x4a0>)
 8000f32:	701a      	strb	r2, [r3, #0]
    			}
    			if(s_cDataUpdate & MAG_UPDATE)
 8000f34:	4b14      	ldr	r3, [pc, #80]	@ (8000f88 <main+0x4a0>)
 8000f36:	781b      	ldrb	r3, [r3, #0]
 8000f38:	f003 0308 	and.w	r3, r3, #8
 8000f3c:	2b00      	cmp	r3, #0
 8000f3e:	d034      	beq.n	8000faa <main+0x4c2>
    			{
    				printf("mag:%d %d %d\r\n", sReg[HX], sReg[HY], sReg[HZ]);
 8000f40:	4b07      	ldr	r3, [pc, #28]	@ (8000f60 <main+0x478>)
 8000f42:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 8000f46:	4619      	mov	r1, r3
 8000f48:	4b05      	ldr	r3, [pc, #20]	@ (8000f60 <main+0x478>)
 8000f4a:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 8000f4e:	461a      	mov	r2, r3
 8000f50:	4b03      	ldr	r3, [pc, #12]	@ (8000f60 <main+0x478>)
 8000f52:	f9b3 3078 	ldrsh.w	r3, [r3, #120]	@ 0x78
 8000f56:	4810      	ldr	r0, [pc, #64]	@ (8000f98 <main+0x4b0>)
 8000f58:	f00a fc3e 	bl	800b7d8 <iprintf>
 8000f5c:	e01e      	b.n	8000f9c <main+0x4b4>
 8000f5e:	bf00      	nop
 8000f60:	240007c8 	.word	0x240007c8
 8000f64:	47000000 	.word	0x47000000
 8000f68:	44fa0000 	.word	0x44fa0000
 8000f6c:	43340000 	.word	0x43340000
 8000f70:	6b5fca6b 	.word	0x6b5fca6b
 8000f74:	00989680 	.word	0x00989680
 8000f78:	47c35000 	.word	0x47c35000
 8000f7c:	42700000 	.word	0x42700000
 8000f80:	42c80000 	.word	0x42c80000
 8000f84:	447a0000 	.word	0x447a0000
 8000f88:	24000458 	.word	0x24000458
 8000f8c:	0800dac4 	.word	0x0800dac4
 8000f90:	0800dadc 	.word	0x0800dadc
 8000f94:	0800daf4 	.word	0x0800daf4
 8000f98:	0800db14 	.word	0x0800db14
    				s_cDataUpdate &= ~MAG_UPDATE;
 8000f9c:	4b25      	ldr	r3, [pc, #148]	@ (8001034 <main+0x54c>)
 8000f9e:	781b      	ldrb	r3, [r3, #0]
 8000fa0:	f023 0308 	bic.w	r3, r3, #8
 8000fa4:	b2da      	uxtb	r2, r3
 8000fa6:	4b23      	ldr	r3, [pc, #140]	@ (8001034 <main+0x54c>)
 8000fa8:	701a      	strb	r2, [r3, #0]
    			}
				if(s_cDataUpdate & GPS_UPDATE)
 8000faa:	4b22      	ldr	r3, [pc, #136]	@ (8001034 <main+0x54c>)
 8000fac:	781b      	ldrb	r3, [r3, #0]
 8000fae:	f003 0310 	and.w	r3, r3, #16
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	d039      	beq.n	800102a <main+0x542>
				  {
								// Print the GPS data
					printf("GPS Lat: %.6f, Lon: %.6f, Alt: %.1fm\r\n", fLatitude, fLongitude, fGpsAltitude);
 8000fb6:	edd7 7a20 	vldr	s15, [r7, #128]	@ 0x80
 8000fba:	eeb7 5ae7 	vcvt.f64.f32	d5, s15
 8000fbe:	edd7 7a23 	vldr	s15, [r7, #140]	@ 0x8c
 8000fc2:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8000fc6:	edd7 6a1f 	vldr	s13, [r7, #124]	@ 0x7c
 8000fca:	eeb7 6ae6 	vcvt.f64.f32	d6, s13
 8000fce:	ed8d 6b02 	vstr	d6, [sp, #8]
 8000fd2:	ed8d 7b00 	vstr	d7, [sp]
 8000fd6:	ec53 2b15 	vmov	r2, r3, d5
 8000fda:	4817      	ldr	r0, [pc, #92]	@ (8001038 <main+0x550>)
 8000fdc:	f00a fbfc 	bl	800b7d8 <iprintf>
					printf("GPS Spd: %.3fkm/h, Course: %.2fdeg\r\n", fGpsSpeed_kmh, fGpsCourse);
 8000fe0:	edd7 7a1c 	vldr	s15, [r7, #112]	@ 0x70
 8000fe4:	eeb7 6ae7 	vcvt.f64.f32	d6, s15
 8000fe8:	edd7 7a1e 	vldr	s15, [r7, #120]	@ 0x78
 8000fec:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8000ff0:	ed8d 7b00 	vstr	d7, [sp]
 8000ff4:	ec53 2b16 	vmov	r2, r3, d6
 8000ff8:	4810      	ldr	r0, [pc, #64]	@ (800103c <main+0x554>)
 8000ffa:	f00a fbed 	bl	800b7d8 <iprintf>
					printf("GPS Sats: %d, PDOP: %.2f, HDOP: %.2f, VDOP: %.2f\r\n", iSatellites, fPDOP, fHDOP, fVDOP);
 8000ffe:	edd7 7a1a 	vldr	s15, [r7, #104]	@ 0x68
 8001002:	eeb7 5ae7 	vcvt.f64.f32	d5, s15
 8001006:	edd7 7a19 	vldr	s15, [r7, #100]	@ 0x64
 800100a:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 800100e:	edd7 6a18 	vldr	s13, [r7, #96]	@ 0x60
 8001012:	eeb7 6ae6 	vcvt.f64.f32	d6, s13
 8001016:	ed8d 6b02 	vstr	d6, [sp, #8]
 800101a:	ed8d 7b00 	vstr	d7, [sp]
 800101e:	ec53 2b15 	vmov	r2, r3, d5
 8001022:	6ef9      	ldr	r1, [r7, #108]	@ 0x6c
 8001024:	4806      	ldr	r0, [pc, #24]	@ (8001040 <main+0x558>)
 8001026:	f00a fbd7 	bl	800b7d8 <iprintf>

					// Clear the GPS update flag
					//s_cDataUpdate &= ~GPS_UPDATE;
				}

                s_cDataUpdate = 0;
 800102a:	4b02      	ldr	r3, [pc, #8]	@ (8001034 <main+0x54c>)
 800102c:	2200      	movs	r2, #0
 800102e:	701a      	strb	r2, [r3, #0]
  {
 8001030:	e59d      	b.n	8000b6e <main+0x86>
 8001032:	bf00      	nop
 8001034:	24000458 	.word	0x24000458
 8001038:	0800db24 	.word	0x0800db24
 800103c:	0800db4c 	.word	0x0800db4c
 8001040:	0800db74 	.word	0x0800db74

08001044 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001044:	b580      	push	{r7, lr}
 8001046:	b09c      	sub	sp, #112	@ 0x70
 8001048:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800104a:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800104e:	224c      	movs	r2, #76	@ 0x4c
 8001050:	2100      	movs	r1, #0
 8001052:	4618      	mov	r0, r3
 8001054:	f00a fc38 	bl	800b8c8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001058:	1d3b      	adds	r3, r7, #4
 800105a:	2220      	movs	r2, #32
 800105c:	2100      	movs	r1, #0
 800105e:	4618      	mov	r0, r3
 8001060:	f00a fc32 	bl	800b8c8 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8001064:	2002      	movs	r0, #2
 8001066:	f003 fcb9 	bl	80049dc <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 800106a:	2300      	movs	r3, #0
 800106c:	603b      	str	r3, [r7, #0]
 800106e:	4b23      	ldr	r3, [pc, #140]	@ (80010fc <SystemClock_Config+0xb8>)
 8001070:	699b      	ldr	r3, [r3, #24]
 8001072:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8001076:	4a21      	ldr	r2, [pc, #132]	@ (80010fc <SystemClock_Config+0xb8>)
 8001078:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800107c:	6193      	str	r3, [r2, #24]
 800107e:	4b1f      	ldr	r3, [pc, #124]	@ (80010fc <SystemClock_Config+0xb8>)
 8001080:	699b      	ldr	r3, [r3, #24]
 8001082:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001086:	603b      	str	r3, [r7, #0]
 8001088:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 800108a:	bf00      	nop
 800108c:	4b1b      	ldr	r3, [pc, #108]	@ (80010fc <SystemClock_Config+0xb8>)
 800108e:	699b      	ldr	r3, [r3, #24]
 8001090:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8001094:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8001098:	d1f8      	bne.n	800108c <SystemClock_Config+0x48>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 800109a:	2302      	movs	r3, #2
 800109c:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.HSIState = RCC_HSI_DIV1;
 800109e:	2301      	movs	r3, #1
 80010a0:	633b      	str	r3, [r7, #48]	@ 0x30
  RCC_OscInitStruct.HSICalibrationValue = 64;
 80010a2:	2340      	movs	r3, #64	@ 0x40
 80010a4:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80010a6:	2300      	movs	r3, #0
 80010a8:	64bb      	str	r3, [r7, #72]	@ 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80010aa:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80010ae:	4618      	mov	r0, r3
 80010b0:	f003 fcce 	bl	8004a50 <HAL_RCC_OscConfig>
 80010b4:	4603      	mov	r3, r0
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d001      	beq.n	80010be <SystemClock_Config+0x7a>
  {
    Error_Handler();
 80010ba:	f000 fc5f 	bl	800197c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80010be:	233f      	movs	r3, #63	@ 0x3f
 80010c0:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80010c2:	2300      	movs	r3, #0
 80010c4:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 80010c6:	2300      	movs	r3, #0
 80010c8:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV1;
 80010ca:	2300      	movs	r3, #0
 80010cc:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV1;
 80010ce:	2300      	movs	r3, #0
 80010d0:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 80010d2:	2340      	movs	r3, #64	@ 0x40
 80010d4:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 80010d6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80010da:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV1;
 80010dc:	2300      	movs	r3, #0
 80010de:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 80010e0:	1d3b      	adds	r3, r7, #4
 80010e2:	2101      	movs	r1, #1
 80010e4:	4618      	mov	r0, r3
 80010e6:	f004 f88d 	bl	8005204 <HAL_RCC_ClockConfig>
 80010ea:	4603      	mov	r3, r0
 80010ec:	2b00      	cmp	r3, #0
 80010ee:	d001      	beq.n	80010f4 <SystemClock_Config+0xb0>
  {
    Error_Handler();
 80010f0:	f000 fc44 	bl	800197c <Error_Handler>
  }
}
 80010f4:	bf00      	nop
 80010f6:	3770      	adds	r7, #112	@ 0x70
 80010f8:	46bd      	mov	sp, r7
 80010fa:	bd80      	pop	{r7, pc}
 80010fc:	58024800 	.word	0x58024800

08001100 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001100:	b580      	push	{r7, lr}
 8001102:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001104:	4b1b      	ldr	r3, [pc, #108]	@ (8001174 <MX_I2C1_Init+0x74>)
 8001106:	4a1c      	ldr	r2, [pc, #112]	@ (8001178 <MX_I2C1_Init+0x78>)
 8001108:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00707CBB;
 800110a:	4b1a      	ldr	r3, [pc, #104]	@ (8001174 <MX_I2C1_Init+0x74>)
 800110c:	4a1b      	ldr	r2, [pc, #108]	@ (800117c <MX_I2C1_Init+0x7c>)
 800110e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8001110:	4b18      	ldr	r3, [pc, #96]	@ (8001174 <MX_I2C1_Init+0x74>)
 8001112:	2200      	movs	r2, #0
 8001114:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001116:	4b17      	ldr	r3, [pc, #92]	@ (8001174 <MX_I2C1_Init+0x74>)
 8001118:	2201      	movs	r2, #1
 800111a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800111c:	4b15      	ldr	r3, [pc, #84]	@ (8001174 <MX_I2C1_Init+0x74>)
 800111e:	2200      	movs	r2, #0
 8001120:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8001122:	4b14      	ldr	r3, [pc, #80]	@ (8001174 <MX_I2C1_Init+0x74>)
 8001124:	2200      	movs	r2, #0
 8001126:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8001128:	4b12      	ldr	r3, [pc, #72]	@ (8001174 <MX_I2C1_Init+0x74>)
 800112a:	2200      	movs	r2, #0
 800112c:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800112e:	4b11      	ldr	r3, [pc, #68]	@ (8001174 <MX_I2C1_Init+0x74>)
 8001130:	2200      	movs	r2, #0
 8001132:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001134:	4b0f      	ldr	r3, [pc, #60]	@ (8001174 <MX_I2C1_Init+0x74>)
 8001136:	2200      	movs	r2, #0
 8001138:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800113a:	480e      	ldr	r0, [pc, #56]	@ (8001174 <MX_I2C1_Init+0x74>)
 800113c:	f002 fe2a 	bl	8003d94 <HAL_I2C_Init>
 8001140:	4603      	mov	r3, r0
 8001142:	2b00      	cmp	r3, #0
 8001144:	d001      	beq.n	800114a <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8001146:	f000 fc19 	bl	800197c <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 800114a:	2100      	movs	r1, #0
 800114c:	4809      	ldr	r0, [pc, #36]	@ (8001174 <MX_I2C1_Init+0x74>)
 800114e:	f003 fbad 	bl	80048ac <HAL_I2CEx_ConfigAnalogFilter>
 8001152:	4603      	mov	r3, r0
 8001154:	2b00      	cmp	r3, #0
 8001156:	d001      	beq.n	800115c <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8001158:	f000 fc10 	bl	800197c <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 800115c:	2100      	movs	r1, #0
 800115e:	4805      	ldr	r0, [pc, #20]	@ (8001174 <MX_I2C1_Init+0x74>)
 8001160:	f003 fbef 	bl	8004942 <HAL_I2CEx_ConfigDigitalFilter>
 8001164:	4603      	mov	r3, r0
 8001166:	2b00      	cmp	r3, #0
 8001168:	d001      	beq.n	800116e <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 800116a:	f000 fc07 	bl	800197c <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800116e:	bf00      	nop
 8001170:	bd80      	pop	{r7, pc}
 8001172:	bf00      	nop
 8001174:	240001fc 	.word	0x240001fc
 8001178:	40005400 	.word	0x40005400
 800117c:	00707cbb 	.word	0x00707cbb

08001180 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001180:	b580      	push	{r7, lr}
 8001182:	b098      	sub	sp, #96	@ 0x60
 8001184:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001186:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800118a:	2200      	movs	r2, #0
 800118c:	601a      	str	r2, [r3, #0]
 800118e:	605a      	str	r2, [r3, #4]
 8001190:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001192:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001196:	2200      	movs	r2, #0
 8001198:	601a      	str	r2, [r3, #0]
 800119a:	605a      	str	r2, [r3, #4]
 800119c:	609a      	str	r2, [r3, #8]
 800119e:	60da      	str	r2, [r3, #12]
 80011a0:	611a      	str	r2, [r3, #16]
 80011a2:	615a      	str	r2, [r3, #20]
 80011a4:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80011a6:	1d3b      	adds	r3, r7, #4
 80011a8:	2234      	movs	r2, #52	@ 0x34
 80011aa:	2100      	movs	r1, #0
 80011ac:	4618      	mov	r0, r3
 80011ae:	f00a fb8b 	bl	800b8c8 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 80011b2:	4b41      	ldr	r3, [pc, #260]	@ (80012b8 <MX_TIM1_Init+0x138>)
 80011b4:	4a41      	ldr	r2, [pc, #260]	@ (80012bc <MX_TIM1_Init+0x13c>)
 80011b6:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 64-1;
 80011b8:	4b3f      	ldr	r3, [pc, #252]	@ (80012b8 <MX_TIM1_Init+0x138>)
 80011ba:	223f      	movs	r2, #63	@ 0x3f
 80011bc:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80011be:	4b3e      	ldr	r3, [pc, #248]	@ (80012b8 <MX_TIM1_Init+0x138>)
 80011c0:	2200      	movs	r2, #0
 80011c2:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 20000-1;
 80011c4:	4b3c      	ldr	r3, [pc, #240]	@ (80012b8 <MX_TIM1_Init+0x138>)
 80011c6:	f644 621f 	movw	r2, #19999	@ 0x4e1f
 80011ca:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80011cc:	4b3a      	ldr	r3, [pc, #232]	@ (80012b8 <MX_TIM1_Init+0x138>)
 80011ce:	2200      	movs	r2, #0
 80011d0:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80011d2:	4b39      	ldr	r3, [pc, #228]	@ (80012b8 <MX_TIM1_Init+0x138>)
 80011d4:	2200      	movs	r2, #0
 80011d6:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80011d8:	4b37      	ldr	r3, [pc, #220]	@ (80012b8 <MX_TIM1_Init+0x138>)
 80011da:	2200      	movs	r2, #0
 80011dc:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80011de:	4836      	ldr	r0, [pc, #216]	@ (80012b8 <MX_TIM1_Init+0x138>)
 80011e0:	f006 f95e 	bl	80074a0 <HAL_TIM_PWM_Init>
 80011e4:	4603      	mov	r3, r0
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	d001      	beq.n	80011ee <MX_TIM1_Init+0x6e>
  {
    Error_Handler();
 80011ea:	f000 fbc7 	bl	800197c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80011ee:	2300      	movs	r3, #0
 80011f0:	657b      	str	r3, [r7, #84]	@ 0x54
  sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 80011f2:	2300      	movs	r3, #0
 80011f4:	65bb      	str	r3, [r7, #88]	@ 0x58
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80011f6:	2300      	movs	r3, #0
 80011f8:	65fb      	str	r3, [r7, #92]	@ 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80011fa:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 80011fe:	4619      	mov	r1, r3
 8001200:	482d      	ldr	r0, [pc, #180]	@ (80012b8 <MX_TIM1_Init+0x138>)
 8001202:	f006 ff7d 	bl	8008100 <HAL_TIMEx_MasterConfigSynchronization>
 8001206:	4603      	mov	r3, r0
 8001208:	2b00      	cmp	r3, #0
 800120a:	d001      	beq.n	8001210 <MX_TIM1_Init+0x90>
  {
    Error_Handler();
 800120c:	f000 fbb6 	bl	800197c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001210:	2360      	movs	r3, #96	@ 0x60
 8001212:	63bb      	str	r3, [r7, #56]	@ 0x38
  sConfigOC.Pulse = 5000;
 8001214:	f241 3388 	movw	r3, #5000	@ 0x1388
 8001218:	63fb      	str	r3, [r7, #60]	@ 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800121a:	2300      	movs	r3, #0
 800121c:	643b      	str	r3, [r7, #64]	@ 0x40
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 800121e:	2300      	movs	r3, #0
 8001220:	647b      	str	r3, [r7, #68]	@ 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001222:	2300      	movs	r3, #0
 8001224:	64bb      	str	r3, [r7, #72]	@ 0x48
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001226:	2300      	movs	r3, #0
 8001228:	64fb      	str	r3, [r7, #76]	@ 0x4c
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 800122a:	2300      	movs	r3, #0
 800122c:	653b      	str	r3, [r7, #80]	@ 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800122e:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001232:	2200      	movs	r2, #0
 8001234:	4619      	mov	r1, r3
 8001236:	4820      	ldr	r0, [pc, #128]	@ (80012b8 <MX_TIM1_Init+0x138>)
 8001238:	f006 faa6 	bl	8007788 <HAL_TIM_PWM_ConfigChannel>
 800123c:	4603      	mov	r3, r0
 800123e:	2b00      	cmp	r3, #0
 8001240:	d001      	beq.n	8001246 <MX_TIM1_Init+0xc6>
  {
    Error_Handler();
 8001242:	f000 fb9b 	bl	800197c <Error_Handler>
  }
  sConfigOC.Pulse = 1500;
 8001246:	f240 53dc 	movw	r3, #1500	@ 0x5dc
 800124a:	63fb      	str	r3, [r7, #60]	@ 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 800124c:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 8001250:	2204      	movs	r2, #4
 8001252:	4619      	mov	r1, r3
 8001254:	4818      	ldr	r0, [pc, #96]	@ (80012b8 <MX_TIM1_Init+0x138>)
 8001256:	f006 fa97 	bl	8007788 <HAL_TIM_PWM_ConfigChannel>
 800125a:	4603      	mov	r3, r0
 800125c:	2b00      	cmp	r3, #0
 800125e:	d001      	beq.n	8001264 <MX_TIM1_Init+0xe4>
  {
    Error_Handler();
 8001260:	f000 fb8c 	bl	800197c <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001264:	2300      	movs	r3, #0
 8001266:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001268:	2300      	movs	r3, #0
 800126a:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800126c:	2300      	movs	r3, #0
 800126e:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001270:	2300      	movs	r3, #0
 8001272:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001274:	2300      	movs	r3, #0
 8001276:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001278:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800127c:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 800127e:	2300      	movs	r3, #0
 8001280:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 8001282:	2300      	movs	r3, #0
 8001284:	627b      	str	r3, [r7, #36]	@ 0x24
  sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 8001286:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800128a:	62bb      	str	r3, [r7, #40]	@ 0x28
  sBreakDeadTimeConfig.Break2Filter = 0;
 800128c:	2300      	movs	r3, #0
 800128e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001290:	2300      	movs	r3, #0
 8001292:	637b      	str	r3, [r7, #52]	@ 0x34
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8001294:	1d3b      	adds	r3, r7, #4
 8001296:	4619      	mov	r1, r3
 8001298:	4807      	ldr	r0, [pc, #28]	@ (80012b8 <MX_TIM1_Init+0x138>)
 800129a:	f006 ffcd 	bl	8008238 <HAL_TIMEx_ConfigBreakDeadTime>
 800129e:	4603      	mov	r3, r0
 80012a0:	2b00      	cmp	r3, #0
 80012a2:	d001      	beq.n	80012a8 <MX_TIM1_Init+0x128>
  {
    Error_Handler();
 80012a4:	f000 fb6a 	bl	800197c <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80012a8:	4803      	ldr	r0, [pc, #12]	@ (80012b8 <MX_TIM1_Init+0x138>)
 80012aa:	f000 fd43 	bl	8001d34 <HAL_TIM_MspPostInit>

}
 80012ae:	bf00      	nop
 80012b0:	3760      	adds	r7, #96	@ 0x60
 80012b2:	46bd      	mov	sp, r7
 80012b4:	bd80      	pop	{r7, pc}
 80012b6:	bf00      	nop
 80012b8:	24000250 	.word	0x24000250
 80012bc:	40010000 	.word	0x40010000

080012c0 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 80012c0:	b580      	push	{r7, lr}
 80012c2:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 80012c4:	4b22      	ldr	r3, [pc, #136]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012c6:	4a23      	ldr	r2, [pc, #140]	@ (8001354 <MX_USART1_UART_Init+0x94>)
 80012c8:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 80012ca:	4b21      	ldr	r3, [pc, #132]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012cc:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 80012d0:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 80012d2:	4b1f      	ldr	r3, [pc, #124]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012d4:	2200      	movs	r2, #0
 80012d6:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80012d8:	4b1d      	ldr	r3, [pc, #116]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012da:	2200      	movs	r2, #0
 80012dc:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 80012de:	4b1c      	ldr	r3, [pc, #112]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012e0:	2200      	movs	r2, #0
 80012e2:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80012e4:	4b1a      	ldr	r3, [pc, #104]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012e6:	220c      	movs	r2, #12
 80012e8:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80012ea:	4b19      	ldr	r3, [pc, #100]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012ec:	2200      	movs	r2, #0
 80012ee:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80012f0:	4b17      	ldr	r3, [pc, #92]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012f2:	2200      	movs	r2, #0
 80012f4:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 80012f6:	4b16      	ldr	r3, [pc, #88]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012f8:	2200      	movs	r2, #0
 80012fa:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 80012fc:	4b14      	ldr	r3, [pc, #80]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 80012fe:	2200      	movs	r2, #0
 8001300:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001302:	4b13      	ldr	r3, [pc, #76]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 8001304:	2200      	movs	r2, #0
 8001306:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001308:	4811      	ldr	r0, [pc, #68]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 800130a:	f007 f821 	bl	8008350 <HAL_UART_Init>
 800130e:	4603      	mov	r3, r0
 8001310:	2b00      	cmp	r3, #0
 8001312:	d001      	beq.n	8001318 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 8001314:	f000 fb32 	bl	800197c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001318:	2100      	movs	r1, #0
 800131a:	480d      	ldr	r0, [pc, #52]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 800131c:	f009 fc9b 	bl	800ac56 <HAL_UARTEx_SetTxFifoThreshold>
 8001320:	4603      	mov	r3, r0
 8001322:	2b00      	cmp	r3, #0
 8001324:	d001      	beq.n	800132a <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 8001326:	f000 fb29 	bl	800197c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800132a:	2100      	movs	r1, #0
 800132c:	4808      	ldr	r0, [pc, #32]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 800132e:	f009 fcd0 	bl	800acd2 <HAL_UARTEx_SetRxFifoThreshold>
 8001332:	4603      	mov	r3, r0
 8001334:	2b00      	cmp	r3, #0
 8001336:	d001      	beq.n	800133c <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 8001338:	f000 fb20 	bl	800197c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 800133c:	4804      	ldr	r0, [pc, #16]	@ (8001350 <MX_USART1_UART_Init+0x90>)
 800133e:	f009 fc51 	bl	800abe4 <HAL_UARTEx_DisableFifoMode>
 8001342:	4603      	mov	r3, r0
 8001344:	2b00      	cmp	r3, #0
 8001346:	d001      	beq.n	800134c <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8001348:	f000 fb18 	bl	800197c <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 800134c:	bf00      	nop
 800134e:	bd80      	pop	{r7, pc}
 8001350:	2400029c 	.word	0x2400029c
 8001354:	40011000 	.word	0x40011000

08001358 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001358:	b580      	push	{r7, lr}
 800135a:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 800135c:	4b22      	ldr	r3, [pc, #136]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 800135e:	4a23      	ldr	r2, [pc, #140]	@ (80013ec <MX_USART2_UART_Init+0x94>)
 8001360:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001362:	4b21      	ldr	r3, [pc, #132]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 8001364:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001368:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 800136a:	4b1f      	ldr	r3, [pc, #124]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 800136c:	2200      	movs	r2, #0
 800136e:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001370:	4b1d      	ldr	r3, [pc, #116]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 8001372:	2200      	movs	r2, #0
 8001374:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001376:	4b1c      	ldr	r3, [pc, #112]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 8001378:	2200      	movs	r2, #0
 800137a:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 800137c:	4b1a      	ldr	r3, [pc, #104]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 800137e:	220c      	movs	r2, #12
 8001380:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001382:	4b19      	ldr	r3, [pc, #100]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 8001384:	2200      	movs	r2, #0
 8001386:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001388:	4b17      	ldr	r3, [pc, #92]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 800138a:	2200      	movs	r2, #0
 800138c:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800138e:	4b16      	ldr	r3, [pc, #88]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 8001390:	2200      	movs	r2, #0
 8001392:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8001394:	4b14      	ldr	r3, [pc, #80]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 8001396:	2200      	movs	r2, #0
 8001398:	625a      	str	r2, [r3, #36]	@ 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 800139a:	4b13      	ldr	r3, [pc, #76]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 800139c:	2200      	movs	r2, #0
 800139e:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80013a0:	4811      	ldr	r0, [pc, #68]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 80013a2:	f006 ffd5 	bl	8008350 <HAL_UART_Init>
 80013a6:	4603      	mov	r3, r0
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	d001      	beq.n	80013b0 <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 80013ac:	f000 fae6 	bl	800197c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80013b0:	2100      	movs	r1, #0
 80013b2:	480d      	ldr	r0, [pc, #52]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 80013b4:	f009 fc4f 	bl	800ac56 <HAL_UARTEx_SetTxFifoThreshold>
 80013b8:	4603      	mov	r3, r0
 80013ba:	2b00      	cmp	r3, #0
 80013bc:	d001      	beq.n	80013c2 <MX_USART2_UART_Init+0x6a>
  {
    Error_Handler();
 80013be:	f000 fadd 	bl	800197c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80013c2:	2100      	movs	r1, #0
 80013c4:	4808      	ldr	r0, [pc, #32]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 80013c6:	f009 fc84 	bl	800acd2 <HAL_UARTEx_SetRxFifoThreshold>
 80013ca:	4603      	mov	r3, r0
 80013cc:	2b00      	cmp	r3, #0
 80013ce:	d001      	beq.n	80013d4 <MX_USART2_UART_Init+0x7c>
  {
    Error_Handler();
 80013d0:	f000 fad4 	bl	800197c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 80013d4:	4804      	ldr	r0, [pc, #16]	@ (80013e8 <MX_USART2_UART_Init+0x90>)
 80013d6:	f009 fc05 	bl	800abe4 <HAL_UARTEx_DisableFifoMode>
 80013da:	4603      	mov	r3, r0
 80013dc:	2b00      	cmp	r3, #0
 80013de:	d001      	beq.n	80013e4 <MX_USART2_UART_Init+0x8c>
  {
    Error_Handler();
 80013e0:	f000 facc 	bl	800197c <Error_Handler>
  	  //UART_Start_Receive_IT(&huart2, &ucRxData, 1);
      //HAL_UART_Receive_IT(&huart1, &ucRxData, 1);

  /* USER CODE END USART2_Init 2 */

}
 80013e4:	bf00      	nop
 80013e6:	bd80      	pop	{r7, pc}
 80013e8:	24000330 	.word	0x24000330
 80013ec:	40004400 	.word	0x40004400

080013f0 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80013f0:	b580      	push	{r7, lr}
 80013f2:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80013f4:	4b22      	ldr	r3, [pc, #136]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 80013f6:	4a23      	ldr	r2, [pc, #140]	@ (8001484 <MX_USART3_UART_Init+0x94>)
 80013f8:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80013fa:	4b21      	ldr	r3, [pc, #132]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 80013fc:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001400:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8001402:	4b1f      	ldr	r3, [pc, #124]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 8001404:	2200      	movs	r2, #0
 8001406:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8001408:	4b1d      	ldr	r3, [pc, #116]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 800140a:	2200      	movs	r2, #0
 800140c:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 800140e:	4b1c      	ldr	r3, [pc, #112]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 8001410:	2200      	movs	r2, #0
 8001412:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8001414:	4b1a      	ldr	r3, [pc, #104]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 8001416:	220c      	movs	r2, #12
 8001418:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800141a:	4b19      	ldr	r3, [pc, #100]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 800141c:	2200      	movs	r2, #0
 800141e:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8001420:	4b17      	ldr	r3, [pc, #92]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 8001422:	2200      	movs	r2, #0
 8001424:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001426:	4b16      	ldr	r3, [pc, #88]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 8001428:	2200      	movs	r2, #0
 800142a:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 800142c:	4b14      	ldr	r3, [pc, #80]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 800142e:	2200      	movs	r2, #0
 8001430:	625a      	str	r2, [r3, #36]	@ 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001432:	4b13      	ldr	r3, [pc, #76]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 8001434:	2200      	movs	r2, #0
 8001436:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8001438:	4811      	ldr	r0, [pc, #68]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 800143a:	f006 ff89 	bl	8008350 <HAL_UART_Init>
 800143e:	4603      	mov	r3, r0
 8001440:	2b00      	cmp	r3, #0
 8001442:	d001      	beq.n	8001448 <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
 8001444:	f000 fa9a 	bl	800197c <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001448:	2100      	movs	r1, #0
 800144a:	480d      	ldr	r0, [pc, #52]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 800144c:	f009 fc03 	bl	800ac56 <HAL_UARTEx_SetTxFifoThreshold>
 8001450:	4603      	mov	r3, r0
 8001452:	2b00      	cmp	r3, #0
 8001454:	d001      	beq.n	800145a <MX_USART3_UART_Init+0x6a>
  {
    Error_Handler();
 8001456:	f000 fa91 	bl	800197c <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 800145a:	2100      	movs	r1, #0
 800145c:	4808      	ldr	r0, [pc, #32]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 800145e:	f009 fc38 	bl	800acd2 <HAL_UARTEx_SetRxFifoThreshold>
 8001462:	4603      	mov	r3, r0
 8001464:	2b00      	cmp	r3, #0
 8001466:	d001      	beq.n	800146c <MX_USART3_UART_Init+0x7c>
  {
    Error_Handler();
 8001468:	f000 fa88 	bl	800197c <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 800146c:	4804      	ldr	r0, [pc, #16]	@ (8001480 <MX_USART3_UART_Init+0x90>)
 800146e:	f009 fbb9 	bl	800abe4 <HAL_UARTEx_DisableFifoMode>
 8001472:	4603      	mov	r3, r0
 8001474:	2b00      	cmp	r3, #0
 8001476:	d001      	beq.n	800147c <MX_USART3_UART_Init+0x8c>
  {
    Error_Handler();
 8001478:	f000 fa80 	bl	800197c <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800147c:	bf00      	nop
 800147e:	bd80      	pop	{r7, pc}
 8001480:	240003c4 	.word	0x240003c4
 8001484:	40004800 	.word	0x40004800

08001488 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001488:	b580      	push	{r7, lr}
 800148a:	b08c      	sub	sp, #48	@ 0x30
 800148c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800148e:	f107 031c 	add.w	r3, r7, #28
 8001492:	2200      	movs	r2, #0
 8001494:	601a      	str	r2, [r3, #0]
 8001496:	605a      	str	r2, [r3, #4]
 8001498:	609a      	str	r2, [r3, #8]
 800149a:	60da      	str	r2, [r3, #12]
 800149c:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800149e:	4b51      	ldr	r3, [pc, #324]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014a0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014a4:	4a4f      	ldr	r2, [pc, #316]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014a6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80014aa:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80014ae:	4b4d      	ldr	r3, [pc, #308]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014b0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014b4:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80014b8:	61bb      	str	r3, [r7, #24]
 80014ba:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014bc:	4b49      	ldr	r3, [pc, #292]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014be:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014c2:	4a48      	ldr	r2, [pc, #288]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014c4:	f043 0310 	orr.w	r3, r3, #16
 80014c8:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80014cc:	4b45      	ldr	r3, [pc, #276]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014ce:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014d2:	f003 0310 	and.w	r3, r3, #16
 80014d6:	617b      	str	r3, [r7, #20]
 80014d8:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80014da:	4b42      	ldr	r3, [pc, #264]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014dc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014e0:	4a40      	ldr	r2, [pc, #256]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014e2:	f043 0308 	orr.w	r3, r3, #8
 80014e6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80014ea:	4b3e      	ldr	r3, [pc, #248]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014ec:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014f0:	f003 0308 	and.w	r3, r3, #8
 80014f4:	613b      	str	r3, [r7, #16]
 80014f6:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014f8:	4b3a      	ldr	r3, [pc, #232]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 80014fa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014fe:	4a39      	ldr	r2, [pc, #228]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 8001500:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001504:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001508:	4b36      	ldr	r3, [pc, #216]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 800150a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800150e:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001512:	60fb      	str	r3, [r7, #12]
 8001514:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001516:	4b33      	ldr	r3, [pc, #204]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 8001518:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800151c:	4a31      	ldr	r2, [pc, #196]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 800151e:	f043 0301 	orr.w	r3, r3, #1
 8001522:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001526:	4b2f      	ldr	r3, [pc, #188]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 8001528:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800152c:	f003 0301 	and.w	r3, r3, #1
 8001530:	60bb      	str	r3, [r7, #8]
 8001532:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001534:	4b2b      	ldr	r3, [pc, #172]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 8001536:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800153a:	4a2a      	ldr	r2, [pc, #168]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 800153c:	f043 0302 	orr.w	r3, r3, #2
 8001540:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001544:	4b27      	ldr	r3, [pc, #156]	@ (80015e4 <MX_GPIO_Init+0x15c>)
 8001546:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800154a:	f003 0302 	and.w	r3, r3, #2
 800154e:	607b      	str	r3, [r7, #4]
 8001550:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_7, GPIO_PIN_RESET);
 8001552:	2200      	movs	r2, #0
 8001554:	2180      	movs	r1, #128	@ 0x80
 8001556:	4824      	ldr	r0, [pc, #144]	@ (80015e8 <MX_GPIO_Init+0x160>)
 8001558:	f002 fc02 	bl	8003d60 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PG7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 800155c:	2380      	movs	r3, #128	@ 0x80
 800155e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001560:	2301      	movs	r3, #1
 8001562:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001564:	2300      	movs	r3, #0
 8001566:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001568:	2300      	movs	r3, #0
 800156a:	62bb      	str	r3, [r7, #40]	@ 0x28
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800156c:	f107 031c 	add.w	r3, r7, #28
 8001570:	4619      	mov	r1, r3
 8001572:	481d      	ldr	r0, [pc, #116]	@ (80015e8 <MX_GPIO_Init+0x160>)
 8001574:	f002 fa4c 	bl	8003a10 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */
   /* Configure USART3 TX (PD8) and RX (PD9) */
  GPIO_InitStruct.Pin = GPIO_PIN_8 | GPIO_PIN_9;
 8001578:	f44f 7340 	mov.w	r3, #768	@ 0x300
 800157c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800157e:	2302      	movs	r3, #2
 8001580:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001582:	2300      	movs	r3, #0
 8001584:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001586:	2302      	movs	r3, #2
 8001588:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Alternate = GPIO_AF7_USART3; // AF7 for USART3
 800158a:	2307      	movs	r3, #7
 800158c:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800158e:	f107 031c 	add.w	r3, r7, #28
 8001592:	4619      	mov	r1, r3
 8001594:	4815      	ldr	r0, [pc, #84]	@ (80015ec <MX_GPIO_Init+0x164>)
 8001596:	f002 fa3b 	bl	8003a10 <HAL_GPIO_Init>

  /* Configure USART2 TX (PD5) and RX (PD6) */
  GPIO_InitStruct.Pin = GPIO_PIN_5 | GPIO_PIN_6;
 800159a:	2360      	movs	r3, #96	@ 0x60
 800159c:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800159e:	2302      	movs	r3, #2
 80015a0:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015a2:	2300      	movs	r3, #0
 80015a4:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015a6:	2302      	movs	r3, #2
 80015a8:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2; // AF7 for USART2
 80015aa:	2307      	movs	r3, #7
 80015ac:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80015ae:	f107 031c 	add.w	r3, r7, #28
 80015b2:	4619      	mov	r1, r3
 80015b4:	480d      	ldr	r0, [pc, #52]	@ (80015ec <MX_GPIO_Init+0x164>)
 80015b6:	f002 fa2b 	bl	8003a10 <HAL_GPIO_Init>


  /* Configure USART1 TX (PA9) and RX (PA10) */
  GPIO_InitStruct.Pin = GPIO_PIN_9 | GPIO_PIN_10;
 80015ba:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 80015be:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015c0:	2302      	movs	r3, #2
 80015c2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL; // Or GPIO_PULLUP for RX if needed
 80015c4:	2300      	movs	r3, #0
 80015c6:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c8:	2302      	movs	r3, #2
 80015ca:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Alternate = GPIO_AF7_USART1; // AF7 for USART1
 80015cc:	2307      	movs	r3, #7
 80015ce:	62fb      	str	r3, [r7, #44]	@ 0x2c
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80015d0:	f107 031c 	add.w	r3, r7, #28
 80015d4:	4619      	mov	r1, r3
 80015d6:	4806      	ldr	r0, [pc, #24]	@ (80015f0 <MX_GPIO_Init+0x168>)
 80015d8:	f002 fa1a 	bl	8003a10 <HAL_GPIO_Init>
  /* USER CODE END MX_GPIO_Init_USART1 */


  /* USER CODE END MX_GPIO_Init_2 */
}
 80015dc:	bf00      	nop
 80015de:	3730      	adds	r7, #48	@ 0x30
 80015e0:	46bd      	mov	sp, r7
 80015e2:	bd80      	pop	{r7, pc}
 80015e4:	58024400 	.word	0x58024400
 80015e8:	58021800 	.word	0x58021800
 80015ec:	58020c00 	.word	0x58020c00
 80015f0:	58020000 	.word	0x58020000

080015f4 <SensorUartSend>:

/* USER CODE BEGIN 4 */

static void SensorUartSend(uint8_t *p_data, uint32_t uiSize)
{
 80015f4:	b580      	push	{r7, lr}
 80015f6:	b082      	sub	sp, #8
 80015f8:	af00      	add	r7, sp, #0
 80015fa:	6078      	str	r0, [r7, #4]
 80015fc:	6039      	str	r1, [r7, #0]
  HAL_UART_Transmit(&huart3, p_data, uiSize, uiSize*4);
 80015fe:	683b      	ldr	r3, [r7, #0]
 8001600:	b29a      	uxth	r2, r3
 8001602:	683b      	ldr	r3, [r7, #0]
 8001604:	009b      	lsls	r3, r3, #2
 8001606:	6879      	ldr	r1, [r7, #4]
 8001608:	4803      	ldr	r0, [pc, #12]	@ (8001618 <SensorUartSend+0x24>)
 800160a:	f006 fef1 	bl	80083f0 <HAL_UART_Transmit>
}
 800160e:	bf00      	nop
 8001610:	3708      	adds	r7, #8
 8001612:	46bd      	mov	sp, r7
 8001614:	bd80      	pop	{r7, pc}
 8001616:	bf00      	nop
 8001618:	240003c4 	.word	0x240003c4

0800161c <CopeSensorData>:
static void CopeSensorData(uint32_t uiReg, uint32_t uiRegNum)
{
 800161c:	b480      	push	{r7}
 800161e:	b085      	sub	sp, #20
 8001620:	af00      	add	r7, sp, #0
 8001622:	6078      	str	r0, [r7, #4]
 8001624:	6039      	str	r1, [r7, #0]
	int i;
    for(i = 0; i < uiRegNum; i++)
 8001626:	2300      	movs	r3, #0
 8001628:	60fb      	str	r3, [r7, #12]
 800162a:	e083      	b.n	8001734 <CopeSensorData+0x118>
    {
        switch(uiReg)
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	3b36      	subs	r3, #54	@ 0x36
 8001630:	2b22      	cmp	r3, #34	@ 0x22
 8001632:	d871      	bhi.n	8001718 <CopeSensorData+0xfc>
 8001634:	a201      	add	r2, pc, #4	@ (adr r2, 800163c <CopeSensorData+0x20>)
 8001636:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800163a:	bf00      	nop
 800163c:	080016c9 	.word	0x080016c9
 8001640:	08001719 	.word	0x08001719
 8001644:	08001719 	.word	0x08001719
 8001648:	080016d9 	.word	0x080016d9
 800164c:	08001719 	.word	0x08001719
 8001650:	08001719 	.word	0x08001719
 8001654:	080016e9 	.word	0x080016e9
 8001658:	08001719 	.word	0x08001719
 800165c:	08001719 	.word	0x08001719
 8001660:	080016f9 	.word	0x080016f9
 8001664:	08001719 	.word	0x08001719
 8001668:	08001719 	.word	0x08001719
 800166c:	08001719 	.word	0x08001719
 8001670:	08001719 	.word	0x08001719
 8001674:	08001719 	.word	0x08001719
 8001678:	08001719 	.word	0x08001719
 800167c:	08001719 	.word	0x08001719
 8001680:	08001719 	.word	0x08001719
 8001684:	08001719 	.word	0x08001719
 8001688:	08001709 	.word	0x08001709
 800168c:	08001709 	.word	0x08001709
 8001690:	08001709 	.word	0x08001709
 8001694:	08001709 	.word	0x08001709
 8001698:	08001709 	.word	0x08001709
 800169c:	08001709 	.word	0x08001709
 80016a0:	08001709 	.word	0x08001709
 80016a4:	08001709 	.word	0x08001709
 80016a8:	08001719 	.word	0x08001719
 80016ac:	08001719 	.word	0x08001719
 80016b0:	08001719 	.word	0x08001719
 80016b4:	08001719 	.word	0x08001719
 80016b8:	08001709 	.word	0x08001709
 80016bc:	08001709 	.word	0x08001709
 80016c0:	08001709 	.word	0x08001709
 80016c4:	08001709 	.word	0x08001709
        {
            case AZ:
				s_cDataUpdate |= ACC_UPDATE;
 80016c8:	4b20      	ldr	r3, [pc, #128]	@ (800174c <CopeSensorData+0x130>)
 80016ca:	781b      	ldrb	r3, [r3, #0]
 80016cc:	f043 0301 	orr.w	r3, r3, #1
 80016d0:	b2da      	uxtb	r2, r3
 80016d2:	4b1e      	ldr	r3, [pc, #120]	@ (800174c <CopeSensorData+0x130>)
 80016d4:	701a      	strb	r2, [r3, #0]
            break;
 80016d6:	e027      	b.n	8001728 <CopeSensorData+0x10c>
            case GZ:
				s_cDataUpdate |= GYRO_UPDATE;
 80016d8:	4b1c      	ldr	r3, [pc, #112]	@ (800174c <CopeSensorData+0x130>)
 80016da:	781b      	ldrb	r3, [r3, #0]
 80016dc:	f043 0302 	orr.w	r3, r3, #2
 80016e0:	b2da      	uxtb	r2, r3
 80016e2:	4b1a      	ldr	r3, [pc, #104]	@ (800174c <CopeSensorData+0x130>)
 80016e4:	701a      	strb	r2, [r3, #0]
            break;
 80016e6:	e01f      	b.n	8001728 <CopeSensorData+0x10c>
            case HZ:
				s_cDataUpdate |= MAG_UPDATE;
 80016e8:	4b18      	ldr	r3, [pc, #96]	@ (800174c <CopeSensorData+0x130>)
 80016ea:	781b      	ldrb	r3, [r3, #0]
 80016ec:	f043 0308 	orr.w	r3, r3, #8
 80016f0:	b2da      	uxtb	r2, r3
 80016f2:	4b16      	ldr	r3, [pc, #88]	@ (800174c <CopeSensorData+0x130>)
 80016f4:	701a      	strb	r2, [r3, #0]
            break;
 80016f6:	e017      	b.n	8001728 <CopeSensorData+0x10c>
            case Yaw:
				s_cDataUpdate |= ANGLE_UPDATE;
 80016f8:	4b14      	ldr	r3, [pc, #80]	@ (800174c <CopeSensorData+0x130>)
 80016fa:	781b      	ldrb	r3, [r3, #0]
 80016fc:	f043 0304 	orr.w	r3, r3, #4
 8001700:	b2da      	uxtb	r2, r3
 8001702:	4b12      	ldr	r3, [pc, #72]	@ (800174c <CopeSensorData+0x130>)
 8001704:	701a      	strb	r2, [r3, #0]
            break;
 8001706:	e00f      	b.n	8001728 <CopeSensorData+0x10c>
            case GPSVH:
            case SVNUM:
            case PDOP:
            case HDOP:
            case VDOP:
        s_cDataUpdate |= GPS_UPDATE;
 8001708:	4b10      	ldr	r3, [pc, #64]	@ (800174c <CopeSensorData+0x130>)
 800170a:	781b      	ldrb	r3, [r3, #0]
 800170c:	f043 0310 	orr.w	r3, r3, #16
 8001710:	b2da      	uxtb	r2, r3
 8001712:	4b0e      	ldr	r3, [pc, #56]	@ (800174c <CopeSensorData+0x130>)
 8001714:	701a      	strb	r2, [r3, #0]
            break;
 8001716:	e007      	b.n	8001728 <CopeSensorData+0x10c>

            default:
				s_cDataUpdate |= READ_UPDATE;
 8001718:	4b0c      	ldr	r3, [pc, #48]	@ (800174c <CopeSensorData+0x130>)
 800171a:	781b      	ldrb	r3, [r3, #0]
 800171c:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001720:	b2da      	uxtb	r2, r3
 8001722:	4b0a      	ldr	r3, [pc, #40]	@ (800174c <CopeSensorData+0x130>)
 8001724:	701a      	strb	r2, [r3, #0]
			break;
 8001726:	bf00      	nop
        }
		uiReg++;
 8001728:	687b      	ldr	r3, [r7, #4]
 800172a:	3301      	adds	r3, #1
 800172c:	607b      	str	r3, [r7, #4]
    for(i = 0; i < uiRegNum; i++)
 800172e:	68fb      	ldr	r3, [r7, #12]
 8001730:	3301      	adds	r3, #1
 8001732:	60fb      	str	r3, [r7, #12]
 8001734:	68fb      	ldr	r3, [r7, #12]
 8001736:	683a      	ldr	r2, [r7, #0]
 8001738:	429a      	cmp	r2, r3
 800173a:	f63f af77 	bhi.w	800162c <CopeSensorData+0x10>
    }
}
 800173e:	bf00      	nop
 8001740:	bf00      	nop
 8001742:	3714      	adds	r7, #20
 8001744:	46bd      	mov	sp, r7
 8001746:	f85d 7b04 	ldr.w	r7, [sp], #4
 800174a:	4770      	bx	lr
 800174c:	24000458 	.word	0x24000458

08001750 <AutoScanSensor>:

static void AutoScanSensor(void)
{
 8001750:	b5b0      	push	{r4, r5, r7, lr}
 8001752:	b08c      	sub	sp, #48	@ 0x30
 8001754:	af00      	add	r7, sp, #0
	const uint32_t c_uiBaud[9] = {4800, 9600, 19200, 38400, 57600, 115200, 230400, 460800, 921600};
 8001756:	4b23      	ldr	r3, [pc, #140]	@ (80017e4 <AutoScanSensor+0x94>)
 8001758:	1d3c      	adds	r4, r7, #4
 800175a:	461d      	mov	r5, r3
 800175c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800175e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001760:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001762:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001764:	682b      	ldr	r3, [r5, #0]
 8001766:	6023      	str	r3, [r4, #0]
	int i, iRetry;
	
	for(i = 0; i < 9; i++)
 8001768:	2300      	movs	r3, #0
 800176a:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800176c:	e02e      	b.n	80017cc <AutoScanSensor+0x7c>
	{
        uiBuad = c_uiBaud[i];
 800176e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8001770:	009b      	lsls	r3, r3, #2
 8001772:	3330      	adds	r3, #48	@ 0x30
 8001774:	443b      	add	r3, r7
 8001776:	f853 3c2c 	ldr.w	r3, [r3, #-44]
 800177a:	4a1b      	ldr	r2, [pc, #108]	@ (80017e8 <AutoScanSensor+0x98>)
 800177c:	6013      	str	r3, [r2, #0]
        HAL_Delay(250); // Settling time
 800177e:	20fa      	movs	r0, #250	@ 0xfa
 8001780:	f001 fa36 	bl	8002bf0 <HAL_Delay>
		iRetry = 2;
 8001784:	2302      	movs	r3, #2
 8001786:	62bb      	str	r3, [r7, #40]	@ 0x28
		do
		{
			s_cDataUpdate = 0;
 8001788:	4b18      	ldr	r3, [pc, #96]	@ (80017ec <AutoScanSensor+0x9c>)
 800178a:	2200      	movs	r2, #0
 800178c:	701a      	strb	r2, [r3, #0]
			WitReadReg(AX, 3);
 800178e:	2103      	movs	r1, #3
 8001790:	2034      	movs	r0, #52	@ 0x34
 8001792:	f001 f843 	bl	800281c <WitReadReg>
			HAL_Delay(200);
 8001796:	20c8      	movs	r0, #200	@ 0xc8
 8001798:	f001 fa2a 	bl	8002bf0 <HAL_Delay>
			if(s_cDataUpdate != 0)
 800179c:	4b13      	ldr	r3, [pc, #76]	@ (80017ec <AutoScanSensor+0x9c>)
 800179e:	781b      	ldrb	r3, [r3, #0]
 80017a0:	2b00      	cmp	r3, #0
 80017a2:	d00a      	beq.n	80017ba <AutoScanSensor+0x6a>
			{
				printf("%lu baud find sensor\r\n\r\n", c_uiBaud[i]);
 80017a4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80017a6:	009b      	lsls	r3, r3, #2
 80017a8:	3330      	adds	r3, #48	@ 0x30
 80017aa:	443b      	add	r3, r7
 80017ac:	f853 3c2c 	ldr.w	r3, [r3, #-44]
 80017b0:	4619      	mov	r1, r3
 80017b2:	480f      	ldr	r0, [pc, #60]	@ (80017f0 <AutoScanSensor+0xa0>)
 80017b4:	f00a f810 	bl	800b7d8 <iprintf>
 80017b8:	e011      	b.n	80017de <AutoScanSensor+0x8e>
				return ;
			}
			iRetry--;
 80017ba:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80017bc:	3b01      	subs	r3, #1
 80017be:	62bb      	str	r3, [r7, #40]	@ 0x28
		}while(iRetry);		
 80017c0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80017c2:	2b00      	cmp	r3, #0
 80017c4:	d1e0      	bne.n	8001788 <AutoScanSensor+0x38>
	for(i = 0; i < 9; i++)
 80017c6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80017c8:	3301      	adds	r3, #1
 80017ca:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80017cc:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80017ce:	2b08      	cmp	r3, #8
 80017d0:	ddcd      	ble.n	800176e <AutoScanSensor+0x1e>
	}
	printf("can not find sensor\r\n");
 80017d2:	4808      	ldr	r0, [pc, #32]	@ (80017f4 <AutoScanSensor+0xa4>)
 80017d4:	f00a f870 	bl	800b8b8 <puts>
	printf("please check your connection\r\n");
 80017d8:	4807      	ldr	r0, [pc, #28]	@ (80017f8 <AutoScanSensor+0xa8>)
 80017da:	f00a f86d 	bl	800b8b8 <puts>
}
 80017de:	3730      	adds	r7, #48	@ 0x30
 80017e0:	46bd      	mov	sp, r7
 80017e2:	bdb0      	pop	{r4, r5, r7, pc}
 80017e4:	0800dc0c 	.word	0x0800dc0c
 80017e8:	24000000 	.word	0x24000000
 80017ec:	24000458 	.word	0x24000458
 80017f0:	0800dbb8 	.word	0x0800dbb8
 80017f4:	0800dbd4 	.word	0x0800dbd4
 80017f8:	0800dbec 	.word	0x0800dbec

080017fc <test_servo_sweep>:

void test_servo_sweep(ServoController *servo) {     //Just put it in today
 80017fc:	b580      	push	{r7, lr}
 80017fe:	b084      	sub	sp, #16
 8001800:	af00      	add	r7, sp, #0
 8001802:	6078      	str	r0, [r7, #4]
    for (uint16_t pulse = 500; pulse <= 2500; pulse += 10) {
 8001804:	f44f 73fa 	mov.w	r3, #500	@ 0x1f4
 8001808:	81fb      	strh	r3, [r7, #14]
 800180a:	e03c      	b.n	8001886 <test_servo_sweep+0x8a>
        __HAL_TIM_SET_COMPARE(servo->htim, servo->channel, pulse);
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	68db      	ldr	r3, [r3, #12]
 8001810:	2b00      	cmp	r3, #0
 8001812:	d105      	bne.n	8001820 <test_servo_sweep+0x24>
 8001814:	687b      	ldr	r3, [r7, #4]
 8001816:	689b      	ldr	r3, [r3, #8]
 8001818:	681b      	ldr	r3, [r3, #0]
 800181a:	89fa      	ldrh	r2, [r7, #14]
 800181c:	635a      	str	r2, [r3, #52]	@ 0x34
 800181e:	e02c      	b.n	800187a <test_servo_sweep+0x7e>
 8001820:	687b      	ldr	r3, [r7, #4]
 8001822:	68db      	ldr	r3, [r3, #12]
 8001824:	2b04      	cmp	r3, #4
 8001826:	d105      	bne.n	8001834 <test_servo_sweep+0x38>
 8001828:	687b      	ldr	r3, [r7, #4]
 800182a:	689b      	ldr	r3, [r3, #8]
 800182c:	681a      	ldr	r2, [r3, #0]
 800182e:	89fb      	ldrh	r3, [r7, #14]
 8001830:	6393      	str	r3, [r2, #56]	@ 0x38
 8001832:	e022      	b.n	800187a <test_servo_sweep+0x7e>
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	68db      	ldr	r3, [r3, #12]
 8001838:	2b08      	cmp	r3, #8
 800183a:	d105      	bne.n	8001848 <test_servo_sweep+0x4c>
 800183c:	687b      	ldr	r3, [r7, #4]
 800183e:	689b      	ldr	r3, [r3, #8]
 8001840:	681a      	ldr	r2, [r3, #0]
 8001842:	89fb      	ldrh	r3, [r7, #14]
 8001844:	63d3      	str	r3, [r2, #60]	@ 0x3c
 8001846:	e018      	b.n	800187a <test_servo_sweep+0x7e>
 8001848:	687b      	ldr	r3, [r7, #4]
 800184a:	68db      	ldr	r3, [r3, #12]
 800184c:	2b0c      	cmp	r3, #12
 800184e:	d105      	bne.n	800185c <test_servo_sweep+0x60>
 8001850:	687b      	ldr	r3, [r7, #4]
 8001852:	689b      	ldr	r3, [r3, #8]
 8001854:	681a      	ldr	r2, [r3, #0]
 8001856:	89fb      	ldrh	r3, [r7, #14]
 8001858:	6413      	str	r3, [r2, #64]	@ 0x40
 800185a:	e00e      	b.n	800187a <test_servo_sweep+0x7e>
 800185c:	687b      	ldr	r3, [r7, #4]
 800185e:	68db      	ldr	r3, [r3, #12]
 8001860:	2b10      	cmp	r3, #16
 8001862:	d105      	bne.n	8001870 <test_servo_sweep+0x74>
 8001864:	687b      	ldr	r3, [r7, #4]
 8001866:	689b      	ldr	r3, [r3, #8]
 8001868:	681a      	ldr	r2, [r3, #0]
 800186a:	89fb      	ldrh	r3, [r7, #14]
 800186c:	6593      	str	r3, [r2, #88]	@ 0x58
 800186e:	e004      	b.n	800187a <test_servo_sweep+0x7e>
 8001870:	687b      	ldr	r3, [r7, #4]
 8001872:	689b      	ldr	r3, [r3, #8]
 8001874:	681a      	ldr	r2, [r3, #0]
 8001876:	89fb      	ldrh	r3, [r7, #14]
 8001878:	65d3      	str	r3, [r2, #92]	@ 0x5c
        HAL_Delay(20);
 800187a:	2014      	movs	r0, #20
 800187c:	f001 f9b8 	bl	8002bf0 <HAL_Delay>
    for (uint16_t pulse = 500; pulse <= 2500; pulse += 10) {
 8001880:	89fb      	ldrh	r3, [r7, #14]
 8001882:	330a      	adds	r3, #10
 8001884:	81fb      	strh	r3, [r7, #14]
 8001886:	89fb      	ldrh	r3, [r7, #14]
 8001888:	f640 12c4 	movw	r2, #2500	@ 0x9c4
 800188c:	4293      	cmp	r3, r2
 800188e:	d9bd      	bls.n	800180c <test_servo_sweep+0x10>
    }
    for (uint16_t pulse = 2500; pulse >= 500; pulse -= 10) {
 8001890:	f640 13c4 	movw	r3, #2500	@ 0x9c4
 8001894:	81bb      	strh	r3, [r7, #12]
 8001896:	e03c      	b.n	8001912 <test_servo_sweep+0x116>
        __HAL_TIM_SET_COMPARE(servo->htim, servo->channel, pulse);
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	68db      	ldr	r3, [r3, #12]
 800189c:	2b00      	cmp	r3, #0
 800189e:	d105      	bne.n	80018ac <test_servo_sweep+0xb0>
 80018a0:	687b      	ldr	r3, [r7, #4]
 80018a2:	689b      	ldr	r3, [r3, #8]
 80018a4:	681b      	ldr	r3, [r3, #0]
 80018a6:	89ba      	ldrh	r2, [r7, #12]
 80018a8:	635a      	str	r2, [r3, #52]	@ 0x34
 80018aa:	e02c      	b.n	8001906 <test_servo_sweep+0x10a>
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	68db      	ldr	r3, [r3, #12]
 80018b0:	2b04      	cmp	r3, #4
 80018b2:	d105      	bne.n	80018c0 <test_servo_sweep+0xc4>
 80018b4:	687b      	ldr	r3, [r7, #4]
 80018b6:	689b      	ldr	r3, [r3, #8]
 80018b8:	681a      	ldr	r2, [r3, #0]
 80018ba:	89bb      	ldrh	r3, [r7, #12]
 80018bc:	6393      	str	r3, [r2, #56]	@ 0x38
 80018be:	e022      	b.n	8001906 <test_servo_sweep+0x10a>
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	68db      	ldr	r3, [r3, #12]
 80018c4:	2b08      	cmp	r3, #8
 80018c6:	d105      	bne.n	80018d4 <test_servo_sweep+0xd8>
 80018c8:	687b      	ldr	r3, [r7, #4]
 80018ca:	689b      	ldr	r3, [r3, #8]
 80018cc:	681a      	ldr	r2, [r3, #0]
 80018ce:	89bb      	ldrh	r3, [r7, #12]
 80018d0:	63d3      	str	r3, [r2, #60]	@ 0x3c
 80018d2:	e018      	b.n	8001906 <test_servo_sweep+0x10a>
 80018d4:	687b      	ldr	r3, [r7, #4]
 80018d6:	68db      	ldr	r3, [r3, #12]
 80018d8:	2b0c      	cmp	r3, #12
 80018da:	d105      	bne.n	80018e8 <test_servo_sweep+0xec>
 80018dc:	687b      	ldr	r3, [r7, #4]
 80018de:	689b      	ldr	r3, [r3, #8]
 80018e0:	681a      	ldr	r2, [r3, #0]
 80018e2:	89bb      	ldrh	r3, [r7, #12]
 80018e4:	6413      	str	r3, [r2, #64]	@ 0x40
 80018e6:	e00e      	b.n	8001906 <test_servo_sweep+0x10a>
 80018e8:	687b      	ldr	r3, [r7, #4]
 80018ea:	68db      	ldr	r3, [r3, #12]
 80018ec:	2b10      	cmp	r3, #16
 80018ee:	d105      	bne.n	80018fc <test_servo_sweep+0x100>
 80018f0:	687b      	ldr	r3, [r7, #4]
 80018f2:	689b      	ldr	r3, [r3, #8]
 80018f4:	681a      	ldr	r2, [r3, #0]
 80018f6:	89bb      	ldrh	r3, [r7, #12]
 80018f8:	6593      	str	r3, [r2, #88]	@ 0x58
 80018fa:	e004      	b.n	8001906 <test_servo_sweep+0x10a>
 80018fc:	687b      	ldr	r3, [r7, #4]
 80018fe:	689b      	ldr	r3, [r3, #8]
 8001900:	681a      	ldr	r2, [r3, #0]
 8001902:	89bb      	ldrh	r3, [r7, #12]
 8001904:	65d3      	str	r3, [r2, #92]	@ 0x5c
        HAL_Delay(20);
 8001906:	2014      	movs	r0, #20
 8001908:	f001 f972 	bl	8002bf0 <HAL_Delay>
    for (uint16_t pulse = 2500; pulse >= 500; pulse -= 10) {
 800190c:	89bb      	ldrh	r3, [r7, #12]
 800190e:	3b0a      	subs	r3, #10
 8001910:	81bb      	strh	r3, [r7, #12]
 8001912:	89bb      	ldrh	r3, [r7, #12]
 8001914:	f5b3 7ffa 	cmp.w	r3, #500	@ 0x1f4
 8001918:	d2be      	bcs.n	8001898 <test_servo_sweep+0x9c>
    }
}
 800191a:	bf00      	nop
 800191c:	bf00      	nop
 800191e:	3710      	adds	r7, #16
 8001920:	46bd      	mov	sp, r7
 8001922:	bd80      	pop	{r7, pc}

08001924 <MPU_Config>:
/* USER CODE END 4 */

 /* MPU Configuration */

void MPU_Config(void)
{
 8001924:	b580      	push	{r7, lr}
 8001926:	b084      	sub	sp, #16
 8001928:	af00      	add	r7, sp, #0
  MPU_Region_InitTypeDef MPU_InitStruct = {0};
 800192a:	463b      	mov	r3, r7
 800192c:	2200      	movs	r2, #0
 800192e:	601a      	str	r2, [r3, #0]
 8001930:	605a      	str	r2, [r3, #4]
 8001932:	609a      	str	r2, [r3, #8]
 8001934:	60da      	str	r2, [r3, #12]

  /* Disables the MPU */
  HAL_MPU_Disable();
 8001936:	f001 fa8f 	bl	8002e58 <HAL_MPU_Disable>

  /** Initializes and configures the Region and the memory to be protected
  */
  MPU_InitStruct.Enable = MPU_REGION_ENABLE;
 800193a:	2301      	movs	r3, #1
 800193c:	703b      	strb	r3, [r7, #0]
  MPU_InitStruct.Number = MPU_REGION_NUMBER0;
 800193e:	2300      	movs	r3, #0
 8001940:	707b      	strb	r3, [r7, #1]
  MPU_InitStruct.BaseAddress = 0x0;
 8001942:	2300      	movs	r3, #0
 8001944:	607b      	str	r3, [r7, #4]
  MPU_InitStruct.Size = MPU_REGION_SIZE_4GB;
 8001946:	231f      	movs	r3, #31
 8001948:	723b      	strb	r3, [r7, #8]
  MPU_InitStruct.SubRegionDisable = 0x87;
 800194a:	2387      	movs	r3, #135	@ 0x87
 800194c:	727b      	strb	r3, [r7, #9]
  MPU_InitStruct.TypeExtField = MPU_TEX_LEVEL0;
 800194e:	2300      	movs	r3, #0
 8001950:	72bb      	strb	r3, [r7, #10]
  MPU_InitStruct.AccessPermission = MPU_REGION_NO_ACCESS;
 8001952:	2300      	movs	r3, #0
 8001954:	72fb      	strb	r3, [r7, #11]
  MPU_InitStruct.DisableExec = MPU_INSTRUCTION_ACCESS_DISABLE;
 8001956:	2301      	movs	r3, #1
 8001958:	733b      	strb	r3, [r7, #12]
  MPU_InitStruct.IsShareable = MPU_ACCESS_SHAREABLE;
 800195a:	2301      	movs	r3, #1
 800195c:	737b      	strb	r3, [r7, #13]
  MPU_InitStruct.IsCacheable = MPU_ACCESS_NOT_CACHEABLE;
 800195e:	2300      	movs	r3, #0
 8001960:	73bb      	strb	r3, [r7, #14]
  MPU_InitStruct.IsBufferable = MPU_ACCESS_NOT_BUFFERABLE;
 8001962:	2300      	movs	r3, #0
 8001964:	73fb      	strb	r3, [r7, #15]

  HAL_MPU_ConfigRegion(&MPU_InitStruct);
 8001966:	463b      	mov	r3, r7
 8001968:	4618      	mov	r0, r3
 800196a:	f001 faad 	bl	8002ec8 <HAL_MPU_ConfigRegion>
  /* Enables the MPU */
  HAL_MPU_Enable(MPU_PRIVILEGED_DEFAULT);
 800196e:	2004      	movs	r0, #4
 8001970:	f001 fa8a 	bl	8002e88 <HAL_MPU_Enable>

}
 8001974:	bf00      	nop
 8001976:	3710      	adds	r7, #16
 8001978:	46bd      	mov	sp, r7
 800197a:	bd80      	pop	{r7, pc}

0800197c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800197c:	b480      	push	{r7}
 800197e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001980:	b672      	cpsid	i
}
 8001982:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001984:	bf00      	nop
 8001986:	e7fd      	b.n	8001984 <Error_Handler+0x8>

08001988 <ring_buffer_init>:
//ring_buffer.c
#include "ring_buffer.h"

void ring_buffer_init(ring_buffer *p_ring_buf){
 8001988:	b480      	push	{r7}
 800198a:	b083      	sub	sp, #12
 800198c:	af00      	add	r7, sp, #0
 800198e:	6078      	str	r0, [r7, #4]
    p_ring_buf->head = 0;
 8001990:	687b      	ldr	r3, [r7, #4]
 8001992:	2200      	movs	r2, #0
 8001994:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
    p_ring_buf->tail = 0;
 8001998:	687b      	ldr	r3, [r7, #4]
 800199a:	2200      	movs	r2, #0
 800199c:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
}
 80019a0:	bf00      	nop
 80019a2:	370c      	adds	r7, #12
 80019a4:	46bd      	mov	sp, r7
 80019a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019aa:	4770      	bx	lr

080019ac <ring_buffer_put>:

//add data to the ring buffer 
uint8_t ring_buffer_put(ring_buffer *p_ring_buf, uint8_t data){
 80019ac:	b480      	push	{r7}
 80019ae:	b085      	sub	sp, #20
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	6078      	str	r0, [r7, #4]
 80019b4:	460b      	mov	r3, r1
 80019b6:	70fb      	strb	r3, [r7, #3]
    uint16_t next = (p_ring_buf->head + 1 ) % RING_BUFFER_SIZE; // increments by one and becomes 0 when reached buffer size (should wraparound at max int val) 
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80019be:	b29b      	uxth	r3, r3
 80019c0:	3301      	adds	r3, #1
 80019c2:	425a      	negs	r2, r3
 80019c4:	b2db      	uxtb	r3, r3
 80019c6:	b2d2      	uxtb	r2, r2
 80019c8:	bf58      	it	pl
 80019ca:	4253      	negpl	r3, r2
 80019cc:	81fb      	strh	r3, [r7, #14]
    if (next == p_ring_buf->tail){
 80019ce:	687b      	ldr	r3, [r7, #4]
 80019d0:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 80019d4:	b29b      	uxth	r3, r3
 80019d6:	89fa      	ldrh	r2, [r7, #14]
 80019d8:	429a      	cmp	r2, r3
 80019da:	d101      	bne.n	80019e0 <ring_buffer_put+0x34>
        return 0; // when its full 
 80019dc:	2300      	movs	r3, #0
 80019de:	e00c      	b.n	80019fa <ring_buffer_put+0x4e>
    }
    p_ring_buf->buffer[p_ring_buf->head]= data;
 80019e0:	687b      	ldr	r3, [r7, #4]
 80019e2:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 80019e6:	b29b      	uxth	r3, r3
 80019e8:	4619      	mov	r1, r3
 80019ea:	687b      	ldr	r3, [r7, #4]
 80019ec:	78fa      	ldrb	r2, [r7, #3]
 80019ee:	545a      	strb	r2, [r3, r1]
    p_ring_buf->head = next;
 80019f0:	687b      	ldr	r3, [r7, #4]
 80019f2:	89fa      	ldrh	r2, [r7, #14]
 80019f4:	f8a3 2100 	strh.w	r2, [r3, #256]	@ 0x100
    return 1; // succcess
 80019f8:	2301      	movs	r3, #1
}
 80019fa:	4618      	mov	r0, r3
 80019fc:	3714      	adds	r7, #20
 80019fe:	46bd      	mov	sp, r7
 8001a00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a04:	4770      	bx	lr

08001a06 <ring_buffer_get>:

//get data from the ring buffer
uint8_t ring_buffer_get(ring_buffer *p_ring_buf, uint8_t *data){
 8001a06:	b480      	push	{r7}
 8001a08:	b083      	sub	sp, #12
 8001a0a:	af00      	add	r7, sp, #0
 8001a0c:	6078      	str	r0, [r7, #4]
 8001a0e:	6039      	str	r1, [r7, #0]
    if (p_ring_buf->head == p_ring_buf->tail) {
 8001a10:	687b      	ldr	r3, [r7, #4]
 8001a12:	f8b3 3100 	ldrh.w	r3, [r3, #256]	@ 0x100
 8001a16:	b29a      	uxth	r2, r3
 8001a18:	687b      	ldr	r3, [r7, #4]
 8001a1a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8001a1e:	b29b      	uxth	r3, r3
 8001a20:	429a      	cmp	r2, r3
 8001a22:	d101      	bne.n	8001a28 <ring_buffer_get+0x22>
        return 0; // Buffer empty
 8001a24:	2300      	movs	r3, #0
 8001a26:	e017      	b.n	8001a58 <ring_buffer_get+0x52>
    }
    *data = p_ring_buf->buffer[p_ring_buf->tail];
 8001a28:	687b      	ldr	r3, [r7, #4]
 8001a2a:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8001a2e:	b29b      	uxth	r3, r3
 8001a30:	461a      	mov	r2, r3
 8001a32:	687b      	ldr	r3, [r7, #4]
 8001a34:	5c9a      	ldrb	r2, [r3, r2]
 8001a36:	683b      	ldr	r3, [r7, #0]
 8001a38:	701a      	strb	r2, [r3, #0]
    p_ring_buf->tail = (p_ring_buf->tail+1)%RING_BUFFER_SIZE;
 8001a3a:	687b      	ldr	r3, [r7, #4]
 8001a3c:	f8b3 3102 	ldrh.w	r3, [r3, #258]	@ 0x102
 8001a40:	b29b      	uxth	r3, r3
 8001a42:	3301      	adds	r3, #1
 8001a44:	425a      	negs	r2, r3
 8001a46:	b2db      	uxtb	r3, r3
 8001a48:	b2d2      	uxtb	r2, r2
 8001a4a:	bf58      	it	pl
 8001a4c:	4253      	negpl	r3, r2
 8001a4e:	b29a      	uxth	r2, r3
 8001a50:	687b      	ldr	r3, [r7, #4]
 8001a52:	f8a3 2102 	strh.w	r2, [r3, #258]	@ 0x102
    return 1; // read
 8001a56:	2301      	movs	r3, #1
}
 8001a58:	4618      	mov	r0, r3
 8001a5a:	370c      	adds	r7, #12
 8001a5c:	46bd      	mov	sp, r7
 8001a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a62:	4770      	bx	lr

08001a64 <set_servo_angle>:
#include "servo_controls.h"
#include "stdint.h"



 void set_servo_angle(TIM_HandleTypeDef *htim, uint32_t channel, float angle){
 8001a64:	b480      	push	{r7}
 8001a66:	b089      	sub	sp, #36	@ 0x24
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	60f8      	str	r0, [r7, #12]
 8001a6c:	60b9      	str	r1, [r7, #8]
 8001a6e:	ed87 0a01 	vstr	s0, [r7, #4]
    /*set a servo angle by taking the channel angle and tim 
     the maths maybe works like 1.5 ms pulse width is neutral with .5 and 2.5 being either end
     so we have a 1us count so 500us/1ms -> 500 counts and 2500us -> 2500 counts*/
    if (angle < 0.0f) angle = 0.0f;
 8001a72:	edd7 7a01 	vldr	s15, [r7, #4]
 8001a76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001a7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a7e:	d502      	bpl.n	8001a86 <set_servo_angle+0x22>
 8001a80:	f04f 0300 	mov.w	r3, #0
 8001a84:	607b      	str	r3, [r7, #4]
    if (angle > 180.0f) angle = 180.0f; //limits
 8001a86:	edd7 7a01 	vldr	s15, [r7, #4]
 8001a8a:	ed9f 7a32 	vldr	s14, [pc, #200]	@ 8001b54 <set_servo_angle+0xf0>
 8001a8e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a96:	dd01      	ble.n	8001a9c <set_servo_angle+0x38>
 8001a98:	4b2f      	ldr	r3, [pc, #188]	@ (8001b58 <set_servo_angle+0xf4>)
 8001a9a:	607b      	str	r3, [r7, #4]
    
    float min_pulse = 500.0f;
 8001a9c:	4b2f      	ldr	r3, [pc, #188]	@ (8001b5c <set_servo_angle+0xf8>)
 8001a9e:	61fb      	str	r3, [r7, #28]
    float max_pulse = 2500.0f;
 8001aa0:	4b2f      	ldr	r3, [pc, #188]	@ (8001b60 <set_servo_angle+0xfc>)
 8001aa2:	61bb      	str	r3, [r7, #24]
     
    uint32_t pulse_width = min_pulse +(angle*((max_pulse - min_pulse)/180.0f));
 8001aa4:	ed97 7a06 	vldr	s14, [r7, #24]
 8001aa8:	edd7 7a07 	vldr	s15, [r7, #28]
 8001aac:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001ab0:	eddf 6a28 	vldr	s13, [pc, #160]	@ 8001b54 <set_servo_angle+0xf0>
 8001ab4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8001ab8:	edd7 7a01 	vldr	s15, [r7, #4]
 8001abc:	ee27 7a27 	vmul.f32	s14, s14, s15
 8001ac0:	edd7 7a07 	vldr	s15, [r7, #28]
 8001ac4:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001ac8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001acc:	ee17 3a90 	vmov	r3, s15
 8001ad0:	617b      	str	r3, [r7, #20]
    uint32_t rounded_pulse_width = (uint32_t)(pulse_width + 0.5f); 
 8001ad2:	697b      	ldr	r3, [r7, #20]
 8001ad4:	ee07 3a90 	vmov	s15, r3
 8001ad8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8001adc:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8001ae0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001ae4:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001ae8:	ee17 3a90 	vmov	r3, s15
 8001aec:	613b      	str	r3, [r7, #16]
    __HAL_TIM_SET_COMPARE(htim, channel, rounded_pulse_width);
 8001aee:	68bb      	ldr	r3, [r7, #8]
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	d104      	bne.n	8001afe <set_servo_angle+0x9a>
 8001af4:	68fb      	ldr	r3, [r7, #12]
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	693a      	ldr	r2, [r7, #16]
 8001afa:	635a      	str	r2, [r3, #52]	@ 0x34
  
  }
 8001afc:	e023      	b.n	8001b46 <set_servo_angle+0xe2>
    __HAL_TIM_SET_COMPARE(htim, channel, rounded_pulse_width);
 8001afe:	68bb      	ldr	r3, [r7, #8]
 8001b00:	2b04      	cmp	r3, #4
 8001b02:	d104      	bne.n	8001b0e <set_servo_angle+0xaa>
 8001b04:	68fb      	ldr	r3, [r7, #12]
 8001b06:	681a      	ldr	r2, [r3, #0]
 8001b08:	693b      	ldr	r3, [r7, #16]
 8001b0a:	6393      	str	r3, [r2, #56]	@ 0x38
  }
 8001b0c:	e01b      	b.n	8001b46 <set_servo_angle+0xe2>
    __HAL_TIM_SET_COMPARE(htim, channel, rounded_pulse_width);
 8001b0e:	68bb      	ldr	r3, [r7, #8]
 8001b10:	2b08      	cmp	r3, #8
 8001b12:	d104      	bne.n	8001b1e <set_servo_angle+0xba>
 8001b14:	68fb      	ldr	r3, [r7, #12]
 8001b16:	681a      	ldr	r2, [r3, #0]
 8001b18:	693b      	ldr	r3, [r7, #16]
 8001b1a:	63d3      	str	r3, [r2, #60]	@ 0x3c
  }
 8001b1c:	e013      	b.n	8001b46 <set_servo_angle+0xe2>
    __HAL_TIM_SET_COMPARE(htim, channel, rounded_pulse_width);
 8001b1e:	68bb      	ldr	r3, [r7, #8]
 8001b20:	2b0c      	cmp	r3, #12
 8001b22:	d104      	bne.n	8001b2e <set_servo_angle+0xca>
 8001b24:	68fb      	ldr	r3, [r7, #12]
 8001b26:	681a      	ldr	r2, [r3, #0]
 8001b28:	693b      	ldr	r3, [r7, #16]
 8001b2a:	6413      	str	r3, [r2, #64]	@ 0x40
  }
 8001b2c:	e00b      	b.n	8001b46 <set_servo_angle+0xe2>
    __HAL_TIM_SET_COMPARE(htim, channel, rounded_pulse_width);
 8001b2e:	68bb      	ldr	r3, [r7, #8]
 8001b30:	2b10      	cmp	r3, #16
 8001b32:	d104      	bne.n	8001b3e <set_servo_angle+0xda>
 8001b34:	68fb      	ldr	r3, [r7, #12]
 8001b36:	681a      	ldr	r2, [r3, #0]
 8001b38:	693b      	ldr	r3, [r7, #16]
 8001b3a:	6593      	str	r3, [r2, #88]	@ 0x58
  }
 8001b3c:	e003      	b.n	8001b46 <set_servo_angle+0xe2>
    __HAL_TIM_SET_COMPARE(htim, channel, rounded_pulse_width);
 8001b3e:	68fb      	ldr	r3, [r7, #12]
 8001b40:	681a      	ldr	r2, [r3, #0]
 8001b42:	693b      	ldr	r3, [r7, #16]
 8001b44:	65d3      	str	r3, [r2, #92]	@ 0x5c
  }
 8001b46:	bf00      	nop
 8001b48:	3724      	adds	r7, #36	@ 0x24
 8001b4a:	46bd      	mov	sp, r7
 8001b4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b50:	4770      	bx	lr
 8001b52:	bf00      	nop
 8001b54:	43340000 	.word	0x43340000
 8001b58:	43340000 	.word	0x43340000
 8001b5c:	43fa0000 	.word	0x43fa0000
 8001b60:	451c4000 	.word	0x451c4000
 8001b64:	00000000 	.word	0x00000000

08001b68 <copy_wind_pos>:
            current_pulse_width = __HAL_TIM_GET_COMPARE(htim, channel); 
        }
      
    }
  }
  void copy_wind_pos(ServoController *ctrl, float wind_angle){
 8001b68:	b580      	push	{r7, lr}
 8001b6a:	b084      	sub	sp, #16
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	6078      	str	r0, [r7, #4]
 8001b70:	ed87 0a00 	vstr	s0, [r7]
    float adj_angle=  fmod(wind_angle, 180.0f);  //all opposite angles are the same so 200 degrees = 20 degrees 
 8001b74:	edd7 7a00 	vldr	s15, [r7]
 8001b78:	eeb7 7ae7 	vcvt.f64.f32	d7, s15
 8001b7c:	ed9f 1b16 	vldr	d1, [pc, #88]	@ 8001bd8 <copy_wind_pos+0x70>
 8001b80:	eeb0 0b47 	vmov.f64	d0, d7
 8001b84:	f00b fdcc 	bl	800d720 <fmod>
 8001b88:	eeb0 7b40 	vmov.f64	d7, d0
 8001b8c:	eef7 7bc7 	vcvt.f32.f64	s15, d7
 8001b90:	edc7 7a03 	vstr	s15, [r7, #12]
    
    // explicit case for 180 degrees
    if(wind_angle >= 180.0f && adj_angle == 0.0f) {
 8001b94:	edd7 7a00 	vldr	s15, [r7]
 8001b98:	ed9f 7a11 	vldr	s14, [pc, #68]	@ 8001be0 <copy_wind_pos+0x78>
 8001b9c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001ba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001ba4:	db08      	blt.n	8001bb8 <copy_wind_pos+0x50>
 8001ba6:	edd7 7a03 	vldr	s15, [r7, #12]
 8001baa:	eef5 7a40 	vcmp.f32	s15, #0.0
 8001bae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001bb2:	d101      	bne.n	8001bb8 <copy_wind_pos+0x50>
      adj_angle = 180.0f;
 8001bb4:	4b0b      	ldr	r3, [pc, #44]	@ (8001be4 <copy_wind_pos+0x7c>)
 8001bb6:	60fb      	str	r3, [r7, #12]
    }
    
    set_servo_angle(ctrl->htim, ctrl->channel, adj_angle);
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	689a      	ldr	r2, [r3, #8]
 8001bbc:	687b      	ldr	r3, [r7, #4]
 8001bbe:	68db      	ldr	r3, [r3, #12]
 8001bc0:	ed97 0a03 	vldr	s0, [r7, #12]
 8001bc4:	4619      	mov	r1, r3
 8001bc6:	4610      	mov	r0, r2
 8001bc8:	f7ff ff4c 	bl	8001a64 <set_servo_angle>
  

    //set_servo_angle();
  }
 8001bcc:	bf00      	nop
 8001bce:	3710      	adds	r7, #16
 8001bd0:	46bd      	mov	sp, r7
 8001bd2:	bd80      	pop	{r7, pc}
 8001bd4:	f3af 8000 	nop.w
 8001bd8:	00000000 	.word	0x00000000
 8001bdc:	40668000 	.word	0x40668000
 8001be0:	43340000 	.word	0x43340000
 8001be4:	43340000 	.word	0x43340000

08001be8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                    /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001be8:	b480      	push	{r7}
 8001bea:	b083      	sub	sp, #12
 8001bec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001bee:	4b0a      	ldr	r3, [pc, #40]	@ (8001c18 <HAL_MspInit+0x30>)
 8001bf0:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8001bf4:	4a08      	ldr	r2, [pc, #32]	@ (8001c18 <HAL_MspInit+0x30>)
 8001bf6:	f043 0302 	orr.w	r3, r3, #2
 8001bfa:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8001bfe:	4b06      	ldr	r3, [pc, #24]	@ (8001c18 <HAL_MspInit+0x30>)
 8001c00:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8001c04:	f003 0302 	and.w	r3, r3, #2
 8001c08:	607b      	str	r3, [r7, #4]
 8001c0a:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001c0c:	bf00      	nop
 8001c0e:	370c      	adds	r7, #12
 8001c10:	46bd      	mov	sp, r7
 8001c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c16:	4770      	bx	lr
 8001c18:	58024400 	.word	0x58024400

08001c1c <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c1c:	b580      	push	{r7, lr}
 8001c1e:	b0b8      	sub	sp, #224	@ 0xe0
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c24:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8001c28:	2200      	movs	r2, #0
 8001c2a:	601a      	str	r2, [r3, #0]
 8001c2c:	605a      	str	r2, [r3, #4]
 8001c2e:	609a      	str	r2, [r3, #8]
 8001c30:	60da      	str	r2, [r3, #12]
 8001c32:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001c34:	f107 0310 	add.w	r3, r7, #16
 8001c38:	22b8      	movs	r2, #184	@ 0xb8
 8001c3a:	2100      	movs	r1, #0
 8001c3c:	4618      	mov	r0, r3
 8001c3e:	f009 fe43 	bl	800b8c8 <memset>
  if(hi2c->Instance==I2C1)
 8001c42:	687b      	ldr	r3, [r7, #4]
 8001c44:	681b      	ldr	r3, [r3, #0]
 8001c46:	4a27      	ldr	r2, [pc, #156]	@ (8001ce4 <HAL_I2C_MspInit+0xc8>)
 8001c48:	4293      	cmp	r3, r2
 8001c4a:	d146      	bne.n	8001cda <HAL_I2C_MspInit+0xbe>

    /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8001c4c:	f04f 0208 	mov.w	r2, #8
 8001c50:	f04f 0300 	mov.w	r3, #0
 8001c54:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.I2c123ClockSelection = RCC_I2C1235CLKSOURCE_D2PCLK1;
 8001c58:	2300      	movs	r3, #0
 8001c5a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001c5e:	f107 0310 	add.w	r3, r7, #16
 8001c62:	4618      	mov	r0, r3
 8001c64:	f003 fe5a 	bl	800591c <HAL_RCCEx_PeriphCLKConfig>
 8001c68:	4603      	mov	r3, r0
 8001c6a:	2b00      	cmp	r3, #0
 8001c6c:	d001      	beq.n	8001c72 <HAL_I2C_MspInit+0x56>
    {
      Error_Handler();
 8001c6e:	f7ff fe85 	bl	800197c <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c72:	4b1d      	ldr	r3, [pc, #116]	@ (8001ce8 <HAL_I2C_MspInit+0xcc>)
 8001c74:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001c78:	4a1b      	ldr	r2, [pc, #108]	@ (8001ce8 <HAL_I2C_MspInit+0xcc>)
 8001c7a:	f043 0302 	orr.w	r3, r3, #2
 8001c7e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001c82:	4b19      	ldr	r3, [pc, #100]	@ (8001ce8 <HAL_I2C_MspInit+0xcc>)
 8001c84:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001c88:	f003 0302 	and.w	r3, r3, #2
 8001c8c:	60fb      	str	r3, [r7, #12]
 8001c8e:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001c90:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001c94:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001c98:	2312      	movs	r3, #18
 8001c9a:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c9e:	2300      	movs	r3, #0
 8001ca0:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001caa:	2304      	movs	r3, #4
 8001cac:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cb0:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8001cb4:	4619      	mov	r1, r3
 8001cb6:	480d      	ldr	r0, [pc, #52]	@ (8001cec <HAL_I2C_MspInit+0xd0>)
 8001cb8:	f001 feaa 	bl	8003a10 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001cbc:	4b0a      	ldr	r3, [pc, #40]	@ (8001ce8 <HAL_I2C_MspInit+0xcc>)
 8001cbe:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001cc2:	4a09      	ldr	r2, [pc, #36]	@ (8001ce8 <HAL_I2C_MspInit+0xcc>)
 8001cc4:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001cc8:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001ccc:	4b06      	ldr	r3, [pc, #24]	@ (8001ce8 <HAL_I2C_MspInit+0xcc>)
 8001cce:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001cd2:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001cd6:	60bb      	str	r3, [r7, #8]
 8001cd8:	68bb      	ldr	r3, [r7, #8]

    /* USER CODE END I2C1_MspInit 1 */

  }

}
 8001cda:	bf00      	nop
 8001cdc:	37e0      	adds	r7, #224	@ 0xe0
 8001cde:	46bd      	mov	sp, r7
 8001ce0:	bd80      	pop	{r7, pc}
 8001ce2:	bf00      	nop
 8001ce4:	40005400 	.word	0x40005400
 8001ce8:	58024400 	.word	0x58024400
 8001cec:	58020400 	.word	0x58020400

08001cf0 <HAL_TIM_PWM_MspInit>:
  * This function configures the hardware resources used in this example
  * @param htim_pwm: TIM_PWM handle pointer
  * @retval None
  */
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8001cf0:	b480      	push	{r7}
 8001cf2:	b085      	sub	sp, #20
 8001cf4:	af00      	add	r7, sp, #0
 8001cf6:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	4a0b      	ldr	r2, [pc, #44]	@ (8001d2c <HAL_TIM_PWM_MspInit+0x3c>)
 8001cfe:	4293      	cmp	r3, r2
 8001d00:	d10e      	bne.n	8001d20 <HAL_TIM_PWM_MspInit+0x30>
  {
    /* USER CODE BEGIN TIM1_MspInit 0 */

    /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 8001d02:	4b0b      	ldr	r3, [pc, #44]	@ (8001d30 <HAL_TIM_PWM_MspInit+0x40>)
 8001d04:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001d08:	4a09      	ldr	r2, [pc, #36]	@ (8001d30 <HAL_TIM_PWM_MspInit+0x40>)
 8001d0a:	f043 0301 	orr.w	r3, r3, #1
 8001d0e:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001d12:	4b07      	ldr	r3, [pc, #28]	@ (8001d30 <HAL_TIM_PWM_MspInit+0x40>)
 8001d14:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001d18:	f003 0301 	and.w	r3, r3, #1
 8001d1c:	60fb      	str	r3, [r7, #12]
 8001d1e:	68fb      	ldr	r3, [r7, #12]

    /* USER CODE END TIM1_MspInit 1 */

  }

}
 8001d20:	bf00      	nop
 8001d22:	3714      	adds	r7, #20
 8001d24:	46bd      	mov	sp, r7
 8001d26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d2a:	4770      	bx	lr
 8001d2c:	40010000 	.word	0x40010000
 8001d30:	58024400 	.word	0x58024400

08001d34 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001d34:	b580      	push	{r7, lr}
 8001d36:	b088      	sub	sp, #32
 8001d38:	af00      	add	r7, sp, #0
 8001d3a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d3c:	f107 030c 	add.w	r3, r7, #12
 8001d40:	2200      	movs	r2, #0
 8001d42:	601a      	str	r2, [r3, #0]
 8001d44:	605a      	str	r2, [r3, #4]
 8001d46:	609a      	str	r2, [r3, #8]
 8001d48:	60da      	str	r2, [r3, #12]
 8001d4a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	681b      	ldr	r3, [r3, #0]
 8001d50:	4a13      	ldr	r2, [pc, #76]	@ (8001da0 <HAL_TIM_MspPostInit+0x6c>)
 8001d52:	4293      	cmp	r3, r2
 8001d54:	d11f      	bne.n	8001d96 <HAL_TIM_MspPostInit+0x62>
  {
    /* USER CODE BEGIN TIM1_MspPostInit 0 */

    /* USER CODE END TIM1_MspPostInit 0 */

    __HAL_RCC_GPIOE_CLK_ENABLE();
 8001d56:	4b13      	ldr	r3, [pc, #76]	@ (8001da4 <HAL_TIM_MspPostInit+0x70>)
 8001d58:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001d5c:	4a11      	ldr	r2, [pc, #68]	@ (8001da4 <HAL_TIM_MspPostInit+0x70>)
 8001d5e:	f043 0310 	orr.w	r3, r3, #16
 8001d62:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001d66:	4b0f      	ldr	r3, [pc, #60]	@ (8001da4 <HAL_TIM_MspPostInit+0x70>)
 8001d68:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001d6c:	f003 0310 	and.w	r3, r3, #16
 8001d70:	60bb      	str	r3, [r7, #8]
 8001d72:	68bb      	ldr	r3, [r7, #8]
    /**TIM1 GPIO Configuration
    PE9     ------> TIM1_CH1
    PE11     ------> TIM1_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_11;
 8001d74:	f44f 6320 	mov.w	r3, #2560	@ 0xa00
 8001d78:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d7a:	2302      	movs	r3, #2
 8001d7c:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d7e:	2300      	movs	r3, #0
 8001d80:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d82:	2300      	movs	r3, #0
 8001d84:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8001d86:	2301      	movs	r3, #1
 8001d88:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001d8a:	f107 030c 	add.w	r3, r7, #12
 8001d8e:	4619      	mov	r1, r3
 8001d90:	4805      	ldr	r0, [pc, #20]	@ (8001da8 <HAL_TIM_MspPostInit+0x74>)
 8001d92:	f001 fe3d 	bl	8003a10 <HAL_GPIO_Init>
    /* USER CODE BEGIN TIM1_MspPostInit 1 */

    /* USER CODE END TIM1_MspPostInit 1 */
  }

}
 8001d96:	bf00      	nop
 8001d98:	3720      	adds	r7, #32
 8001d9a:	46bd      	mov	sp, r7
 8001d9c:	bd80      	pop	{r7, pc}
 8001d9e:	bf00      	nop
 8001da0:	40010000 	.word	0x40010000
 8001da4:	58024400 	.word	0x58024400
 8001da8:	58021000 	.word	0x58021000

08001dac <HAL_UART_MspInit>:
  * This function configures the hardware resources used in this example
  * @param huart: UART handle pointer
  * @retval None
  */
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001dac:	b580      	push	{r7, lr}
 8001dae:	b0bc      	sub	sp, #240	@ 0xf0
 8001db0:	af00      	add	r7, sp, #0
 8001db2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001db4:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001db8:	2200      	movs	r2, #0
 8001dba:	601a      	str	r2, [r3, #0]
 8001dbc:	605a      	str	r2, [r3, #4]
 8001dbe:	609a      	str	r2, [r3, #8]
 8001dc0:	60da      	str	r2, [r3, #12]
 8001dc2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001dc4:	f107 0320 	add.w	r3, r7, #32
 8001dc8:	22b8      	movs	r2, #184	@ 0xb8
 8001dca:	2100      	movs	r1, #0
 8001dcc:	4618      	mov	r0, r3
 8001dce:	f009 fd7b 	bl	800b8c8 <memset>
  if(huart->Instance==USART1)
 8001dd2:	687b      	ldr	r3, [r7, #4]
 8001dd4:	681b      	ldr	r3, [r3, #0]
 8001dd6:	4a7f      	ldr	r2, [pc, #508]	@ (8001fd4 <HAL_UART_MspInit+0x228>)
 8001dd8:	4293      	cmp	r3, r2
 8001dda:	d14f      	bne.n	8001e7c <HAL_UART_MspInit+0xd0>

    /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8001ddc:	f04f 0201 	mov.w	r2, #1
 8001de0:	f04f 0300 	mov.w	r3, #0
 8001de4:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16910CLKSOURCE_D2PCLK2;
 8001de8:	2300      	movs	r3, #0
 8001dea:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001dee:	f107 0320 	add.w	r3, r7, #32
 8001df2:	4618      	mov	r0, r3
 8001df4:	f003 fd92 	bl	800591c <HAL_RCCEx_PeriphCLKConfig>
 8001df8:	4603      	mov	r3, r0
 8001dfa:	2b00      	cmp	r3, #0
 8001dfc:	d001      	beq.n	8001e02 <HAL_UART_MspInit+0x56>
    {
      Error_Handler();
 8001dfe:	f7ff fdbd 	bl	800197c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001e02:	4b75      	ldr	r3, [pc, #468]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001e04:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001e08:	4a73      	ldr	r2, [pc, #460]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001e0a:	f043 0310 	orr.w	r3, r3, #16
 8001e0e:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001e12:	4b71      	ldr	r3, [pc, #452]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001e14:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001e18:	f003 0310 	and.w	r3, r3, #16
 8001e1c:	61fb      	str	r3, [r7, #28]
 8001e1e:	69fb      	ldr	r3, [r7, #28]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e20:	4b6d      	ldr	r3, [pc, #436]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001e22:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001e26:	4a6c      	ldr	r2, [pc, #432]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001e28:	f043 0301 	orr.w	r3, r3, #1
 8001e2c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001e30:	4b69      	ldr	r3, [pc, #420]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001e32:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001e36:	f003 0301 	and.w	r3, r3, #1
 8001e3a:	61bb      	str	r3, [r7, #24]
 8001e3c:	69bb      	ldr	r3, [r7, #24]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8001e3e:	f44f 63c0 	mov.w	r3, #1536	@ 0x600
 8001e42:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e46:	2302      	movs	r3, #2
 8001e48:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e4c:	2300      	movs	r3, #0
 8001e4e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001e52:	2300      	movs	r3, #0
 8001e54:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001e58:	2307      	movs	r3, #7
 8001e5a:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e5e:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001e62:	4619      	mov	r1, r3
 8001e64:	485d      	ldr	r0, [pc, #372]	@ (8001fdc <HAL_UART_MspInit+0x230>)
 8001e66:	f001 fdd3 	bl	8003a10 <HAL_GPIO_Init>

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8001e6a:	2200      	movs	r2, #0
 8001e6c:	2100      	movs	r1, #0
 8001e6e:	2025      	movs	r0, #37	@ 0x25
 8001e70:	f000 ffbd 	bl	8002dee <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8001e74:	2025      	movs	r0, #37	@ 0x25
 8001e76:	f000 ffd4 	bl	8002e22 <HAL_NVIC_EnableIRQ>
    /* USER CODE BEGIN USART3_MspInit 1 */

    /* USER CODE END USART3_MspInit 1 */
  }

}
 8001e7a:	e0a7      	b.n	8001fcc <HAL_UART_MspInit+0x220>
  else if(huart->Instance==USART2)
 8001e7c:	687b      	ldr	r3, [r7, #4]
 8001e7e:	681b      	ldr	r3, [r3, #0]
 8001e80:	4a57      	ldr	r2, [pc, #348]	@ (8001fe0 <HAL_UART_MspInit+0x234>)
 8001e82:	4293      	cmp	r3, r2
 8001e84:	d14e      	bne.n	8001f24 <HAL_UART_MspInit+0x178>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8001e86:	f04f 0202 	mov.w	r2, #2
 8001e8a:	f04f 0300 	mov.w	r3, #0
 8001e8e:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 8001e92:	2300      	movs	r3, #0
 8001e94:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001e98:	f107 0320 	add.w	r3, r7, #32
 8001e9c:	4618      	mov	r0, r3
 8001e9e:	f003 fd3d 	bl	800591c <HAL_RCCEx_PeriphCLKConfig>
 8001ea2:	4603      	mov	r3, r0
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d001      	beq.n	8001eac <HAL_UART_MspInit+0x100>
      Error_Handler();
 8001ea8:	f7ff fd68 	bl	800197c <Error_Handler>
    __HAL_RCC_USART2_CLK_ENABLE();
 8001eac:	4b4a      	ldr	r3, [pc, #296]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001eae:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001eb2:	4a49      	ldr	r2, [pc, #292]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001eb4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8001eb8:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001ebc:	4b46      	ldr	r3, [pc, #280]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001ebe:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001ec2:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8001ec6:	617b      	str	r3, [r7, #20]
 8001ec8:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001eca:	4b43      	ldr	r3, [pc, #268]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001ecc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001ed0:	4a41      	ldr	r2, [pc, #260]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001ed2:	f043 0308 	orr.w	r3, r3, #8
 8001ed6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001eda:	4b3f      	ldr	r3, [pc, #252]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001edc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001ee0:	f003 0308 	and.w	r3, r3, #8
 8001ee4:	613b      	str	r3, [r7, #16]
 8001ee6:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001ee8:	2360      	movs	r3, #96	@ 0x60
 8001eea:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eee:	2302      	movs	r3, #2
 8001ef0:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ef4:	2300      	movs	r3, #0
 8001ef6:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001efa:	2300      	movs	r3, #0
 8001efc:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001f00:	2307      	movs	r3, #7
 8001f02:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001f06:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001f0a:	4619      	mov	r1, r3
 8001f0c:	4835      	ldr	r0, [pc, #212]	@ (8001fe4 <HAL_UART_MspInit+0x238>)
 8001f0e:	f001 fd7f 	bl	8003a10 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART2_IRQn, 0, 0);
 8001f12:	2200      	movs	r2, #0
 8001f14:	2100      	movs	r1, #0
 8001f16:	2026      	movs	r0, #38	@ 0x26
 8001f18:	f000 ff69 	bl	8002dee <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART2_IRQn);
 8001f1c:	2026      	movs	r0, #38	@ 0x26
 8001f1e:	f000 ff80 	bl	8002e22 <HAL_NVIC_EnableIRQ>
}
 8001f22:	e053      	b.n	8001fcc <HAL_UART_MspInit+0x220>
  else if(huart->Instance==USART3)
 8001f24:	687b      	ldr	r3, [r7, #4]
 8001f26:	681b      	ldr	r3, [r3, #0]
 8001f28:	4a2f      	ldr	r2, [pc, #188]	@ (8001fe8 <HAL_UART_MspInit+0x23c>)
 8001f2a:	4293      	cmp	r3, r2
 8001f2c:	d14e      	bne.n	8001fcc <HAL_UART_MspInit+0x220>
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART3;
 8001f2e:	f04f 0202 	mov.w	r2, #2
 8001f32:	f04f 0300 	mov.w	r3, #0
 8001f36:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.Usart234578ClockSelection = RCC_USART234578CLKSOURCE_D2PCLK1;
 8001f3a:	2300      	movs	r3, #0
 8001f3c:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001f40:	f107 0320 	add.w	r3, r7, #32
 8001f44:	4618      	mov	r0, r3
 8001f46:	f003 fce9 	bl	800591c <HAL_RCCEx_PeriphCLKConfig>
 8001f4a:	4603      	mov	r3, r0
 8001f4c:	2b00      	cmp	r3, #0
 8001f4e:	d001      	beq.n	8001f54 <HAL_UART_MspInit+0x1a8>
      Error_Handler();
 8001f50:	f7ff fd14 	bl	800197c <Error_Handler>
    __HAL_RCC_USART3_CLK_ENABLE();
 8001f54:	4b20      	ldr	r3, [pc, #128]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001f56:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001f5a:	4a1f      	ldr	r2, [pc, #124]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001f5c:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8001f60:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001f64:	4b1c      	ldr	r3, [pc, #112]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001f66:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001f6a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8001f6e:	60fb      	str	r3, [r7, #12]
 8001f70:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f72:	4b19      	ldr	r3, [pc, #100]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001f74:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001f78:	4a17      	ldr	r2, [pc, #92]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001f7a:	f043 0308 	orr.w	r3, r3, #8
 8001f7e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001f82:	4b15      	ldr	r3, [pc, #84]	@ (8001fd8 <HAL_UART_MspInit+0x22c>)
 8001f84:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001f88:	f003 0308 	and.w	r3, r3, #8
 8001f8c:	60bb      	str	r3, [r7, #8]
 8001f8e:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 8001f90:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8001f94:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f98:	2302      	movs	r3, #2
 8001f9a:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001fa4:	2300      	movs	r3, #0
 8001fa6:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8001faa:	2307      	movs	r3, #7
 8001fac:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fb0:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001fb4:	4619      	mov	r1, r3
 8001fb6:	480b      	ldr	r0, [pc, #44]	@ (8001fe4 <HAL_UART_MspInit+0x238>)
 8001fb8:	f001 fd2a 	bl	8003a10 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 8001fbc:	2200      	movs	r2, #0
 8001fbe:	2100      	movs	r1, #0
 8001fc0:	2027      	movs	r0, #39	@ 0x27
 8001fc2:	f000 ff14 	bl	8002dee <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8001fc6:	2027      	movs	r0, #39	@ 0x27
 8001fc8:	f000 ff2b 	bl	8002e22 <HAL_NVIC_EnableIRQ>
}
 8001fcc:	bf00      	nop
 8001fce:	37f0      	adds	r7, #240	@ 0xf0
 8001fd0:	46bd      	mov	sp, r7
 8001fd2:	bd80      	pop	{r7, pc}
 8001fd4:	40011000 	.word	0x40011000
 8001fd8:	58024400 	.word	0x58024400
 8001fdc:	58020000 	.word	0x58020000
 8001fe0:	40004400 	.word	0x40004400
 8001fe4:	58020c00 	.word	0x58020c00
 8001fe8:	40004800 	.word	0x40004800

08001fec <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001fec:	b480      	push	{r7}
 8001fee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001ff0:	bf00      	nop
 8001ff2:	e7fd      	b.n	8001ff0 <NMI_Handler+0x4>

08001ff4 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001ff4:	b480      	push	{r7}
 8001ff6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001ff8:	bf00      	nop
 8001ffa:	e7fd      	b.n	8001ff8 <HardFault_Handler+0x4>

08001ffc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001ffc:	b480      	push	{r7}
 8001ffe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002000:	bf00      	nop
 8002002:	e7fd      	b.n	8002000 <MemManage_Handler+0x4>

08002004 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002004:	b480      	push	{r7}
 8002006:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002008:	bf00      	nop
 800200a:	e7fd      	b.n	8002008 <BusFault_Handler+0x4>

0800200c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800200c:	b480      	push	{r7}
 800200e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002010:	bf00      	nop
 8002012:	e7fd      	b.n	8002010 <UsageFault_Handler+0x4>

08002014 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002014:	b480      	push	{r7}
 8002016:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002018:	bf00      	nop
 800201a:	46bd      	mov	sp, r7
 800201c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002020:	4770      	bx	lr

08002022 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8002022:	b480      	push	{r7}
 8002024:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002026:	bf00      	nop
 8002028:	46bd      	mov	sp, r7
 800202a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800202e:	4770      	bx	lr

08002030 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002030:	b480      	push	{r7}
 8002032:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002034:	bf00      	nop
 8002036:	46bd      	mov	sp, r7
 8002038:	f85d 7b04 	ldr.w	r7, [sp], #4
 800203c:	4770      	bx	lr

0800203e <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800203e:	b580      	push	{r7, lr}
 8002040:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002042:	f000 fdb5 	bl	8002bb0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002046:	bf00      	nop
 8002048:	bd80      	pop	{r7, pc}
	...

0800204c <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 800204c:	b580      	push	{r7, lr}
 800204e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 8002050:	4802      	ldr	r0, [pc, #8]	@ (800205c <USART1_IRQHandler+0x10>)
 8002052:	f006 faa7 	bl	80085a4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 8002056:	bf00      	nop
 8002058:	bd80      	pop	{r7, pc}
 800205a:	bf00      	nop
 800205c:	2400029c 	.word	0x2400029c

08002060 <USART2_IRQHandler>:

/**
  * @brief This function handles USART2 global interrupt.
  */
void USART2_IRQHandler(void)
{
 8002060:	b580      	push	{r7, lr}
 8002062:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART2_IRQn 0 */

  /* USER CODE END USART2_IRQn 0 */
  HAL_UART_IRQHandler(&huart2);
 8002064:	4802      	ldr	r0, [pc, #8]	@ (8002070 <USART2_IRQHandler+0x10>)
 8002066:	f006 fa9d 	bl	80085a4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART2_IRQn 1 */

  /* USER CODE END USART2_IRQn 1 */
}
 800206a:	bf00      	nop
 800206c:	bd80      	pop	{r7, pc}
 800206e:	bf00      	nop
 8002070:	24000330 	.word	0x24000330

08002074 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 8002074:	b580      	push	{r7, lr}
 8002076:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 8002078:	4802      	ldr	r0, [pc, #8]	@ (8002084 <USART3_IRQHandler+0x10>)
 800207a:	f006 fa93 	bl	80085a4 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 800207e:	bf00      	nop
 8002080:	bd80      	pop	{r7, pc}
 8002082:	bf00      	nop
 8002084:	240003c4 	.word	0x240003c4

08002088 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002088:	b480      	push	{r7}
 800208a:	af00      	add	r7, sp, #0
  return 1;
 800208c:	2301      	movs	r3, #1
}
 800208e:	4618      	mov	r0, r3
 8002090:	46bd      	mov	sp, r7
 8002092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002096:	4770      	bx	lr

08002098 <_kill>:

int _kill(int pid, int sig)
{
 8002098:	b580      	push	{r7, lr}
 800209a:	b082      	sub	sp, #8
 800209c:	af00      	add	r7, sp, #0
 800209e:	6078      	str	r0, [r7, #4]
 80020a0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80020a2:	f009 fc19 	bl	800b8d8 <__errno>
 80020a6:	4603      	mov	r3, r0
 80020a8:	2216      	movs	r2, #22
 80020aa:	601a      	str	r2, [r3, #0]
  return -1;
 80020ac:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80020b0:	4618      	mov	r0, r3
 80020b2:	3708      	adds	r7, #8
 80020b4:	46bd      	mov	sp, r7
 80020b6:	bd80      	pop	{r7, pc}

080020b8 <_exit>:

void _exit (int status)
{
 80020b8:	b580      	push	{r7, lr}
 80020ba:	b082      	sub	sp, #8
 80020bc:	af00      	add	r7, sp, #0
 80020be:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80020c0:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80020c4:	6878      	ldr	r0, [r7, #4]
 80020c6:	f7ff ffe7 	bl	8002098 <_kill>
  while (1) {}    /* Make sure we hang here */
 80020ca:	bf00      	nop
 80020cc:	e7fd      	b.n	80020ca <_exit+0x12>

080020ce <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80020ce:	b580      	push	{r7, lr}
 80020d0:	b086      	sub	sp, #24
 80020d2:	af00      	add	r7, sp, #0
 80020d4:	60f8      	str	r0, [r7, #12]
 80020d6:	60b9      	str	r1, [r7, #8]
 80020d8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80020da:	2300      	movs	r3, #0
 80020dc:	617b      	str	r3, [r7, #20]
 80020de:	e00a      	b.n	80020f6 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80020e0:	f3af 8000 	nop.w
 80020e4:	4601      	mov	r1, r0
 80020e6:	68bb      	ldr	r3, [r7, #8]
 80020e8:	1c5a      	adds	r2, r3, #1
 80020ea:	60ba      	str	r2, [r7, #8]
 80020ec:	b2ca      	uxtb	r2, r1
 80020ee:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80020f0:	697b      	ldr	r3, [r7, #20]
 80020f2:	3301      	adds	r3, #1
 80020f4:	617b      	str	r3, [r7, #20]
 80020f6:	697a      	ldr	r2, [r7, #20]
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	429a      	cmp	r2, r3
 80020fc:	dbf0      	blt.n	80020e0 <_read+0x12>
  }

  return len;
 80020fe:	687b      	ldr	r3, [r7, #4]
}
 8002100:	4618      	mov	r0, r3
 8002102:	3718      	adds	r7, #24
 8002104:	46bd      	mov	sp, r7
 8002106:	bd80      	pop	{r7, pc}

08002108 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002108:	b580      	push	{r7, lr}
 800210a:	b086      	sub	sp, #24
 800210c:	af00      	add	r7, sp, #0
 800210e:	60f8      	str	r0, [r7, #12]
 8002110:	60b9      	str	r1, [r7, #8]
 8002112:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002114:	2300      	movs	r3, #0
 8002116:	617b      	str	r3, [r7, #20]
 8002118:	e009      	b.n	800212e <_write+0x26>
  {
    __io_putchar(*ptr++);
 800211a:	68bb      	ldr	r3, [r7, #8]
 800211c:	1c5a      	adds	r2, r3, #1
 800211e:	60ba      	str	r2, [r7, #8]
 8002120:	781b      	ldrb	r3, [r3, #0]
 8002122:	4618      	mov	r0, r3
 8002124:	f7fe fba0 	bl	8000868 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002128:	697b      	ldr	r3, [r7, #20]
 800212a:	3301      	adds	r3, #1
 800212c:	617b      	str	r3, [r7, #20]
 800212e:	697a      	ldr	r2, [r7, #20]
 8002130:	687b      	ldr	r3, [r7, #4]
 8002132:	429a      	cmp	r2, r3
 8002134:	dbf1      	blt.n	800211a <_write+0x12>
  }
  return len;
 8002136:	687b      	ldr	r3, [r7, #4]
}
 8002138:	4618      	mov	r0, r3
 800213a:	3718      	adds	r7, #24
 800213c:	46bd      	mov	sp, r7
 800213e:	bd80      	pop	{r7, pc}

08002140 <_close>:

int _close(int file)
{
 8002140:	b480      	push	{r7}
 8002142:	b083      	sub	sp, #12
 8002144:	af00      	add	r7, sp, #0
 8002146:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002148:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 800214c:	4618      	mov	r0, r3
 800214e:	370c      	adds	r7, #12
 8002150:	46bd      	mov	sp, r7
 8002152:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002156:	4770      	bx	lr

08002158 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002158:	b480      	push	{r7}
 800215a:	b083      	sub	sp, #12
 800215c:	af00      	add	r7, sp, #0
 800215e:	6078      	str	r0, [r7, #4]
 8002160:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8002162:	683b      	ldr	r3, [r7, #0]
 8002164:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002168:	605a      	str	r2, [r3, #4]
  return 0;
 800216a:	2300      	movs	r3, #0
}
 800216c:	4618      	mov	r0, r3
 800216e:	370c      	adds	r7, #12
 8002170:	46bd      	mov	sp, r7
 8002172:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002176:	4770      	bx	lr

08002178 <_isatty>:

int _isatty(int file)
{
 8002178:	b480      	push	{r7}
 800217a:	b083      	sub	sp, #12
 800217c:	af00      	add	r7, sp, #0
 800217e:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002180:	2301      	movs	r3, #1
}
 8002182:	4618      	mov	r0, r3
 8002184:	370c      	adds	r7, #12
 8002186:	46bd      	mov	sp, r7
 8002188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800218c:	4770      	bx	lr

0800218e <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800218e:	b480      	push	{r7}
 8002190:	b085      	sub	sp, #20
 8002192:	af00      	add	r7, sp, #0
 8002194:	60f8      	str	r0, [r7, #12]
 8002196:	60b9      	str	r1, [r7, #8]
 8002198:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800219a:	2300      	movs	r3, #0
}
 800219c:	4618      	mov	r0, r3
 800219e:	3714      	adds	r7, #20
 80021a0:	46bd      	mov	sp, r7
 80021a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021a6:	4770      	bx	lr

080021a8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80021a8:	b580      	push	{r7, lr}
 80021aa:	b086      	sub	sp, #24
 80021ac:	af00      	add	r7, sp, #0
 80021ae:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80021b0:	4a14      	ldr	r2, [pc, #80]	@ (8002204 <_sbrk+0x5c>)
 80021b2:	4b15      	ldr	r3, [pc, #84]	@ (8002208 <_sbrk+0x60>)
 80021b4:	1ad3      	subs	r3, r2, r3
 80021b6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80021b8:	697b      	ldr	r3, [r7, #20]
 80021ba:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80021bc:	4b13      	ldr	r3, [pc, #76]	@ (800220c <_sbrk+0x64>)
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	2b00      	cmp	r3, #0
 80021c2:	d102      	bne.n	80021ca <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80021c4:	4b11      	ldr	r3, [pc, #68]	@ (800220c <_sbrk+0x64>)
 80021c6:	4a12      	ldr	r2, [pc, #72]	@ (8002210 <_sbrk+0x68>)
 80021c8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80021ca:	4b10      	ldr	r3, [pc, #64]	@ (800220c <_sbrk+0x64>)
 80021cc:	681a      	ldr	r2, [r3, #0]
 80021ce:	687b      	ldr	r3, [r7, #4]
 80021d0:	4413      	add	r3, r2
 80021d2:	693a      	ldr	r2, [r7, #16]
 80021d4:	429a      	cmp	r2, r3
 80021d6:	d207      	bcs.n	80021e8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80021d8:	f009 fb7e 	bl	800b8d8 <__errno>
 80021dc:	4603      	mov	r3, r0
 80021de:	220c      	movs	r2, #12
 80021e0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80021e2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80021e6:	e009      	b.n	80021fc <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80021e8:	4b08      	ldr	r3, [pc, #32]	@ (800220c <_sbrk+0x64>)
 80021ea:	681b      	ldr	r3, [r3, #0]
 80021ec:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80021ee:	4b07      	ldr	r3, [pc, #28]	@ (800220c <_sbrk+0x64>)
 80021f0:	681a      	ldr	r2, [r3, #0]
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	4413      	add	r3, r2
 80021f6:	4a05      	ldr	r2, [pc, #20]	@ (800220c <_sbrk+0x64>)
 80021f8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80021fa:	68fb      	ldr	r3, [r7, #12]
}
 80021fc:	4618      	mov	r0, r3
 80021fe:	3718      	adds	r7, #24
 8002200:	46bd      	mov	sp, r7
 8002202:	bd80      	pop	{r7, pc}
 8002204:	24050000 	.word	0x24050000
 8002208:	00000400 	.word	0x00000400
 800220c:	240006a8 	.word	0x240006a8
 8002210:	24000a38 	.word	0x24000a38

08002214 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8002214:	b480      	push	{r7}
 8002216:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8002218:	4b3e      	ldr	r3, [pc, #248]	@ (8002314 <SystemInit+0x100>)
 800221a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800221e:	4a3d      	ldr	r2, [pc, #244]	@ (8002314 <SystemInit+0x100>)
 8002220:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002224:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8002228:	4b3b      	ldr	r3, [pc, #236]	@ (8002318 <SystemInit+0x104>)
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	f003 030f 	and.w	r3, r3, #15
 8002230:	2b06      	cmp	r3, #6
 8002232:	d807      	bhi.n	8002244 <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8002234:	4b38      	ldr	r3, [pc, #224]	@ (8002318 <SystemInit+0x104>)
 8002236:	681b      	ldr	r3, [r3, #0]
 8002238:	f023 030f 	bic.w	r3, r3, #15
 800223c:	4a36      	ldr	r2, [pc, #216]	@ (8002318 <SystemInit+0x104>)
 800223e:	f043 0307 	orr.w	r3, r3, #7
 8002242:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 8002244:	4b35      	ldr	r3, [pc, #212]	@ (800231c <SystemInit+0x108>)
 8002246:	681b      	ldr	r3, [r3, #0]
 8002248:	4a34      	ldr	r2, [pc, #208]	@ (800231c <SystemInit+0x108>)
 800224a:	f043 0301 	orr.w	r3, r3, #1
 800224e:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8002250:	4b32      	ldr	r3, [pc, #200]	@ (800231c <SystemInit+0x108>)
 8002252:	2200      	movs	r2, #0
 8002254:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 8002256:	4b31      	ldr	r3, [pc, #196]	@ (800231c <SystemInit+0x108>)
 8002258:	681a      	ldr	r2, [r3, #0]
 800225a:	4930      	ldr	r1, [pc, #192]	@ (800231c <SystemInit+0x108>)
 800225c:	4b30      	ldr	r3, [pc, #192]	@ (8002320 <SystemInit+0x10c>)
 800225e:	4013      	ands	r3, r2
 8002260:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8002262:	4b2d      	ldr	r3, [pc, #180]	@ (8002318 <SystemInit+0x104>)
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	f003 0308 	and.w	r3, r3, #8
 800226a:	2b00      	cmp	r3, #0
 800226c:	d007      	beq.n	800227e <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 800226e:	4b2a      	ldr	r3, [pc, #168]	@ (8002318 <SystemInit+0x104>)
 8002270:	681b      	ldr	r3, [r3, #0]
 8002272:	f023 030f 	bic.w	r3, r3, #15
 8002276:	4a28      	ldr	r2, [pc, #160]	@ (8002318 <SystemInit+0x104>)
 8002278:	f043 0307 	orr.w	r3, r3, #7
 800227c:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 800227e:	4b27      	ldr	r3, [pc, #156]	@ (800231c <SystemInit+0x108>)
 8002280:	2200      	movs	r2, #0
 8002282:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 8002284:	4b25      	ldr	r3, [pc, #148]	@ (800231c <SystemInit+0x108>)
 8002286:	2200      	movs	r2, #0
 8002288:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 800228a:	4b24      	ldr	r3, [pc, #144]	@ (800231c <SystemInit+0x108>)
 800228c:	2200      	movs	r2, #0
 800228e:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 8002290:	4b22      	ldr	r3, [pc, #136]	@ (800231c <SystemInit+0x108>)
 8002292:	4a24      	ldr	r2, [pc, #144]	@ (8002324 <SystemInit+0x110>)
 8002294:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 8002296:	4b21      	ldr	r3, [pc, #132]	@ (800231c <SystemInit+0x108>)
 8002298:	4a23      	ldr	r2, [pc, #140]	@ (8002328 <SystemInit+0x114>)
 800229a:	62da      	str	r2, [r3, #44]	@ 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 800229c:	4b1f      	ldr	r3, [pc, #124]	@ (800231c <SystemInit+0x108>)
 800229e:	4a23      	ldr	r2, [pc, #140]	@ (800232c <SystemInit+0x118>)
 80022a0:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 80022a2:	4b1e      	ldr	r3, [pc, #120]	@ (800231c <SystemInit+0x108>)
 80022a4:	2200      	movs	r2, #0
 80022a6:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 80022a8:	4b1c      	ldr	r3, [pc, #112]	@ (800231c <SystemInit+0x108>)
 80022aa:	4a20      	ldr	r2, [pc, #128]	@ (800232c <SystemInit+0x118>)
 80022ac:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 80022ae:	4b1b      	ldr	r3, [pc, #108]	@ (800231c <SystemInit+0x108>)
 80022b0:	2200      	movs	r2, #0
 80022b2:	63da      	str	r2, [r3, #60]	@ 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 80022b4:	4b19      	ldr	r3, [pc, #100]	@ (800231c <SystemInit+0x108>)
 80022b6:	4a1d      	ldr	r2, [pc, #116]	@ (800232c <SystemInit+0x118>)
 80022b8:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 80022ba:	4b18      	ldr	r3, [pc, #96]	@ (800231c <SystemInit+0x108>)
 80022bc:	2200      	movs	r2, #0
 80022be:	645a      	str	r2, [r3, #68]	@ 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 80022c0:	4b16      	ldr	r3, [pc, #88]	@ (800231c <SystemInit+0x108>)
 80022c2:	681b      	ldr	r3, [r3, #0]
 80022c4:	4a15      	ldr	r2, [pc, #84]	@ (800231c <SystemInit+0x108>)
 80022c6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80022ca:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 80022cc:	4b13      	ldr	r3, [pc, #76]	@ (800231c <SystemInit+0x108>)
 80022ce:	2200      	movs	r2, #0
 80022d0:	661a      	str	r2, [r3, #96]	@ 0x60
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#else
  if(READ_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN) == 0U)
 80022d2:	4b12      	ldr	r3, [pc, #72]	@ (800231c <SystemInit+0x108>)
 80022d4:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80022d8:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80022dc:	2b00      	cmp	r3, #0
 80022de:	d113      	bne.n	8002308 <SystemInit+0xf4>
  {
    /* Enable the FMC interface clock */
    SET_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN);
 80022e0:	4b0e      	ldr	r3, [pc, #56]	@ (800231c <SystemInit+0x108>)
 80022e2:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80022e6:	4a0d      	ldr	r2, [pc, #52]	@ (800231c <SystemInit+0x108>)
 80022e8:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80022ec:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
    /*
     * Disable the FMC bank1 (enabled after reset).
     * This, prevents CPU speculation access on this bank which blocks the use of FMC during
     * 24us. During this time the others FMC master (such as LTDC) cannot use it!
     */
    FMC_Bank1_R->BTCR[0] = 0x000030D2;
 80022f0:	4b0f      	ldr	r3, [pc, #60]	@ (8002330 <SystemInit+0x11c>)
 80022f2:	f243 02d2 	movw	r2, #12498	@ 0x30d2
 80022f6:	601a      	str	r2, [r3, #0]

    /* Disable the FMC interface clock */
    CLEAR_BIT(RCC->AHB3ENR, RCC_AHB3ENR_FMCEN);
 80022f8:	4b08      	ldr	r3, [pc, #32]	@ (800231c <SystemInit+0x108>)
 80022fa:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80022fe:	4a07      	ldr	r2, [pc, #28]	@ (800231c <SystemInit+0x108>)
 8002300:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8002304:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 8002308:	bf00      	nop
 800230a:	46bd      	mov	sp, r7
 800230c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002310:	4770      	bx	lr
 8002312:	bf00      	nop
 8002314:	e000ed00 	.word	0xe000ed00
 8002318:	52002000 	.word	0x52002000
 800231c:	58024400 	.word	0x58024400
 8002320:	eaf6ed7f 	.word	0xeaf6ed7f
 8002324:	02020200 	.word	0x02020200
 8002328:	01ff0000 	.word	0x01ff0000
 800232c:	01010280 	.word	0x01010280
 8002330:	52004000 	.word	0x52004000

08002334 <ExitRun0Mode>:
  *
  * @param  None
  * @retval None
  */
void ExitRun0Mode(void)
{
 8002334:	b480      	push	{r7}
 8002336:	af00      	add	r7, sp, #0
  #if defined(SMPS)
    /* Exit Run* mode by disabling SMPS and enabling LDO */
    PWR->CR3 = (PWR->CR3 & ~PWR_CR3_SMPSEN) | PWR_CR3_LDOEN;
  #else
    /* Enable LDO mode */
    PWR->CR3 |= PWR_CR3_LDOEN;
 8002338:	4b09      	ldr	r3, [pc, #36]	@ (8002360 <ExitRun0Mode+0x2c>)
 800233a:	68db      	ldr	r3, [r3, #12]
 800233c:	4a08      	ldr	r2, [pc, #32]	@ (8002360 <ExitRun0Mode+0x2c>)
 800233e:	f043 0302 	orr.w	r3, r3, #2
 8002342:	60d3      	str	r3, [r2, #12]
  #endif /* SMPS */
  /* Wait till voltage level flag is set */
  while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
 8002344:	bf00      	nop
 8002346:	4b06      	ldr	r3, [pc, #24]	@ (8002360 <ExitRun0Mode+0x2c>)
 8002348:	685b      	ldr	r3, [r3, #4]
 800234a:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 800234e:	2b00      	cmp	r3, #0
 8002350:	d0f9      	beq.n	8002346 <ExitRun0Mode+0x12>
  while ((PWR->CSR1 & PWR_CSR1_ACTVOSRDY) == 0U)
  {}
#else
  /* No system power supply configuration is selected at exit Run* mode */
#endif /* USE_PWR_LDO_SUPPLY */
}
 8002352:	bf00      	nop
 8002354:	bf00      	nop
 8002356:	46bd      	mov	sp, r7
 8002358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800235c:	4770      	bx	lr
 800235e:	bf00      	nop
 8002360:	58024800 	.word	0x58024800

08002364 <__CRC16>:
    0x40
};


static uint16_t __CRC16(uint8_t *puchMsg, uint16_t usDataLen)
{
 8002364:	b480      	push	{r7}
 8002366:	b087      	sub	sp, #28
 8002368:	af00      	add	r7, sp, #0
 800236a:	6078      	str	r0, [r7, #4]
 800236c:	460b      	mov	r3, r1
 800236e:	807b      	strh	r3, [r7, #2]
    uint8_t uchCRCHi = 0xFF;
 8002370:	23ff      	movs	r3, #255	@ 0xff
 8002372:	75fb      	strb	r3, [r7, #23]
    uint8_t uchCRCLo = 0xFF;
 8002374:	23ff      	movs	r3, #255	@ 0xff
 8002376:	75bb      	strb	r3, [r7, #22]
    uint8_t uIndex;
    int i = 0;
 8002378:	2300      	movs	r3, #0
 800237a:	613b      	str	r3, [r7, #16]
    uchCRCHi = 0xFF;
 800237c:	23ff      	movs	r3, #255	@ 0xff
 800237e:	75fb      	strb	r3, [r7, #23]
    uchCRCLo = 0xFF;
 8002380:	23ff      	movs	r3, #255	@ 0xff
 8002382:	75bb      	strb	r3, [r7, #22]
    for (; i<usDataLen; i++)
 8002384:	e013      	b.n	80023ae <__CRC16+0x4a>
    {
        uIndex = uchCRCHi ^ puchMsg[i];
 8002386:	693b      	ldr	r3, [r7, #16]
 8002388:	687a      	ldr	r2, [r7, #4]
 800238a:	4413      	add	r3, r2
 800238c:	781a      	ldrb	r2, [r3, #0]
 800238e:	7dfb      	ldrb	r3, [r7, #23]
 8002390:	4053      	eors	r3, r2
 8002392:	73fb      	strb	r3, [r7, #15]
        uchCRCHi = uchCRCLo ^ __auchCRCHi[uIndex];
 8002394:	7bfb      	ldrb	r3, [r7, #15]
 8002396:	4a0f      	ldr	r2, [pc, #60]	@ (80023d4 <__CRC16+0x70>)
 8002398:	5cd2      	ldrb	r2, [r2, r3]
 800239a:	7dbb      	ldrb	r3, [r7, #22]
 800239c:	4053      	eors	r3, r2
 800239e:	75fb      	strb	r3, [r7, #23]
        uchCRCLo = __auchCRCLo[uIndex] ;
 80023a0:	7bfb      	ldrb	r3, [r7, #15]
 80023a2:	4a0d      	ldr	r2, [pc, #52]	@ (80023d8 <__CRC16+0x74>)
 80023a4:	5cd3      	ldrb	r3, [r2, r3]
 80023a6:	75bb      	strb	r3, [r7, #22]
    for (; i<usDataLen; i++)
 80023a8:	693b      	ldr	r3, [r7, #16]
 80023aa:	3301      	adds	r3, #1
 80023ac:	613b      	str	r3, [r7, #16]
 80023ae:	887b      	ldrh	r3, [r7, #2]
 80023b0:	693a      	ldr	r2, [r7, #16]
 80023b2:	429a      	cmp	r2, r3
 80023b4:	dbe7      	blt.n	8002386 <__CRC16+0x22>
    }
    return (uint16_t)(((uint16_t)uchCRCHi << 8) | (uint16_t)uchCRCLo) ;
 80023b6:	7dfb      	ldrb	r3, [r7, #23]
 80023b8:	b21b      	sxth	r3, r3
 80023ba:	021b      	lsls	r3, r3, #8
 80023bc:	b21a      	sxth	r2, r3
 80023be:	7dbb      	ldrb	r3, [r7, #22]
 80023c0:	b21b      	sxth	r3, r3
 80023c2:	4313      	orrs	r3, r2
 80023c4:	b21b      	sxth	r3, r3
 80023c6:	b29b      	uxth	r3, r3
}
 80023c8:	4618      	mov	r0, r3
 80023ca:	371c      	adds	r7, #28
 80023cc:	46bd      	mov	sp, r7
 80023ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023d2:	4770      	bx	lr
 80023d4:	0800dc40 	.word	0x0800dc40
 80023d8:	0800dd40 	.word	0x0800dd40

080023dc <__CaliSum>:
static uint8_t __CaliSum(uint8_t *data, uint32_t len)
{
 80023dc:	b480      	push	{r7}
 80023de:	b085      	sub	sp, #20
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	6078      	str	r0, [r7, #4]
 80023e4:	6039      	str	r1, [r7, #0]
    uint32_t i;
    uint8_t ucCheck = 0;
 80023e6:	2300      	movs	r3, #0
 80023e8:	72fb      	strb	r3, [r7, #11]
    for(i=0; i<len; i++) ucCheck += *(data + i);
 80023ea:	2300      	movs	r3, #0
 80023ec:	60fb      	str	r3, [r7, #12]
 80023ee:	e009      	b.n	8002404 <__CaliSum+0x28>
 80023f0:	687a      	ldr	r2, [r7, #4]
 80023f2:	68fb      	ldr	r3, [r7, #12]
 80023f4:	4413      	add	r3, r2
 80023f6:	781a      	ldrb	r2, [r3, #0]
 80023f8:	7afb      	ldrb	r3, [r7, #11]
 80023fa:	4413      	add	r3, r2
 80023fc:	72fb      	strb	r3, [r7, #11]
 80023fe:	68fb      	ldr	r3, [r7, #12]
 8002400:	3301      	adds	r3, #1
 8002402:	60fb      	str	r3, [r7, #12]
 8002404:	68fa      	ldr	r2, [r7, #12]
 8002406:	683b      	ldr	r3, [r7, #0]
 8002408:	429a      	cmp	r2, r3
 800240a:	d3f1      	bcc.n	80023f0 <__CaliSum+0x14>
    return ucCheck;
 800240c:	7afb      	ldrb	r3, [r7, #11]
}
 800240e:	4618      	mov	r0, r3
 8002410:	3714      	adds	r7, #20
 8002412:	46bd      	mov	sp, r7
 8002414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002418:	4770      	bx	lr
	...

0800241c <WitSerialWriteRegister>:
int32_t WitSerialWriteRegister(SerialWrite Write_func)
{
 800241c:	b480      	push	{r7}
 800241e:	b083      	sub	sp, #12
 8002420:	af00      	add	r7, sp, #0
 8002422:	6078      	str	r0, [r7, #4]
    if(!Write_func)return WIT_HAL_INVAL;
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	2b00      	cmp	r3, #0
 8002428:	d102      	bne.n	8002430 <WitSerialWriteRegister+0x14>
 800242a:	f06f 0305 	mvn.w	r3, #5
 800242e:	e003      	b.n	8002438 <WitSerialWriteRegister+0x1c>
    p_WitSerialWriteFunc = Write_func;
 8002430:	4a04      	ldr	r2, [pc, #16]	@ (8002444 <WitSerialWriteRegister+0x28>)
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	6013      	str	r3, [r2, #0]
    return WIT_HAL_OK;
 8002436:	2300      	movs	r3, #0
}
 8002438:	4618      	mov	r0, r3
 800243a:	370c      	adds	r7, #12
 800243c:	46bd      	mov	sp, r7
 800243e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002442:	4770      	bx	lr
 8002444:	240006ac 	.word	0x240006ac

08002448 <CopeWitData>:
static void CopeWitData(uint8_t ucIndex, uint16_t *p_data, uint32_t uiLen)
{
 8002448:	b580      	push	{r7, lr}
 800244a:	b08a      	sub	sp, #40	@ 0x28
 800244c:	af00      	add	r7, sp, #0
 800244e:	4603      	mov	r3, r0
 8002450:	60b9      	str	r1, [r7, #8]
 8002452:	607a      	str	r2, [r7, #4]
 8002454:	73fb      	strb	r3, [r7, #15]
    uint32_t uiReg1 = 0, uiReg2 = 0, uiReg1Len = 0, uiReg2Len = 0;
 8002456:	2300      	movs	r3, #0
 8002458:	627b      	str	r3, [r7, #36]	@ 0x24
 800245a:	2300      	movs	r3, #0
 800245c:	623b      	str	r3, [r7, #32]
 800245e:	2300      	movs	r3, #0
 8002460:	61fb      	str	r3, [r7, #28]
 8002462:	2300      	movs	r3, #0
 8002464:	61bb      	str	r3, [r7, #24]
    uint16_t *p_usReg1Val = p_data;
 8002466:	68bb      	ldr	r3, [r7, #8]
 8002468:	617b      	str	r3, [r7, #20]
    uint16_t *p_usReg2Val = p_data+3;
 800246a:	68bb      	ldr	r3, [r7, #8]
 800246c:	3306      	adds	r3, #6
 800246e:	613b      	str	r3, [r7, #16]
    
    uiReg1Len = 4;
 8002470:	2304      	movs	r3, #4
 8002472:	61fb      	str	r3, [r7, #28]
    switch(ucIndex)
 8002474:	7bfb      	ldrb	r3, [r7, #15]
 8002476:	3b50      	subs	r3, #80	@ 0x50
 8002478:	2b0f      	cmp	r3, #15
 800247a:	f200 8080 	bhi.w	800257e <CopeWitData+0x136>
 800247e:	a201      	add	r2, pc, #4	@ (adr r2, 8002484 <CopeWitData+0x3c>)
 8002480:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002484:	080024e9 	.word	0x080024e9
 8002488:	080024c5 	.word	0x080024c5
 800248c:	080024ef 	.word	0x080024ef
 8002490:	080024d7 	.word	0x080024d7
 8002494:	080024f5 	.word	0x080024f5
 8002498:	080024fb 	.word	0x080024fb
 800249c:	08002501 	.word	0x08002501
 80024a0:	08002507 	.word	0x08002507
 80024a4:	0800250d 	.word	0x0800250d
 80024a8:	08002513 	.word	0x08002513
 80024ac:	08002519 	.word	0x08002519
 80024b0:	0800257f 	.word	0x0800257f
 80024b4:	0800257f 	.word	0x0800257f
 80024b8:	0800257f 	.word	0x0800257f
 80024bc:	0800257f 	.word	0x0800257f
 80024c0:	0800251f 	.word	0x0800251f
    {
        case WIT_ACC:   uiReg1 = AX;    uiReg1Len = 3;  uiReg2 = TEMP;  uiReg2Len = 1;  break;
 80024c4:	2334      	movs	r3, #52	@ 0x34
 80024c6:	627b      	str	r3, [r7, #36]	@ 0x24
 80024c8:	2303      	movs	r3, #3
 80024ca:	61fb      	str	r3, [r7, #28]
 80024cc:	2340      	movs	r3, #64	@ 0x40
 80024ce:	623b      	str	r3, [r7, #32]
 80024d0:	2301      	movs	r3, #1
 80024d2:	61bb      	str	r3, [r7, #24]
 80024d4:	e027      	b.n	8002526 <CopeWitData+0xde>
        case WIT_ANGLE: uiReg1 = Roll;  uiReg1Len = 3;  uiReg2 = VERSION;  uiReg2Len = 1;  break;
 80024d6:	233d      	movs	r3, #61	@ 0x3d
 80024d8:	627b      	str	r3, [r7, #36]	@ 0x24
 80024da:	2303      	movs	r3, #3
 80024dc:	61fb      	str	r3, [r7, #28]
 80024de:	232e      	movs	r3, #46	@ 0x2e
 80024e0:	623b      	str	r3, [r7, #32]
 80024e2:	2301      	movs	r3, #1
 80024e4:	61bb      	str	r3, [r7, #24]
 80024e6:	e01e      	b.n	8002526 <CopeWitData+0xde>
        case WIT_TIME:  uiReg1 = YYMM;	break;
 80024e8:	2330      	movs	r3, #48	@ 0x30
 80024ea:	627b      	str	r3, [r7, #36]	@ 0x24
 80024ec:	e01b      	b.n	8002526 <CopeWitData+0xde>
        case WIT_GYRO:  uiReg1 = GX;  break;
 80024ee:	2337      	movs	r3, #55	@ 0x37
 80024f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80024f2:	e018      	b.n	8002526 <CopeWitData+0xde>
        case WIT_MAGNETIC: uiReg1 = HX;  break;
 80024f4:	233a      	movs	r3, #58	@ 0x3a
 80024f6:	627b      	str	r3, [r7, #36]	@ 0x24
 80024f8:	e015      	b.n	8002526 <CopeWitData+0xde>
        case WIT_DPORT: uiReg1 = D0Status;  break;
 80024fa:	2341      	movs	r3, #65	@ 0x41
 80024fc:	627b      	str	r3, [r7, #36]	@ 0x24
 80024fe:	e012      	b.n	8002526 <CopeWitData+0xde>
        case WIT_PRESS: uiReg1 = PressureL;  break;
 8002500:	2345      	movs	r3, #69	@ 0x45
 8002502:	627b      	str	r3, [r7, #36]	@ 0x24
 8002504:	e00f      	b.n	8002526 <CopeWitData+0xde>
        case WIT_GPS:   uiReg1 = LonL;  break;
 8002506:	2349      	movs	r3, #73	@ 0x49
 8002508:	627b      	str	r3, [r7, #36]	@ 0x24
 800250a:	e00c      	b.n	8002526 <CopeWitData+0xde>
        case WIT_VELOCITY: uiReg1 = GPSHeight;  break;
 800250c:	234d      	movs	r3, #77	@ 0x4d
 800250e:	627b      	str	r3, [r7, #36]	@ 0x24
 8002510:	e009      	b.n	8002526 <CopeWitData+0xde>
        case WIT_QUATER:    uiReg1 = q0;  break;
 8002512:	2351      	movs	r3, #81	@ 0x51
 8002514:	627b      	str	r3, [r7, #36]	@ 0x24
 8002516:	e006      	b.n	8002526 <CopeWitData+0xde>
        case WIT_GSA:   uiReg1 = SVNUM;  break;
 8002518:	2355      	movs	r3, #85	@ 0x55
 800251a:	627b      	str	r3, [r7, #36]	@ 0x24
 800251c:	e003      	b.n	8002526 <CopeWitData+0xde>
        case WIT_REGVALUE:  uiReg1 = s_uiReadRegIndex;  break;
 800251e:	4b1a      	ldr	r3, [pc, #104]	@ (8002588 <CopeWitData+0x140>)
 8002520:	681b      	ldr	r3, [r3, #0]
 8002522:	627b      	str	r3, [r7, #36]	@ 0x24
 8002524:	bf00      	nop
		default:
			return ;

    }
    if(uiLen == 3)
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	2b03      	cmp	r3, #3
 800252a:	d103      	bne.n	8002534 <CopeWitData+0xec>
    {
        uiReg1Len = 3;
 800252c:	2303      	movs	r3, #3
 800252e:	61fb      	str	r3, [r7, #28]
        uiReg2Len = 0;
 8002530:	2300      	movs	r3, #0
 8002532:	61bb      	str	r3, [r7, #24]
    }
    if(uiReg1Len)
 8002534:	69fb      	ldr	r3, [r7, #28]
 8002536:	2b00      	cmp	r3, #0
 8002538:	d00e      	beq.n	8002558 <CopeWitData+0x110>
	{
		memcpy(&sReg[uiReg1], p_usReg1Val, uiReg1Len<<1);
 800253a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800253c:	005b      	lsls	r3, r3, #1
 800253e:	4a13      	ldr	r2, [pc, #76]	@ (800258c <CopeWitData+0x144>)
 8002540:	1898      	adds	r0, r3, r2
 8002542:	69fb      	ldr	r3, [r7, #28]
 8002544:	005b      	lsls	r3, r3, #1
 8002546:	461a      	mov	r2, r3
 8002548:	6979      	ldr	r1, [r7, #20]
 800254a:	f009 f9f7 	bl	800b93c <memcpy>
		p_WitRegUpdateCbFunc(uiReg1, uiReg1Len);
 800254e:	4b10      	ldr	r3, [pc, #64]	@ (8002590 <CopeWitData+0x148>)
 8002550:	681b      	ldr	r3, [r3, #0]
 8002552:	69f9      	ldr	r1, [r7, #28]
 8002554:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 8002556:	4798      	blx	r3
	}
    if(uiReg2Len)
 8002558:	69bb      	ldr	r3, [r7, #24]
 800255a:	2b00      	cmp	r3, #0
 800255c:	d010      	beq.n	8002580 <CopeWitData+0x138>
	{
		memcpy(&sReg[uiReg2], p_usReg2Val, uiReg2Len<<1);
 800255e:	6a3b      	ldr	r3, [r7, #32]
 8002560:	005b      	lsls	r3, r3, #1
 8002562:	4a0a      	ldr	r2, [pc, #40]	@ (800258c <CopeWitData+0x144>)
 8002564:	1898      	adds	r0, r3, r2
 8002566:	69bb      	ldr	r3, [r7, #24]
 8002568:	005b      	lsls	r3, r3, #1
 800256a:	461a      	mov	r2, r3
 800256c:	6939      	ldr	r1, [r7, #16]
 800256e:	f009 f9e5 	bl	800b93c <memcpy>
		p_WitRegUpdateCbFunc(uiReg2, uiReg2Len);
 8002572:	4b07      	ldr	r3, [pc, #28]	@ (8002590 <CopeWitData+0x148>)
 8002574:	681b      	ldr	r3, [r3, #0]
 8002576:	69b9      	ldr	r1, [r7, #24]
 8002578:	6a38      	ldr	r0, [r7, #32]
 800257a:	4798      	blx	r3
 800257c:	e000      	b.n	8002580 <CopeWitData+0x138>
			return ;
 800257e:	bf00      	nop
	}
}
 8002580:	3728      	adds	r7, #40	@ 0x28
 8002582:	46bd      	mov	sp, r7
 8002584:	bd80      	pop	{r7, pc}
 8002586:	bf00      	nop
 8002588:	240007c4 	.word	0x240007c4
 800258c:	240007c8 	.word	0x240007c8
 8002590:	240006b8 	.word	0x240006b8

08002594 <WitSerialDataIn>:

void WitSerialDataIn(uint8_t ucData)
{
 8002594:	b580      	push	{r7, lr}
 8002596:	b086      	sub	sp, #24
 8002598:	af00      	add	r7, sp, #0
 800259a:	4603      	mov	r3, r0
 800259c:	71fb      	strb	r3, [r7, #7]
    uint16_t usCRC16, usTemp, i, usData[4];
    uint8_t ucSum;

    if(p_WitRegUpdateCbFunc == NULL)return ;
 800259e:	4b8d      	ldr	r3, [pc, #564]	@ (80027d4 <WitSerialDataIn+0x240>)
 80025a0:	681b      	ldr	r3, [r3, #0]
 80025a2:	2b00      	cmp	r3, #0
 80025a4:	f000 810f 	beq.w	80027c6 <WitSerialDataIn+0x232>
    s_ucWitDataBuff[s_uiWitDataCnt++] = ucData;
 80025a8:	4b8b      	ldr	r3, [pc, #556]	@ (80027d8 <WitSerialDataIn+0x244>)
 80025aa:	681b      	ldr	r3, [r3, #0]
 80025ac:	1c5a      	adds	r2, r3, #1
 80025ae:	498a      	ldr	r1, [pc, #552]	@ (80027d8 <WitSerialDataIn+0x244>)
 80025b0:	600a      	str	r2, [r1, #0]
 80025b2:	498a      	ldr	r1, [pc, #552]	@ (80027dc <WitSerialDataIn+0x248>)
 80025b4:	79fa      	ldrb	r2, [r7, #7]
 80025b6:	54ca      	strb	r2, [r1, r3]
    switch(s_uiProtoclo)
 80025b8:	4b89      	ldr	r3, [pc, #548]	@ (80027e0 <WitSerialDataIn+0x24c>)
 80025ba:	681b      	ldr	r3, [r3, #0]
 80025bc:	2b03      	cmp	r3, #3
 80025be:	f200 80f9 	bhi.w	80027b4 <WitSerialDataIn+0x220>
 80025c2:	2b02      	cmp	r3, #2
 80025c4:	f080 80ef 	bcs.w	80027a6 <WitSerialDataIn+0x212>
 80025c8:	2b00      	cmp	r3, #0
 80025ca:	d002      	beq.n	80025d2 <WitSerialDataIn+0x3e>
 80025cc:	2b01      	cmp	r3, #1
 80025ce:	d06f      	beq.n	80026b0 <WitSerialDataIn+0x11c>
 80025d0:	e0f0      	b.n	80027b4 <WitSerialDataIn+0x220>
    {
        case WIT_PROTOCOL_NORMAL:
            if(s_ucWitDataBuff[0] != 0x55)
 80025d2:	4b82      	ldr	r3, [pc, #520]	@ (80027dc <WitSerialDataIn+0x248>)
 80025d4:	781b      	ldrb	r3, [r3, #0]
 80025d6:	2b55      	cmp	r3, #85	@ 0x55
 80025d8:	d00c      	beq.n	80025f4 <WitSerialDataIn+0x60>
            {
                s_uiWitDataCnt--;
 80025da:	4b7f      	ldr	r3, [pc, #508]	@ (80027d8 <WitSerialDataIn+0x244>)
 80025dc:	681b      	ldr	r3, [r3, #0]
 80025de:	3b01      	subs	r3, #1
 80025e0:	4a7d      	ldr	r2, [pc, #500]	@ (80027d8 <WitSerialDataIn+0x244>)
 80025e2:	6013      	str	r3, [r2, #0]
                memcpy(s_ucWitDataBuff, &s_ucWitDataBuff[1], s_uiWitDataCnt);
 80025e4:	4b7c      	ldr	r3, [pc, #496]	@ (80027d8 <WitSerialDataIn+0x244>)
 80025e6:	681b      	ldr	r3, [r3, #0]
 80025e8:	461a      	mov	r2, r3
 80025ea:	497e      	ldr	r1, [pc, #504]	@ (80027e4 <WitSerialDataIn+0x250>)
 80025ec:	487b      	ldr	r0, [pc, #492]	@ (80027dc <WitSerialDataIn+0x248>)
 80025ee:	f009 f9a5 	bl	800b93c <memcpy>
                return ;
 80025f2:	e0eb      	b.n	80027cc <WitSerialDataIn+0x238>
            }
            if(s_uiWitDataCnt >= 11)
 80025f4:	4b78      	ldr	r3, [pc, #480]	@ (80027d8 <WitSerialDataIn+0x244>)
 80025f6:	681b      	ldr	r3, [r3, #0]
 80025f8:	2b0a      	cmp	r3, #10
 80025fa:	f240 80d8 	bls.w	80027ae <WitSerialDataIn+0x21a>
            {
                ucSum = __CaliSum(s_ucWitDataBuff, 10);
 80025fe:	210a      	movs	r1, #10
 8002600:	4876      	ldr	r0, [pc, #472]	@ (80027dc <WitSerialDataIn+0x248>)
 8002602:	f7ff feeb 	bl	80023dc <__CaliSum>
 8002606:	4603      	mov	r3, r0
 8002608:	747b      	strb	r3, [r7, #17]
                if(ucSum != s_ucWitDataBuff[10])
 800260a:	4b74      	ldr	r3, [pc, #464]	@ (80027dc <WitSerialDataIn+0x248>)
 800260c:	7a9b      	ldrb	r3, [r3, #10]
 800260e:	7c7a      	ldrb	r2, [r7, #17]
 8002610:	429a      	cmp	r2, r3
 8002612:	d00c      	beq.n	800262e <WitSerialDataIn+0x9a>
                {
                    s_uiWitDataCnt--;
 8002614:	4b70      	ldr	r3, [pc, #448]	@ (80027d8 <WitSerialDataIn+0x244>)
 8002616:	681b      	ldr	r3, [r3, #0]
 8002618:	3b01      	subs	r3, #1
 800261a:	4a6f      	ldr	r2, [pc, #444]	@ (80027d8 <WitSerialDataIn+0x244>)
 800261c:	6013      	str	r3, [r2, #0]
                    memcpy(s_ucWitDataBuff, &s_ucWitDataBuff[1], s_uiWitDataCnt);
 800261e:	4b6e      	ldr	r3, [pc, #440]	@ (80027d8 <WitSerialDataIn+0x244>)
 8002620:	681b      	ldr	r3, [r3, #0]
 8002622:	461a      	mov	r2, r3
 8002624:	496f      	ldr	r1, [pc, #444]	@ (80027e4 <WitSerialDataIn+0x250>)
 8002626:	486d      	ldr	r0, [pc, #436]	@ (80027dc <WitSerialDataIn+0x248>)
 8002628:	f009 f988 	bl	800b93c <memcpy>
                    return ;
 800262c:	e0ce      	b.n	80027cc <WitSerialDataIn+0x238>
                }
                usData[0] = ((uint16_t)s_ucWitDataBuff[3] << 8) | s_ucWitDataBuff[2];
 800262e:	4b6b      	ldr	r3, [pc, #428]	@ (80027dc <WitSerialDataIn+0x248>)
 8002630:	78db      	ldrb	r3, [r3, #3]
 8002632:	b21b      	sxth	r3, r3
 8002634:	021b      	lsls	r3, r3, #8
 8002636:	b21a      	sxth	r2, r3
 8002638:	4b68      	ldr	r3, [pc, #416]	@ (80027dc <WitSerialDataIn+0x248>)
 800263a:	789b      	ldrb	r3, [r3, #2]
 800263c:	b21b      	sxth	r3, r3
 800263e:	4313      	orrs	r3, r2
 8002640:	b21b      	sxth	r3, r3
 8002642:	b29b      	uxth	r3, r3
 8002644:	813b      	strh	r3, [r7, #8]
                usData[1] = ((uint16_t)s_ucWitDataBuff[5] << 8) | s_ucWitDataBuff[4];
 8002646:	4b65      	ldr	r3, [pc, #404]	@ (80027dc <WitSerialDataIn+0x248>)
 8002648:	795b      	ldrb	r3, [r3, #5]
 800264a:	b21b      	sxth	r3, r3
 800264c:	021b      	lsls	r3, r3, #8
 800264e:	b21a      	sxth	r2, r3
 8002650:	4b62      	ldr	r3, [pc, #392]	@ (80027dc <WitSerialDataIn+0x248>)
 8002652:	791b      	ldrb	r3, [r3, #4]
 8002654:	b21b      	sxth	r3, r3
 8002656:	4313      	orrs	r3, r2
 8002658:	b21b      	sxth	r3, r3
 800265a:	b29b      	uxth	r3, r3
 800265c:	817b      	strh	r3, [r7, #10]
                usData[2] = ((uint16_t)s_ucWitDataBuff[7] << 8) | s_ucWitDataBuff[6];
 800265e:	4b5f      	ldr	r3, [pc, #380]	@ (80027dc <WitSerialDataIn+0x248>)
 8002660:	79db      	ldrb	r3, [r3, #7]
 8002662:	b21b      	sxth	r3, r3
 8002664:	021b      	lsls	r3, r3, #8
 8002666:	b21a      	sxth	r2, r3
 8002668:	4b5c      	ldr	r3, [pc, #368]	@ (80027dc <WitSerialDataIn+0x248>)
 800266a:	799b      	ldrb	r3, [r3, #6]
 800266c:	b21b      	sxth	r3, r3
 800266e:	4313      	orrs	r3, r2
 8002670:	b21b      	sxth	r3, r3
 8002672:	b29b      	uxth	r3, r3
 8002674:	81bb      	strh	r3, [r7, #12]
                usData[3] = ((uint16_t)s_ucWitDataBuff[9] << 8) | s_ucWitDataBuff[8];
 8002676:	4b59      	ldr	r3, [pc, #356]	@ (80027dc <WitSerialDataIn+0x248>)
 8002678:	7a5b      	ldrb	r3, [r3, #9]
 800267a:	b21b      	sxth	r3, r3
 800267c:	021b      	lsls	r3, r3, #8
 800267e:	b21a      	sxth	r2, r3
 8002680:	4b56      	ldr	r3, [pc, #344]	@ (80027dc <WitSerialDataIn+0x248>)
 8002682:	7a1b      	ldrb	r3, [r3, #8]
 8002684:	b21b      	sxth	r3, r3
 8002686:	4313      	orrs	r3, r2
 8002688:	b21b      	sxth	r3, r3
 800268a:	b29b      	uxth	r3, r3
 800268c:	81fb      	strh	r3, [r7, #14]
                CopeWitData(s_ucWitDataBuff[1], usData, 4);
 800268e:	4b53      	ldr	r3, [pc, #332]	@ (80027dc <WitSerialDataIn+0x248>)
 8002690:	785b      	ldrb	r3, [r3, #1]
 8002692:	f107 0108 	add.w	r1, r7, #8
 8002696:	2204      	movs	r2, #4
 8002698:	4618      	mov	r0, r3
 800269a:	f7ff fed5 	bl	8002448 <CopeWitData>
                printf(usData);
 800269e:	f107 0308 	add.w	r3, r7, #8
 80026a2:	4618      	mov	r0, r3
 80026a4:	f009 f898 	bl	800b7d8 <iprintf>
                s_uiWitDataCnt = 0;
 80026a8:	4b4b      	ldr	r3, [pc, #300]	@ (80027d8 <WitSerialDataIn+0x244>)
 80026aa:	2200      	movs	r2, #0
 80026ac:	601a      	str	r2, [r3, #0]
            }
        break;
 80026ae:	e07e      	b.n	80027ae <WitSerialDataIn+0x21a>
        case WIT_PROTOCOL_MODBUS:
            if(s_uiWitDataCnt > 2)
 80026b0:	4b49      	ldr	r3, [pc, #292]	@ (80027d8 <WitSerialDataIn+0x244>)
 80026b2:	681b      	ldr	r3, [r3, #0]
 80026b4:	2b02      	cmp	r3, #2
 80026b6:	d97c      	bls.n	80027b2 <WitSerialDataIn+0x21e>
            {
                if(s_ucWitDataBuff[1] != FuncR)
 80026b8:	4b48      	ldr	r3, [pc, #288]	@ (80027dc <WitSerialDataIn+0x248>)
 80026ba:	785b      	ldrb	r3, [r3, #1]
 80026bc:	2b03      	cmp	r3, #3
 80026be:	d00c      	beq.n	80026da <WitSerialDataIn+0x146>
                {
                    s_uiWitDataCnt--;
 80026c0:	4b45      	ldr	r3, [pc, #276]	@ (80027d8 <WitSerialDataIn+0x244>)
 80026c2:	681b      	ldr	r3, [r3, #0]
 80026c4:	3b01      	subs	r3, #1
 80026c6:	4a44      	ldr	r2, [pc, #272]	@ (80027d8 <WitSerialDataIn+0x244>)
 80026c8:	6013      	str	r3, [r2, #0]
                    memcpy(s_ucWitDataBuff, &s_ucWitDataBuff[1], s_uiWitDataCnt);
 80026ca:	4b43      	ldr	r3, [pc, #268]	@ (80027d8 <WitSerialDataIn+0x244>)
 80026cc:	681b      	ldr	r3, [r3, #0]
 80026ce:	461a      	mov	r2, r3
 80026d0:	4944      	ldr	r1, [pc, #272]	@ (80027e4 <WitSerialDataIn+0x250>)
 80026d2:	4842      	ldr	r0, [pc, #264]	@ (80027dc <WitSerialDataIn+0x248>)
 80026d4:	f009 f932 	bl	800b93c <memcpy>
                    return ;
 80026d8:	e078      	b.n	80027cc <WitSerialDataIn+0x238>
                }
                if(s_uiWitDataCnt < (s_ucWitDataBuff[2] + 5))return ;
 80026da:	4b40      	ldr	r3, [pc, #256]	@ (80027dc <WitSerialDataIn+0x248>)
 80026dc:	789b      	ldrb	r3, [r3, #2]
 80026de:	3305      	adds	r3, #5
 80026e0:	461a      	mov	r2, r3
 80026e2:	4b3d      	ldr	r3, [pc, #244]	@ (80027d8 <WitSerialDataIn+0x244>)
 80026e4:	681b      	ldr	r3, [r3, #0]
 80026e6:	429a      	cmp	r2, r3
 80026e8:	d86f      	bhi.n	80027ca <WitSerialDataIn+0x236>
                usTemp = ((uint16_t)s_ucWitDataBuff[s_uiWitDataCnt-2] << 8) | s_ucWitDataBuff[s_uiWitDataCnt-1];
 80026ea:	4b3b      	ldr	r3, [pc, #236]	@ (80027d8 <WitSerialDataIn+0x244>)
 80026ec:	681b      	ldr	r3, [r3, #0]
 80026ee:	3b02      	subs	r3, #2
 80026f0:	4a3a      	ldr	r2, [pc, #232]	@ (80027dc <WitSerialDataIn+0x248>)
 80026f2:	5cd3      	ldrb	r3, [r2, r3]
 80026f4:	b21b      	sxth	r3, r3
 80026f6:	021b      	lsls	r3, r3, #8
 80026f8:	b21a      	sxth	r2, r3
 80026fa:	4b37      	ldr	r3, [pc, #220]	@ (80027d8 <WitSerialDataIn+0x244>)
 80026fc:	681b      	ldr	r3, [r3, #0]
 80026fe:	3b01      	subs	r3, #1
 8002700:	4936      	ldr	r1, [pc, #216]	@ (80027dc <WitSerialDataIn+0x248>)
 8002702:	5ccb      	ldrb	r3, [r1, r3]
 8002704:	b21b      	sxth	r3, r3
 8002706:	4313      	orrs	r3, r2
 8002708:	b21b      	sxth	r3, r3
 800270a:	82bb      	strh	r3, [r7, #20]
                usCRC16 = __CRC16(s_ucWitDataBuff, s_uiWitDataCnt-2);
 800270c:	4b32      	ldr	r3, [pc, #200]	@ (80027d8 <WitSerialDataIn+0x244>)
 800270e:	681b      	ldr	r3, [r3, #0]
 8002710:	b29b      	uxth	r3, r3
 8002712:	3b02      	subs	r3, #2
 8002714:	b29b      	uxth	r3, r3
 8002716:	4619      	mov	r1, r3
 8002718:	4830      	ldr	r0, [pc, #192]	@ (80027dc <WitSerialDataIn+0x248>)
 800271a:	f7ff fe23 	bl	8002364 <__CRC16>
 800271e:	4603      	mov	r3, r0
 8002720:	827b      	strh	r3, [r7, #18]
                if(usTemp != usCRC16)
 8002722:	8aba      	ldrh	r2, [r7, #20]
 8002724:	8a7b      	ldrh	r3, [r7, #18]
 8002726:	429a      	cmp	r2, r3
 8002728:	d00c      	beq.n	8002744 <WitSerialDataIn+0x1b0>
                {
                    s_uiWitDataCnt--;
 800272a:	4b2b      	ldr	r3, [pc, #172]	@ (80027d8 <WitSerialDataIn+0x244>)
 800272c:	681b      	ldr	r3, [r3, #0]
 800272e:	3b01      	subs	r3, #1
 8002730:	4a29      	ldr	r2, [pc, #164]	@ (80027d8 <WitSerialDataIn+0x244>)
 8002732:	6013      	str	r3, [r2, #0]
                    memcpy(s_ucWitDataBuff, &s_ucWitDataBuff[1], s_uiWitDataCnt);
 8002734:	4b28      	ldr	r3, [pc, #160]	@ (80027d8 <WitSerialDataIn+0x244>)
 8002736:	681b      	ldr	r3, [r3, #0]
 8002738:	461a      	mov	r2, r3
 800273a:	492a      	ldr	r1, [pc, #168]	@ (80027e4 <WitSerialDataIn+0x250>)
 800273c:	4827      	ldr	r0, [pc, #156]	@ (80027dc <WitSerialDataIn+0x248>)
 800273e:	f009 f8fd 	bl	800b93c <memcpy>
                    return ;
 8002742:	e043      	b.n	80027cc <WitSerialDataIn+0x238>
                }
                usTemp = s_ucWitDataBuff[2] >> 1;
 8002744:	4b25      	ldr	r3, [pc, #148]	@ (80027dc <WitSerialDataIn+0x248>)
 8002746:	789b      	ldrb	r3, [r3, #2]
 8002748:	085b      	lsrs	r3, r3, #1
 800274a:	b2db      	uxtb	r3, r3
 800274c:	82bb      	strh	r3, [r7, #20]
                for(i = 0; i < usTemp; i++)
 800274e:	2300      	movs	r3, #0
 8002750:	82fb      	strh	r3, [r7, #22]
 8002752:	e019      	b.n	8002788 <WitSerialDataIn+0x1f4>
                {
                    sReg[i+s_uiReadRegIndex] = ((uint16_t)s_ucWitDataBuff[(i<<1)+3] << 8) | s_ucWitDataBuff[(i<<1)+4];
 8002754:	8afb      	ldrh	r3, [r7, #22]
 8002756:	005b      	lsls	r3, r3, #1
 8002758:	3303      	adds	r3, #3
 800275a:	4a20      	ldr	r2, [pc, #128]	@ (80027dc <WitSerialDataIn+0x248>)
 800275c:	5cd3      	ldrb	r3, [r2, r3]
 800275e:	b21b      	sxth	r3, r3
 8002760:	021b      	lsls	r3, r3, #8
 8002762:	b219      	sxth	r1, r3
 8002764:	8afb      	ldrh	r3, [r7, #22]
 8002766:	005b      	lsls	r3, r3, #1
 8002768:	3304      	adds	r3, #4
 800276a:	4a1c      	ldr	r2, [pc, #112]	@ (80027dc <WitSerialDataIn+0x248>)
 800276c:	5cd3      	ldrb	r3, [r2, r3]
 800276e:	b21a      	sxth	r2, r3
 8002770:	8af8      	ldrh	r0, [r7, #22]
 8002772:	4b1d      	ldr	r3, [pc, #116]	@ (80027e8 <WitSerialDataIn+0x254>)
 8002774:	681b      	ldr	r3, [r3, #0]
 8002776:	4403      	add	r3, r0
 8002778:	430a      	orrs	r2, r1
 800277a:	b211      	sxth	r1, r2
 800277c:	4a1b      	ldr	r2, [pc, #108]	@ (80027ec <WitSerialDataIn+0x258>)
 800277e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
                for(i = 0; i < usTemp; i++)
 8002782:	8afb      	ldrh	r3, [r7, #22]
 8002784:	3301      	adds	r3, #1
 8002786:	82fb      	strh	r3, [r7, #22]
 8002788:	8afa      	ldrh	r2, [r7, #22]
 800278a:	8abb      	ldrh	r3, [r7, #20]
 800278c:	429a      	cmp	r2, r3
 800278e:	d3e1      	bcc.n	8002754 <WitSerialDataIn+0x1c0>
                }
                p_WitRegUpdateCbFunc(s_uiReadRegIndex, usTemp);
 8002790:	4b10      	ldr	r3, [pc, #64]	@ (80027d4 <WitSerialDataIn+0x240>)
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	4a14      	ldr	r2, [pc, #80]	@ (80027e8 <WitSerialDataIn+0x254>)
 8002796:	6812      	ldr	r2, [r2, #0]
 8002798:	8ab9      	ldrh	r1, [r7, #20]
 800279a:	4610      	mov	r0, r2
 800279c:	4798      	blx	r3
                s_uiWitDataCnt = 0;
 800279e:	4b0e      	ldr	r3, [pc, #56]	@ (80027d8 <WitSerialDataIn+0x244>)
 80027a0:	2200      	movs	r2, #0
 80027a2:	601a      	str	r2, [r3, #0]
            }
        break;
 80027a4:	e005      	b.n	80027b2 <WitSerialDataIn+0x21e>
        case WIT_PROTOCOL_CAN:
        case WIT_PROTOCOL_I2C:
        s_uiWitDataCnt = 0;
 80027a6:	4b0c      	ldr	r3, [pc, #48]	@ (80027d8 <WitSerialDataIn+0x244>)
 80027a8:	2200      	movs	r2, #0
 80027aa:	601a      	str	r2, [r3, #0]
        break;
 80027ac:	e002      	b.n	80027b4 <WitSerialDataIn+0x220>
        break;
 80027ae:	bf00      	nop
 80027b0:	e000      	b.n	80027b4 <WitSerialDataIn+0x220>
        break;
 80027b2:	bf00      	nop
    }
    if(s_uiWitDataCnt == WIT_DATA_BUFF_SIZE)s_uiWitDataCnt = 0;
 80027b4:	4b08      	ldr	r3, [pc, #32]	@ (80027d8 <WitSerialDataIn+0x244>)
 80027b6:	681b      	ldr	r3, [r3, #0]
 80027b8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80027bc:	d106      	bne.n	80027cc <WitSerialDataIn+0x238>
 80027be:	4b06      	ldr	r3, [pc, #24]	@ (80027d8 <WitSerialDataIn+0x244>)
 80027c0:	2200      	movs	r2, #0
 80027c2:	601a      	str	r2, [r3, #0]
 80027c4:	e002      	b.n	80027cc <WitSerialDataIn+0x238>
    if(p_WitRegUpdateCbFunc == NULL)return ;
 80027c6:	bf00      	nop
 80027c8:	e000      	b.n	80027cc <WitSerialDataIn+0x238>
                if(s_uiWitDataCnt < (s_ucWitDataBuff[2] + 5))return ;
 80027ca:	bf00      	nop
}
 80027cc:	3718      	adds	r7, #24
 80027ce:	46bd      	mov	sp, r7
 80027d0:	bd80      	pop	{r7, pc}
 80027d2:	bf00      	nop
 80027d4:	240006b8 	.word	0x240006b8
 80027d8:	240007bc 	.word	0x240007bc
 80027dc:	240006bc 	.word	0x240006bc
 80027e0:	240007c0 	.word	0x240007c0
 80027e4:	240006bd 	.word	0x240006bd
 80027e8:	240007c4 	.word	0x240007c4
 80027ec:	240007c8 	.word	0x240007c8

080027f0 <WitRegisterCallBack>:
        case WIT_PROTOCOL_I2C:
            break;
    }
}
int32_t WitRegisterCallBack(RegUpdateCb update_func)
{
 80027f0:	b480      	push	{r7}
 80027f2:	b083      	sub	sp, #12
 80027f4:	af00      	add	r7, sp, #0
 80027f6:	6078      	str	r0, [r7, #4]
    if(!update_func)return WIT_HAL_INVAL;
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	2b00      	cmp	r3, #0
 80027fc:	d102      	bne.n	8002804 <WitRegisterCallBack+0x14>
 80027fe:	f06f 0305 	mvn.w	r3, #5
 8002802:	e003      	b.n	800280c <WitRegisterCallBack+0x1c>
    p_WitRegUpdateCbFunc = update_func;
 8002804:	4a04      	ldr	r2, [pc, #16]	@ (8002818 <WitRegisterCallBack+0x28>)
 8002806:	687b      	ldr	r3, [r7, #4]
 8002808:	6013      	str	r3, [r2, #0]
    return WIT_HAL_OK;
 800280a:	2300      	movs	r3, #0
}
 800280c:	4618      	mov	r0, r3
 800280e:	370c      	adds	r7, #12
 8002810:	46bd      	mov	sp, r7
 8002812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002816:	4770      	bx	lr
 8002818:	240006b8 	.word	0x240006b8

0800281c <WitReadReg>:
            return WIT_HAL_INVAL;        
    }
    return WIT_HAL_OK;
}
int32_t WitReadReg(uint32_t uiReg, uint32_t uiReadNum)
{
 800281c:	b590      	push	{r4, r7, lr}
 800281e:	b087      	sub	sp, #28
 8002820:	af00      	add	r7, sp, #0
 8002822:	6078      	str	r0, [r7, #4]
 8002824:	6039      	str	r1, [r7, #0]
    uint16_t usTemp, i;
    uint8_t ucBuff[8];
    if((uiReg + uiReadNum) >= REGSIZE)return WIT_HAL_INVAL;
 8002826:	687a      	ldr	r2, [r7, #4]
 8002828:	683b      	ldr	r3, [r7, #0]
 800282a:	4413      	add	r3, r2
 800282c:	2b8f      	cmp	r3, #143	@ 0x8f
 800282e:	d902      	bls.n	8002836 <WitReadReg+0x1a>
 8002830:	f06f 0305 	mvn.w	r3, #5
 8002834:	e0e5      	b.n	8002a02 <WitReadReg+0x1e6>
    switch(s_uiProtoclo)
 8002836:	4b75      	ldr	r3, [pc, #468]	@ (8002a0c <WitReadReg+0x1f0>)
 8002838:	681b      	ldr	r3, [r3, #0]
 800283a:	2b03      	cmp	r3, #3
 800283c:	f200 80d9 	bhi.w	80029f2 <WitReadReg+0x1d6>
 8002840:	a201      	add	r2, pc, #4	@ (adr r2, 8002848 <WitReadReg+0x2c>)
 8002842:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002846:	bf00      	nop
 8002848:	08002859 	.word	0x08002859
 800284c:	0800289d 	.word	0x0800289d
 8002850:	08002915 	.word	0x08002915
 8002854:	0800295b 	.word	0x0800295b
    {
        case WIT_PROTOCOL_NORMAL:
            if(uiReadNum > 4)return WIT_HAL_INVAL;
 8002858:	683b      	ldr	r3, [r7, #0]
 800285a:	2b04      	cmp	r3, #4
 800285c:	d902      	bls.n	8002864 <WitReadReg+0x48>
 800285e:	f06f 0305 	mvn.w	r3, #5
 8002862:	e0ce      	b.n	8002a02 <WitReadReg+0x1e6>
            if(p_WitSerialWriteFunc == NULL)return WIT_HAL_EMPTY;
 8002864:	4b6a      	ldr	r3, [pc, #424]	@ (8002a10 <WitReadReg+0x1f4>)
 8002866:	681b      	ldr	r3, [r3, #0]
 8002868:	2b00      	cmp	r3, #0
 800286a:	d102      	bne.n	8002872 <WitReadReg+0x56>
 800286c:	f06f 0304 	mvn.w	r3, #4
 8002870:	e0c7      	b.n	8002a02 <WitReadReg+0x1e6>
            ucBuff[0] = 0xFF;
 8002872:	23ff      	movs	r3, #255	@ 0xff
 8002874:	733b      	strb	r3, [r7, #12]
            ucBuff[1] = 0xAA;
 8002876:	23aa      	movs	r3, #170	@ 0xaa
 8002878:	737b      	strb	r3, [r7, #13]
            ucBuff[2] = 0x27;
 800287a:	2327      	movs	r3, #39	@ 0x27
 800287c:	73bb      	strb	r3, [r7, #14]
            ucBuff[3] = uiReg & 0xff;
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	b2db      	uxtb	r3, r3
 8002882:	73fb      	strb	r3, [r7, #15]
            ucBuff[4] = uiReg >> 8;
 8002884:	687b      	ldr	r3, [r7, #4]
 8002886:	0a1b      	lsrs	r3, r3, #8
 8002888:	b2db      	uxtb	r3, r3
 800288a:	743b      	strb	r3, [r7, #16]
            p_WitSerialWriteFunc(ucBuff, 5);
 800288c:	4b60      	ldr	r3, [pc, #384]	@ (8002a10 <WitReadReg+0x1f4>)
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	f107 020c 	add.w	r2, r7, #12
 8002894:	2105      	movs	r1, #5
 8002896:	4610      	mov	r0, r2
 8002898:	4798      	blx	r3
            break;
 800289a:	e0ae      	b.n	80029fa <WitReadReg+0x1de>
        case WIT_PROTOCOL_MODBUS:
            if(p_WitSerialWriteFunc == NULL)return WIT_HAL_EMPTY;
 800289c:	4b5c      	ldr	r3, [pc, #368]	@ (8002a10 <WitReadReg+0x1f4>)
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	2b00      	cmp	r3, #0
 80028a2:	d102      	bne.n	80028aa <WitReadReg+0x8e>
 80028a4:	f06f 0304 	mvn.w	r3, #4
 80028a8:	e0ab      	b.n	8002a02 <WitReadReg+0x1e6>
            usTemp = uiReadNum << 1;
 80028aa:	683b      	ldr	r3, [r7, #0]
 80028ac:	b29b      	uxth	r3, r3
 80028ae:	005b      	lsls	r3, r3, #1
 80028b0:	82bb      	strh	r3, [r7, #20]
            if((usTemp + 5) > WIT_DATA_BUFF_SIZE)return WIT_HAL_NOMEM;
 80028b2:	8abb      	ldrh	r3, [r7, #20]
 80028b4:	2bfb      	cmp	r3, #251	@ 0xfb
 80028b6:	d902      	bls.n	80028be <WitReadReg+0xa2>
 80028b8:	f06f 0303 	mvn.w	r3, #3
 80028bc:	e0a1      	b.n	8002a02 <WitReadReg+0x1e6>
            ucBuff[0] = s_ucAddr;
 80028be:	4b55      	ldr	r3, [pc, #340]	@ (8002a14 <WitReadReg+0x1f8>)
 80028c0:	781b      	ldrb	r3, [r3, #0]
 80028c2:	733b      	strb	r3, [r7, #12]
            ucBuff[1] = FuncR;
 80028c4:	2303      	movs	r3, #3
 80028c6:	737b      	strb	r3, [r7, #13]
            ucBuff[2] = uiReg >> 8;
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	0a1b      	lsrs	r3, r3, #8
 80028cc:	b2db      	uxtb	r3, r3
 80028ce:	73bb      	strb	r3, [r7, #14]
            ucBuff[3] = uiReg & 0xFF;
 80028d0:	687b      	ldr	r3, [r7, #4]
 80028d2:	b2db      	uxtb	r3, r3
 80028d4:	73fb      	strb	r3, [r7, #15]
            ucBuff[4] = uiReadNum >> 8;
 80028d6:	683b      	ldr	r3, [r7, #0]
 80028d8:	0a1b      	lsrs	r3, r3, #8
 80028da:	b2db      	uxtb	r3, r3
 80028dc:	743b      	strb	r3, [r7, #16]
            ucBuff[5] = uiReadNum & 0xff;
 80028de:	683b      	ldr	r3, [r7, #0]
 80028e0:	b2db      	uxtb	r3, r3
 80028e2:	747b      	strb	r3, [r7, #17]
            usTemp = __CRC16(ucBuff, 6);
 80028e4:	f107 030c 	add.w	r3, r7, #12
 80028e8:	2106      	movs	r1, #6
 80028ea:	4618      	mov	r0, r3
 80028ec:	f7ff fd3a 	bl	8002364 <__CRC16>
 80028f0:	4603      	mov	r3, r0
 80028f2:	82bb      	strh	r3, [r7, #20]
            ucBuff[6] = usTemp >> 8;
 80028f4:	8abb      	ldrh	r3, [r7, #20]
 80028f6:	0a1b      	lsrs	r3, r3, #8
 80028f8:	b29b      	uxth	r3, r3
 80028fa:	b2db      	uxtb	r3, r3
 80028fc:	74bb      	strb	r3, [r7, #18]
            ucBuff[7] = usTemp & 0xff;
 80028fe:	8abb      	ldrh	r3, [r7, #20]
 8002900:	b2db      	uxtb	r3, r3
 8002902:	74fb      	strb	r3, [r7, #19]
            p_WitSerialWriteFunc(ucBuff, 8);
 8002904:	4b42      	ldr	r3, [pc, #264]	@ (8002a10 <WitReadReg+0x1f4>)
 8002906:	681b      	ldr	r3, [r3, #0]
 8002908:	f107 020c 	add.w	r2, r7, #12
 800290c:	2108      	movs	r1, #8
 800290e:	4610      	mov	r0, r2
 8002910:	4798      	blx	r3
            break;
 8002912:	e072      	b.n	80029fa <WitReadReg+0x1de>
        case WIT_PROTOCOL_CAN:
            if(uiReadNum > 3)return WIT_HAL_INVAL;
 8002914:	683b      	ldr	r3, [r7, #0]
 8002916:	2b03      	cmp	r3, #3
 8002918:	d902      	bls.n	8002920 <WitReadReg+0x104>
 800291a:	f06f 0305 	mvn.w	r3, #5
 800291e:	e070      	b.n	8002a02 <WitReadReg+0x1e6>
            if(p_WitCanWriteFunc == NULL)return WIT_HAL_EMPTY;
 8002920:	4b3d      	ldr	r3, [pc, #244]	@ (8002a18 <WitReadReg+0x1fc>)
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	2b00      	cmp	r3, #0
 8002926:	d102      	bne.n	800292e <WitReadReg+0x112>
 8002928:	f06f 0304 	mvn.w	r3, #4
 800292c:	e069      	b.n	8002a02 <WitReadReg+0x1e6>
            ucBuff[0] = 0xFF;
 800292e:	23ff      	movs	r3, #255	@ 0xff
 8002930:	733b      	strb	r3, [r7, #12]
            ucBuff[1] = 0xAA;
 8002932:	23aa      	movs	r3, #170	@ 0xaa
 8002934:	737b      	strb	r3, [r7, #13]
            ucBuff[2] = 0x27;
 8002936:	2327      	movs	r3, #39	@ 0x27
 8002938:	73bb      	strb	r3, [r7, #14]
            ucBuff[3] = uiReg & 0xff;
 800293a:	687b      	ldr	r3, [r7, #4]
 800293c:	b2db      	uxtb	r3, r3
 800293e:	73fb      	strb	r3, [r7, #15]
            ucBuff[4] = uiReg >> 8;
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	0a1b      	lsrs	r3, r3, #8
 8002944:	b2db      	uxtb	r3, r3
 8002946:	743b      	strb	r3, [r7, #16]
            p_WitCanWriteFunc(s_ucAddr, ucBuff, 5);
 8002948:	4b33      	ldr	r3, [pc, #204]	@ (8002a18 <WitReadReg+0x1fc>)
 800294a:	681b      	ldr	r3, [r3, #0]
 800294c:	4a31      	ldr	r2, [pc, #196]	@ (8002a14 <WitReadReg+0x1f8>)
 800294e:	7810      	ldrb	r0, [r2, #0]
 8002950:	f107 010c 	add.w	r1, r7, #12
 8002954:	2205      	movs	r2, #5
 8002956:	4798      	blx	r3
            break;
 8002958:	e04f      	b.n	80029fa <WitReadReg+0x1de>
        case WIT_PROTOCOL_I2C:
            if(p_WitI2cReadFunc == NULL)return WIT_HAL_EMPTY;
 800295a:	4b30      	ldr	r3, [pc, #192]	@ (8002a1c <WitReadReg+0x200>)
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	2b00      	cmp	r3, #0
 8002960:	d102      	bne.n	8002968 <WitReadReg+0x14c>
 8002962:	f06f 0304 	mvn.w	r3, #4
 8002966:	e04c      	b.n	8002a02 <WitReadReg+0x1e6>
            usTemp = uiReadNum << 1;
 8002968:	683b      	ldr	r3, [r7, #0]
 800296a:	b29b      	uxth	r3, r3
 800296c:	005b      	lsls	r3, r3, #1
 800296e:	82bb      	strh	r3, [r7, #20]
            if(WIT_DATA_BUFF_SIZE < usTemp)return WIT_HAL_NOMEM;
 8002970:	8abb      	ldrh	r3, [r7, #20]
 8002972:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002976:	d902      	bls.n	800297e <WitReadReg+0x162>
 8002978:	f06f 0303 	mvn.w	r3, #3
 800297c:	e041      	b.n	8002a02 <WitReadReg+0x1e6>
            if(p_WitI2cReadFunc(s_ucAddr << 1, uiReg, s_ucWitDataBuff, usTemp) == 1)
 800297e:	4b27      	ldr	r3, [pc, #156]	@ (8002a1c <WitReadReg+0x200>)
 8002980:	681c      	ldr	r4, [r3, #0]
 8002982:	4b24      	ldr	r3, [pc, #144]	@ (8002a14 <WitReadReg+0x1f8>)
 8002984:	781b      	ldrb	r3, [r3, #0]
 8002986:	005b      	lsls	r3, r3, #1
 8002988:	b2d8      	uxtb	r0, r3
 800298a:	687b      	ldr	r3, [r7, #4]
 800298c:	b2d9      	uxtb	r1, r3
 800298e:	8abb      	ldrh	r3, [r7, #20]
 8002990:	4a23      	ldr	r2, [pc, #140]	@ (8002a20 <WitReadReg+0x204>)
 8002992:	47a0      	blx	r4
 8002994:	4603      	mov	r3, r0
 8002996:	2b01      	cmp	r3, #1
 8002998:	d12e      	bne.n	80029f8 <WitReadReg+0x1dc>
            {
                if(p_WitRegUpdateCbFunc == NULL)return WIT_HAL_EMPTY;
 800299a:	4b22      	ldr	r3, [pc, #136]	@ (8002a24 <WitReadReg+0x208>)
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	2b00      	cmp	r3, #0
 80029a0:	d102      	bne.n	80029a8 <WitReadReg+0x18c>
 80029a2:	f06f 0304 	mvn.w	r3, #4
 80029a6:	e02c      	b.n	8002a02 <WitReadReg+0x1e6>
                for(i = 0; i < uiReadNum; i++)
 80029a8:	2300      	movs	r3, #0
 80029aa:	82fb      	strh	r3, [r7, #22]
 80029ac:	e017      	b.n	80029de <WitReadReg+0x1c2>
                {
                    sReg[i+uiReg] = ((uint16_t)s_ucWitDataBuff[(i<<1)+1] << 8) | s_ucWitDataBuff[i<<1];
 80029ae:	8afb      	ldrh	r3, [r7, #22]
 80029b0:	005b      	lsls	r3, r3, #1
 80029b2:	3301      	adds	r3, #1
 80029b4:	4a1a      	ldr	r2, [pc, #104]	@ (8002a20 <WitReadReg+0x204>)
 80029b6:	5cd3      	ldrb	r3, [r2, r3]
 80029b8:	b21b      	sxth	r3, r3
 80029ba:	021b      	lsls	r3, r3, #8
 80029bc:	b219      	sxth	r1, r3
 80029be:	8afb      	ldrh	r3, [r7, #22]
 80029c0:	005b      	lsls	r3, r3, #1
 80029c2:	4a17      	ldr	r2, [pc, #92]	@ (8002a20 <WitReadReg+0x204>)
 80029c4:	5cd3      	ldrb	r3, [r2, r3]
 80029c6:	b21a      	sxth	r2, r3
 80029c8:	8af8      	ldrh	r0, [r7, #22]
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	4403      	add	r3, r0
 80029ce:	430a      	orrs	r2, r1
 80029d0:	b211      	sxth	r1, r2
 80029d2:	4a15      	ldr	r2, [pc, #84]	@ (8002a28 <WitReadReg+0x20c>)
 80029d4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
                for(i = 0; i < uiReadNum; i++)
 80029d8:	8afb      	ldrh	r3, [r7, #22]
 80029da:	3301      	adds	r3, #1
 80029dc:	82fb      	strh	r3, [r7, #22]
 80029de:	8afb      	ldrh	r3, [r7, #22]
 80029e0:	683a      	ldr	r2, [r7, #0]
 80029e2:	429a      	cmp	r2, r3
 80029e4:	d8e3      	bhi.n	80029ae <WitReadReg+0x192>
                }
                p_WitRegUpdateCbFunc(uiReg, uiReadNum);
 80029e6:	4b0f      	ldr	r3, [pc, #60]	@ (8002a24 <WitReadReg+0x208>)
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	6839      	ldr	r1, [r7, #0]
 80029ec:	6878      	ldr	r0, [r7, #4]
 80029ee:	4798      	blx	r3
            }
			
            break;
 80029f0:	e002      	b.n	80029f8 <WitReadReg+0x1dc>
		default: 
            return WIT_HAL_INVAL;
 80029f2:	f06f 0305 	mvn.w	r3, #5
 80029f6:	e004      	b.n	8002a02 <WitReadReg+0x1e6>
            break;
 80029f8:	bf00      	nop
    }
    s_uiReadRegIndex = uiReg;
 80029fa:	4a0c      	ldr	r2, [pc, #48]	@ (8002a2c <WitReadReg+0x210>)
 80029fc:	687b      	ldr	r3, [r7, #4]
 80029fe:	6013      	str	r3, [r2, #0]

    return WIT_HAL_OK;
 8002a00:	2300      	movs	r3, #0
}
 8002a02:	4618      	mov	r0, r3
 8002a04:	371c      	adds	r7, #28
 8002a06:	46bd      	mov	sp, r7
 8002a08:	bd90      	pop	{r4, r7, pc}
 8002a0a:	bf00      	nop
 8002a0c:	240007c0 	.word	0x240007c0
 8002a10:	240006ac 	.word	0x240006ac
 8002a14:	2400000c 	.word	0x2400000c
 8002a18:	240006b4 	.word	0x240006b4
 8002a1c:	240006b0 	.word	0x240006b0
 8002a20:	240006bc 	.word	0x240006bc
 8002a24:	240006b8 	.word	0x240006b8
 8002a28:	240007c8 	.word	0x240007c8
 8002a2c:	240007c4 	.word	0x240007c4

08002a30 <WitInit>:
int32_t WitInit(uint32_t uiProtocol, uint8_t ucAddr)
{
 8002a30:	b480      	push	{r7}
 8002a32:	b083      	sub	sp, #12
 8002a34:	af00      	add	r7, sp, #0
 8002a36:	6078      	str	r0, [r7, #4]
 8002a38:	460b      	mov	r3, r1
 8002a3a:	70fb      	strb	r3, [r7, #3]
	if(uiProtocol > WIT_PROTOCOL_I2C)return WIT_HAL_INVAL;
 8002a3c:	687b      	ldr	r3, [r7, #4]
 8002a3e:	2b03      	cmp	r3, #3
 8002a40:	d902      	bls.n	8002a48 <WitInit+0x18>
 8002a42:	f06f 0305 	mvn.w	r3, #5
 8002a46:	e009      	b.n	8002a5c <WitInit+0x2c>
    s_uiProtoclo = uiProtocol;
 8002a48:	4a07      	ldr	r2, [pc, #28]	@ (8002a68 <WitInit+0x38>)
 8002a4a:	687b      	ldr	r3, [r7, #4]
 8002a4c:	6013      	str	r3, [r2, #0]
    s_ucAddr = ucAddr;
 8002a4e:	4a07      	ldr	r2, [pc, #28]	@ (8002a6c <WitInit+0x3c>)
 8002a50:	78fb      	ldrb	r3, [r7, #3]
 8002a52:	7013      	strb	r3, [r2, #0]
    s_uiWitDataCnt = 0;
 8002a54:	4b06      	ldr	r3, [pc, #24]	@ (8002a70 <WitInit+0x40>)
 8002a56:	2200      	movs	r2, #0
 8002a58:	601a      	str	r2, [r3, #0]
    return WIT_HAL_OK;
 8002a5a:	2300      	movs	r3, #0
}
 8002a5c:	4618      	mov	r0, r3
 8002a5e:	370c      	adds	r7, #12
 8002a60:	46bd      	mov	sp, r7
 8002a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a66:	4770      	bx	lr
 8002a68:	240007c0 	.word	0x240007c0
 8002a6c:	2400000c 	.word	0x2400000c
 8002a70:	240007bc 	.word	0x240007bc

08002a74 <Reset_Handler>:
 8002a74:	f8df d038 	ldr.w	sp, [pc, #56]	@ 8002ab0 <LoopFillZerobss+0xe>
 8002a78:	f7ff fc5c 	bl	8002334 <ExitRun0Mode>
 8002a7c:	f7ff fbca 	bl	8002214 <SystemInit>
 8002a80:	480c      	ldr	r0, [pc, #48]	@ (8002ab4 <LoopFillZerobss+0x12>)
 8002a82:	490d      	ldr	r1, [pc, #52]	@ (8002ab8 <LoopFillZerobss+0x16>)
 8002a84:	4a0d      	ldr	r2, [pc, #52]	@ (8002abc <LoopFillZerobss+0x1a>)
 8002a86:	2300      	movs	r3, #0
 8002a88:	e002      	b.n	8002a90 <LoopCopyDataInit>

08002a8a <CopyDataInit>:
 8002a8a:	58d4      	ldr	r4, [r2, r3]
 8002a8c:	50c4      	str	r4, [r0, r3]
 8002a8e:	3304      	adds	r3, #4

08002a90 <LoopCopyDataInit>:
 8002a90:	18c4      	adds	r4, r0, r3
 8002a92:	428c      	cmp	r4, r1
 8002a94:	d3f9      	bcc.n	8002a8a <CopyDataInit>
 8002a96:	4a0a      	ldr	r2, [pc, #40]	@ (8002ac0 <LoopFillZerobss+0x1e>)
 8002a98:	4c0a      	ldr	r4, [pc, #40]	@ (8002ac4 <LoopFillZerobss+0x22>)
 8002a9a:	2300      	movs	r3, #0
 8002a9c:	e001      	b.n	8002aa2 <LoopFillZerobss>

08002a9e <FillZerobss>:
 8002a9e:	6013      	str	r3, [r2, #0]
 8002aa0:	3204      	adds	r2, #4

08002aa2 <LoopFillZerobss>:
 8002aa2:	42a2      	cmp	r2, r4
 8002aa4:	d3fb      	bcc.n	8002a9e <FillZerobss>
 8002aa6:	f008 ff1d 	bl	800b8e4 <__libc_init_array>
 8002aaa:	f7fe f81d 	bl	8000ae8 <main>
 8002aae:	4770      	bx	lr
 8002ab0:	24050000 	.word	0x24050000
 8002ab4:	24000000 	.word	0x24000000
 8002ab8:	240001e0 	.word	0x240001e0
 8002abc:	0800e200 	.word	0x0800e200
 8002ac0:	240001e0 	.word	0x240001e0
 8002ac4:	24000a38 	.word	0x24000a38

08002ac8 <ADC3_IRQHandler>:
 8002ac8:	e7fe      	b.n	8002ac8 <ADC3_IRQHandler>
	...

08002acc <HAL_Init>:
 8002acc:	b580      	push	{r7, lr}
 8002ace:	b082      	sub	sp, #8
 8002ad0:	af00      	add	r7, sp, #0
 8002ad2:	2003      	movs	r0, #3
 8002ad4:	f000 f980 	bl	8002dd8 <HAL_NVIC_SetPriorityGrouping>
 8002ad8:	f002 fd4a 	bl	8005570 <HAL_RCC_GetSysClockFreq>
 8002adc:	4602      	mov	r2, r0
 8002ade:	4b15      	ldr	r3, [pc, #84]	@ (8002b34 <HAL_Init+0x68>)
 8002ae0:	699b      	ldr	r3, [r3, #24]
 8002ae2:	0a1b      	lsrs	r3, r3, #8
 8002ae4:	f003 030f 	and.w	r3, r3, #15
 8002ae8:	4913      	ldr	r1, [pc, #76]	@ (8002b38 <HAL_Init+0x6c>)
 8002aea:	5ccb      	ldrb	r3, [r1, r3]
 8002aec:	f003 031f 	and.w	r3, r3, #31
 8002af0:	fa22 f303 	lsr.w	r3, r2, r3
 8002af4:	607b      	str	r3, [r7, #4]
 8002af6:	4b0f      	ldr	r3, [pc, #60]	@ (8002b34 <HAL_Init+0x68>)
 8002af8:	699b      	ldr	r3, [r3, #24]
 8002afa:	f003 030f 	and.w	r3, r3, #15
 8002afe:	4a0e      	ldr	r2, [pc, #56]	@ (8002b38 <HAL_Init+0x6c>)
 8002b00:	5cd3      	ldrb	r3, [r2, r3]
 8002b02:	f003 031f 	and.w	r3, r3, #31
 8002b06:	687a      	ldr	r2, [r7, #4]
 8002b08:	fa22 f303 	lsr.w	r3, r2, r3
 8002b0c:	4a0b      	ldr	r2, [pc, #44]	@ (8002b3c <HAL_Init+0x70>)
 8002b0e:	6013      	str	r3, [r2, #0]
 8002b10:	4a0b      	ldr	r2, [pc, #44]	@ (8002b40 <HAL_Init+0x74>)
 8002b12:	687b      	ldr	r3, [r7, #4]
 8002b14:	6013      	str	r3, [r2, #0]
 8002b16:	200f      	movs	r0, #15
 8002b18:	f000 f814 	bl	8002b44 <HAL_InitTick>
 8002b1c:	4603      	mov	r3, r0
 8002b1e:	2b00      	cmp	r3, #0
 8002b20:	d001      	beq.n	8002b26 <HAL_Init+0x5a>
 8002b22:	2301      	movs	r3, #1
 8002b24:	e002      	b.n	8002b2c <HAL_Init+0x60>
 8002b26:	f7ff f85f 	bl	8001be8 <HAL_MspInit>
 8002b2a:	2300      	movs	r3, #0
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	3708      	adds	r7, #8
 8002b30:	46bd      	mov	sp, r7
 8002b32:	bd80      	pop	{r7, pc}
 8002b34:	58024400 	.word	0x58024400
 8002b38:	0800dc30 	.word	0x0800dc30
 8002b3c:	24000008 	.word	0x24000008
 8002b40:	24000004 	.word	0x24000004

08002b44 <HAL_InitTick>:
 8002b44:	b580      	push	{r7, lr}
 8002b46:	b082      	sub	sp, #8
 8002b48:	af00      	add	r7, sp, #0
 8002b4a:	6078      	str	r0, [r7, #4]
 8002b4c:	4b15      	ldr	r3, [pc, #84]	@ (8002ba4 <HAL_InitTick+0x60>)
 8002b4e:	781b      	ldrb	r3, [r3, #0]
 8002b50:	2b00      	cmp	r3, #0
 8002b52:	d101      	bne.n	8002b58 <HAL_InitTick+0x14>
 8002b54:	2301      	movs	r3, #1
 8002b56:	e021      	b.n	8002b9c <HAL_InitTick+0x58>
 8002b58:	4b13      	ldr	r3, [pc, #76]	@ (8002ba8 <HAL_InitTick+0x64>)
 8002b5a:	681a      	ldr	r2, [r3, #0]
 8002b5c:	4b11      	ldr	r3, [pc, #68]	@ (8002ba4 <HAL_InitTick+0x60>)
 8002b5e:	781b      	ldrb	r3, [r3, #0]
 8002b60:	4619      	mov	r1, r3
 8002b62:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002b66:	fbb3 f3f1 	udiv	r3, r3, r1
 8002b6a:	fbb2 f3f3 	udiv	r3, r2, r3
 8002b6e:	4618      	mov	r0, r3
 8002b70:	f000 f965 	bl	8002e3e <HAL_SYSTICK_Config>
 8002b74:	4603      	mov	r3, r0
 8002b76:	2b00      	cmp	r3, #0
 8002b78:	d001      	beq.n	8002b7e <HAL_InitTick+0x3a>
 8002b7a:	2301      	movs	r3, #1
 8002b7c:	e00e      	b.n	8002b9c <HAL_InitTick+0x58>
 8002b7e:	687b      	ldr	r3, [r7, #4]
 8002b80:	2b0f      	cmp	r3, #15
 8002b82:	d80a      	bhi.n	8002b9a <HAL_InitTick+0x56>
 8002b84:	2200      	movs	r2, #0
 8002b86:	6879      	ldr	r1, [r7, #4]
 8002b88:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002b8c:	f000 f92f 	bl	8002dee <HAL_NVIC_SetPriority>
 8002b90:	4a06      	ldr	r2, [pc, #24]	@ (8002bac <HAL_InitTick+0x68>)
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	6013      	str	r3, [r2, #0]
 8002b96:	2300      	movs	r3, #0
 8002b98:	e000      	b.n	8002b9c <HAL_InitTick+0x58>
 8002b9a:	2301      	movs	r3, #1
 8002b9c:	4618      	mov	r0, r3
 8002b9e:	3708      	adds	r7, #8
 8002ba0:	46bd      	mov	sp, r7
 8002ba2:	bd80      	pop	{r7, pc}
 8002ba4:	24000014 	.word	0x24000014
 8002ba8:	24000004 	.word	0x24000004
 8002bac:	24000010 	.word	0x24000010

08002bb0 <HAL_IncTick>:
 8002bb0:	b480      	push	{r7}
 8002bb2:	af00      	add	r7, sp, #0
 8002bb4:	4b06      	ldr	r3, [pc, #24]	@ (8002bd0 <HAL_IncTick+0x20>)
 8002bb6:	781b      	ldrb	r3, [r3, #0]
 8002bb8:	461a      	mov	r2, r3
 8002bba:	4b06      	ldr	r3, [pc, #24]	@ (8002bd4 <HAL_IncTick+0x24>)
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	4413      	add	r3, r2
 8002bc0:	4a04      	ldr	r2, [pc, #16]	@ (8002bd4 <HAL_IncTick+0x24>)
 8002bc2:	6013      	str	r3, [r2, #0]
 8002bc4:	bf00      	nop
 8002bc6:	46bd      	mov	sp, r7
 8002bc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bcc:	4770      	bx	lr
 8002bce:	bf00      	nop
 8002bd0:	24000014 	.word	0x24000014
 8002bd4:	240008e8 	.word	0x240008e8

08002bd8 <HAL_GetTick>:
 8002bd8:	b480      	push	{r7}
 8002bda:	af00      	add	r7, sp, #0
 8002bdc:	4b03      	ldr	r3, [pc, #12]	@ (8002bec <HAL_GetTick+0x14>)
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	4618      	mov	r0, r3
 8002be2:	46bd      	mov	sp, r7
 8002be4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002be8:	4770      	bx	lr
 8002bea:	bf00      	nop
 8002bec:	240008e8 	.word	0x240008e8

08002bf0 <HAL_Delay>:
 8002bf0:	b580      	push	{r7, lr}
 8002bf2:	b084      	sub	sp, #16
 8002bf4:	af00      	add	r7, sp, #0
 8002bf6:	6078      	str	r0, [r7, #4]
 8002bf8:	f7ff ffee 	bl	8002bd8 <HAL_GetTick>
 8002bfc:	60b8      	str	r0, [r7, #8]
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	60fb      	str	r3, [r7, #12]
 8002c02:	68fb      	ldr	r3, [r7, #12]
 8002c04:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8002c08:	d005      	beq.n	8002c16 <HAL_Delay+0x26>
 8002c0a:	4b0a      	ldr	r3, [pc, #40]	@ (8002c34 <HAL_Delay+0x44>)
 8002c0c:	781b      	ldrb	r3, [r3, #0]
 8002c0e:	461a      	mov	r2, r3
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	4413      	add	r3, r2
 8002c14:	60fb      	str	r3, [r7, #12]
 8002c16:	bf00      	nop
 8002c18:	f7ff ffde 	bl	8002bd8 <HAL_GetTick>
 8002c1c:	4602      	mov	r2, r0
 8002c1e:	68bb      	ldr	r3, [r7, #8]
 8002c20:	1ad3      	subs	r3, r2, r3
 8002c22:	68fa      	ldr	r2, [r7, #12]
 8002c24:	429a      	cmp	r2, r3
 8002c26:	d8f7      	bhi.n	8002c18 <HAL_Delay+0x28>
 8002c28:	bf00      	nop
 8002c2a:	bf00      	nop
 8002c2c:	3710      	adds	r7, #16
 8002c2e:	46bd      	mov	sp, r7
 8002c30:	bd80      	pop	{r7, pc}
 8002c32:	bf00      	nop
 8002c34:	24000014 	.word	0x24000014

08002c38 <__NVIC_SetPriorityGrouping>:
 8002c38:	b480      	push	{r7}
 8002c3a:	b085      	sub	sp, #20
 8002c3c:	af00      	add	r7, sp, #0
 8002c3e:	6078      	str	r0, [r7, #4]
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	f003 0307 	and.w	r3, r3, #7
 8002c46:	60fb      	str	r3, [r7, #12]
 8002c48:	4b0b      	ldr	r3, [pc, #44]	@ (8002c78 <__NVIC_SetPriorityGrouping+0x40>)
 8002c4a:	68db      	ldr	r3, [r3, #12]
 8002c4c:	60bb      	str	r3, [r7, #8]
 8002c4e:	68ba      	ldr	r2, [r7, #8]
 8002c50:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002c54:	4013      	ands	r3, r2
 8002c56:	60bb      	str	r3, [r7, #8]
 8002c58:	68fb      	ldr	r3, [r7, #12]
 8002c5a:	021a      	lsls	r2, r3, #8
 8002c5c:	68bb      	ldr	r3, [r7, #8]
 8002c5e:	431a      	orrs	r2, r3
 8002c60:	4b06      	ldr	r3, [pc, #24]	@ (8002c7c <__NVIC_SetPriorityGrouping+0x44>)
 8002c62:	4313      	orrs	r3, r2
 8002c64:	60bb      	str	r3, [r7, #8]
 8002c66:	4a04      	ldr	r2, [pc, #16]	@ (8002c78 <__NVIC_SetPriorityGrouping+0x40>)
 8002c68:	68bb      	ldr	r3, [r7, #8]
 8002c6a:	60d3      	str	r3, [r2, #12]
 8002c6c:	bf00      	nop
 8002c6e:	3714      	adds	r7, #20
 8002c70:	46bd      	mov	sp, r7
 8002c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c76:	4770      	bx	lr
 8002c78:	e000ed00 	.word	0xe000ed00
 8002c7c:	05fa0000 	.word	0x05fa0000

08002c80 <__NVIC_GetPriorityGrouping>:
 8002c80:	b480      	push	{r7}
 8002c82:	af00      	add	r7, sp, #0
 8002c84:	4b04      	ldr	r3, [pc, #16]	@ (8002c98 <__NVIC_GetPriorityGrouping+0x18>)
 8002c86:	68db      	ldr	r3, [r3, #12]
 8002c88:	0a1b      	lsrs	r3, r3, #8
 8002c8a:	f003 0307 	and.w	r3, r3, #7
 8002c8e:	4618      	mov	r0, r3
 8002c90:	46bd      	mov	sp, r7
 8002c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c96:	4770      	bx	lr
 8002c98:	e000ed00 	.word	0xe000ed00

08002c9c <__NVIC_EnableIRQ>:
 8002c9c:	b480      	push	{r7}
 8002c9e:	b083      	sub	sp, #12
 8002ca0:	af00      	add	r7, sp, #0
 8002ca2:	4603      	mov	r3, r0
 8002ca4:	80fb      	strh	r3, [r7, #6]
 8002ca6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002caa:	2b00      	cmp	r3, #0
 8002cac:	db0b      	blt.n	8002cc6 <__NVIC_EnableIRQ+0x2a>
 8002cae:	88fb      	ldrh	r3, [r7, #6]
 8002cb0:	f003 021f 	and.w	r2, r3, #31
 8002cb4:	4907      	ldr	r1, [pc, #28]	@ (8002cd4 <__NVIC_EnableIRQ+0x38>)
 8002cb6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002cba:	095b      	lsrs	r3, r3, #5
 8002cbc:	2001      	movs	r0, #1
 8002cbe:	fa00 f202 	lsl.w	r2, r0, r2
 8002cc2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002cc6:	bf00      	nop
 8002cc8:	370c      	adds	r7, #12
 8002cca:	46bd      	mov	sp, r7
 8002ccc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cd0:	4770      	bx	lr
 8002cd2:	bf00      	nop
 8002cd4:	e000e100 	.word	0xe000e100

08002cd8 <__NVIC_SetPriority>:
 8002cd8:	b480      	push	{r7}
 8002cda:	b083      	sub	sp, #12
 8002cdc:	af00      	add	r7, sp, #0
 8002cde:	4603      	mov	r3, r0
 8002ce0:	6039      	str	r1, [r7, #0]
 8002ce2:	80fb      	strh	r3, [r7, #6]
 8002ce4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	db0a      	blt.n	8002d02 <__NVIC_SetPriority+0x2a>
 8002cec:	683b      	ldr	r3, [r7, #0]
 8002cee:	b2da      	uxtb	r2, r3
 8002cf0:	490c      	ldr	r1, [pc, #48]	@ (8002d24 <__NVIC_SetPriority+0x4c>)
 8002cf2:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002cf6:	0112      	lsls	r2, r2, #4
 8002cf8:	b2d2      	uxtb	r2, r2
 8002cfa:	440b      	add	r3, r1
 8002cfc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002d00:	e00a      	b.n	8002d18 <__NVIC_SetPriority+0x40>
 8002d02:	683b      	ldr	r3, [r7, #0]
 8002d04:	b2da      	uxtb	r2, r3
 8002d06:	4908      	ldr	r1, [pc, #32]	@ (8002d28 <__NVIC_SetPriority+0x50>)
 8002d08:	88fb      	ldrh	r3, [r7, #6]
 8002d0a:	f003 030f 	and.w	r3, r3, #15
 8002d0e:	3b04      	subs	r3, #4
 8002d10:	0112      	lsls	r2, r2, #4
 8002d12:	b2d2      	uxtb	r2, r2
 8002d14:	440b      	add	r3, r1
 8002d16:	761a      	strb	r2, [r3, #24]
 8002d18:	bf00      	nop
 8002d1a:	370c      	adds	r7, #12
 8002d1c:	46bd      	mov	sp, r7
 8002d1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d22:	4770      	bx	lr
 8002d24:	e000e100 	.word	0xe000e100
 8002d28:	e000ed00 	.word	0xe000ed00

08002d2c <NVIC_EncodePriority>:
 8002d2c:	b480      	push	{r7}
 8002d2e:	b089      	sub	sp, #36	@ 0x24
 8002d30:	af00      	add	r7, sp, #0
 8002d32:	60f8      	str	r0, [r7, #12]
 8002d34:	60b9      	str	r1, [r7, #8]
 8002d36:	607a      	str	r2, [r7, #4]
 8002d38:	68fb      	ldr	r3, [r7, #12]
 8002d3a:	f003 0307 	and.w	r3, r3, #7
 8002d3e:	61fb      	str	r3, [r7, #28]
 8002d40:	69fb      	ldr	r3, [r7, #28]
 8002d42:	f1c3 0307 	rsb	r3, r3, #7
 8002d46:	2b04      	cmp	r3, #4
 8002d48:	bf28      	it	cs
 8002d4a:	2304      	movcs	r3, #4
 8002d4c:	61bb      	str	r3, [r7, #24]
 8002d4e:	69fb      	ldr	r3, [r7, #28]
 8002d50:	3304      	adds	r3, #4
 8002d52:	2b06      	cmp	r3, #6
 8002d54:	d902      	bls.n	8002d5c <NVIC_EncodePriority+0x30>
 8002d56:	69fb      	ldr	r3, [r7, #28]
 8002d58:	3b03      	subs	r3, #3
 8002d5a:	e000      	b.n	8002d5e <NVIC_EncodePriority+0x32>
 8002d5c:	2300      	movs	r3, #0
 8002d5e:	617b      	str	r3, [r7, #20]
 8002d60:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8002d64:	69bb      	ldr	r3, [r7, #24]
 8002d66:	fa02 f303 	lsl.w	r3, r2, r3
 8002d6a:	43da      	mvns	r2, r3
 8002d6c:	68bb      	ldr	r3, [r7, #8]
 8002d6e:	401a      	ands	r2, r3
 8002d70:	697b      	ldr	r3, [r7, #20]
 8002d72:	409a      	lsls	r2, r3
 8002d74:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8002d78:	697b      	ldr	r3, [r7, #20]
 8002d7a:	fa01 f303 	lsl.w	r3, r1, r3
 8002d7e:	43d9      	mvns	r1, r3
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	400b      	ands	r3, r1
 8002d84:	4313      	orrs	r3, r2
 8002d86:	4618      	mov	r0, r3
 8002d88:	3724      	adds	r7, #36	@ 0x24
 8002d8a:	46bd      	mov	sp, r7
 8002d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d90:	4770      	bx	lr
	...

08002d94 <SysTick_Config>:
 8002d94:	b580      	push	{r7, lr}
 8002d96:	b082      	sub	sp, #8
 8002d98:	af00      	add	r7, sp, #0
 8002d9a:	6078      	str	r0, [r7, #4]
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	3b01      	subs	r3, #1
 8002da0:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002da4:	d301      	bcc.n	8002daa <SysTick_Config+0x16>
 8002da6:	2301      	movs	r3, #1
 8002da8:	e00f      	b.n	8002dca <SysTick_Config+0x36>
 8002daa:	4a0a      	ldr	r2, [pc, #40]	@ (8002dd4 <SysTick_Config+0x40>)
 8002dac:	687b      	ldr	r3, [r7, #4]
 8002dae:	3b01      	subs	r3, #1
 8002db0:	6053      	str	r3, [r2, #4]
 8002db2:	210f      	movs	r1, #15
 8002db4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002db8:	f7ff ff8e 	bl	8002cd8 <__NVIC_SetPriority>
 8002dbc:	4b05      	ldr	r3, [pc, #20]	@ (8002dd4 <SysTick_Config+0x40>)
 8002dbe:	2200      	movs	r2, #0
 8002dc0:	609a      	str	r2, [r3, #8]
 8002dc2:	4b04      	ldr	r3, [pc, #16]	@ (8002dd4 <SysTick_Config+0x40>)
 8002dc4:	2207      	movs	r2, #7
 8002dc6:	601a      	str	r2, [r3, #0]
 8002dc8:	2300      	movs	r3, #0
 8002dca:	4618      	mov	r0, r3
 8002dcc:	3708      	adds	r7, #8
 8002dce:	46bd      	mov	sp, r7
 8002dd0:	bd80      	pop	{r7, pc}
 8002dd2:	bf00      	nop
 8002dd4:	e000e010 	.word	0xe000e010

08002dd8 <HAL_NVIC_SetPriorityGrouping>:
 8002dd8:	b580      	push	{r7, lr}
 8002dda:	b082      	sub	sp, #8
 8002ddc:	af00      	add	r7, sp, #0
 8002dde:	6078      	str	r0, [r7, #4]
 8002de0:	6878      	ldr	r0, [r7, #4]
 8002de2:	f7ff ff29 	bl	8002c38 <__NVIC_SetPriorityGrouping>
 8002de6:	bf00      	nop
 8002de8:	3708      	adds	r7, #8
 8002dea:	46bd      	mov	sp, r7
 8002dec:	bd80      	pop	{r7, pc}

08002dee <HAL_NVIC_SetPriority>:
 8002dee:	b580      	push	{r7, lr}
 8002df0:	b086      	sub	sp, #24
 8002df2:	af00      	add	r7, sp, #0
 8002df4:	4603      	mov	r3, r0
 8002df6:	60b9      	str	r1, [r7, #8]
 8002df8:	607a      	str	r2, [r7, #4]
 8002dfa:	81fb      	strh	r3, [r7, #14]
 8002dfc:	f7ff ff40 	bl	8002c80 <__NVIC_GetPriorityGrouping>
 8002e00:	6178      	str	r0, [r7, #20]
 8002e02:	687a      	ldr	r2, [r7, #4]
 8002e04:	68b9      	ldr	r1, [r7, #8]
 8002e06:	6978      	ldr	r0, [r7, #20]
 8002e08:	f7ff ff90 	bl	8002d2c <NVIC_EncodePriority>
 8002e0c:	4602      	mov	r2, r0
 8002e0e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8002e12:	4611      	mov	r1, r2
 8002e14:	4618      	mov	r0, r3
 8002e16:	f7ff ff5f 	bl	8002cd8 <__NVIC_SetPriority>
 8002e1a:	bf00      	nop
 8002e1c:	3718      	adds	r7, #24
 8002e1e:	46bd      	mov	sp, r7
 8002e20:	bd80      	pop	{r7, pc}

08002e22 <HAL_NVIC_EnableIRQ>:
 8002e22:	b580      	push	{r7, lr}
 8002e24:	b082      	sub	sp, #8
 8002e26:	af00      	add	r7, sp, #0
 8002e28:	4603      	mov	r3, r0
 8002e2a:	80fb      	strh	r3, [r7, #6]
 8002e2c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002e30:	4618      	mov	r0, r3
 8002e32:	f7ff ff33 	bl	8002c9c <__NVIC_EnableIRQ>
 8002e36:	bf00      	nop
 8002e38:	3708      	adds	r7, #8
 8002e3a:	46bd      	mov	sp, r7
 8002e3c:	bd80      	pop	{r7, pc}

08002e3e <HAL_SYSTICK_Config>:
 8002e3e:	b580      	push	{r7, lr}
 8002e40:	b082      	sub	sp, #8
 8002e42:	af00      	add	r7, sp, #0
 8002e44:	6078      	str	r0, [r7, #4]
 8002e46:	6878      	ldr	r0, [r7, #4]
 8002e48:	f7ff ffa4 	bl	8002d94 <SysTick_Config>
 8002e4c:	4603      	mov	r3, r0
 8002e4e:	4618      	mov	r0, r3
 8002e50:	3708      	adds	r7, #8
 8002e52:	46bd      	mov	sp, r7
 8002e54:	bd80      	pop	{r7, pc}
	...

08002e58 <HAL_MPU_Disable>:
 8002e58:	b480      	push	{r7}
 8002e5a:	af00      	add	r7, sp, #0
 8002e5c:	f3bf 8f5f 	dmb	sy
 8002e60:	bf00      	nop
 8002e62:	4b07      	ldr	r3, [pc, #28]	@ (8002e80 <HAL_MPU_Disable+0x28>)
 8002e64:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e66:	4a06      	ldr	r2, [pc, #24]	@ (8002e80 <HAL_MPU_Disable+0x28>)
 8002e68:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8002e6c:	6253      	str	r3, [r2, #36]	@ 0x24
 8002e6e:	4b05      	ldr	r3, [pc, #20]	@ (8002e84 <HAL_MPU_Disable+0x2c>)
 8002e70:	2200      	movs	r2, #0
 8002e72:	605a      	str	r2, [r3, #4]
 8002e74:	bf00      	nop
 8002e76:	46bd      	mov	sp, r7
 8002e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e7c:	4770      	bx	lr
 8002e7e:	bf00      	nop
 8002e80:	e000ed00 	.word	0xe000ed00
 8002e84:	e000ed90 	.word	0xe000ed90

08002e88 <HAL_MPU_Enable>:
 8002e88:	b480      	push	{r7}
 8002e8a:	b083      	sub	sp, #12
 8002e8c:	af00      	add	r7, sp, #0
 8002e8e:	6078      	str	r0, [r7, #4]
 8002e90:	4a0b      	ldr	r2, [pc, #44]	@ (8002ec0 <HAL_MPU_Enable+0x38>)
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	f043 0301 	orr.w	r3, r3, #1
 8002e98:	6053      	str	r3, [r2, #4]
 8002e9a:	4b0a      	ldr	r3, [pc, #40]	@ (8002ec4 <HAL_MPU_Enable+0x3c>)
 8002e9c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002e9e:	4a09      	ldr	r2, [pc, #36]	@ (8002ec4 <HAL_MPU_Enable+0x3c>)
 8002ea0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8002ea4:	6253      	str	r3, [r2, #36]	@ 0x24
 8002ea6:	f3bf 8f4f 	dsb	sy
 8002eaa:	bf00      	nop
 8002eac:	f3bf 8f6f 	isb	sy
 8002eb0:	bf00      	nop
 8002eb2:	bf00      	nop
 8002eb4:	370c      	adds	r7, #12
 8002eb6:	46bd      	mov	sp, r7
 8002eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ebc:	4770      	bx	lr
 8002ebe:	bf00      	nop
 8002ec0:	e000ed90 	.word	0xe000ed90
 8002ec4:	e000ed00 	.word	0xe000ed00

08002ec8 <HAL_MPU_ConfigRegion>:
 8002ec8:	b480      	push	{r7}
 8002eca:	b083      	sub	sp, #12
 8002ecc:	af00      	add	r7, sp, #0
 8002ece:	6078      	str	r0, [r7, #4]
 8002ed0:	687b      	ldr	r3, [r7, #4]
 8002ed2:	785a      	ldrb	r2, [r3, #1]
 8002ed4:	4b1b      	ldr	r3, [pc, #108]	@ (8002f44 <HAL_MPU_ConfigRegion+0x7c>)
 8002ed6:	609a      	str	r2, [r3, #8]
 8002ed8:	4b1a      	ldr	r3, [pc, #104]	@ (8002f44 <HAL_MPU_ConfigRegion+0x7c>)
 8002eda:	691b      	ldr	r3, [r3, #16]
 8002edc:	4a19      	ldr	r2, [pc, #100]	@ (8002f44 <HAL_MPU_ConfigRegion+0x7c>)
 8002ede:	f023 0301 	bic.w	r3, r3, #1
 8002ee2:	6113      	str	r3, [r2, #16]
 8002ee4:	4a17      	ldr	r2, [pc, #92]	@ (8002f44 <HAL_MPU_ConfigRegion+0x7c>)
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	685b      	ldr	r3, [r3, #4]
 8002eea:	60d3      	str	r3, [r2, #12]
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	7b1b      	ldrb	r3, [r3, #12]
 8002ef0:	071a      	lsls	r2, r3, #28
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	7adb      	ldrb	r3, [r3, #11]
 8002ef6:	061b      	lsls	r3, r3, #24
 8002ef8:	431a      	orrs	r2, r3
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	7a9b      	ldrb	r3, [r3, #10]
 8002efe:	04db      	lsls	r3, r3, #19
 8002f00:	431a      	orrs	r2, r3
 8002f02:	687b      	ldr	r3, [r7, #4]
 8002f04:	7b5b      	ldrb	r3, [r3, #13]
 8002f06:	049b      	lsls	r3, r3, #18
 8002f08:	431a      	orrs	r2, r3
 8002f0a:	687b      	ldr	r3, [r7, #4]
 8002f0c:	7b9b      	ldrb	r3, [r3, #14]
 8002f0e:	045b      	lsls	r3, r3, #17
 8002f10:	431a      	orrs	r2, r3
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	7bdb      	ldrb	r3, [r3, #15]
 8002f16:	041b      	lsls	r3, r3, #16
 8002f18:	431a      	orrs	r2, r3
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	7a5b      	ldrb	r3, [r3, #9]
 8002f1e:	021b      	lsls	r3, r3, #8
 8002f20:	431a      	orrs	r2, r3
 8002f22:	687b      	ldr	r3, [r7, #4]
 8002f24:	7a1b      	ldrb	r3, [r3, #8]
 8002f26:	005b      	lsls	r3, r3, #1
 8002f28:	4313      	orrs	r3, r2
 8002f2a:	687a      	ldr	r2, [r7, #4]
 8002f2c:	7812      	ldrb	r2, [r2, #0]
 8002f2e:	4611      	mov	r1, r2
 8002f30:	4a04      	ldr	r2, [pc, #16]	@ (8002f44 <HAL_MPU_ConfigRegion+0x7c>)
 8002f32:	430b      	orrs	r3, r1
 8002f34:	6113      	str	r3, [r2, #16]
 8002f36:	bf00      	nop
 8002f38:	370c      	adds	r7, #12
 8002f3a:	46bd      	mov	sp, r7
 8002f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f40:	4770      	bx	lr
 8002f42:	bf00      	nop
 8002f44:	e000ed90 	.word	0xe000ed90

08002f48 <HAL_DMA_Abort>:
 8002f48:	b580      	push	{r7, lr}
 8002f4a:	b086      	sub	sp, #24
 8002f4c:	af00      	add	r7, sp, #0
 8002f4e:	6078      	str	r0, [r7, #4]
 8002f50:	f7ff fe42 	bl	8002bd8 <HAL_GetTick>
 8002f54:	6138      	str	r0, [r7, #16]
 8002f56:	687b      	ldr	r3, [r7, #4]
 8002f58:	2b00      	cmp	r3, #0
 8002f5a:	d101      	bne.n	8002f60 <HAL_DMA_Abort+0x18>
 8002f5c:	2301      	movs	r3, #1
 8002f5e:	e2dc      	b.n	800351a <HAL_DMA_Abort+0x5d2>
 8002f60:	687b      	ldr	r3, [r7, #4]
 8002f62:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8002f66:	b2db      	uxtb	r3, r3
 8002f68:	2b02      	cmp	r3, #2
 8002f6a:	d008      	beq.n	8002f7e <HAL_DMA_Abort+0x36>
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	2280      	movs	r2, #128	@ 0x80
 8002f70:	655a      	str	r2, [r3, #84]	@ 0x54
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	2200      	movs	r2, #0
 8002f76:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8002f7a:	2301      	movs	r3, #1
 8002f7c:	e2cd      	b.n	800351a <HAL_DMA_Abort+0x5d2>
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	4a76      	ldr	r2, [pc, #472]	@ (800315c <HAL_DMA_Abort+0x214>)
 8002f84:	4293      	cmp	r3, r2
 8002f86:	d04a      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002f88:	687b      	ldr	r3, [r7, #4]
 8002f8a:	681b      	ldr	r3, [r3, #0]
 8002f8c:	4a74      	ldr	r2, [pc, #464]	@ (8003160 <HAL_DMA_Abort+0x218>)
 8002f8e:	4293      	cmp	r3, r2
 8002f90:	d045      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	4a73      	ldr	r2, [pc, #460]	@ (8003164 <HAL_DMA_Abort+0x21c>)
 8002f98:	4293      	cmp	r3, r2
 8002f9a:	d040      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002f9c:	687b      	ldr	r3, [r7, #4]
 8002f9e:	681b      	ldr	r3, [r3, #0]
 8002fa0:	4a71      	ldr	r2, [pc, #452]	@ (8003168 <HAL_DMA_Abort+0x220>)
 8002fa2:	4293      	cmp	r3, r2
 8002fa4:	d03b      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	681b      	ldr	r3, [r3, #0]
 8002faa:	4a70      	ldr	r2, [pc, #448]	@ (800316c <HAL_DMA_Abort+0x224>)
 8002fac:	4293      	cmp	r3, r2
 8002fae:	d036      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002fb0:	687b      	ldr	r3, [r7, #4]
 8002fb2:	681b      	ldr	r3, [r3, #0]
 8002fb4:	4a6e      	ldr	r2, [pc, #440]	@ (8003170 <HAL_DMA_Abort+0x228>)
 8002fb6:	4293      	cmp	r3, r2
 8002fb8:	d031      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	681b      	ldr	r3, [r3, #0]
 8002fbe:	4a6d      	ldr	r2, [pc, #436]	@ (8003174 <HAL_DMA_Abort+0x22c>)
 8002fc0:	4293      	cmp	r3, r2
 8002fc2:	d02c      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681b      	ldr	r3, [r3, #0]
 8002fc8:	4a6b      	ldr	r2, [pc, #428]	@ (8003178 <HAL_DMA_Abort+0x230>)
 8002fca:	4293      	cmp	r3, r2
 8002fcc:	d027      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002fce:	687b      	ldr	r3, [r7, #4]
 8002fd0:	681b      	ldr	r3, [r3, #0]
 8002fd2:	4a6a      	ldr	r2, [pc, #424]	@ (800317c <HAL_DMA_Abort+0x234>)
 8002fd4:	4293      	cmp	r3, r2
 8002fd6:	d022      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	681b      	ldr	r3, [r3, #0]
 8002fdc:	4a68      	ldr	r2, [pc, #416]	@ (8003180 <HAL_DMA_Abort+0x238>)
 8002fde:	4293      	cmp	r3, r2
 8002fe0:	d01d      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	681b      	ldr	r3, [r3, #0]
 8002fe6:	4a67      	ldr	r2, [pc, #412]	@ (8003184 <HAL_DMA_Abort+0x23c>)
 8002fe8:	4293      	cmp	r3, r2
 8002fea:	d018      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	681b      	ldr	r3, [r3, #0]
 8002ff0:	4a65      	ldr	r2, [pc, #404]	@ (8003188 <HAL_DMA_Abort+0x240>)
 8002ff2:	4293      	cmp	r3, r2
 8002ff4:	d013      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8002ff6:	687b      	ldr	r3, [r7, #4]
 8002ff8:	681b      	ldr	r3, [r3, #0]
 8002ffa:	4a64      	ldr	r2, [pc, #400]	@ (800318c <HAL_DMA_Abort+0x244>)
 8002ffc:	4293      	cmp	r3, r2
 8002ffe:	d00e      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8003000:	687b      	ldr	r3, [r7, #4]
 8003002:	681b      	ldr	r3, [r3, #0]
 8003004:	4a62      	ldr	r2, [pc, #392]	@ (8003190 <HAL_DMA_Abort+0x248>)
 8003006:	4293      	cmp	r3, r2
 8003008:	d009      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	4a61      	ldr	r2, [pc, #388]	@ (8003194 <HAL_DMA_Abort+0x24c>)
 8003010:	4293      	cmp	r3, r2
 8003012:	d004      	beq.n	800301e <HAL_DMA_Abort+0xd6>
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	681b      	ldr	r3, [r3, #0]
 8003018:	4a5f      	ldr	r2, [pc, #380]	@ (8003198 <HAL_DMA_Abort+0x250>)
 800301a:	4293      	cmp	r3, r2
 800301c:	d101      	bne.n	8003022 <HAL_DMA_Abort+0xda>
 800301e:	2301      	movs	r3, #1
 8003020:	e000      	b.n	8003024 <HAL_DMA_Abort+0xdc>
 8003022:	2300      	movs	r3, #0
 8003024:	2b00      	cmp	r3, #0
 8003026:	d013      	beq.n	8003050 <HAL_DMA_Abort+0x108>
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	681b      	ldr	r3, [r3, #0]
 800302c:	681a      	ldr	r2, [r3, #0]
 800302e:	687b      	ldr	r3, [r7, #4]
 8003030:	681b      	ldr	r3, [r3, #0]
 8003032:	f022 021e 	bic.w	r2, r2, #30
 8003036:	601a      	str	r2, [r3, #0]
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	681b      	ldr	r3, [r3, #0]
 800303c:	695a      	ldr	r2, [r3, #20]
 800303e:	687b      	ldr	r3, [r7, #4]
 8003040:	681b      	ldr	r3, [r3, #0]
 8003042:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003046:	615a      	str	r2, [r3, #20]
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	681b      	ldr	r3, [r3, #0]
 800304c:	617b      	str	r3, [r7, #20]
 800304e:	e00a      	b.n	8003066 <HAL_DMA_Abort+0x11e>
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	681a      	ldr	r2, [r3, #0]
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	f022 020e 	bic.w	r2, r2, #14
 800305e:	601a      	str	r2, [r3, #0]
 8003060:	687b      	ldr	r3, [r7, #4]
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	617b      	str	r3, [r7, #20]
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	681b      	ldr	r3, [r3, #0]
 800306a:	4a3c      	ldr	r2, [pc, #240]	@ (800315c <HAL_DMA_Abort+0x214>)
 800306c:	4293      	cmp	r3, r2
 800306e:	d072      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	4a3a      	ldr	r2, [pc, #232]	@ (8003160 <HAL_DMA_Abort+0x218>)
 8003076:	4293      	cmp	r3, r2
 8003078:	d06d      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 800307a:	687b      	ldr	r3, [r7, #4]
 800307c:	681b      	ldr	r3, [r3, #0]
 800307e:	4a39      	ldr	r2, [pc, #228]	@ (8003164 <HAL_DMA_Abort+0x21c>)
 8003080:	4293      	cmp	r3, r2
 8003082:	d068      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	681b      	ldr	r3, [r3, #0]
 8003088:	4a37      	ldr	r2, [pc, #220]	@ (8003168 <HAL_DMA_Abort+0x220>)
 800308a:	4293      	cmp	r3, r2
 800308c:	d063      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	681b      	ldr	r3, [r3, #0]
 8003092:	4a36      	ldr	r2, [pc, #216]	@ (800316c <HAL_DMA_Abort+0x224>)
 8003094:	4293      	cmp	r3, r2
 8003096:	d05e      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	681b      	ldr	r3, [r3, #0]
 800309c:	4a34      	ldr	r2, [pc, #208]	@ (8003170 <HAL_DMA_Abort+0x228>)
 800309e:	4293      	cmp	r3, r2
 80030a0:	d059      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030a2:	687b      	ldr	r3, [r7, #4]
 80030a4:	681b      	ldr	r3, [r3, #0]
 80030a6:	4a33      	ldr	r2, [pc, #204]	@ (8003174 <HAL_DMA_Abort+0x22c>)
 80030a8:	4293      	cmp	r3, r2
 80030aa:	d054      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030ac:	687b      	ldr	r3, [r7, #4]
 80030ae:	681b      	ldr	r3, [r3, #0]
 80030b0:	4a31      	ldr	r2, [pc, #196]	@ (8003178 <HAL_DMA_Abort+0x230>)
 80030b2:	4293      	cmp	r3, r2
 80030b4:	d04f      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	681b      	ldr	r3, [r3, #0]
 80030ba:	4a30      	ldr	r2, [pc, #192]	@ (800317c <HAL_DMA_Abort+0x234>)
 80030bc:	4293      	cmp	r3, r2
 80030be:	d04a      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	4a2e      	ldr	r2, [pc, #184]	@ (8003180 <HAL_DMA_Abort+0x238>)
 80030c6:	4293      	cmp	r3, r2
 80030c8:	d045      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	4a2d      	ldr	r2, [pc, #180]	@ (8003184 <HAL_DMA_Abort+0x23c>)
 80030d0:	4293      	cmp	r3, r2
 80030d2:	d040      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	681b      	ldr	r3, [r3, #0]
 80030d8:	4a2b      	ldr	r2, [pc, #172]	@ (8003188 <HAL_DMA_Abort+0x240>)
 80030da:	4293      	cmp	r3, r2
 80030dc:	d03b      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	4a2a      	ldr	r2, [pc, #168]	@ (800318c <HAL_DMA_Abort+0x244>)
 80030e4:	4293      	cmp	r3, r2
 80030e6:	d036      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	4a28      	ldr	r2, [pc, #160]	@ (8003190 <HAL_DMA_Abort+0x248>)
 80030ee:	4293      	cmp	r3, r2
 80030f0:	d031      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	4a27      	ldr	r2, [pc, #156]	@ (8003194 <HAL_DMA_Abort+0x24c>)
 80030f8:	4293      	cmp	r3, r2
 80030fa:	d02c      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 80030fc:	687b      	ldr	r3, [r7, #4]
 80030fe:	681b      	ldr	r3, [r3, #0]
 8003100:	4a25      	ldr	r2, [pc, #148]	@ (8003198 <HAL_DMA_Abort+0x250>)
 8003102:	4293      	cmp	r3, r2
 8003104:	d027      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	681b      	ldr	r3, [r3, #0]
 800310a:	4a24      	ldr	r2, [pc, #144]	@ (800319c <HAL_DMA_Abort+0x254>)
 800310c:	4293      	cmp	r3, r2
 800310e:	d022      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 8003110:	687b      	ldr	r3, [r7, #4]
 8003112:	681b      	ldr	r3, [r3, #0]
 8003114:	4a22      	ldr	r2, [pc, #136]	@ (80031a0 <HAL_DMA_Abort+0x258>)
 8003116:	4293      	cmp	r3, r2
 8003118:	d01d      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 800311a:	687b      	ldr	r3, [r7, #4]
 800311c:	681b      	ldr	r3, [r3, #0]
 800311e:	4a21      	ldr	r2, [pc, #132]	@ (80031a4 <HAL_DMA_Abort+0x25c>)
 8003120:	4293      	cmp	r3, r2
 8003122:	d018      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	681b      	ldr	r3, [r3, #0]
 8003128:	4a1f      	ldr	r2, [pc, #124]	@ (80031a8 <HAL_DMA_Abort+0x260>)
 800312a:	4293      	cmp	r3, r2
 800312c:	d013      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 800312e:	687b      	ldr	r3, [r7, #4]
 8003130:	681b      	ldr	r3, [r3, #0]
 8003132:	4a1e      	ldr	r2, [pc, #120]	@ (80031ac <HAL_DMA_Abort+0x264>)
 8003134:	4293      	cmp	r3, r2
 8003136:	d00e      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	4a1c      	ldr	r2, [pc, #112]	@ (80031b0 <HAL_DMA_Abort+0x268>)
 800313e:	4293      	cmp	r3, r2
 8003140:	d009      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	681b      	ldr	r3, [r3, #0]
 8003146:	4a1b      	ldr	r2, [pc, #108]	@ (80031b4 <HAL_DMA_Abort+0x26c>)
 8003148:	4293      	cmp	r3, r2
 800314a:	d004      	beq.n	8003156 <HAL_DMA_Abort+0x20e>
 800314c:	687b      	ldr	r3, [r7, #4]
 800314e:	681b      	ldr	r3, [r3, #0]
 8003150:	4a19      	ldr	r2, [pc, #100]	@ (80031b8 <HAL_DMA_Abort+0x270>)
 8003152:	4293      	cmp	r3, r2
 8003154:	d132      	bne.n	80031bc <HAL_DMA_Abort+0x274>
 8003156:	2301      	movs	r3, #1
 8003158:	e031      	b.n	80031be <HAL_DMA_Abort+0x276>
 800315a:	bf00      	nop
 800315c:	40020010 	.word	0x40020010
 8003160:	40020028 	.word	0x40020028
 8003164:	40020040 	.word	0x40020040
 8003168:	40020058 	.word	0x40020058
 800316c:	40020070 	.word	0x40020070
 8003170:	40020088 	.word	0x40020088
 8003174:	400200a0 	.word	0x400200a0
 8003178:	400200b8 	.word	0x400200b8
 800317c:	40020410 	.word	0x40020410
 8003180:	40020428 	.word	0x40020428
 8003184:	40020440 	.word	0x40020440
 8003188:	40020458 	.word	0x40020458
 800318c:	40020470 	.word	0x40020470
 8003190:	40020488 	.word	0x40020488
 8003194:	400204a0 	.word	0x400204a0
 8003198:	400204b8 	.word	0x400204b8
 800319c:	58025408 	.word	0x58025408
 80031a0:	5802541c 	.word	0x5802541c
 80031a4:	58025430 	.word	0x58025430
 80031a8:	58025444 	.word	0x58025444
 80031ac:	58025458 	.word	0x58025458
 80031b0:	5802546c 	.word	0x5802546c
 80031b4:	58025480 	.word	0x58025480
 80031b8:	58025494 	.word	0x58025494
 80031bc:	2300      	movs	r3, #0
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d007      	beq.n	80031d2 <HAL_DMA_Abort+0x28a>
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80031c6:	681a      	ldr	r2, [r3, #0]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80031cc:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80031d0:	601a      	str	r2, [r3, #0]
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	681b      	ldr	r3, [r3, #0]
 80031d6:	4a6d      	ldr	r2, [pc, #436]	@ (800338c <HAL_DMA_Abort+0x444>)
 80031d8:	4293      	cmp	r3, r2
 80031da:	d04a      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 80031dc:	687b      	ldr	r3, [r7, #4]
 80031de:	681b      	ldr	r3, [r3, #0]
 80031e0:	4a6b      	ldr	r2, [pc, #428]	@ (8003390 <HAL_DMA_Abort+0x448>)
 80031e2:	4293      	cmp	r3, r2
 80031e4:	d045      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 80031e6:	687b      	ldr	r3, [r7, #4]
 80031e8:	681b      	ldr	r3, [r3, #0]
 80031ea:	4a6a      	ldr	r2, [pc, #424]	@ (8003394 <HAL_DMA_Abort+0x44c>)
 80031ec:	4293      	cmp	r3, r2
 80031ee:	d040      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	681b      	ldr	r3, [r3, #0]
 80031f4:	4a68      	ldr	r2, [pc, #416]	@ (8003398 <HAL_DMA_Abort+0x450>)
 80031f6:	4293      	cmp	r3, r2
 80031f8:	d03b      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	4a67      	ldr	r2, [pc, #412]	@ (800339c <HAL_DMA_Abort+0x454>)
 8003200:	4293      	cmp	r3, r2
 8003202:	d036      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 8003204:	687b      	ldr	r3, [r7, #4]
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	4a65      	ldr	r2, [pc, #404]	@ (80033a0 <HAL_DMA_Abort+0x458>)
 800320a:	4293      	cmp	r3, r2
 800320c:	d031      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	681b      	ldr	r3, [r3, #0]
 8003212:	4a64      	ldr	r2, [pc, #400]	@ (80033a4 <HAL_DMA_Abort+0x45c>)
 8003214:	4293      	cmp	r3, r2
 8003216:	d02c      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 8003218:	687b      	ldr	r3, [r7, #4]
 800321a:	681b      	ldr	r3, [r3, #0]
 800321c:	4a62      	ldr	r2, [pc, #392]	@ (80033a8 <HAL_DMA_Abort+0x460>)
 800321e:	4293      	cmp	r3, r2
 8003220:	d027      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 8003222:	687b      	ldr	r3, [r7, #4]
 8003224:	681b      	ldr	r3, [r3, #0]
 8003226:	4a61      	ldr	r2, [pc, #388]	@ (80033ac <HAL_DMA_Abort+0x464>)
 8003228:	4293      	cmp	r3, r2
 800322a:	d022      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 800322c:	687b      	ldr	r3, [r7, #4]
 800322e:	681b      	ldr	r3, [r3, #0]
 8003230:	4a5f      	ldr	r2, [pc, #380]	@ (80033b0 <HAL_DMA_Abort+0x468>)
 8003232:	4293      	cmp	r3, r2
 8003234:	d01d      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 8003236:	687b      	ldr	r3, [r7, #4]
 8003238:	681b      	ldr	r3, [r3, #0]
 800323a:	4a5e      	ldr	r2, [pc, #376]	@ (80033b4 <HAL_DMA_Abort+0x46c>)
 800323c:	4293      	cmp	r3, r2
 800323e:	d018      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	681b      	ldr	r3, [r3, #0]
 8003244:	4a5c      	ldr	r2, [pc, #368]	@ (80033b8 <HAL_DMA_Abort+0x470>)
 8003246:	4293      	cmp	r3, r2
 8003248:	d013      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 800324a:	687b      	ldr	r3, [r7, #4]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	4a5b      	ldr	r2, [pc, #364]	@ (80033bc <HAL_DMA_Abort+0x474>)
 8003250:	4293      	cmp	r3, r2
 8003252:	d00e      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 8003254:	687b      	ldr	r3, [r7, #4]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	4a59      	ldr	r2, [pc, #356]	@ (80033c0 <HAL_DMA_Abort+0x478>)
 800325a:	4293      	cmp	r3, r2
 800325c:	d009      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 800325e:	687b      	ldr	r3, [r7, #4]
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	4a58      	ldr	r2, [pc, #352]	@ (80033c4 <HAL_DMA_Abort+0x47c>)
 8003264:	4293      	cmp	r3, r2
 8003266:	d004      	beq.n	8003272 <HAL_DMA_Abort+0x32a>
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	4a56      	ldr	r2, [pc, #344]	@ (80033c8 <HAL_DMA_Abort+0x480>)
 800326e:	4293      	cmp	r3, r2
 8003270:	d108      	bne.n	8003284 <HAL_DMA_Abort+0x33c>
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	681a      	ldr	r2, [r3, #0]
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	681b      	ldr	r3, [r3, #0]
 800327c:	f022 0201 	bic.w	r2, r2, #1
 8003280:	601a      	str	r2, [r3, #0]
 8003282:	e007      	b.n	8003294 <HAL_DMA_Abort+0x34c>
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	681b      	ldr	r3, [r3, #0]
 8003288:	681a      	ldr	r2, [r3, #0]
 800328a:	687b      	ldr	r3, [r7, #4]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	f022 0201 	bic.w	r2, r2, #1
 8003292:	601a      	str	r2, [r3, #0]
 8003294:	e013      	b.n	80032be <HAL_DMA_Abort+0x376>
 8003296:	f7ff fc9f 	bl	8002bd8 <HAL_GetTick>
 800329a:	4602      	mov	r2, r0
 800329c:	693b      	ldr	r3, [r7, #16]
 800329e:	1ad3      	subs	r3, r2, r3
 80032a0:	2b05      	cmp	r3, #5
 80032a2:	d90c      	bls.n	80032be <HAL_DMA_Abort+0x376>
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	2220      	movs	r2, #32
 80032a8:	655a      	str	r2, [r3, #84]	@ 0x54
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	2203      	movs	r2, #3
 80032ae:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	2200      	movs	r2, #0
 80032b6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80032ba:	2301      	movs	r3, #1
 80032bc:	e12d      	b.n	800351a <HAL_DMA_Abort+0x5d2>
 80032be:	697b      	ldr	r3, [r7, #20]
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	f003 0301 	and.w	r3, r3, #1
 80032c6:	2b00      	cmp	r3, #0
 80032c8:	d1e5      	bne.n	8003296 <HAL_DMA_Abort+0x34e>
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	681b      	ldr	r3, [r3, #0]
 80032ce:	4a2f      	ldr	r2, [pc, #188]	@ (800338c <HAL_DMA_Abort+0x444>)
 80032d0:	4293      	cmp	r3, r2
 80032d2:	d04a      	beq.n	800336a <HAL_DMA_Abort+0x422>
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	4a2d      	ldr	r2, [pc, #180]	@ (8003390 <HAL_DMA_Abort+0x448>)
 80032da:	4293      	cmp	r3, r2
 80032dc:	d045      	beq.n	800336a <HAL_DMA_Abort+0x422>
 80032de:	687b      	ldr	r3, [r7, #4]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	4a2c      	ldr	r2, [pc, #176]	@ (8003394 <HAL_DMA_Abort+0x44c>)
 80032e4:	4293      	cmp	r3, r2
 80032e6:	d040      	beq.n	800336a <HAL_DMA_Abort+0x422>
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	4a2a      	ldr	r2, [pc, #168]	@ (8003398 <HAL_DMA_Abort+0x450>)
 80032ee:	4293      	cmp	r3, r2
 80032f0:	d03b      	beq.n	800336a <HAL_DMA_Abort+0x422>
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	4a29      	ldr	r2, [pc, #164]	@ (800339c <HAL_DMA_Abort+0x454>)
 80032f8:	4293      	cmp	r3, r2
 80032fa:	d036      	beq.n	800336a <HAL_DMA_Abort+0x422>
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	4a27      	ldr	r2, [pc, #156]	@ (80033a0 <HAL_DMA_Abort+0x458>)
 8003302:	4293      	cmp	r3, r2
 8003304:	d031      	beq.n	800336a <HAL_DMA_Abort+0x422>
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	681b      	ldr	r3, [r3, #0]
 800330a:	4a26      	ldr	r2, [pc, #152]	@ (80033a4 <HAL_DMA_Abort+0x45c>)
 800330c:	4293      	cmp	r3, r2
 800330e:	d02c      	beq.n	800336a <HAL_DMA_Abort+0x422>
 8003310:	687b      	ldr	r3, [r7, #4]
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	4a24      	ldr	r2, [pc, #144]	@ (80033a8 <HAL_DMA_Abort+0x460>)
 8003316:	4293      	cmp	r3, r2
 8003318:	d027      	beq.n	800336a <HAL_DMA_Abort+0x422>
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	4a23      	ldr	r2, [pc, #140]	@ (80033ac <HAL_DMA_Abort+0x464>)
 8003320:	4293      	cmp	r3, r2
 8003322:	d022      	beq.n	800336a <HAL_DMA_Abort+0x422>
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	4a21      	ldr	r2, [pc, #132]	@ (80033b0 <HAL_DMA_Abort+0x468>)
 800332a:	4293      	cmp	r3, r2
 800332c:	d01d      	beq.n	800336a <HAL_DMA_Abort+0x422>
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	681b      	ldr	r3, [r3, #0]
 8003332:	4a20      	ldr	r2, [pc, #128]	@ (80033b4 <HAL_DMA_Abort+0x46c>)
 8003334:	4293      	cmp	r3, r2
 8003336:	d018      	beq.n	800336a <HAL_DMA_Abort+0x422>
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	4a1e      	ldr	r2, [pc, #120]	@ (80033b8 <HAL_DMA_Abort+0x470>)
 800333e:	4293      	cmp	r3, r2
 8003340:	d013      	beq.n	800336a <HAL_DMA_Abort+0x422>
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	681b      	ldr	r3, [r3, #0]
 8003346:	4a1d      	ldr	r2, [pc, #116]	@ (80033bc <HAL_DMA_Abort+0x474>)
 8003348:	4293      	cmp	r3, r2
 800334a:	d00e      	beq.n	800336a <HAL_DMA_Abort+0x422>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	681b      	ldr	r3, [r3, #0]
 8003350:	4a1b      	ldr	r2, [pc, #108]	@ (80033c0 <HAL_DMA_Abort+0x478>)
 8003352:	4293      	cmp	r3, r2
 8003354:	d009      	beq.n	800336a <HAL_DMA_Abort+0x422>
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	4a1a      	ldr	r2, [pc, #104]	@ (80033c4 <HAL_DMA_Abort+0x47c>)
 800335c:	4293      	cmp	r3, r2
 800335e:	d004      	beq.n	800336a <HAL_DMA_Abort+0x422>
 8003360:	687b      	ldr	r3, [r7, #4]
 8003362:	681b      	ldr	r3, [r3, #0]
 8003364:	4a18      	ldr	r2, [pc, #96]	@ (80033c8 <HAL_DMA_Abort+0x480>)
 8003366:	4293      	cmp	r3, r2
 8003368:	d101      	bne.n	800336e <HAL_DMA_Abort+0x426>
 800336a:	2301      	movs	r3, #1
 800336c:	e000      	b.n	8003370 <HAL_DMA_Abort+0x428>
 800336e:	2300      	movs	r3, #0
 8003370:	2b00      	cmp	r3, #0
 8003372:	d02b      	beq.n	80033cc <HAL_DMA_Abort+0x484>
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003378:	60bb      	str	r3, [r7, #8]
 800337a:	687b      	ldr	r3, [r7, #4]
 800337c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800337e:	f003 031f 	and.w	r3, r3, #31
 8003382:	223f      	movs	r2, #63	@ 0x3f
 8003384:	409a      	lsls	r2, r3
 8003386:	68bb      	ldr	r3, [r7, #8]
 8003388:	609a      	str	r2, [r3, #8]
 800338a:	e02a      	b.n	80033e2 <HAL_DMA_Abort+0x49a>
 800338c:	40020010 	.word	0x40020010
 8003390:	40020028 	.word	0x40020028
 8003394:	40020040 	.word	0x40020040
 8003398:	40020058 	.word	0x40020058
 800339c:	40020070 	.word	0x40020070
 80033a0:	40020088 	.word	0x40020088
 80033a4:	400200a0 	.word	0x400200a0
 80033a8:	400200b8 	.word	0x400200b8
 80033ac:	40020410 	.word	0x40020410
 80033b0:	40020428 	.word	0x40020428
 80033b4:	40020440 	.word	0x40020440
 80033b8:	40020458 	.word	0x40020458
 80033bc:	40020470 	.word	0x40020470
 80033c0:	40020488 	.word	0x40020488
 80033c4:	400204a0 	.word	0x400204a0
 80033c8:	400204b8 	.word	0x400204b8
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80033d0:	60fb      	str	r3, [r7, #12]
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80033d6:	f003 031f 	and.w	r3, r3, #31
 80033da:	2201      	movs	r2, #1
 80033dc:	409a      	lsls	r2, r3
 80033de:	68fb      	ldr	r3, [r7, #12]
 80033e0:	605a      	str	r2, [r3, #4]
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	681b      	ldr	r3, [r3, #0]
 80033e6:	4a4f      	ldr	r2, [pc, #316]	@ (8003524 <HAL_DMA_Abort+0x5dc>)
 80033e8:	4293      	cmp	r3, r2
 80033ea:	d072      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	4a4d      	ldr	r2, [pc, #308]	@ (8003528 <HAL_DMA_Abort+0x5e0>)
 80033f2:	4293      	cmp	r3, r2
 80033f4:	d06d      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	4a4c      	ldr	r2, [pc, #304]	@ (800352c <HAL_DMA_Abort+0x5e4>)
 80033fc:	4293      	cmp	r3, r2
 80033fe:	d068      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	681b      	ldr	r3, [r3, #0]
 8003404:	4a4a      	ldr	r2, [pc, #296]	@ (8003530 <HAL_DMA_Abort+0x5e8>)
 8003406:	4293      	cmp	r3, r2
 8003408:	d063      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	681b      	ldr	r3, [r3, #0]
 800340e:	4a49      	ldr	r2, [pc, #292]	@ (8003534 <HAL_DMA_Abort+0x5ec>)
 8003410:	4293      	cmp	r3, r2
 8003412:	d05e      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003414:	687b      	ldr	r3, [r7, #4]
 8003416:	681b      	ldr	r3, [r3, #0]
 8003418:	4a47      	ldr	r2, [pc, #284]	@ (8003538 <HAL_DMA_Abort+0x5f0>)
 800341a:	4293      	cmp	r3, r2
 800341c:	d059      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	681b      	ldr	r3, [r3, #0]
 8003422:	4a46      	ldr	r2, [pc, #280]	@ (800353c <HAL_DMA_Abort+0x5f4>)
 8003424:	4293      	cmp	r3, r2
 8003426:	d054      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	4a44      	ldr	r2, [pc, #272]	@ (8003540 <HAL_DMA_Abort+0x5f8>)
 800342e:	4293      	cmp	r3, r2
 8003430:	d04f      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	4a43      	ldr	r2, [pc, #268]	@ (8003544 <HAL_DMA_Abort+0x5fc>)
 8003438:	4293      	cmp	r3, r2
 800343a:	d04a      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	681b      	ldr	r3, [r3, #0]
 8003440:	4a41      	ldr	r2, [pc, #260]	@ (8003548 <HAL_DMA_Abort+0x600>)
 8003442:	4293      	cmp	r3, r2
 8003444:	d045      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	681b      	ldr	r3, [r3, #0]
 800344a:	4a40      	ldr	r2, [pc, #256]	@ (800354c <HAL_DMA_Abort+0x604>)
 800344c:	4293      	cmp	r3, r2
 800344e:	d040      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	681b      	ldr	r3, [r3, #0]
 8003454:	4a3e      	ldr	r2, [pc, #248]	@ (8003550 <HAL_DMA_Abort+0x608>)
 8003456:	4293      	cmp	r3, r2
 8003458:	d03b      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	4a3d      	ldr	r2, [pc, #244]	@ (8003554 <HAL_DMA_Abort+0x60c>)
 8003460:	4293      	cmp	r3, r2
 8003462:	d036      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003464:	687b      	ldr	r3, [r7, #4]
 8003466:	681b      	ldr	r3, [r3, #0]
 8003468:	4a3b      	ldr	r2, [pc, #236]	@ (8003558 <HAL_DMA_Abort+0x610>)
 800346a:	4293      	cmp	r3, r2
 800346c:	d031      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	681b      	ldr	r3, [r3, #0]
 8003472:	4a3a      	ldr	r2, [pc, #232]	@ (800355c <HAL_DMA_Abort+0x614>)
 8003474:	4293      	cmp	r3, r2
 8003476:	d02c      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	681b      	ldr	r3, [r3, #0]
 800347c:	4a38      	ldr	r2, [pc, #224]	@ (8003560 <HAL_DMA_Abort+0x618>)
 800347e:	4293      	cmp	r3, r2
 8003480:	d027      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003482:	687b      	ldr	r3, [r7, #4]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	4a37      	ldr	r2, [pc, #220]	@ (8003564 <HAL_DMA_Abort+0x61c>)
 8003488:	4293      	cmp	r3, r2
 800348a:	d022      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	4a35      	ldr	r2, [pc, #212]	@ (8003568 <HAL_DMA_Abort+0x620>)
 8003492:	4293      	cmp	r3, r2
 8003494:	d01d      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	4a34      	ldr	r2, [pc, #208]	@ (800356c <HAL_DMA_Abort+0x624>)
 800349c:	4293      	cmp	r3, r2
 800349e:	d018      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 80034a0:	687b      	ldr	r3, [r7, #4]
 80034a2:	681b      	ldr	r3, [r3, #0]
 80034a4:	4a32      	ldr	r2, [pc, #200]	@ (8003570 <HAL_DMA_Abort+0x628>)
 80034a6:	4293      	cmp	r3, r2
 80034a8:	d013      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	681b      	ldr	r3, [r3, #0]
 80034ae:	4a31      	ldr	r2, [pc, #196]	@ (8003574 <HAL_DMA_Abort+0x62c>)
 80034b0:	4293      	cmp	r3, r2
 80034b2:	d00e      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	4a2f      	ldr	r2, [pc, #188]	@ (8003578 <HAL_DMA_Abort+0x630>)
 80034ba:	4293      	cmp	r3, r2
 80034bc:	d009      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 80034be:	687b      	ldr	r3, [r7, #4]
 80034c0:	681b      	ldr	r3, [r3, #0]
 80034c2:	4a2e      	ldr	r2, [pc, #184]	@ (800357c <HAL_DMA_Abort+0x634>)
 80034c4:	4293      	cmp	r3, r2
 80034c6:	d004      	beq.n	80034d2 <HAL_DMA_Abort+0x58a>
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	681b      	ldr	r3, [r3, #0]
 80034cc:	4a2c      	ldr	r2, [pc, #176]	@ (8003580 <HAL_DMA_Abort+0x638>)
 80034ce:	4293      	cmp	r3, r2
 80034d0:	d101      	bne.n	80034d6 <HAL_DMA_Abort+0x58e>
 80034d2:	2301      	movs	r3, #1
 80034d4:	e000      	b.n	80034d8 <HAL_DMA_Abort+0x590>
 80034d6:	2300      	movs	r3, #0
 80034d8:	2b00      	cmp	r3, #0
 80034da:	d015      	beq.n	8003508 <HAL_DMA_Abort+0x5c0>
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80034e0:	687a      	ldr	r2, [r7, #4]
 80034e2:	6e92      	ldr	r2, [r2, #104]	@ 0x68
 80034e4:	605a      	str	r2, [r3, #4]
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80034ea:	2b00      	cmp	r3, #0
 80034ec:	d00c      	beq.n	8003508 <HAL_DMA_Abort+0x5c0>
 80034ee:	687b      	ldr	r3, [r7, #4]
 80034f0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80034f2:	681a      	ldr	r2, [r3, #0]
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80034f8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80034fc:	601a      	str	r2, [r3, #0]
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8003502:	687a      	ldr	r2, [r7, #4]
 8003504:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 8003506:	605a      	str	r2, [r3, #4]
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	2201      	movs	r2, #1
 800350c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003510:	687b      	ldr	r3, [r7, #4]
 8003512:	2200      	movs	r2, #0
 8003514:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 8003518:	2300      	movs	r3, #0
 800351a:	4618      	mov	r0, r3
 800351c:	3718      	adds	r7, #24
 800351e:	46bd      	mov	sp, r7
 8003520:	bd80      	pop	{r7, pc}
 8003522:	bf00      	nop
 8003524:	40020010 	.word	0x40020010
 8003528:	40020028 	.word	0x40020028
 800352c:	40020040 	.word	0x40020040
 8003530:	40020058 	.word	0x40020058
 8003534:	40020070 	.word	0x40020070
 8003538:	40020088 	.word	0x40020088
 800353c:	400200a0 	.word	0x400200a0
 8003540:	400200b8 	.word	0x400200b8
 8003544:	40020410 	.word	0x40020410
 8003548:	40020428 	.word	0x40020428
 800354c:	40020440 	.word	0x40020440
 8003550:	40020458 	.word	0x40020458
 8003554:	40020470 	.word	0x40020470
 8003558:	40020488 	.word	0x40020488
 800355c:	400204a0 	.word	0x400204a0
 8003560:	400204b8 	.word	0x400204b8
 8003564:	58025408 	.word	0x58025408
 8003568:	5802541c 	.word	0x5802541c
 800356c:	58025430 	.word	0x58025430
 8003570:	58025444 	.word	0x58025444
 8003574:	58025458 	.word	0x58025458
 8003578:	5802546c 	.word	0x5802546c
 800357c:	58025480 	.word	0x58025480
 8003580:	58025494 	.word	0x58025494

08003584 <HAL_DMA_Abort_IT>:
 8003584:	b580      	push	{r7, lr}
 8003586:	b084      	sub	sp, #16
 8003588:	af00      	add	r7, sp, #0
 800358a:	6078      	str	r0, [r7, #4]
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	2b00      	cmp	r3, #0
 8003590:	d101      	bne.n	8003596 <HAL_DMA_Abort_IT+0x12>
 8003592:	2301      	movs	r3, #1
 8003594:	e237      	b.n	8003a06 <HAL_DMA_Abort_IT+0x482>
 8003596:	687b      	ldr	r3, [r7, #4]
 8003598:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 800359c:	b2db      	uxtb	r3, r3
 800359e:	2b02      	cmp	r3, #2
 80035a0:	d004      	beq.n	80035ac <HAL_DMA_Abort_IT+0x28>
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	2280      	movs	r2, #128	@ 0x80
 80035a6:	655a      	str	r2, [r3, #84]	@ 0x54
 80035a8:	2301      	movs	r3, #1
 80035aa:	e22c      	b.n	8003a06 <HAL_DMA_Abort_IT+0x482>
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	681b      	ldr	r3, [r3, #0]
 80035b0:	4a5c      	ldr	r2, [pc, #368]	@ (8003724 <HAL_DMA_Abort_IT+0x1a0>)
 80035b2:	4293      	cmp	r3, r2
 80035b4:	d04a      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 80035b6:	687b      	ldr	r3, [r7, #4]
 80035b8:	681b      	ldr	r3, [r3, #0]
 80035ba:	4a5b      	ldr	r2, [pc, #364]	@ (8003728 <HAL_DMA_Abort_IT+0x1a4>)
 80035bc:	4293      	cmp	r3, r2
 80035be:	d045      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 80035c0:	687b      	ldr	r3, [r7, #4]
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	4a59      	ldr	r2, [pc, #356]	@ (800372c <HAL_DMA_Abort_IT+0x1a8>)
 80035c6:	4293      	cmp	r3, r2
 80035c8:	d040      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	681b      	ldr	r3, [r3, #0]
 80035ce:	4a58      	ldr	r2, [pc, #352]	@ (8003730 <HAL_DMA_Abort_IT+0x1ac>)
 80035d0:	4293      	cmp	r3, r2
 80035d2:	d03b      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	681b      	ldr	r3, [r3, #0]
 80035d8:	4a56      	ldr	r2, [pc, #344]	@ (8003734 <HAL_DMA_Abort_IT+0x1b0>)
 80035da:	4293      	cmp	r3, r2
 80035dc:	d036      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	681b      	ldr	r3, [r3, #0]
 80035e2:	4a55      	ldr	r2, [pc, #340]	@ (8003738 <HAL_DMA_Abort_IT+0x1b4>)
 80035e4:	4293      	cmp	r3, r2
 80035e6:	d031      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 80035e8:	687b      	ldr	r3, [r7, #4]
 80035ea:	681b      	ldr	r3, [r3, #0]
 80035ec:	4a53      	ldr	r2, [pc, #332]	@ (800373c <HAL_DMA_Abort_IT+0x1b8>)
 80035ee:	4293      	cmp	r3, r2
 80035f0:	d02c      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 80035f2:	687b      	ldr	r3, [r7, #4]
 80035f4:	681b      	ldr	r3, [r3, #0]
 80035f6:	4a52      	ldr	r2, [pc, #328]	@ (8003740 <HAL_DMA_Abort_IT+0x1bc>)
 80035f8:	4293      	cmp	r3, r2
 80035fa:	d027      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	681b      	ldr	r3, [r3, #0]
 8003600:	4a50      	ldr	r2, [pc, #320]	@ (8003744 <HAL_DMA_Abort_IT+0x1c0>)
 8003602:	4293      	cmp	r3, r2
 8003604:	d022      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	4a4f      	ldr	r2, [pc, #316]	@ (8003748 <HAL_DMA_Abort_IT+0x1c4>)
 800360c:	4293      	cmp	r3, r2
 800360e:	d01d      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	681b      	ldr	r3, [r3, #0]
 8003614:	4a4d      	ldr	r2, [pc, #308]	@ (800374c <HAL_DMA_Abort_IT+0x1c8>)
 8003616:	4293      	cmp	r3, r2
 8003618:	d018      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	681b      	ldr	r3, [r3, #0]
 800361e:	4a4c      	ldr	r2, [pc, #304]	@ (8003750 <HAL_DMA_Abort_IT+0x1cc>)
 8003620:	4293      	cmp	r3, r2
 8003622:	d013      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	681b      	ldr	r3, [r3, #0]
 8003628:	4a4a      	ldr	r2, [pc, #296]	@ (8003754 <HAL_DMA_Abort_IT+0x1d0>)
 800362a:	4293      	cmp	r3, r2
 800362c:	d00e      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	4a49      	ldr	r2, [pc, #292]	@ (8003758 <HAL_DMA_Abort_IT+0x1d4>)
 8003634:	4293      	cmp	r3, r2
 8003636:	d009      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 8003638:	687b      	ldr	r3, [r7, #4]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	4a47      	ldr	r2, [pc, #284]	@ (800375c <HAL_DMA_Abort_IT+0x1d8>)
 800363e:	4293      	cmp	r3, r2
 8003640:	d004      	beq.n	800364c <HAL_DMA_Abort_IT+0xc8>
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	681b      	ldr	r3, [r3, #0]
 8003646:	4a46      	ldr	r2, [pc, #280]	@ (8003760 <HAL_DMA_Abort_IT+0x1dc>)
 8003648:	4293      	cmp	r3, r2
 800364a:	d101      	bne.n	8003650 <HAL_DMA_Abort_IT+0xcc>
 800364c:	2301      	movs	r3, #1
 800364e:	e000      	b.n	8003652 <HAL_DMA_Abort_IT+0xce>
 8003650:	2300      	movs	r3, #0
 8003652:	2b00      	cmp	r3, #0
 8003654:	f000 8086 	beq.w	8003764 <HAL_DMA_Abort_IT+0x1e0>
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	2204      	movs	r2, #4
 800365c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 8003660:	687b      	ldr	r3, [r7, #4]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	4a2f      	ldr	r2, [pc, #188]	@ (8003724 <HAL_DMA_Abort_IT+0x1a0>)
 8003666:	4293      	cmp	r3, r2
 8003668:	d04a      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 800366a:	687b      	ldr	r3, [r7, #4]
 800366c:	681b      	ldr	r3, [r3, #0]
 800366e:	4a2e      	ldr	r2, [pc, #184]	@ (8003728 <HAL_DMA_Abort_IT+0x1a4>)
 8003670:	4293      	cmp	r3, r2
 8003672:	d045      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	681b      	ldr	r3, [r3, #0]
 8003678:	4a2c      	ldr	r2, [pc, #176]	@ (800372c <HAL_DMA_Abort_IT+0x1a8>)
 800367a:	4293      	cmp	r3, r2
 800367c:	d040      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	4a2b      	ldr	r2, [pc, #172]	@ (8003730 <HAL_DMA_Abort_IT+0x1ac>)
 8003684:	4293      	cmp	r3, r2
 8003686:	d03b      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 8003688:	687b      	ldr	r3, [r7, #4]
 800368a:	681b      	ldr	r3, [r3, #0]
 800368c:	4a29      	ldr	r2, [pc, #164]	@ (8003734 <HAL_DMA_Abort_IT+0x1b0>)
 800368e:	4293      	cmp	r3, r2
 8003690:	d036      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	681b      	ldr	r3, [r3, #0]
 8003696:	4a28      	ldr	r2, [pc, #160]	@ (8003738 <HAL_DMA_Abort_IT+0x1b4>)
 8003698:	4293      	cmp	r3, r2
 800369a:	d031      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 800369c:	687b      	ldr	r3, [r7, #4]
 800369e:	681b      	ldr	r3, [r3, #0]
 80036a0:	4a26      	ldr	r2, [pc, #152]	@ (800373c <HAL_DMA_Abort_IT+0x1b8>)
 80036a2:	4293      	cmp	r3, r2
 80036a4:	d02c      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	4a25      	ldr	r2, [pc, #148]	@ (8003740 <HAL_DMA_Abort_IT+0x1bc>)
 80036ac:	4293      	cmp	r3, r2
 80036ae:	d027      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	681b      	ldr	r3, [r3, #0]
 80036b4:	4a23      	ldr	r2, [pc, #140]	@ (8003744 <HAL_DMA_Abort_IT+0x1c0>)
 80036b6:	4293      	cmp	r3, r2
 80036b8:	d022      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	681b      	ldr	r3, [r3, #0]
 80036be:	4a22      	ldr	r2, [pc, #136]	@ (8003748 <HAL_DMA_Abort_IT+0x1c4>)
 80036c0:	4293      	cmp	r3, r2
 80036c2:	d01d      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	4a20      	ldr	r2, [pc, #128]	@ (800374c <HAL_DMA_Abort_IT+0x1c8>)
 80036ca:	4293      	cmp	r3, r2
 80036cc:	d018      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	681b      	ldr	r3, [r3, #0]
 80036d2:	4a1f      	ldr	r2, [pc, #124]	@ (8003750 <HAL_DMA_Abort_IT+0x1cc>)
 80036d4:	4293      	cmp	r3, r2
 80036d6:	d013      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	681b      	ldr	r3, [r3, #0]
 80036dc:	4a1d      	ldr	r2, [pc, #116]	@ (8003754 <HAL_DMA_Abort_IT+0x1d0>)
 80036de:	4293      	cmp	r3, r2
 80036e0:	d00e      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 80036e2:	687b      	ldr	r3, [r7, #4]
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	4a1c      	ldr	r2, [pc, #112]	@ (8003758 <HAL_DMA_Abort_IT+0x1d4>)
 80036e8:	4293      	cmp	r3, r2
 80036ea:	d009      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 80036ec:	687b      	ldr	r3, [r7, #4]
 80036ee:	681b      	ldr	r3, [r3, #0]
 80036f0:	4a1a      	ldr	r2, [pc, #104]	@ (800375c <HAL_DMA_Abort_IT+0x1d8>)
 80036f2:	4293      	cmp	r3, r2
 80036f4:	d004      	beq.n	8003700 <HAL_DMA_Abort_IT+0x17c>
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	4a19      	ldr	r2, [pc, #100]	@ (8003760 <HAL_DMA_Abort_IT+0x1dc>)
 80036fc:	4293      	cmp	r3, r2
 80036fe:	d108      	bne.n	8003712 <HAL_DMA_Abort_IT+0x18e>
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	681b      	ldr	r3, [r3, #0]
 8003704:	681a      	ldr	r2, [r3, #0]
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	681b      	ldr	r3, [r3, #0]
 800370a:	f022 0201 	bic.w	r2, r2, #1
 800370e:	601a      	str	r2, [r3, #0]
 8003710:	e178      	b.n	8003a04 <HAL_DMA_Abort_IT+0x480>
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	681b      	ldr	r3, [r3, #0]
 8003716:	681a      	ldr	r2, [r3, #0]
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	681b      	ldr	r3, [r3, #0]
 800371c:	f022 0201 	bic.w	r2, r2, #1
 8003720:	601a      	str	r2, [r3, #0]
 8003722:	e16f      	b.n	8003a04 <HAL_DMA_Abort_IT+0x480>
 8003724:	40020010 	.word	0x40020010
 8003728:	40020028 	.word	0x40020028
 800372c:	40020040 	.word	0x40020040
 8003730:	40020058 	.word	0x40020058
 8003734:	40020070 	.word	0x40020070
 8003738:	40020088 	.word	0x40020088
 800373c:	400200a0 	.word	0x400200a0
 8003740:	400200b8 	.word	0x400200b8
 8003744:	40020410 	.word	0x40020410
 8003748:	40020428 	.word	0x40020428
 800374c:	40020440 	.word	0x40020440
 8003750:	40020458 	.word	0x40020458
 8003754:	40020470 	.word	0x40020470
 8003758:	40020488 	.word	0x40020488
 800375c:	400204a0 	.word	0x400204a0
 8003760:	400204b8 	.word	0x400204b8
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	681b      	ldr	r3, [r3, #0]
 8003768:	681a      	ldr	r2, [r3, #0]
 800376a:	687b      	ldr	r3, [r7, #4]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	f022 020e 	bic.w	r2, r2, #14
 8003772:	601a      	str	r2, [r3, #0]
 8003774:	687b      	ldr	r3, [r7, #4]
 8003776:	681b      	ldr	r3, [r3, #0]
 8003778:	4a6c      	ldr	r2, [pc, #432]	@ (800392c <HAL_DMA_Abort_IT+0x3a8>)
 800377a:	4293      	cmp	r3, r2
 800377c:	d04a      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 800377e:	687b      	ldr	r3, [r7, #4]
 8003780:	681b      	ldr	r3, [r3, #0]
 8003782:	4a6b      	ldr	r2, [pc, #428]	@ (8003930 <HAL_DMA_Abort_IT+0x3ac>)
 8003784:	4293      	cmp	r3, r2
 8003786:	d045      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	4a69      	ldr	r2, [pc, #420]	@ (8003934 <HAL_DMA_Abort_IT+0x3b0>)
 800378e:	4293      	cmp	r3, r2
 8003790:	d040      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	681b      	ldr	r3, [r3, #0]
 8003796:	4a68      	ldr	r2, [pc, #416]	@ (8003938 <HAL_DMA_Abort_IT+0x3b4>)
 8003798:	4293      	cmp	r3, r2
 800379a:	d03b      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 800379c:	687b      	ldr	r3, [r7, #4]
 800379e:	681b      	ldr	r3, [r3, #0]
 80037a0:	4a66      	ldr	r2, [pc, #408]	@ (800393c <HAL_DMA_Abort_IT+0x3b8>)
 80037a2:	4293      	cmp	r3, r2
 80037a4:	d036      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	681b      	ldr	r3, [r3, #0]
 80037aa:	4a65      	ldr	r2, [pc, #404]	@ (8003940 <HAL_DMA_Abort_IT+0x3bc>)
 80037ac:	4293      	cmp	r3, r2
 80037ae:	d031      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	681b      	ldr	r3, [r3, #0]
 80037b4:	4a63      	ldr	r2, [pc, #396]	@ (8003944 <HAL_DMA_Abort_IT+0x3c0>)
 80037b6:	4293      	cmp	r3, r2
 80037b8:	d02c      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 80037ba:	687b      	ldr	r3, [r7, #4]
 80037bc:	681b      	ldr	r3, [r3, #0]
 80037be:	4a62      	ldr	r2, [pc, #392]	@ (8003948 <HAL_DMA_Abort_IT+0x3c4>)
 80037c0:	4293      	cmp	r3, r2
 80037c2:	d027      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	681b      	ldr	r3, [r3, #0]
 80037c8:	4a60      	ldr	r2, [pc, #384]	@ (800394c <HAL_DMA_Abort_IT+0x3c8>)
 80037ca:	4293      	cmp	r3, r2
 80037cc:	d022      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	4a5f      	ldr	r2, [pc, #380]	@ (8003950 <HAL_DMA_Abort_IT+0x3cc>)
 80037d4:	4293      	cmp	r3, r2
 80037d6:	d01d      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 80037d8:	687b      	ldr	r3, [r7, #4]
 80037da:	681b      	ldr	r3, [r3, #0]
 80037dc:	4a5d      	ldr	r2, [pc, #372]	@ (8003954 <HAL_DMA_Abort_IT+0x3d0>)
 80037de:	4293      	cmp	r3, r2
 80037e0:	d018      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	681b      	ldr	r3, [r3, #0]
 80037e6:	4a5c      	ldr	r2, [pc, #368]	@ (8003958 <HAL_DMA_Abort_IT+0x3d4>)
 80037e8:	4293      	cmp	r3, r2
 80037ea:	d013      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	681b      	ldr	r3, [r3, #0]
 80037f0:	4a5a      	ldr	r2, [pc, #360]	@ (800395c <HAL_DMA_Abort_IT+0x3d8>)
 80037f2:	4293      	cmp	r3, r2
 80037f4:	d00e      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	681b      	ldr	r3, [r3, #0]
 80037fa:	4a59      	ldr	r2, [pc, #356]	@ (8003960 <HAL_DMA_Abort_IT+0x3dc>)
 80037fc:	4293      	cmp	r3, r2
 80037fe:	d009      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 8003800:	687b      	ldr	r3, [r7, #4]
 8003802:	681b      	ldr	r3, [r3, #0]
 8003804:	4a57      	ldr	r2, [pc, #348]	@ (8003964 <HAL_DMA_Abort_IT+0x3e0>)
 8003806:	4293      	cmp	r3, r2
 8003808:	d004      	beq.n	8003814 <HAL_DMA_Abort_IT+0x290>
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	4a56      	ldr	r2, [pc, #344]	@ (8003968 <HAL_DMA_Abort_IT+0x3e4>)
 8003810:	4293      	cmp	r3, r2
 8003812:	d108      	bne.n	8003826 <HAL_DMA_Abort_IT+0x2a2>
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	681b      	ldr	r3, [r3, #0]
 8003818:	681a      	ldr	r2, [r3, #0]
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	f022 0201 	bic.w	r2, r2, #1
 8003822:	601a      	str	r2, [r3, #0]
 8003824:	e007      	b.n	8003836 <HAL_DMA_Abort_IT+0x2b2>
 8003826:	687b      	ldr	r3, [r7, #4]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	681a      	ldr	r2, [r3, #0]
 800382c:	687b      	ldr	r3, [r7, #4]
 800382e:	681b      	ldr	r3, [r3, #0]
 8003830:	f022 0201 	bic.w	r2, r2, #1
 8003834:	601a      	str	r2, [r3, #0]
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	681b      	ldr	r3, [r3, #0]
 800383a:	4a3c      	ldr	r2, [pc, #240]	@ (800392c <HAL_DMA_Abort_IT+0x3a8>)
 800383c:	4293      	cmp	r3, r2
 800383e:	d072      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	681b      	ldr	r3, [r3, #0]
 8003844:	4a3a      	ldr	r2, [pc, #232]	@ (8003930 <HAL_DMA_Abort_IT+0x3ac>)
 8003846:	4293      	cmp	r3, r2
 8003848:	d06d      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 800384a:	687b      	ldr	r3, [r7, #4]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	4a39      	ldr	r2, [pc, #228]	@ (8003934 <HAL_DMA_Abort_IT+0x3b0>)
 8003850:	4293      	cmp	r3, r2
 8003852:	d068      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 8003854:	687b      	ldr	r3, [r7, #4]
 8003856:	681b      	ldr	r3, [r3, #0]
 8003858:	4a37      	ldr	r2, [pc, #220]	@ (8003938 <HAL_DMA_Abort_IT+0x3b4>)
 800385a:	4293      	cmp	r3, r2
 800385c:	d063      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	681b      	ldr	r3, [r3, #0]
 8003862:	4a36      	ldr	r2, [pc, #216]	@ (800393c <HAL_DMA_Abort_IT+0x3b8>)
 8003864:	4293      	cmp	r3, r2
 8003866:	d05e      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 8003868:	687b      	ldr	r3, [r7, #4]
 800386a:	681b      	ldr	r3, [r3, #0]
 800386c:	4a34      	ldr	r2, [pc, #208]	@ (8003940 <HAL_DMA_Abort_IT+0x3bc>)
 800386e:	4293      	cmp	r3, r2
 8003870:	d059      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	4a33      	ldr	r2, [pc, #204]	@ (8003944 <HAL_DMA_Abort_IT+0x3c0>)
 8003878:	4293      	cmp	r3, r2
 800387a:	d054      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	681b      	ldr	r3, [r3, #0]
 8003880:	4a31      	ldr	r2, [pc, #196]	@ (8003948 <HAL_DMA_Abort_IT+0x3c4>)
 8003882:	4293      	cmp	r3, r2
 8003884:	d04f      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 8003886:	687b      	ldr	r3, [r7, #4]
 8003888:	681b      	ldr	r3, [r3, #0]
 800388a:	4a30      	ldr	r2, [pc, #192]	@ (800394c <HAL_DMA_Abort_IT+0x3c8>)
 800388c:	4293      	cmp	r3, r2
 800388e:	d04a      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	681b      	ldr	r3, [r3, #0]
 8003894:	4a2e      	ldr	r2, [pc, #184]	@ (8003950 <HAL_DMA_Abort_IT+0x3cc>)
 8003896:	4293      	cmp	r3, r2
 8003898:	d045      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	681b      	ldr	r3, [r3, #0]
 800389e:	4a2d      	ldr	r2, [pc, #180]	@ (8003954 <HAL_DMA_Abort_IT+0x3d0>)
 80038a0:	4293      	cmp	r3, r2
 80038a2:	d040      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	681b      	ldr	r3, [r3, #0]
 80038a8:	4a2b      	ldr	r2, [pc, #172]	@ (8003958 <HAL_DMA_Abort_IT+0x3d4>)
 80038aa:	4293      	cmp	r3, r2
 80038ac:	d03b      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	681b      	ldr	r3, [r3, #0]
 80038b2:	4a2a      	ldr	r2, [pc, #168]	@ (800395c <HAL_DMA_Abort_IT+0x3d8>)
 80038b4:	4293      	cmp	r3, r2
 80038b6:	d036      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038b8:	687b      	ldr	r3, [r7, #4]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	4a28      	ldr	r2, [pc, #160]	@ (8003960 <HAL_DMA_Abort_IT+0x3dc>)
 80038be:	4293      	cmp	r3, r2
 80038c0:	d031      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	681b      	ldr	r3, [r3, #0]
 80038c6:	4a27      	ldr	r2, [pc, #156]	@ (8003964 <HAL_DMA_Abort_IT+0x3e0>)
 80038c8:	4293      	cmp	r3, r2
 80038ca:	d02c      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038cc:	687b      	ldr	r3, [r7, #4]
 80038ce:	681b      	ldr	r3, [r3, #0]
 80038d0:	4a25      	ldr	r2, [pc, #148]	@ (8003968 <HAL_DMA_Abort_IT+0x3e4>)
 80038d2:	4293      	cmp	r3, r2
 80038d4:	d027      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038d6:	687b      	ldr	r3, [r7, #4]
 80038d8:	681b      	ldr	r3, [r3, #0]
 80038da:	4a24      	ldr	r2, [pc, #144]	@ (800396c <HAL_DMA_Abort_IT+0x3e8>)
 80038dc:	4293      	cmp	r3, r2
 80038de:	d022      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	681b      	ldr	r3, [r3, #0]
 80038e4:	4a22      	ldr	r2, [pc, #136]	@ (8003970 <HAL_DMA_Abort_IT+0x3ec>)
 80038e6:	4293      	cmp	r3, r2
 80038e8:	d01d      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	4a21      	ldr	r2, [pc, #132]	@ (8003974 <HAL_DMA_Abort_IT+0x3f0>)
 80038f0:	4293      	cmp	r3, r2
 80038f2:	d018      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038f4:	687b      	ldr	r3, [r7, #4]
 80038f6:	681b      	ldr	r3, [r3, #0]
 80038f8:	4a1f      	ldr	r2, [pc, #124]	@ (8003978 <HAL_DMA_Abort_IT+0x3f4>)
 80038fa:	4293      	cmp	r3, r2
 80038fc:	d013      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	681b      	ldr	r3, [r3, #0]
 8003902:	4a1e      	ldr	r2, [pc, #120]	@ (800397c <HAL_DMA_Abort_IT+0x3f8>)
 8003904:	4293      	cmp	r3, r2
 8003906:	d00e      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	681b      	ldr	r3, [r3, #0]
 800390c:	4a1c      	ldr	r2, [pc, #112]	@ (8003980 <HAL_DMA_Abort_IT+0x3fc>)
 800390e:	4293      	cmp	r3, r2
 8003910:	d009      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 8003912:	687b      	ldr	r3, [r7, #4]
 8003914:	681b      	ldr	r3, [r3, #0]
 8003916:	4a1b      	ldr	r2, [pc, #108]	@ (8003984 <HAL_DMA_Abort_IT+0x400>)
 8003918:	4293      	cmp	r3, r2
 800391a:	d004      	beq.n	8003926 <HAL_DMA_Abort_IT+0x3a2>
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	4a19      	ldr	r2, [pc, #100]	@ (8003988 <HAL_DMA_Abort_IT+0x404>)
 8003922:	4293      	cmp	r3, r2
 8003924:	d132      	bne.n	800398c <HAL_DMA_Abort_IT+0x408>
 8003926:	2301      	movs	r3, #1
 8003928:	e031      	b.n	800398e <HAL_DMA_Abort_IT+0x40a>
 800392a:	bf00      	nop
 800392c:	40020010 	.word	0x40020010
 8003930:	40020028 	.word	0x40020028
 8003934:	40020040 	.word	0x40020040
 8003938:	40020058 	.word	0x40020058
 800393c:	40020070 	.word	0x40020070
 8003940:	40020088 	.word	0x40020088
 8003944:	400200a0 	.word	0x400200a0
 8003948:	400200b8 	.word	0x400200b8
 800394c:	40020410 	.word	0x40020410
 8003950:	40020428 	.word	0x40020428
 8003954:	40020440 	.word	0x40020440
 8003958:	40020458 	.word	0x40020458
 800395c:	40020470 	.word	0x40020470
 8003960:	40020488 	.word	0x40020488
 8003964:	400204a0 	.word	0x400204a0
 8003968:	400204b8 	.word	0x400204b8
 800396c:	58025408 	.word	0x58025408
 8003970:	5802541c 	.word	0x5802541c
 8003974:	58025430 	.word	0x58025430
 8003978:	58025444 	.word	0x58025444
 800397c:	58025458 	.word	0x58025458
 8003980:	5802546c 	.word	0x5802546c
 8003984:	58025480 	.word	0x58025480
 8003988:	58025494 	.word	0x58025494
 800398c:	2300      	movs	r3, #0
 800398e:	2b00      	cmp	r3, #0
 8003990:	d028      	beq.n	80039e4 <HAL_DMA_Abort_IT+0x460>
 8003992:	687b      	ldr	r3, [r7, #4]
 8003994:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8003996:	681a      	ldr	r2, [r3, #0]
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 800399c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80039a0:	601a      	str	r2, [r3, #0]
 80039a2:	687b      	ldr	r3, [r7, #4]
 80039a4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039a6:	60fb      	str	r3, [r7, #12]
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80039ac:	f003 031f 	and.w	r3, r3, #31
 80039b0:	2201      	movs	r2, #1
 80039b2:	409a      	lsls	r2, r3
 80039b4:	68fb      	ldr	r3, [r7, #12]
 80039b6:	605a      	str	r2, [r3, #4]
 80039b8:	687b      	ldr	r3, [r7, #4]
 80039ba:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80039bc:	687a      	ldr	r2, [r7, #4]
 80039be:	6e92      	ldr	r2, [r2, #104]	@ 0x68
 80039c0:	605a      	str	r2, [r3, #4]
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80039c6:	2b00      	cmp	r3, #0
 80039c8:	d00c      	beq.n	80039e4 <HAL_DMA_Abort_IT+0x460>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80039ce:	681a      	ldr	r2, [r3, #0]
 80039d0:	687b      	ldr	r3, [r7, #4]
 80039d2:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 80039d4:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 80039d8:	601a      	str	r2, [r3, #0]
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80039de:	687a      	ldr	r2, [r7, #4]
 80039e0:	6f52      	ldr	r2, [r2, #116]	@ 0x74
 80039e2:	605a      	str	r2, [r3, #4]
 80039e4:	687b      	ldr	r3, [r7, #4]
 80039e6:	2201      	movs	r2, #1
 80039e8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
 80039ec:	687b      	ldr	r3, [r7, #4]
 80039ee:	2200      	movs	r2, #0
 80039f0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
 80039f4:	687b      	ldr	r3, [r7, #4]
 80039f6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80039f8:	2b00      	cmp	r3, #0
 80039fa:	d003      	beq.n	8003a04 <HAL_DMA_Abort_IT+0x480>
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003a00:	6878      	ldr	r0, [r7, #4]
 8003a02:	4798      	blx	r3
 8003a04:	2300      	movs	r3, #0
 8003a06:	4618      	mov	r0, r3
 8003a08:	3710      	adds	r7, #16
 8003a0a:	46bd      	mov	sp, r7
 8003a0c:	bd80      	pop	{r7, pc}
 8003a0e:	bf00      	nop

08003a10 <HAL_GPIO_Init>:
 8003a10:	b480      	push	{r7}
 8003a12:	b089      	sub	sp, #36	@ 0x24
 8003a14:	af00      	add	r7, sp, #0
 8003a16:	6078      	str	r0, [r7, #4]
 8003a18:	6039      	str	r1, [r7, #0]
 8003a1a:	2300      	movs	r3, #0
 8003a1c:	61fb      	str	r3, [r7, #28]
 8003a1e:	4b86      	ldr	r3, [pc, #536]	@ (8003c38 <HAL_GPIO_Init+0x228>)
 8003a20:	617b      	str	r3, [r7, #20]
 8003a22:	e18c      	b.n	8003d3e <HAL_GPIO_Init+0x32e>
 8003a24:	683b      	ldr	r3, [r7, #0]
 8003a26:	681a      	ldr	r2, [r3, #0]
 8003a28:	2101      	movs	r1, #1
 8003a2a:	69fb      	ldr	r3, [r7, #28]
 8003a2c:	fa01 f303 	lsl.w	r3, r1, r3
 8003a30:	4013      	ands	r3, r2
 8003a32:	613b      	str	r3, [r7, #16]
 8003a34:	693b      	ldr	r3, [r7, #16]
 8003a36:	2b00      	cmp	r3, #0
 8003a38:	f000 817e 	beq.w	8003d38 <HAL_GPIO_Init+0x328>
 8003a3c:	683b      	ldr	r3, [r7, #0]
 8003a3e:	685b      	ldr	r3, [r3, #4]
 8003a40:	f003 0303 	and.w	r3, r3, #3
 8003a44:	2b01      	cmp	r3, #1
 8003a46:	d005      	beq.n	8003a54 <HAL_GPIO_Init+0x44>
 8003a48:	683b      	ldr	r3, [r7, #0]
 8003a4a:	685b      	ldr	r3, [r3, #4]
 8003a4c:	f003 0303 	and.w	r3, r3, #3
 8003a50:	2b02      	cmp	r3, #2
 8003a52:	d130      	bne.n	8003ab6 <HAL_GPIO_Init+0xa6>
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	689b      	ldr	r3, [r3, #8]
 8003a58:	61bb      	str	r3, [r7, #24]
 8003a5a:	69fb      	ldr	r3, [r7, #28]
 8003a5c:	005b      	lsls	r3, r3, #1
 8003a5e:	2203      	movs	r2, #3
 8003a60:	fa02 f303 	lsl.w	r3, r2, r3
 8003a64:	43db      	mvns	r3, r3
 8003a66:	69ba      	ldr	r2, [r7, #24]
 8003a68:	4013      	ands	r3, r2
 8003a6a:	61bb      	str	r3, [r7, #24]
 8003a6c:	683b      	ldr	r3, [r7, #0]
 8003a6e:	68da      	ldr	r2, [r3, #12]
 8003a70:	69fb      	ldr	r3, [r7, #28]
 8003a72:	005b      	lsls	r3, r3, #1
 8003a74:	fa02 f303 	lsl.w	r3, r2, r3
 8003a78:	69ba      	ldr	r2, [r7, #24]
 8003a7a:	4313      	orrs	r3, r2
 8003a7c:	61bb      	str	r3, [r7, #24]
 8003a7e:	687b      	ldr	r3, [r7, #4]
 8003a80:	69ba      	ldr	r2, [r7, #24]
 8003a82:	609a      	str	r2, [r3, #8]
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	685b      	ldr	r3, [r3, #4]
 8003a88:	61bb      	str	r3, [r7, #24]
 8003a8a:	2201      	movs	r2, #1
 8003a8c:	69fb      	ldr	r3, [r7, #28]
 8003a8e:	fa02 f303 	lsl.w	r3, r2, r3
 8003a92:	43db      	mvns	r3, r3
 8003a94:	69ba      	ldr	r2, [r7, #24]
 8003a96:	4013      	ands	r3, r2
 8003a98:	61bb      	str	r3, [r7, #24]
 8003a9a:	683b      	ldr	r3, [r7, #0]
 8003a9c:	685b      	ldr	r3, [r3, #4]
 8003a9e:	091b      	lsrs	r3, r3, #4
 8003aa0:	f003 0201 	and.w	r2, r3, #1
 8003aa4:	69fb      	ldr	r3, [r7, #28]
 8003aa6:	fa02 f303 	lsl.w	r3, r2, r3
 8003aaa:	69ba      	ldr	r2, [r7, #24]
 8003aac:	4313      	orrs	r3, r2
 8003aae:	61bb      	str	r3, [r7, #24]
 8003ab0:	687b      	ldr	r3, [r7, #4]
 8003ab2:	69ba      	ldr	r2, [r7, #24]
 8003ab4:	605a      	str	r2, [r3, #4]
 8003ab6:	683b      	ldr	r3, [r7, #0]
 8003ab8:	685b      	ldr	r3, [r3, #4]
 8003aba:	f003 0303 	and.w	r3, r3, #3
 8003abe:	2b03      	cmp	r3, #3
 8003ac0:	d017      	beq.n	8003af2 <HAL_GPIO_Init+0xe2>
 8003ac2:	687b      	ldr	r3, [r7, #4]
 8003ac4:	68db      	ldr	r3, [r3, #12]
 8003ac6:	61bb      	str	r3, [r7, #24]
 8003ac8:	69fb      	ldr	r3, [r7, #28]
 8003aca:	005b      	lsls	r3, r3, #1
 8003acc:	2203      	movs	r2, #3
 8003ace:	fa02 f303 	lsl.w	r3, r2, r3
 8003ad2:	43db      	mvns	r3, r3
 8003ad4:	69ba      	ldr	r2, [r7, #24]
 8003ad6:	4013      	ands	r3, r2
 8003ad8:	61bb      	str	r3, [r7, #24]
 8003ada:	683b      	ldr	r3, [r7, #0]
 8003adc:	689a      	ldr	r2, [r3, #8]
 8003ade:	69fb      	ldr	r3, [r7, #28]
 8003ae0:	005b      	lsls	r3, r3, #1
 8003ae2:	fa02 f303 	lsl.w	r3, r2, r3
 8003ae6:	69ba      	ldr	r2, [r7, #24]
 8003ae8:	4313      	orrs	r3, r2
 8003aea:	61bb      	str	r3, [r7, #24]
 8003aec:	687b      	ldr	r3, [r7, #4]
 8003aee:	69ba      	ldr	r2, [r7, #24]
 8003af0:	60da      	str	r2, [r3, #12]
 8003af2:	683b      	ldr	r3, [r7, #0]
 8003af4:	685b      	ldr	r3, [r3, #4]
 8003af6:	f003 0303 	and.w	r3, r3, #3
 8003afa:	2b02      	cmp	r3, #2
 8003afc:	d123      	bne.n	8003b46 <HAL_GPIO_Init+0x136>
 8003afe:	69fb      	ldr	r3, [r7, #28]
 8003b00:	08da      	lsrs	r2, r3, #3
 8003b02:	687b      	ldr	r3, [r7, #4]
 8003b04:	3208      	adds	r2, #8
 8003b06:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003b0a:	61bb      	str	r3, [r7, #24]
 8003b0c:	69fb      	ldr	r3, [r7, #28]
 8003b0e:	f003 0307 	and.w	r3, r3, #7
 8003b12:	009b      	lsls	r3, r3, #2
 8003b14:	220f      	movs	r2, #15
 8003b16:	fa02 f303 	lsl.w	r3, r2, r3
 8003b1a:	43db      	mvns	r3, r3
 8003b1c:	69ba      	ldr	r2, [r7, #24]
 8003b1e:	4013      	ands	r3, r2
 8003b20:	61bb      	str	r3, [r7, #24]
 8003b22:	683b      	ldr	r3, [r7, #0]
 8003b24:	691a      	ldr	r2, [r3, #16]
 8003b26:	69fb      	ldr	r3, [r7, #28]
 8003b28:	f003 0307 	and.w	r3, r3, #7
 8003b2c:	009b      	lsls	r3, r3, #2
 8003b2e:	fa02 f303 	lsl.w	r3, r2, r3
 8003b32:	69ba      	ldr	r2, [r7, #24]
 8003b34:	4313      	orrs	r3, r2
 8003b36:	61bb      	str	r3, [r7, #24]
 8003b38:	69fb      	ldr	r3, [r7, #28]
 8003b3a:	08da      	lsrs	r2, r3, #3
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	3208      	adds	r2, #8
 8003b40:	69b9      	ldr	r1, [r7, #24]
 8003b42:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	61bb      	str	r3, [r7, #24]
 8003b4c:	69fb      	ldr	r3, [r7, #28]
 8003b4e:	005b      	lsls	r3, r3, #1
 8003b50:	2203      	movs	r2, #3
 8003b52:	fa02 f303 	lsl.w	r3, r2, r3
 8003b56:	43db      	mvns	r3, r3
 8003b58:	69ba      	ldr	r2, [r7, #24]
 8003b5a:	4013      	ands	r3, r2
 8003b5c:	61bb      	str	r3, [r7, #24]
 8003b5e:	683b      	ldr	r3, [r7, #0]
 8003b60:	685b      	ldr	r3, [r3, #4]
 8003b62:	f003 0203 	and.w	r2, r3, #3
 8003b66:	69fb      	ldr	r3, [r7, #28]
 8003b68:	005b      	lsls	r3, r3, #1
 8003b6a:	fa02 f303 	lsl.w	r3, r2, r3
 8003b6e:	69ba      	ldr	r2, [r7, #24]
 8003b70:	4313      	orrs	r3, r2
 8003b72:	61bb      	str	r3, [r7, #24]
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	69ba      	ldr	r2, [r7, #24]
 8003b78:	601a      	str	r2, [r3, #0]
 8003b7a:	683b      	ldr	r3, [r7, #0]
 8003b7c:	685b      	ldr	r3, [r3, #4]
 8003b7e:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003b82:	2b00      	cmp	r3, #0
 8003b84:	f000 80d8 	beq.w	8003d38 <HAL_GPIO_Init+0x328>
 8003b88:	4b2c      	ldr	r3, [pc, #176]	@ (8003c3c <HAL_GPIO_Init+0x22c>)
 8003b8a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8003b8e:	4a2b      	ldr	r2, [pc, #172]	@ (8003c3c <HAL_GPIO_Init+0x22c>)
 8003b90:	f043 0302 	orr.w	r3, r3, #2
 8003b94:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8003b98:	4b28      	ldr	r3, [pc, #160]	@ (8003c3c <HAL_GPIO_Init+0x22c>)
 8003b9a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8003b9e:	f003 0302 	and.w	r3, r3, #2
 8003ba2:	60fb      	str	r3, [r7, #12]
 8003ba4:	68fb      	ldr	r3, [r7, #12]
 8003ba6:	4a26      	ldr	r2, [pc, #152]	@ (8003c40 <HAL_GPIO_Init+0x230>)
 8003ba8:	69fb      	ldr	r3, [r7, #28]
 8003baa:	089b      	lsrs	r3, r3, #2
 8003bac:	3302      	adds	r3, #2
 8003bae:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003bb2:	61bb      	str	r3, [r7, #24]
 8003bb4:	69fb      	ldr	r3, [r7, #28]
 8003bb6:	f003 0303 	and.w	r3, r3, #3
 8003bba:	009b      	lsls	r3, r3, #2
 8003bbc:	220f      	movs	r2, #15
 8003bbe:	fa02 f303 	lsl.w	r3, r2, r3
 8003bc2:	43db      	mvns	r3, r3
 8003bc4:	69ba      	ldr	r2, [r7, #24]
 8003bc6:	4013      	ands	r3, r2
 8003bc8:	61bb      	str	r3, [r7, #24]
 8003bca:	687b      	ldr	r3, [r7, #4]
 8003bcc:	4a1d      	ldr	r2, [pc, #116]	@ (8003c44 <HAL_GPIO_Init+0x234>)
 8003bce:	4293      	cmp	r3, r2
 8003bd0:	d04a      	beq.n	8003c68 <HAL_GPIO_Init+0x258>
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	4a1c      	ldr	r2, [pc, #112]	@ (8003c48 <HAL_GPIO_Init+0x238>)
 8003bd6:	4293      	cmp	r3, r2
 8003bd8:	d02b      	beq.n	8003c32 <HAL_GPIO_Init+0x222>
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	4a1b      	ldr	r2, [pc, #108]	@ (8003c4c <HAL_GPIO_Init+0x23c>)
 8003bde:	4293      	cmp	r3, r2
 8003be0:	d025      	beq.n	8003c2e <HAL_GPIO_Init+0x21e>
 8003be2:	687b      	ldr	r3, [r7, #4]
 8003be4:	4a1a      	ldr	r2, [pc, #104]	@ (8003c50 <HAL_GPIO_Init+0x240>)
 8003be6:	4293      	cmp	r3, r2
 8003be8:	d01f      	beq.n	8003c2a <HAL_GPIO_Init+0x21a>
 8003bea:	687b      	ldr	r3, [r7, #4]
 8003bec:	4a19      	ldr	r2, [pc, #100]	@ (8003c54 <HAL_GPIO_Init+0x244>)
 8003bee:	4293      	cmp	r3, r2
 8003bf0:	d019      	beq.n	8003c26 <HAL_GPIO_Init+0x216>
 8003bf2:	687b      	ldr	r3, [r7, #4]
 8003bf4:	4a18      	ldr	r2, [pc, #96]	@ (8003c58 <HAL_GPIO_Init+0x248>)
 8003bf6:	4293      	cmp	r3, r2
 8003bf8:	d013      	beq.n	8003c22 <HAL_GPIO_Init+0x212>
 8003bfa:	687b      	ldr	r3, [r7, #4]
 8003bfc:	4a17      	ldr	r2, [pc, #92]	@ (8003c5c <HAL_GPIO_Init+0x24c>)
 8003bfe:	4293      	cmp	r3, r2
 8003c00:	d00d      	beq.n	8003c1e <HAL_GPIO_Init+0x20e>
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	4a16      	ldr	r2, [pc, #88]	@ (8003c60 <HAL_GPIO_Init+0x250>)
 8003c06:	4293      	cmp	r3, r2
 8003c08:	d007      	beq.n	8003c1a <HAL_GPIO_Init+0x20a>
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	4a15      	ldr	r2, [pc, #84]	@ (8003c64 <HAL_GPIO_Init+0x254>)
 8003c0e:	4293      	cmp	r3, r2
 8003c10:	d101      	bne.n	8003c16 <HAL_GPIO_Init+0x206>
 8003c12:	2309      	movs	r3, #9
 8003c14:	e029      	b.n	8003c6a <HAL_GPIO_Init+0x25a>
 8003c16:	230a      	movs	r3, #10
 8003c18:	e027      	b.n	8003c6a <HAL_GPIO_Init+0x25a>
 8003c1a:	2307      	movs	r3, #7
 8003c1c:	e025      	b.n	8003c6a <HAL_GPIO_Init+0x25a>
 8003c1e:	2306      	movs	r3, #6
 8003c20:	e023      	b.n	8003c6a <HAL_GPIO_Init+0x25a>
 8003c22:	2305      	movs	r3, #5
 8003c24:	e021      	b.n	8003c6a <HAL_GPIO_Init+0x25a>
 8003c26:	2304      	movs	r3, #4
 8003c28:	e01f      	b.n	8003c6a <HAL_GPIO_Init+0x25a>
 8003c2a:	2303      	movs	r3, #3
 8003c2c:	e01d      	b.n	8003c6a <HAL_GPIO_Init+0x25a>
 8003c2e:	2302      	movs	r3, #2
 8003c30:	e01b      	b.n	8003c6a <HAL_GPIO_Init+0x25a>
 8003c32:	2301      	movs	r3, #1
 8003c34:	e019      	b.n	8003c6a <HAL_GPIO_Init+0x25a>
 8003c36:	bf00      	nop
 8003c38:	58000080 	.word	0x58000080
 8003c3c:	58024400 	.word	0x58024400
 8003c40:	58000400 	.word	0x58000400
 8003c44:	58020000 	.word	0x58020000
 8003c48:	58020400 	.word	0x58020400
 8003c4c:	58020800 	.word	0x58020800
 8003c50:	58020c00 	.word	0x58020c00
 8003c54:	58021000 	.word	0x58021000
 8003c58:	58021400 	.word	0x58021400
 8003c5c:	58021800 	.word	0x58021800
 8003c60:	58021c00 	.word	0x58021c00
 8003c64:	58022400 	.word	0x58022400
 8003c68:	2300      	movs	r3, #0
 8003c6a:	69fa      	ldr	r2, [r7, #28]
 8003c6c:	f002 0203 	and.w	r2, r2, #3
 8003c70:	0092      	lsls	r2, r2, #2
 8003c72:	4093      	lsls	r3, r2
 8003c74:	69ba      	ldr	r2, [r7, #24]
 8003c76:	4313      	orrs	r3, r2
 8003c78:	61bb      	str	r3, [r7, #24]
 8003c7a:	4938      	ldr	r1, [pc, #224]	@ (8003d5c <HAL_GPIO_Init+0x34c>)
 8003c7c:	69fb      	ldr	r3, [r7, #28]
 8003c7e:	089b      	lsrs	r3, r3, #2
 8003c80:	3302      	adds	r3, #2
 8003c82:	69ba      	ldr	r2, [r7, #24]
 8003c84:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003c88:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	61bb      	str	r3, [r7, #24]
 8003c90:	693b      	ldr	r3, [r7, #16]
 8003c92:	43db      	mvns	r3, r3
 8003c94:	69ba      	ldr	r2, [r7, #24]
 8003c96:	4013      	ands	r3, r2
 8003c98:	61bb      	str	r3, [r7, #24]
 8003c9a:	683b      	ldr	r3, [r7, #0]
 8003c9c:	685b      	ldr	r3, [r3, #4]
 8003c9e:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003ca2:	2b00      	cmp	r3, #0
 8003ca4:	d003      	beq.n	8003cae <HAL_GPIO_Init+0x29e>
 8003ca6:	69ba      	ldr	r2, [r7, #24]
 8003ca8:	693b      	ldr	r3, [r7, #16]
 8003caa:	4313      	orrs	r3, r2
 8003cac:	61bb      	str	r3, [r7, #24]
 8003cae:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8003cb2:	69bb      	ldr	r3, [r7, #24]
 8003cb4:	6013      	str	r3, [r2, #0]
 8003cb6:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8003cba:	685b      	ldr	r3, [r3, #4]
 8003cbc:	61bb      	str	r3, [r7, #24]
 8003cbe:	693b      	ldr	r3, [r7, #16]
 8003cc0:	43db      	mvns	r3, r3
 8003cc2:	69ba      	ldr	r2, [r7, #24]
 8003cc4:	4013      	ands	r3, r2
 8003cc6:	61bb      	str	r3, [r7, #24]
 8003cc8:	683b      	ldr	r3, [r7, #0]
 8003cca:	685b      	ldr	r3, [r3, #4]
 8003ccc:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003cd0:	2b00      	cmp	r3, #0
 8003cd2:	d003      	beq.n	8003cdc <HAL_GPIO_Init+0x2cc>
 8003cd4:	69ba      	ldr	r2, [r7, #24]
 8003cd6:	693b      	ldr	r3, [r7, #16]
 8003cd8:	4313      	orrs	r3, r2
 8003cda:	61bb      	str	r3, [r7, #24]
 8003cdc:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8003ce0:	69bb      	ldr	r3, [r7, #24]
 8003ce2:	6053      	str	r3, [r2, #4]
 8003ce4:	697b      	ldr	r3, [r7, #20]
 8003ce6:	685b      	ldr	r3, [r3, #4]
 8003ce8:	61bb      	str	r3, [r7, #24]
 8003cea:	693b      	ldr	r3, [r7, #16]
 8003cec:	43db      	mvns	r3, r3
 8003cee:	69ba      	ldr	r2, [r7, #24]
 8003cf0:	4013      	ands	r3, r2
 8003cf2:	61bb      	str	r3, [r7, #24]
 8003cf4:	683b      	ldr	r3, [r7, #0]
 8003cf6:	685b      	ldr	r3, [r3, #4]
 8003cf8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003cfc:	2b00      	cmp	r3, #0
 8003cfe:	d003      	beq.n	8003d08 <HAL_GPIO_Init+0x2f8>
 8003d00:	69ba      	ldr	r2, [r7, #24]
 8003d02:	693b      	ldr	r3, [r7, #16]
 8003d04:	4313      	orrs	r3, r2
 8003d06:	61bb      	str	r3, [r7, #24]
 8003d08:	697b      	ldr	r3, [r7, #20]
 8003d0a:	69ba      	ldr	r2, [r7, #24]
 8003d0c:	605a      	str	r2, [r3, #4]
 8003d0e:	697b      	ldr	r3, [r7, #20]
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	61bb      	str	r3, [r7, #24]
 8003d14:	693b      	ldr	r3, [r7, #16]
 8003d16:	43db      	mvns	r3, r3
 8003d18:	69ba      	ldr	r2, [r7, #24]
 8003d1a:	4013      	ands	r3, r2
 8003d1c:	61bb      	str	r3, [r7, #24]
 8003d1e:	683b      	ldr	r3, [r7, #0]
 8003d20:	685b      	ldr	r3, [r3, #4]
 8003d22:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d003      	beq.n	8003d32 <HAL_GPIO_Init+0x322>
 8003d2a:	69ba      	ldr	r2, [r7, #24]
 8003d2c:	693b      	ldr	r3, [r7, #16]
 8003d2e:	4313      	orrs	r3, r2
 8003d30:	61bb      	str	r3, [r7, #24]
 8003d32:	697b      	ldr	r3, [r7, #20]
 8003d34:	69ba      	ldr	r2, [r7, #24]
 8003d36:	601a      	str	r2, [r3, #0]
 8003d38:	69fb      	ldr	r3, [r7, #28]
 8003d3a:	3301      	adds	r3, #1
 8003d3c:	61fb      	str	r3, [r7, #28]
 8003d3e:	683b      	ldr	r3, [r7, #0]
 8003d40:	681a      	ldr	r2, [r3, #0]
 8003d42:	69fb      	ldr	r3, [r7, #28]
 8003d44:	fa22 f303 	lsr.w	r3, r2, r3
 8003d48:	2b00      	cmp	r3, #0
 8003d4a:	f47f ae6b 	bne.w	8003a24 <HAL_GPIO_Init+0x14>
 8003d4e:	bf00      	nop
 8003d50:	bf00      	nop
 8003d52:	3724      	adds	r7, #36	@ 0x24
 8003d54:	46bd      	mov	sp, r7
 8003d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d5a:	4770      	bx	lr
 8003d5c:	58000400 	.word	0x58000400

08003d60 <HAL_GPIO_WritePin>:
 8003d60:	b480      	push	{r7}
 8003d62:	b083      	sub	sp, #12
 8003d64:	af00      	add	r7, sp, #0
 8003d66:	6078      	str	r0, [r7, #4]
 8003d68:	460b      	mov	r3, r1
 8003d6a:	807b      	strh	r3, [r7, #2]
 8003d6c:	4613      	mov	r3, r2
 8003d6e:	707b      	strb	r3, [r7, #1]
 8003d70:	787b      	ldrb	r3, [r7, #1]
 8003d72:	2b00      	cmp	r3, #0
 8003d74:	d003      	beq.n	8003d7e <HAL_GPIO_WritePin+0x1e>
 8003d76:	887a      	ldrh	r2, [r7, #2]
 8003d78:	687b      	ldr	r3, [r7, #4]
 8003d7a:	619a      	str	r2, [r3, #24]
 8003d7c:	e003      	b.n	8003d86 <HAL_GPIO_WritePin+0x26>
 8003d7e:	887b      	ldrh	r3, [r7, #2]
 8003d80:	041a      	lsls	r2, r3, #16
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	619a      	str	r2, [r3, #24]
 8003d86:	bf00      	nop
 8003d88:	370c      	adds	r7, #12
 8003d8a:	46bd      	mov	sp, r7
 8003d8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d90:	4770      	bx	lr
	...

08003d94 <HAL_I2C_Init>:
 8003d94:	b580      	push	{r7, lr}
 8003d96:	b082      	sub	sp, #8
 8003d98:	af00      	add	r7, sp, #0
 8003d9a:	6078      	str	r0, [r7, #4]
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	2b00      	cmp	r3, #0
 8003da0:	d101      	bne.n	8003da6 <HAL_I2C_Init+0x12>
 8003da2:	2301      	movs	r3, #1
 8003da4:	e08b      	b.n	8003ebe <HAL_I2C_Init+0x12a>
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003dac:	b2db      	uxtb	r3, r3
 8003dae:	2b00      	cmp	r3, #0
 8003db0:	d106      	bne.n	8003dc0 <HAL_I2C_Init+0x2c>
 8003db2:	687b      	ldr	r3, [r7, #4]
 8003db4:	2200      	movs	r2, #0
 8003db6:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003dba:	6878      	ldr	r0, [r7, #4]
 8003dbc:	f7fd ff2e 	bl	8001c1c <HAL_I2C_MspInit>
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	2224      	movs	r2, #36	@ 0x24
 8003dc4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	681b      	ldr	r3, [r3, #0]
 8003dcc:	681a      	ldr	r2, [r3, #0]
 8003dce:	687b      	ldr	r3, [r7, #4]
 8003dd0:	681b      	ldr	r3, [r3, #0]
 8003dd2:	f022 0201 	bic.w	r2, r2, #1
 8003dd6:	601a      	str	r2, [r3, #0]
 8003dd8:	687b      	ldr	r3, [r7, #4]
 8003dda:	685a      	ldr	r2, [r3, #4]
 8003ddc:	687b      	ldr	r3, [r7, #4]
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003de4:	611a      	str	r2, [r3, #16]
 8003de6:	687b      	ldr	r3, [r7, #4]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	689a      	ldr	r2, [r3, #8]
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003df4:	609a      	str	r2, [r3, #8]
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	68db      	ldr	r3, [r3, #12]
 8003dfa:	2b01      	cmp	r3, #1
 8003dfc:	d107      	bne.n	8003e0e <HAL_I2C_Init+0x7a>
 8003dfe:	687b      	ldr	r3, [r7, #4]
 8003e00:	689a      	ldr	r2, [r3, #8]
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	681b      	ldr	r3, [r3, #0]
 8003e06:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003e0a:	609a      	str	r2, [r3, #8]
 8003e0c:	e006      	b.n	8003e1c <HAL_I2C_Init+0x88>
 8003e0e:	687b      	ldr	r3, [r7, #4]
 8003e10:	689a      	ldr	r2, [r3, #8]
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8003e1a:	609a      	str	r2, [r3, #8]
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	68db      	ldr	r3, [r3, #12]
 8003e20:	2b02      	cmp	r3, #2
 8003e22:	d108      	bne.n	8003e36 <HAL_I2C_Init+0xa2>
 8003e24:	687b      	ldr	r3, [r7, #4]
 8003e26:	681b      	ldr	r3, [r3, #0]
 8003e28:	685a      	ldr	r2, [r3, #4]
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	681b      	ldr	r3, [r3, #0]
 8003e2e:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003e32:	605a      	str	r2, [r3, #4]
 8003e34:	e007      	b.n	8003e46 <HAL_I2C_Init+0xb2>
 8003e36:	687b      	ldr	r3, [r7, #4]
 8003e38:	681b      	ldr	r3, [r3, #0]
 8003e3a:	685a      	ldr	r2, [r3, #4]
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	681b      	ldr	r3, [r3, #0]
 8003e40:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003e44:	605a      	str	r2, [r3, #4]
 8003e46:	687b      	ldr	r3, [r7, #4]
 8003e48:	681b      	ldr	r3, [r3, #0]
 8003e4a:	6859      	ldr	r1, [r3, #4]
 8003e4c:	687b      	ldr	r3, [r7, #4]
 8003e4e:	681a      	ldr	r2, [r3, #0]
 8003e50:	4b1d      	ldr	r3, [pc, #116]	@ (8003ec8 <HAL_I2C_Init+0x134>)
 8003e52:	430b      	orrs	r3, r1
 8003e54:	6053      	str	r3, [r2, #4]
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	68da      	ldr	r2, [r3, #12]
 8003e5c:	687b      	ldr	r3, [r7, #4]
 8003e5e:	681b      	ldr	r3, [r3, #0]
 8003e60:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003e64:	60da      	str	r2, [r3, #12]
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	691a      	ldr	r2, [r3, #16]
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	695b      	ldr	r3, [r3, #20]
 8003e6e:	ea42 0103 	orr.w	r1, r2, r3
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	699b      	ldr	r3, [r3, #24]
 8003e76:	021a      	lsls	r2, r3, #8
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	681b      	ldr	r3, [r3, #0]
 8003e7c:	430a      	orrs	r2, r1
 8003e7e:	60da      	str	r2, [r3, #12]
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	69d9      	ldr	r1, [r3, #28]
 8003e84:	687b      	ldr	r3, [r7, #4]
 8003e86:	6a1a      	ldr	r2, [r3, #32]
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	430a      	orrs	r2, r1
 8003e8e:	601a      	str	r2, [r3, #0]
 8003e90:	687b      	ldr	r3, [r7, #4]
 8003e92:	681b      	ldr	r3, [r3, #0]
 8003e94:	681a      	ldr	r2, [r3, #0]
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	681b      	ldr	r3, [r3, #0]
 8003e9a:	f042 0201 	orr.w	r2, r2, #1
 8003e9e:	601a      	str	r2, [r3, #0]
 8003ea0:	687b      	ldr	r3, [r7, #4]
 8003ea2:	2200      	movs	r2, #0
 8003ea4:	645a      	str	r2, [r3, #68]	@ 0x44
 8003ea6:	687b      	ldr	r3, [r7, #4]
 8003ea8:	2220      	movs	r2, #32
 8003eaa:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003eae:	687b      	ldr	r3, [r7, #4]
 8003eb0:	2200      	movs	r2, #0
 8003eb2:	631a      	str	r2, [r3, #48]	@ 0x30
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	2200      	movs	r2, #0
 8003eb8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003ebc:	2300      	movs	r3, #0
 8003ebe:	4618      	mov	r0, r3
 8003ec0:	3708      	adds	r7, #8
 8003ec2:	46bd      	mov	sp, r7
 8003ec4:	bd80      	pop	{r7, pc}
 8003ec6:	bf00      	nop
 8003ec8:	02008000 	.word	0x02008000

08003ecc <HAL_I2C_Mem_Write>:
 8003ecc:	b580      	push	{r7, lr}
 8003ece:	b088      	sub	sp, #32
 8003ed0:	af02      	add	r7, sp, #8
 8003ed2:	60f8      	str	r0, [r7, #12]
 8003ed4:	4608      	mov	r0, r1
 8003ed6:	4611      	mov	r1, r2
 8003ed8:	461a      	mov	r2, r3
 8003eda:	4603      	mov	r3, r0
 8003edc:	817b      	strh	r3, [r7, #10]
 8003ede:	460b      	mov	r3, r1
 8003ee0:	813b      	strh	r3, [r7, #8]
 8003ee2:	4613      	mov	r3, r2
 8003ee4:	80fb      	strh	r3, [r7, #6]
 8003ee6:	68fb      	ldr	r3, [r7, #12]
 8003ee8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003eec:	b2db      	uxtb	r3, r3
 8003eee:	2b20      	cmp	r3, #32
 8003ef0:	f040 80f9 	bne.w	80040e6 <HAL_I2C_Mem_Write+0x21a>
 8003ef4:	6a3b      	ldr	r3, [r7, #32]
 8003ef6:	2b00      	cmp	r3, #0
 8003ef8:	d002      	beq.n	8003f00 <HAL_I2C_Mem_Write+0x34>
 8003efa:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8003efc:	2b00      	cmp	r3, #0
 8003efe:	d105      	bne.n	8003f0c <HAL_I2C_Mem_Write+0x40>
 8003f00:	68fb      	ldr	r3, [r7, #12]
 8003f02:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003f06:	645a      	str	r2, [r3, #68]	@ 0x44
 8003f08:	2301      	movs	r3, #1
 8003f0a:	e0ed      	b.n	80040e8 <HAL_I2C_Mem_Write+0x21c>
 8003f0c:	68fb      	ldr	r3, [r7, #12]
 8003f0e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003f12:	2b01      	cmp	r3, #1
 8003f14:	d101      	bne.n	8003f1a <HAL_I2C_Mem_Write+0x4e>
 8003f16:	2302      	movs	r3, #2
 8003f18:	e0e6      	b.n	80040e8 <HAL_I2C_Mem_Write+0x21c>
 8003f1a:	68fb      	ldr	r3, [r7, #12]
 8003f1c:	2201      	movs	r2, #1
 8003f1e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003f22:	f7fe fe59 	bl	8002bd8 <HAL_GetTick>
 8003f26:	6178      	str	r0, [r7, #20]
 8003f28:	697b      	ldr	r3, [r7, #20]
 8003f2a:	9300      	str	r3, [sp, #0]
 8003f2c:	2319      	movs	r3, #25
 8003f2e:	2201      	movs	r2, #1
 8003f30:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8003f34:	68f8      	ldr	r0, [r7, #12]
 8003f36:	f000 fac3 	bl	80044c0 <I2C_WaitOnFlagUntilTimeout>
 8003f3a:	4603      	mov	r3, r0
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	d001      	beq.n	8003f44 <HAL_I2C_Mem_Write+0x78>
 8003f40:	2301      	movs	r3, #1
 8003f42:	e0d1      	b.n	80040e8 <HAL_I2C_Mem_Write+0x21c>
 8003f44:	68fb      	ldr	r3, [r7, #12]
 8003f46:	2221      	movs	r2, #33	@ 0x21
 8003f48:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8003f4c:	68fb      	ldr	r3, [r7, #12]
 8003f4e:	2240      	movs	r2, #64	@ 0x40
 8003f50:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8003f54:	68fb      	ldr	r3, [r7, #12]
 8003f56:	2200      	movs	r2, #0
 8003f58:	645a      	str	r2, [r3, #68]	@ 0x44
 8003f5a:	68fb      	ldr	r3, [r7, #12]
 8003f5c:	6a3a      	ldr	r2, [r7, #32]
 8003f5e:	625a      	str	r2, [r3, #36]	@ 0x24
 8003f60:	68fb      	ldr	r3, [r7, #12]
 8003f62:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003f64:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	2200      	movs	r2, #0
 8003f6a:	635a      	str	r2, [r3, #52]	@ 0x34
 8003f6c:	88f8      	ldrh	r0, [r7, #6]
 8003f6e:	893a      	ldrh	r2, [r7, #8]
 8003f70:	8979      	ldrh	r1, [r7, #10]
 8003f72:	697b      	ldr	r3, [r7, #20]
 8003f74:	9301      	str	r3, [sp, #4]
 8003f76:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003f78:	9300      	str	r3, [sp, #0]
 8003f7a:	4603      	mov	r3, r0
 8003f7c:	68f8      	ldr	r0, [r7, #12]
 8003f7e:	f000 f9d3 	bl	8004328 <I2C_RequestMemoryWrite>
 8003f82:	4603      	mov	r3, r0
 8003f84:	2b00      	cmp	r3, #0
 8003f86:	d005      	beq.n	8003f94 <HAL_I2C_Mem_Write+0xc8>
 8003f88:	68fb      	ldr	r3, [r7, #12]
 8003f8a:	2200      	movs	r2, #0
 8003f8c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8003f90:	2301      	movs	r3, #1
 8003f92:	e0a9      	b.n	80040e8 <HAL_I2C_Mem_Write+0x21c>
 8003f94:	68fb      	ldr	r3, [r7, #12]
 8003f96:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003f98:	b29b      	uxth	r3, r3
 8003f9a:	2bff      	cmp	r3, #255	@ 0xff
 8003f9c:	d90e      	bls.n	8003fbc <HAL_I2C_Mem_Write+0xf0>
 8003f9e:	68fb      	ldr	r3, [r7, #12]
 8003fa0:	22ff      	movs	r2, #255	@ 0xff
 8003fa2:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003fa8:	b2da      	uxtb	r2, r3
 8003faa:	8979      	ldrh	r1, [r7, #10]
 8003fac:	2300      	movs	r3, #0
 8003fae:	9300      	str	r3, [sp, #0]
 8003fb0:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8003fb4:	68f8      	ldr	r0, [r7, #12]
 8003fb6:	f000 fc47 	bl	8004848 <I2C_TransferConfig>
 8003fba:	e00f      	b.n	8003fdc <HAL_I2C_Mem_Write+0x110>
 8003fbc:	68fb      	ldr	r3, [r7, #12]
 8003fbe:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003fc0:	b29a      	uxth	r2, r3
 8003fc2:	68fb      	ldr	r3, [r7, #12]
 8003fc4:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003fc6:	68fb      	ldr	r3, [r7, #12]
 8003fc8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003fca:	b2da      	uxtb	r2, r3
 8003fcc:	8979      	ldrh	r1, [r7, #10]
 8003fce:	2300      	movs	r3, #0
 8003fd0:	9300      	str	r3, [sp, #0]
 8003fd2:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8003fd6:	68f8      	ldr	r0, [r7, #12]
 8003fd8:	f000 fc36 	bl	8004848 <I2C_TransferConfig>
 8003fdc:	697a      	ldr	r2, [r7, #20]
 8003fde:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003fe0:	68f8      	ldr	r0, [r7, #12]
 8003fe2:	f000 fac6 	bl	8004572 <I2C_WaitOnTXISFlagUntilTimeout>
 8003fe6:	4603      	mov	r3, r0
 8003fe8:	2b00      	cmp	r3, #0
 8003fea:	d001      	beq.n	8003ff0 <HAL_I2C_Mem_Write+0x124>
 8003fec:	2301      	movs	r3, #1
 8003fee:	e07b      	b.n	80040e8 <HAL_I2C_Mem_Write+0x21c>
 8003ff0:	68fb      	ldr	r3, [r7, #12]
 8003ff2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ff4:	781a      	ldrb	r2, [r3, #0]
 8003ff6:	68fb      	ldr	r3, [r7, #12]
 8003ff8:	681b      	ldr	r3, [r3, #0]
 8003ffa:	629a      	str	r2, [r3, #40]	@ 0x28
 8003ffc:	68fb      	ldr	r3, [r7, #12]
 8003ffe:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004000:	1c5a      	adds	r2, r3, #1
 8004002:	68fb      	ldr	r3, [r7, #12]
 8004004:	625a      	str	r2, [r3, #36]	@ 0x24
 8004006:	68fb      	ldr	r3, [r7, #12]
 8004008:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800400a:	b29b      	uxth	r3, r3
 800400c:	3b01      	subs	r3, #1
 800400e:	b29a      	uxth	r2, r3
 8004010:	68fb      	ldr	r3, [r7, #12]
 8004012:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004014:	68fb      	ldr	r3, [r7, #12]
 8004016:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004018:	3b01      	subs	r3, #1
 800401a:	b29a      	uxth	r2, r3
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004020:	68fb      	ldr	r3, [r7, #12]
 8004022:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004024:	b29b      	uxth	r3, r3
 8004026:	2b00      	cmp	r3, #0
 8004028:	d034      	beq.n	8004094 <HAL_I2C_Mem_Write+0x1c8>
 800402a:	68fb      	ldr	r3, [r7, #12]
 800402c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800402e:	2b00      	cmp	r3, #0
 8004030:	d130      	bne.n	8004094 <HAL_I2C_Mem_Write+0x1c8>
 8004032:	697b      	ldr	r3, [r7, #20]
 8004034:	9300      	str	r3, [sp, #0]
 8004036:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004038:	2200      	movs	r2, #0
 800403a:	2180      	movs	r1, #128	@ 0x80
 800403c:	68f8      	ldr	r0, [r7, #12]
 800403e:	f000 fa3f 	bl	80044c0 <I2C_WaitOnFlagUntilTimeout>
 8004042:	4603      	mov	r3, r0
 8004044:	2b00      	cmp	r3, #0
 8004046:	d001      	beq.n	800404c <HAL_I2C_Mem_Write+0x180>
 8004048:	2301      	movs	r3, #1
 800404a:	e04d      	b.n	80040e8 <HAL_I2C_Mem_Write+0x21c>
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004050:	b29b      	uxth	r3, r3
 8004052:	2bff      	cmp	r3, #255	@ 0xff
 8004054:	d90e      	bls.n	8004074 <HAL_I2C_Mem_Write+0x1a8>
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	22ff      	movs	r2, #255	@ 0xff
 800405a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800405c:	68fb      	ldr	r3, [r7, #12]
 800405e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004060:	b2da      	uxtb	r2, r3
 8004062:	8979      	ldrh	r1, [r7, #10]
 8004064:	2300      	movs	r3, #0
 8004066:	9300      	str	r3, [sp, #0]
 8004068:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800406c:	68f8      	ldr	r0, [r7, #12]
 800406e:	f000 fbeb 	bl	8004848 <I2C_TransferConfig>
 8004072:	e00f      	b.n	8004094 <HAL_I2C_Mem_Write+0x1c8>
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004078:	b29a      	uxth	r2, r3
 800407a:	68fb      	ldr	r3, [r7, #12]
 800407c:	851a      	strh	r2, [r3, #40]	@ 0x28
 800407e:	68fb      	ldr	r3, [r7, #12]
 8004080:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004082:	b2da      	uxtb	r2, r3
 8004084:	8979      	ldrh	r1, [r7, #10]
 8004086:	2300      	movs	r3, #0
 8004088:	9300      	str	r3, [sp, #0]
 800408a:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800408e:	68f8      	ldr	r0, [r7, #12]
 8004090:	f000 fbda 	bl	8004848 <I2C_TransferConfig>
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004098:	b29b      	uxth	r3, r3
 800409a:	2b00      	cmp	r3, #0
 800409c:	d19e      	bne.n	8003fdc <HAL_I2C_Mem_Write+0x110>
 800409e:	697a      	ldr	r2, [r7, #20]
 80040a0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80040a2:	68f8      	ldr	r0, [r7, #12]
 80040a4:	f000 faac 	bl	8004600 <I2C_WaitOnSTOPFlagUntilTimeout>
 80040a8:	4603      	mov	r3, r0
 80040aa:	2b00      	cmp	r3, #0
 80040ac:	d001      	beq.n	80040b2 <HAL_I2C_Mem_Write+0x1e6>
 80040ae:	2301      	movs	r3, #1
 80040b0:	e01a      	b.n	80040e8 <HAL_I2C_Mem_Write+0x21c>
 80040b2:	68fb      	ldr	r3, [r7, #12]
 80040b4:	681b      	ldr	r3, [r3, #0]
 80040b6:	2220      	movs	r2, #32
 80040b8:	61da      	str	r2, [r3, #28]
 80040ba:	68fb      	ldr	r3, [r7, #12]
 80040bc:	681b      	ldr	r3, [r3, #0]
 80040be:	6859      	ldr	r1, [r3, #4]
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	681a      	ldr	r2, [r3, #0]
 80040c4:	4b0a      	ldr	r3, [pc, #40]	@ (80040f0 <HAL_I2C_Mem_Write+0x224>)
 80040c6:	400b      	ands	r3, r1
 80040c8:	6053      	str	r3, [r2, #4]
 80040ca:	68fb      	ldr	r3, [r7, #12]
 80040cc:	2220      	movs	r2, #32
 80040ce:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80040d2:	68fb      	ldr	r3, [r7, #12]
 80040d4:	2200      	movs	r2, #0
 80040d6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80040da:	68fb      	ldr	r3, [r7, #12]
 80040dc:	2200      	movs	r2, #0
 80040de:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80040e2:	2300      	movs	r3, #0
 80040e4:	e000      	b.n	80040e8 <HAL_I2C_Mem_Write+0x21c>
 80040e6:	2302      	movs	r3, #2
 80040e8:	4618      	mov	r0, r3
 80040ea:	3718      	adds	r7, #24
 80040ec:	46bd      	mov	sp, r7
 80040ee:	bd80      	pop	{r7, pc}
 80040f0:	fe00e800 	.word	0xfe00e800

080040f4 <HAL_I2C_Mem_Read>:
 80040f4:	b580      	push	{r7, lr}
 80040f6:	b088      	sub	sp, #32
 80040f8:	af02      	add	r7, sp, #8
 80040fa:	60f8      	str	r0, [r7, #12]
 80040fc:	4608      	mov	r0, r1
 80040fe:	4611      	mov	r1, r2
 8004100:	461a      	mov	r2, r3
 8004102:	4603      	mov	r3, r0
 8004104:	817b      	strh	r3, [r7, #10]
 8004106:	460b      	mov	r3, r1
 8004108:	813b      	strh	r3, [r7, #8]
 800410a:	4613      	mov	r3, r2
 800410c:	80fb      	strh	r3, [r7, #6]
 800410e:	68fb      	ldr	r3, [r7, #12]
 8004110:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004114:	b2db      	uxtb	r3, r3
 8004116:	2b20      	cmp	r3, #32
 8004118:	f040 80fd 	bne.w	8004316 <HAL_I2C_Mem_Read+0x222>
 800411c:	6a3b      	ldr	r3, [r7, #32]
 800411e:	2b00      	cmp	r3, #0
 8004120:	d002      	beq.n	8004128 <HAL_I2C_Mem_Read+0x34>
 8004122:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8004124:	2b00      	cmp	r3, #0
 8004126:	d105      	bne.n	8004134 <HAL_I2C_Mem_Read+0x40>
 8004128:	68fb      	ldr	r3, [r7, #12]
 800412a:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800412e:	645a      	str	r2, [r3, #68]	@ 0x44
 8004130:	2301      	movs	r3, #1
 8004132:	e0f1      	b.n	8004318 <HAL_I2C_Mem_Read+0x224>
 8004134:	68fb      	ldr	r3, [r7, #12]
 8004136:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800413a:	2b01      	cmp	r3, #1
 800413c:	d101      	bne.n	8004142 <HAL_I2C_Mem_Read+0x4e>
 800413e:	2302      	movs	r3, #2
 8004140:	e0ea      	b.n	8004318 <HAL_I2C_Mem_Read+0x224>
 8004142:	68fb      	ldr	r3, [r7, #12]
 8004144:	2201      	movs	r2, #1
 8004146:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800414a:	f7fe fd45 	bl	8002bd8 <HAL_GetTick>
 800414e:	6178      	str	r0, [r7, #20]
 8004150:	697b      	ldr	r3, [r7, #20]
 8004152:	9300      	str	r3, [sp, #0]
 8004154:	2319      	movs	r3, #25
 8004156:	2201      	movs	r2, #1
 8004158:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 800415c:	68f8      	ldr	r0, [r7, #12]
 800415e:	f000 f9af 	bl	80044c0 <I2C_WaitOnFlagUntilTimeout>
 8004162:	4603      	mov	r3, r0
 8004164:	2b00      	cmp	r3, #0
 8004166:	d001      	beq.n	800416c <HAL_I2C_Mem_Read+0x78>
 8004168:	2301      	movs	r3, #1
 800416a:	e0d5      	b.n	8004318 <HAL_I2C_Mem_Read+0x224>
 800416c:	68fb      	ldr	r3, [r7, #12]
 800416e:	2222      	movs	r2, #34	@ 0x22
 8004170:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004174:	68fb      	ldr	r3, [r7, #12]
 8004176:	2240      	movs	r2, #64	@ 0x40
 8004178:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800417c:	68fb      	ldr	r3, [r7, #12]
 800417e:	2200      	movs	r2, #0
 8004180:	645a      	str	r2, [r3, #68]	@ 0x44
 8004182:	68fb      	ldr	r3, [r7, #12]
 8004184:	6a3a      	ldr	r2, [r7, #32]
 8004186:	625a      	str	r2, [r3, #36]	@ 0x24
 8004188:	68fb      	ldr	r3, [r7, #12]
 800418a:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 800418c:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800418e:	68fb      	ldr	r3, [r7, #12]
 8004190:	2200      	movs	r2, #0
 8004192:	635a      	str	r2, [r3, #52]	@ 0x34
 8004194:	88f8      	ldrh	r0, [r7, #6]
 8004196:	893a      	ldrh	r2, [r7, #8]
 8004198:	8979      	ldrh	r1, [r7, #10]
 800419a:	697b      	ldr	r3, [r7, #20]
 800419c:	9301      	str	r3, [sp, #4]
 800419e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80041a0:	9300      	str	r3, [sp, #0]
 80041a2:	4603      	mov	r3, r0
 80041a4:	68f8      	ldr	r0, [r7, #12]
 80041a6:	f000 f913 	bl	80043d0 <I2C_RequestMemoryRead>
 80041aa:	4603      	mov	r3, r0
 80041ac:	2b00      	cmp	r3, #0
 80041ae:	d005      	beq.n	80041bc <HAL_I2C_Mem_Read+0xc8>
 80041b0:	68fb      	ldr	r3, [r7, #12]
 80041b2:	2200      	movs	r2, #0
 80041b4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80041b8:	2301      	movs	r3, #1
 80041ba:	e0ad      	b.n	8004318 <HAL_I2C_Mem_Read+0x224>
 80041bc:	68fb      	ldr	r3, [r7, #12]
 80041be:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80041c0:	b29b      	uxth	r3, r3
 80041c2:	2bff      	cmp	r3, #255	@ 0xff
 80041c4:	d90e      	bls.n	80041e4 <HAL_I2C_Mem_Read+0xf0>
 80041c6:	68fb      	ldr	r3, [r7, #12]
 80041c8:	22ff      	movs	r2, #255	@ 0xff
 80041ca:	851a      	strh	r2, [r3, #40]	@ 0x28
 80041cc:	68fb      	ldr	r3, [r7, #12]
 80041ce:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80041d0:	b2da      	uxtb	r2, r3
 80041d2:	8979      	ldrh	r1, [r7, #10]
 80041d4:	4b52      	ldr	r3, [pc, #328]	@ (8004320 <HAL_I2C_Mem_Read+0x22c>)
 80041d6:	9300      	str	r3, [sp, #0]
 80041d8:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80041dc:	68f8      	ldr	r0, [r7, #12]
 80041de:	f000 fb33 	bl	8004848 <I2C_TransferConfig>
 80041e2:	e00f      	b.n	8004204 <HAL_I2C_Mem_Read+0x110>
 80041e4:	68fb      	ldr	r3, [r7, #12]
 80041e6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80041e8:	b29a      	uxth	r2, r3
 80041ea:	68fb      	ldr	r3, [r7, #12]
 80041ec:	851a      	strh	r2, [r3, #40]	@ 0x28
 80041ee:	68fb      	ldr	r3, [r7, #12]
 80041f0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80041f2:	b2da      	uxtb	r2, r3
 80041f4:	8979      	ldrh	r1, [r7, #10]
 80041f6:	4b4a      	ldr	r3, [pc, #296]	@ (8004320 <HAL_I2C_Mem_Read+0x22c>)
 80041f8:	9300      	str	r3, [sp, #0]
 80041fa:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80041fe:	68f8      	ldr	r0, [r7, #12]
 8004200:	f000 fb22 	bl	8004848 <I2C_TransferConfig>
 8004204:	697b      	ldr	r3, [r7, #20]
 8004206:	9300      	str	r3, [sp, #0]
 8004208:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800420a:	2200      	movs	r2, #0
 800420c:	2104      	movs	r1, #4
 800420e:	68f8      	ldr	r0, [r7, #12]
 8004210:	f000 f956 	bl	80044c0 <I2C_WaitOnFlagUntilTimeout>
 8004214:	4603      	mov	r3, r0
 8004216:	2b00      	cmp	r3, #0
 8004218:	d001      	beq.n	800421e <HAL_I2C_Mem_Read+0x12a>
 800421a:	2301      	movs	r3, #1
 800421c:	e07c      	b.n	8004318 <HAL_I2C_Mem_Read+0x224>
 800421e:	68fb      	ldr	r3, [r7, #12]
 8004220:	681b      	ldr	r3, [r3, #0]
 8004222:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004224:	68fb      	ldr	r3, [r7, #12]
 8004226:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004228:	b2d2      	uxtb	r2, r2
 800422a:	701a      	strb	r2, [r3, #0]
 800422c:	68fb      	ldr	r3, [r7, #12]
 800422e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004230:	1c5a      	adds	r2, r3, #1
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	625a      	str	r2, [r3, #36]	@ 0x24
 8004236:	68fb      	ldr	r3, [r7, #12]
 8004238:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800423a:	3b01      	subs	r3, #1
 800423c:	b29a      	uxth	r2, r3
 800423e:	68fb      	ldr	r3, [r7, #12]
 8004240:	851a      	strh	r2, [r3, #40]	@ 0x28
 8004242:	68fb      	ldr	r3, [r7, #12]
 8004244:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004246:	b29b      	uxth	r3, r3
 8004248:	3b01      	subs	r3, #1
 800424a:	b29a      	uxth	r2, r3
 800424c:	68fb      	ldr	r3, [r7, #12]
 800424e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004254:	b29b      	uxth	r3, r3
 8004256:	2b00      	cmp	r3, #0
 8004258:	d034      	beq.n	80042c4 <HAL_I2C_Mem_Read+0x1d0>
 800425a:	68fb      	ldr	r3, [r7, #12]
 800425c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800425e:	2b00      	cmp	r3, #0
 8004260:	d130      	bne.n	80042c4 <HAL_I2C_Mem_Read+0x1d0>
 8004262:	697b      	ldr	r3, [r7, #20]
 8004264:	9300      	str	r3, [sp, #0]
 8004266:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004268:	2200      	movs	r2, #0
 800426a:	2180      	movs	r1, #128	@ 0x80
 800426c:	68f8      	ldr	r0, [r7, #12]
 800426e:	f000 f927 	bl	80044c0 <I2C_WaitOnFlagUntilTimeout>
 8004272:	4603      	mov	r3, r0
 8004274:	2b00      	cmp	r3, #0
 8004276:	d001      	beq.n	800427c <HAL_I2C_Mem_Read+0x188>
 8004278:	2301      	movs	r3, #1
 800427a:	e04d      	b.n	8004318 <HAL_I2C_Mem_Read+0x224>
 800427c:	68fb      	ldr	r3, [r7, #12]
 800427e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004280:	b29b      	uxth	r3, r3
 8004282:	2bff      	cmp	r3, #255	@ 0xff
 8004284:	d90e      	bls.n	80042a4 <HAL_I2C_Mem_Read+0x1b0>
 8004286:	68fb      	ldr	r3, [r7, #12]
 8004288:	22ff      	movs	r2, #255	@ 0xff
 800428a:	851a      	strh	r2, [r3, #40]	@ 0x28
 800428c:	68fb      	ldr	r3, [r7, #12]
 800428e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004290:	b2da      	uxtb	r2, r3
 8004292:	8979      	ldrh	r1, [r7, #10]
 8004294:	2300      	movs	r3, #0
 8004296:	9300      	str	r3, [sp, #0]
 8004298:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800429c:	68f8      	ldr	r0, [r7, #12]
 800429e:	f000 fad3 	bl	8004848 <I2C_TransferConfig>
 80042a2:	e00f      	b.n	80042c4 <HAL_I2C_Mem_Read+0x1d0>
 80042a4:	68fb      	ldr	r3, [r7, #12]
 80042a6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80042a8:	b29a      	uxth	r2, r3
 80042aa:	68fb      	ldr	r3, [r7, #12]
 80042ac:	851a      	strh	r2, [r3, #40]	@ 0x28
 80042ae:	68fb      	ldr	r3, [r7, #12]
 80042b0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80042b2:	b2da      	uxtb	r2, r3
 80042b4:	8979      	ldrh	r1, [r7, #10]
 80042b6:	2300      	movs	r3, #0
 80042b8:	9300      	str	r3, [sp, #0]
 80042ba:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80042be:	68f8      	ldr	r0, [r7, #12]
 80042c0:	f000 fac2 	bl	8004848 <I2C_TransferConfig>
 80042c4:	68fb      	ldr	r3, [r7, #12]
 80042c6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80042c8:	b29b      	uxth	r3, r3
 80042ca:	2b00      	cmp	r3, #0
 80042cc:	d19a      	bne.n	8004204 <HAL_I2C_Mem_Read+0x110>
 80042ce:	697a      	ldr	r2, [r7, #20]
 80042d0:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80042d2:	68f8      	ldr	r0, [r7, #12]
 80042d4:	f000 f994 	bl	8004600 <I2C_WaitOnSTOPFlagUntilTimeout>
 80042d8:	4603      	mov	r3, r0
 80042da:	2b00      	cmp	r3, #0
 80042dc:	d001      	beq.n	80042e2 <HAL_I2C_Mem_Read+0x1ee>
 80042de:	2301      	movs	r3, #1
 80042e0:	e01a      	b.n	8004318 <HAL_I2C_Mem_Read+0x224>
 80042e2:	68fb      	ldr	r3, [r7, #12]
 80042e4:	681b      	ldr	r3, [r3, #0]
 80042e6:	2220      	movs	r2, #32
 80042e8:	61da      	str	r2, [r3, #28]
 80042ea:	68fb      	ldr	r3, [r7, #12]
 80042ec:	681b      	ldr	r3, [r3, #0]
 80042ee:	6859      	ldr	r1, [r3, #4]
 80042f0:	68fb      	ldr	r3, [r7, #12]
 80042f2:	681a      	ldr	r2, [r3, #0]
 80042f4:	4b0b      	ldr	r3, [pc, #44]	@ (8004324 <HAL_I2C_Mem_Read+0x230>)
 80042f6:	400b      	ands	r3, r1
 80042f8:	6053      	str	r3, [r2, #4]
 80042fa:	68fb      	ldr	r3, [r7, #12]
 80042fc:	2220      	movs	r2, #32
 80042fe:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004302:	68fb      	ldr	r3, [r7, #12]
 8004304:	2200      	movs	r2, #0
 8004306:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800430a:	68fb      	ldr	r3, [r7, #12]
 800430c:	2200      	movs	r2, #0
 800430e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004312:	2300      	movs	r3, #0
 8004314:	e000      	b.n	8004318 <HAL_I2C_Mem_Read+0x224>
 8004316:	2302      	movs	r3, #2
 8004318:	4618      	mov	r0, r3
 800431a:	3718      	adds	r7, #24
 800431c:	46bd      	mov	sp, r7
 800431e:	bd80      	pop	{r7, pc}
 8004320:	80002400 	.word	0x80002400
 8004324:	fe00e800 	.word	0xfe00e800

08004328 <I2C_RequestMemoryWrite>:
 8004328:	b580      	push	{r7, lr}
 800432a:	b086      	sub	sp, #24
 800432c:	af02      	add	r7, sp, #8
 800432e:	60f8      	str	r0, [r7, #12]
 8004330:	4608      	mov	r0, r1
 8004332:	4611      	mov	r1, r2
 8004334:	461a      	mov	r2, r3
 8004336:	4603      	mov	r3, r0
 8004338:	817b      	strh	r3, [r7, #10]
 800433a:	460b      	mov	r3, r1
 800433c:	813b      	strh	r3, [r7, #8]
 800433e:	4613      	mov	r3, r2
 8004340:	80fb      	strh	r3, [r7, #6]
 8004342:	88fb      	ldrh	r3, [r7, #6]
 8004344:	b2da      	uxtb	r2, r3
 8004346:	8979      	ldrh	r1, [r7, #10]
 8004348:	4b20      	ldr	r3, [pc, #128]	@ (80043cc <I2C_RequestMemoryWrite+0xa4>)
 800434a:	9300      	str	r3, [sp, #0]
 800434c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004350:	68f8      	ldr	r0, [r7, #12]
 8004352:	f000 fa79 	bl	8004848 <I2C_TransferConfig>
 8004356:	69fa      	ldr	r2, [r7, #28]
 8004358:	69b9      	ldr	r1, [r7, #24]
 800435a:	68f8      	ldr	r0, [r7, #12]
 800435c:	f000 f909 	bl	8004572 <I2C_WaitOnTXISFlagUntilTimeout>
 8004360:	4603      	mov	r3, r0
 8004362:	2b00      	cmp	r3, #0
 8004364:	d001      	beq.n	800436a <I2C_RequestMemoryWrite+0x42>
 8004366:	2301      	movs	r3, #1
 8004368:	e02c      	b.n	80043c4 <I2C_RequestMemoryWrite+0x9c>
 800436a:	88fb      	ldrh	r3, [r7, #6]
 800436c:	2b01      	cmp	r3, #1
 800436e:	d105      	bne.n	800437c <I2C_RequestMemoryWrite+0x54>
 8004370:	893b      	ldrh	r3, [r7, #8]
 8004372:	b2da      	uxtb	r2, r3
 8004374:	68fb      	ldr	r3, [r7, #12]
 8004376:	681b      	ldr	r3, [r3, #0]
 8004378:	629a      	str	r2, [r3, #40]	@ 0x28
 800437a:	e015      	b.n	80043a8 <I2C_RequestMemoryWrite+0x80>
 800437c:	893b      	ldrh	r3, [r7, #8]
 800437e:	0a1b      	lsrs	r3, r3, #8
 8004380:	b29b      	uxth	r3, r3
 8004382:	b2da      	uxtb	r2, r3
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	681b      	ldr	r3, [r3, #0]
 8004388:	629a      	str	r2, [r3, #40]	@ 0x28
 800438a:	69fa      	ldr	r2, [r7, #28]
 800438c:	69b9      	ldr	r1, [r7, #24]
 800438e:	68f8      	ldr	r0, [r7, #12]
 8004390:	f000 f8ef 	bl	8004572 <I2C_WaitOnTXISFlagUntilTimeout>
 8004394:	4603      	mov	r3, r0
 8004396:	2b00      	cmp	r3, #0
 8004398:	d001      	beq.n	800439e <I2C_RequestMemoryWrite+0x76>
 800439a:	2301      	movs	r3, #1
 800439c:	e012      	b.n	80043c4 <I2C_RequestMemoryWrite+0x9c>
 800439e:	893b      	ldrh	r3, [r7, #8]
 80043a0:	b2da      	uxtb	r2, r3
 80043a2:	68fb      	ldr	r3, [r7, #12]
 80043a4:	681b      	ldr	r3, [r3, #0]
 80043a6:	629a      	str	r2, [r3, #40]	@ 0x28
 80043a8:	69fb      	ldr	r3, [r7, #28]
 80043aa:	9300      	str	r3, [sp, #0]
 80043ac:	69bb      	ldr	r3, [r7, #24]
 80043ae:	2200      	movs	r2, #0
 80043b0:	2180      	movs	r1, #128	@ 0x80
 80043b2:	68f8      	ldr	r0, [r7, #12]
 80043b4:	f000 f884 	bl	80044c0 <I2C_WaitOnFlagUntilTimeout>
 80043b8:	4603      	mov	r3, r0
 80043ba:	2b00      	cmp	r3, #0
 80043bc:	d001      	beq.n	80043c2 <I2C_RequestMemoryWrite+0x9a>
 80043be:	2301      	movs	r3, #1
 80043c0:	e000      	b.n	80043c4 <I2C_RequestMemoryWrite+0x9c>
 80043c2:	2300      	movs	r3, #0
 80043c4:	4618      	mov	r0, r3
 80043c6:	3710      	adds	r7, #16
 80043c8:	46bd      	mov	sp, r7
 80043ca:	bd80      	pop	{r7, pc}
 80043cc:	80002000 	.word	0x80002000

080043d0 <I2C_RequestMemoryRead>:
 80043d0:	b580      	push	{r7, lr}
 80043d2:	b086      	sub	sp, #24
 80043d4:	af02      	add	r7, sp, #8
 80043d6:	60f8      	str	r0, [r7, #12]
 80043d8:	4608      	mov	r0, r1
 80043da:	4611      	mov	r1, r2
 80043dc:	461a      	mov	r2, r3
 80043de:	4603      	mov	r3, r0
 80043e0:	817b      	strh	r3, [r7, #10]
 80043e2:	460b      	mov	r3, r1
 80043e4:	813b      	strh	r3, [r7, #8]
 80043e6:	4613      	mov	r3, r2
 80043e8:	80fb      	strh	r3, [r7, #6]
 80043ea:	88fb      	ldrh	r3, [r7, #6]
 80043ec:	b2da      	uxtb	r2, r3
 80043ee:	8979      	ldrh	r1, [r7, #10]
 80043f0:	4b20      	ldr	r3, [pc, #128]	@ (8004474 <I2C_RequestMemoryRead+0xa4>)
 80043f2:	9300      	str	r3, [sp, #0]
 80043f4:	2300      	movs	r3, #0
 80043f6:	68f8      	ldr	r0, [r7, #12]
 80043f8:	f000 fa26 	bl	8004848 <I2C_TransferConfig>
 80043fc:	69fa      	ldr	r2, [r7, #28]
 80043fe:	69b9      	ldr	r1, [r7, #24]
 8004400:	68f8      	ldr	r0, [r7, #12]
 8004402:	f000 f8b6 	bl	8004572 <I2C_WaitOnTXISFlagUntilTimeout>
 8004406:	4603      	mov	r3, r0
 8004408:	2b00      	cmp	r3, #0
 800440a:	d001      	beq.n	8004410 <I2C_RequestMemoryRead+0x40>
 800440c:	2301      	movs	r3, #1
 800440e:	e02c      	b.n	800446a <I2C_RequestMemoryRead+0x9a>
 8004410:	88fb      	ldrh	r3, [r7, #6]
 8004412:	2b01      	cmp	r3, #1
 8004414:	d105      	bne.n	8004422 <I2C_RequestMemoryRead+0x52>
 8004416:	893b      	ldrh	r3, [r7, #8]
 8004418:	b2da      	uxtb	r2, r3
 800441a:	68fb      	ldr	r3, [r7, #12]
 800441c:	681b      	ldr	r3, [r3, #0]
 800441e:	629a      	str	r2, [r3, #40]	@ 0x28
 8004420:	e015      	b.n	800444e <I2C_RequestMemoryRead+0x7e>
 8004422:	893b      	ldrh	r3, [r7, #8]
 8004424:	0a1b      	lsrs	r3, r3, #8
 8004426:	b29b      	uxth	r3, r3
 8004428:	b2da      	uxtb	r2, r3
 800442a:	68fb      	ldr	r3, [r7, #12]
 800442c:	681b      	ldr	r3, [r3, #0]
 800442e:	629a      	str	r2, [r3, #40]	@ 0x28
 8004430:	69fa      	ldr	r2, [r7, #28]
 8004432:	69b9      	ldr	r1, [r7, #24]
 8004434:	68f8      	ldr	r0, [r7, #12]
 8004436:	f000 f89c 	bl	8004572 <I2C_WaitOnTXISFlagUntilTimeout>
 800443a:	4603      	mov	r3, r0
 800443c:	2b00      	cmp	r3, #0
 800443e:	d001      	beq.n	8004444 <I2C_RequestMemoryRead+0x74>
 8004440:	2301      	movs	r3, #1
 8004442:	e012      	b.n	800446a <I2C_RequestMemoryRead+0x9a>
 8004444:	893b      	ldrh	r3, [r7, #8]
 8004446:	b2da      	uxtb	r2, r3
 8004448:	68fb      	ldr	r3, [r7, #12]
 800444a:	681b      	ldr	r3, [r3, #0]
 800444c:	629a      	str	r2, [r3, #40]	@ 0x28
 800444e:	69fb      	ldr	r3, [r7, #28]
 8004450:	9300      	str	r3, [sp, #0]
 8004452:	69bb      	ldr	r3, [r7, #24]
 8004454:	2200      	movs	r2, #0
 8004456:	2140      	movs	r1, #64	@ 0x40
 8004458:	68f8      	ldr	r0, [r7, #12]
 800445a:	f000 f831 	bl	80044c0 <I2C_WaitOnFlagUntilTimeout>
 800445e:	4603      	mov	r3, r0
 8004460:	2b00      	cmp	r3, #0
 8004462:	d001      	beq.n	8004468 <I2C_RequestMemoryRead+0x98>
 8004464:	2301      	movs	r3, #1
 8004466:	e000      	b.n	800446a <I2C_RequestMemoryRead+0x9a>
 8004468:	2300      	movs	r3, #0
 800446a:	4618      	mov	r0, r3
 800446c:	3710      	adds	r7, #16
 800446e:	46bd      	mov	sp, r7
 8004470:	bd80      	pop	{r7, pc}
 8004472:	bf00      	nop
 8004474:	80002000 	.word	0x80002000

08004478 <I2C_Flush_TXDR>:
 8004478:	b480      	push	{r7}
 800447a:	b083      	sub	sp, #12
 800447c:	af00      	add	r7, sp, #0
 800447e:	6078      	str	r0, [r7, #4]
 8004480:	687b      	ldr	r3, [r7, #4]
 8004482:	681b      	ldr	r3, [r3, #0]
 8004484:	699b      	ldr	r3, [r3, #24]
 8004486:	f003 0302 	and.w	r3, r3, #2
 800448a:	2b02      	cmp	r3, #2
 800448c:	d103      	bne.n	8004496 <I2C_Flush_TXDR+0x1e>
 800448e:	687b      	ldr	r3, [r7, #4]
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	2200      	movs	r2, #0
 8004494:	629a      	str	r2, [r3, #40]	@ 0x28
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	681b      	ldr	r3, [r3, #0]
 800449a:	699b      	ldr	r3, [r3, #24]
 800449c:	f003 0301 	and.w	r3, r3, #1
 80044a0:	2b01      	cmp	r3, #1
 80044a2:	d007      	beq.n	80044b4 <I2C_Flush_TXDR+0x3c>
 80044a4:	687b      	ldr	r3, [r7, #4]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	699a      	ldr	r2, [r3, #24]
 80044aa:	687b      	ldr	r3, [r7, #4]
 80044ac:	681b      	ldr	r3, [r3, #0]
 80044ae:	f042 0201 	orr.w	r2, r2, #1
 80044b2:	619a      	str	r2, [r3, #24]
 80044b4:	bf00      	nop
 80044b6:	370c      	adds	r7, #12
 80044b8:	46bd      	mov	sp, r7
 80044ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044be:	4770      	bx	lr

080044c0 <I2C_WaitOnFlagUntilTimeout>:
 80044c0:	b580      	push	{r7, lr}
 80044c2:	b084      	sub	sp, #16
 80044c4:	af00      	add	r7, sp, #0
 80044c6:	60f8      	str	r0, [r7, #12]
 80044c8:	60b9      	str	r1, [r7, #8]
 80044ca:	603b      	str	r3, [r7, #0]
 80044cc:	4613      	mov	r3, r2
 80044ce:	71fb      	strb	r3, [r7, #7]
 80044d0:	e03b      	b.n	800454a <I2C_WaitOnFlagUntilTimeout+0x8a>
 80044d2:	69ba      	ldr	r2, [r7, #24]
 80044d4:	6839      	ldr	r1, [r7, #0]
 80044d6:	68f8      	ldr	r0, [r7, #12]
 80044d8:	f000 f8d6 	bl	8004688 <I2C_IsErrorOccurred>
 80044dc:	4603      	mov	r3, r0
 80044de:	2b00      	cmp	r3, #0
 80044e0:	d001      	beq.n	80044e6 <I2C_WaitOnFlagUntilTimeout+0x26>
 80044e2:	2301      	movs	r3, #1
 80044e4:	e041      	b.n	800456a <I2C_WaitOnFlagUntilTimeout+0xaa>
 80044e6:	683b      	ldr	r3, [r7, #0]
 80044e8:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80044ec:	d02d      	beq.n	800454a <I2C_WaitOnFlagUntilTimeout+0x8a>
 80044ee:	f7fe fb73 	bl	8002bd8 <HAL_GetTick>
 80044f2:	4602      	mov	r2, r0
 80044f4:	69bb      	ldr	r3, [r7, #24]
 80044f6:	1ad3      	subs	r3, r2, r3
 80044f8:	683a      	ldr	r2, [r7, #0]
 80044fa:	429a      	cmp	r2, r3
 80044fc:	d302      	bcc.n	8004504 <I2C_WaitOnFlagUntilTimeout+0x44>
 80044fe:	683b      	ldr	r3, [r7, #0]
 8004500:	2b00      	cmp	r3, #0
 8004502:	d122      	bne.n	800454a <I2C_WaitOnFlagUntilTimeout+0x8a>
 8004504:	68fb      	ldr	r3, [r7, #12]
 8004506:	681b      	ldr	r3, [r3, #0]
 8004508:	699a      	ldr	r2, [r3, #24]
 800450a:	68bb      	ldr	r3, [r7, #8]
 800450c:	4013      	ands	r3, r2
 800450e:	68ba      	ldr	r2, [r7, #8]
 8004510:	429a      	cmp	r2, r3
 8004512:	bf0c      	ite	eq
 8004514:	2301      	moveq	r3, #1
 8004516:	2300      	movne	r3, #0
 8004518:	b2db      	uxtb	r3, r3
 800451a:	461a      	mov	r2, r3
 800451c:	79fb      	ldrb	r3, [r7, #7]
 800451e:	429a      	cmp	r2, r3
 8004520:	d113      	bne.n	800454a <I2C_WaitOnFlagUntilTimeout+0x8a>
 8004522:	68fb      	ldr	r3, [r7, #12]
 8004524:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004526:	f043 0220 	orr.w	r2, r3, #32
 800452a:	68fb      	ldr	r3, [r7, #12]
 800452c:	645a      	str	r2, [r3, #68]	@ 0x44
 800452e:	68fb      	ldr	r3, [r7, #12]
 8004530:	2220      	movs	r2, #32
 8004532:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004536:	68fb      	ldr	r3, [r7, #12]
 8004538:	2200      	movs	r2, #0
 800453a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800453e:	68fb      	ldr	r3, [r7, #12]
 8004540:	2200      	movs	r2, #0
 8004542:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004546:	2301      	movs	r3, #1
 8004548:	e00f      	b.n	800456a <I2C_WaitOnFlagUntilTimeout+0xaa>
 800454a:	68fb      	ldr	r3, [r7, #12]
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	699a      	ldr	r2, [r3, #24]
 8004550:	68bb      	ldr	r3, [r7, #8]
 8004552:	4013      	ands	r3, r2
 8004554:	68ba      	ldr	r2, [r7, #8]
 8004556:	429a      	cmp	r2, r3
 8004558:	bf0c      	ite	eq
 800455a:	2301      	moveq	r3, #1
 800455c:	2300      	movne	r3, #0
 800455e:	b2db      	uxtb	r3, r3
 8004560:	461a      	mov	r2, r3
 8004562:	79fb      	ldrb	r3, [r7, #7]
 8004564:	429a      	cmp	r2, r3
 8004566:	d0b4      	beq.n	80044d2 <I2C_WaitOnFlagUntilTimeout+0x12>
 8004568:	2300      	movs	r3, #0
 800456a:	4618      	mov	r0, r3
 800456c:	3710      	adds	r7, #16
 800456e:	46bd      	mov	sp, r7
 8004570:	bd80      	pop	{r7, pc}

08004572 <I2C_WaitOnTXISFlagUntilTimeout>:
 8004572:	b580      	push	{r7, lr}
 8004574:	b084      	sub	sp, #16
 8004576:	af00      	add	r7, sp, #0
 8004578:	60f8      	str	r0, [r7, #12]
 800457a:	60b9      	str	r1, [r7, #8]
 800457c:	607a      	str	r2, [r7, #4]
 800457e:	e033      	b.n	80045e8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 8004580:	687a      	ldr	r2, [r7, #4]
 8004582:	68b9      	ldr	r1, [r7, #8]
 8004584:	68f8      	ldr	r0, [r7, #12]
 8004586:	f000 f87f 	bl	8004688 <I2C_IsErrorOccurred>
 800458a:	4603      	mov	r3, r0
 800458c:	2b00      	cmp	r3, #0
 800458e:	d001      	beq.n	8004594 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
 8004590:	2301      	movs	r3, #1
 8004592:	e031      	b.n	80045f8 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 8004594:	68bb      	ldr	r3, [r7, #8]
 8004596:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800459a:	d025      	beq.n	80045e8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 800459c:	f7fe fb1c 	bl	8002bd8 <HAL_GetTick>
 80045a0:	4602      	mov	r2, r0
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	1ad3      	subs	r3, r2, r3
 80045a6:	68ba      	ldr	r2, [r7, #8]
 80045a8:	429a      	cmp	r2, r3
 80045aa:	d302      	bcc.n	80045b2 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 80045ac:	68bb      	ldr	r3, [r7, #8]
 80045ae:	2b00      	cmp	r3, #0
 80045b0:	d11a      	bne.n	80045e8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 80045b2:	68fb      	ldr	r3, [r7, #12]
 80045b4:	681b      	ldr	r3, [r3, #0]
 80045b6:	699b      	ldr	r3, [r3, #24]
 80045b8:	f003 0302 	and.w	r3, r3, #2
 80045bc:	2b02      	cmp	r3, #2
 80045be:	d013      	beq.n	80045e8 <I2C_WaitOnTXISFlagUntilTimeout+0x76>
 80045c0:	68fb      	ldr	r3, [r7, #12]
 80045c2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80045c4:	f043 0220 	orr.w	r2, r3, #32
 80045c8:	68fb      	ldr	r3, [r7, #12]
 80045ca:	645a      	str	r2, [r3, #68]	@ 0x44
 80045cc:	68fb      	ldr	r3, [r7, #12]
 80045ce:	2220      	movs	r2, #32
 80045d0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80045d4:	68fb      	ldr	r3, [r7, #12]
 80045d6:	2200      	movs	r2, #0
 80045d8:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80045dc:	68fb      	ldr	r3, [r7, #12]
 80045de:	2200      	movs	r2, #0
 80045e0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80045e4:	2301      	movs	r3, #1
 80045e6:	e007      	b.n	80045f8 <I2C_WaitOnTXISFlagUntilTimeout+0x86>
 80045e8:	68fb      	ldr	r3, [r7, #12]
 80045ea:	681b      	ldr	r3, [r3, #0]
 80045ec:	699b      	ldr	r3, [r3, #24]
 80045ee:	f003 0302 	and.w	r3, r3, #2
 80045f2:	2b02      	cmp	r3, #2
 80045f4:	d1c4      	bne.n	8004580 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
 80045f6:	2300      	movs	r3, #0
 80045f8:	4618      	mov	r0, r3
 80045fa:	3710      	adds	r7, #16
 80045fc:	46bd      	mov	sp, r7
 80045fe:	bd80      	pop	{r7, pc}

08004600 <I2C_WaitOnSTOPFlagUntilTimeout>:
 8004600:	b580      	push	{r7, lr}
 8004602:	b084      	sub	sp, #16
 8004604:	af00      	add	r7, sp, #0
 8004606:	60f8      	str	r0, [r7, #12]
 8004608:	60b9      	str	r1, [r7, #8]
 800460a:	607a      	str	r2, [r7, #4]
 800460c:	e02f      	b.n	800466e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 800460e:	687a      	ldr	r2, [r7, #4]
 8004610:	68b9      	ldr	r1, [r7, #8]
 8004612:	68f8      	ldr	r0, [r7, #12]
 8004614:	f000 f838 	bl	8004688 <I2C_IsErrorOccurred>
 8004618:	4603      	mov	r3, r0
 800461a:	2b00      	cmp	r3, #0
 800461c:	d001      	beq.n	8004622 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
 800461e:	2301      	movs	r3, #1
 8004620:	e02d      	b.n	800467e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 8004622:	f7fe fad9 	bl	8002bd8 <HAL_GetTick>
 8004626:	4602      	mov	r2, r0
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	1ad3      	subs	r3, r2, r3
 800462c:	68ba      	ldr	r2, [r7, #8]
 800462e:	429a      	cmp	r2, r3
 8004630:	d302      	bcc.n	8004638 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8004632:	68bb      	ldr	r3, [r7, #8]
 8004634:	2b00      	cmp	r3, #0
 8004636:	d11a      	bne.n	800466e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8004638:	68fb      	ldr	r3, [r7, #12]
 800463a:	681b      	ldr	r3, [r3, #0]
 800463c:	699b      	ldr	r3, [r3, #24]
 800463e:	f003 0320 	and.w	r3, r3, #32
 8004642:	2b20      	cmp	r3, #32
 8004644:	d013      	beq.n	800466e <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
 8004646:	68fb      	ldr	r3, [r7, #12]
 8004648:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800464a:	f043 0220 	orr.w	r2, r3, #32
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	645a      	str	r2, [r3, #68]	@ 0x44
 8004652:	68fb      	ldr	r3, [r7, #12]
 8004654:	2220      	movs	r2, #32
 8004656:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800465a:	68fb      	ldr	r3, [r7, #12]
 800465c:	2200      	movs	r2, #0
 800465e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004662:	68fb      	ldr	r3, [r7, #12]
 8004664:	2200      	movs	r2, #0
 8004666:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800466a:	2301      	movs	r3, #1
 800466c:	e007      	b.n	800467e <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	699b      	ldr	r3, [r3, #24]
 8004674:	f003 0320 	and.w	r3, r3, #32
 8004678:	2b20      	cmp	r3, #32
 800467a:	d1c8      	bne.n	800460e <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
 800467c:	2300      	movs	r3, #0
 800467e:	4618      	mov	r0, r3
 8004680:	3710      	adds	r7, #16
 8004682:	46bd      	mov	sp, r7
 8004684:	bd80      	pop	{r7, pc}
	...

08004688 <I2C_IsErrorOccurred>:
 8004688:	b580      	push	{r7, lr}
 800468a:	b08a      	sub	sp, #40	@ 0x28
 800468c:	af00      	add	r7, sp, #0
 800468e:	60f8      	str	r0, [r7, #12]
 8004690:	60b9      	str	r1, [r7, #8]
 8004692:	607a      	str	r2, [r7, #4]
 8004694:	2300      	movs	r3, #0
 8004696:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800469a:	68fb      	ldr	r3, [r7, #12]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	699b      	ldr	r3, [r3, #24]
 80046a0:	61bb      	str	r3, [r7, #24]
 80046a2:	2300      	movs	r3, #0
 80046a4:	623b      	str	r3, [r7, #32]
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	61fb      	str	r3, [r7, #28]
 80046aa:	69bb      	ldr	r3, [r7, #24]
 80046ac:	f003 0310 	and.w	r3, r3, #16
 80046b0:	2b00      	cmp	r3, #0
 80046b2:	d068      	beq.n	8004786 <I2C_IsErrorOccurred+0xfe>
 80046b4:	68fb      	ldr	r3, [r7, #12]
 80046b6:	681b      	ldr	r3, [r3, #0]
 80046b8:	2210      	movs	r2, #16
 80046ba:	61da      	str	r2, [r3, #28]
 80046bc:	e049      	b.n	8004752 <I2C_IsErrorOccurred+0xca>
 80046be:	68bb      	ldr	r3, [r7, #8]
 80046c0:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80046c4:	d045      	beq.n	8004752 <I2C_IsErrorOccurred+0xca>
 80046c6:	f7fe fa87 	bl	8002bd8 <HAL_GetTick>
 80046ca:	4602      	mov	r2, r0
 80046cc:	69fb      	ldr	r3, [r7, #28]
 80046ce:	1ad3      	subs	r3, r2, r3
 80046d0:	68ba      	ldr	r2, [r7, #8]
 80046d2:	429a      	cmp	r2, r3
 80046d4:	d302      	bcc.n	80046dc <I2C_IsErrorOccurred+0x54>
 80046d6:	68bb      	ldr	r3, [r7, #8]
 80046d8:	2b00      	cmp	r3, #0
 80046da:	d13a      	bne.n	8004752 <I2C_IsErrorOccurred+0xca>
 80046dc:	68fb      	ldr	r3, [r7, #12]
 80046de:	681b      	ldr	r3, [r3, #0]
 80046e0:	685b      	ldr	r3, [r3, #4]
 80046e2:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80046e6:	617b      	str	r3, [r7, #20]
 80046e8:	68fb      	ldr	r3, [r7, #12]
 80046ea:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80046ee:	74fb      	strb	r3, [r7, #19]
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	681b      	ldr	r3, [r3, #0]
 80046f4:	699b      	ldr	r3, [r3, #24]
 80046f6:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80046fa:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80046fe:	d121      	bne.n	8004744 <I2C_IsErrorOccurred+0xbc>
 8004700:	697b      	ldr	r3, [r7, #20]
 8004702:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004706:	d01d      	beq.n	8004744 <I2C_IsErrorOccurred+0xbc>
 8004708:	7cfb      	ldrb	r3, [r7, #19]
 800470a:	2b20      	cmp	r3, #32
 800470c:	d01a      	beq.n	8004744 <I2C_IsErrorOccurred+0xbc>
 800470e:	68fb      	ldr	r3, [r7, #12]
 8004710:	681b      	ldr	r3, [r3, #0]
 8004712:	685a      	ldr	r2, [r3, #4]
 8004714:	68fb      	ldr	r3, [r7, #12]
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800471c:	605a      	str	r2, [r3, #4]
 800471e:	f7fe fa5b 	bl	8002bd8 <HAL_GetTick>
 8004722:	61f8      	str	r0, [r7, #28]
 8004724:	e00e      	b.n	8004744 <I2C_IsErrorOccurred+0xbc>
 8004726:	f7fe fa57 	bl	8002bd8 <HAL_GetTick>
 800472a:	4602      	mov	r2, r0
 800472c:	69fb      	ldr	r3, [r7, #28]
 800472e:	1ad3      	subs	r3, r2, r3
 8004730:	2b19      	cmp	r3, #25
 8004732:	d907      	bls.n	8004744 <I2C_IsErrorOccurred+0xbc>
 8004734:	6a3b      	ldr	r3, [r7, #32]
 8004736:	f043 0320 	orr.w	r3, r3, #32
 800473a:	623b      	str	r3, [r7, #32]
 800473c:	2301      	movs	r3, #1
 800473e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8004742:	e006      	b.n	8004752 <I2C_IsErrorOccurred+0xca>
 8004744:	68fb      	ldr	r3, [r7, #12]
 8004746:	681b      	ldr	r3, [r3, #0]
 8004748:	699b      	ldr	r3, [r3, #24]
 800474a:	f003 0320 	and.w	r3, r3, #32
 800474e:	2b20      	cmp	r3, #32
 8004750:	d1e9      	bne.n	8004726 <I2C_IsErrorOccurred+0x9e>
 8004752:	68fb      	ldr	r3, [r7, #12]
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	699b      	ldr	r3, [r3, #24]
 8004758:	f003 0320 	and.w	r3, r3, #32
 800475c:	2b20      	cmp	r3, #32
 800475e:	d003      	beq.n	8004768 <I2C_IsErrorOccurred+0xe0>
 8004760:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8004764:	2b00      	cmp	r3, #0
 8004766:	d0aa      	beq.n	80046be <I2C_IsErrorOccurred+0x36>
 8004768:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800476c:	2b00      	cmp	r3, #0
 800476e:	d103      	bne.n	8004778 <I2C_IsErrorOccurred+0xf0>
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	681b      	ldr	r3, [r3, #0]
 8004774:	2220      	movs	r2, #32
 8004776:	61da      	str	r2, [r3, #28]
 8004778:	6a3b      	ldr	r3, [r7, #32]
 800477a:	f043 0304 	orr.w	r3, r3, #4
 800477e:	623b      	str	r3, [r7, #32]
 8004780:	2301      	movs	r3, #1
 8004782:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8004786:	68fb      	ldr	r3, [r7, #12]
 8004788:	681b      	ldr	r3, [r3, #0]
 800478a:	699b      	ldr	r3, [r3, #24]
 800478c:	61bb      	str	r3, [r7, #24]
 800478e:	69bb      	ldr	r3, [r7, #24]
 8004790:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004794:	2b00      	cmp	r3, #0
 8004796:	d00b      	beq.n	80047b0 <I2C_IsErrorOccurred+0x128>
 8004798:	6a3b      	ldr	r3, [r7, #32]
 800479a:	f043 0301 	orr.w	r3, r3, #1
 800479e:	623b      	str	r3, [r7, #32]
 80047a0:	68fb      	ldr	r3, [r7, #12]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80047a8:	61da      	str	r2, [r3, #28]
 80047aa:	2301      	movs	r3, #1
 80047ac:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80047b0:	69bb      	ldr	r3, [r7, #24]
 80047b2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80047b6:	2b00      	cmp	r3, #0
 80047b8:	d00b      	beq.n	80047d2 <I2C_IsErrorOccurred+0x14a>
 80047ba:	6a3b      	ldr	r3, [r7, #32]
 80047bc:	f043 0308 	orr.w	r3, r3, #8
 80047c0:	623b      	str	r3, [r7, #32]
 80047c2:	68fb      	ldr	r3, [r7, #12]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80047ca:	61da      	str	r2, [r3, #28]
 80047cc:	2301      	movs	r3, #1
 80047ce:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80047d2:	69bb      	ldr	r3, [r7, #24]
 80047d4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80047d8:	2b00      	cmp	r3, #0
 80047da:	d00b      	beq.n	80047f4 <I2C_IsErrorOccurred+0x16c>
 80047dc:	6a3b      	ldr	r3, [r7, #32]
 80047de:	f043 0302 	orr.w	r3, r3, #2
 80047e2:	623b      	str	r3, [r7, #32]
 80047e4:	68fb      	ldr	r3, [r7, #12]
 80047e6:	681b      	ldr	r3, [r3, #0]
 80047e8:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80047ec:	61da      	str	r2, [r3, #28]
 80047ee:	2301      	movs	r3, #1
 80047f0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80047f4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80047f8:	2b00      	cmp	r3, #0
 80047fa:	d01c      	beq.n	8004836 <I2C_IsErrorOccurred+0x1ae>
 80047fc:	68f8      	ldr	r0, [r7, #12]
 80047fe:	f7ff fe3b 	bl	8004478 <I2C_Flush_TXDR>
 8004802:	68fb      	ldr	r3, [r7, #12]
 8004804:	681b      	ldr	r3, [r3, #0]
 8004806:	6859      	ldr	r1, [r3, #4]
 8004808:	68fb      	ldr	r3, [r7, #12]
 800480a:	681a      	ldr	r2, [r3, #0]
 800480c:	4b0d      	ldr	r3, [pc, #52]	@ (8004844 <I2C_IsErrorOccurred+0x1bc>)
 800480e:	400b      	ands	r3, r1
 8004810:	6053      	str	r3, [r2, #4]
 8004812:	68fb      	ldr	r3, [r7, #12]
 8004814:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004816:	6a3b      	ldr	r3, [r7, #32]
 8004818:	431a      	orrs	r2, r3
 800481a:	68fb      	ldr	r3, [r7, #12]
 800481c:	645a      	str	r2, [r3, #68]	@ 0x44
 800481e:	68fb      	ldr	r3, [r7, #12]
 8004820:	2220      	movs	r2, #32
 8004822:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004826:	68fb      	ldr	r3, [r7, #12]
 8004828:	2200      	movs	r2, #0
 800482a:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800482e:	68fb      	ldr	r3, [r7, #12]
 8004830:	2200      	movs	r2, #0
 8004832:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004836:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800483a:	4618      	mov	r0, r3
 800483c:	3728      	adds	r7, #40	@ 0x28
 800483e:	46bd      	mov	sp, r7
 8004840:	bd80      	pop	{r7, pc}
 8004842:	bf00      	nop
 8004844:	fe00e800 	.word	0xfe00e800

08004848 <I2C_TransferConfig>:
 8004848:	b480      	push	{r7}
 800484a:	b087      	sub	sp, #28
 800484c:	af00      	add	r7, sp, #0
 800484e:	60f8      	str	r0, [r7, #12]
 8004850:	607b      	str	r3, [r7, #4]
 8004852:	460b      	mov	r3, r1
 8004854:	817b      	strh	r3, [r7, #10]
 8004856:	4613      	mov	r3, r2
 8004858:	727b      	strb	r3, [r7, #9]
 800485a:	897b      	ldrh	r3, [r7, #10]
 800485c:	f3c3 0209 	ubfx	r2, r3, #0, #10
 8004860:	7a7b      	ldrb	r3, [r7, #9]
 8004862:	041b      	lsls	r3, r3, #16
 8004864:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8004868:	431a      	orrs	r2, r3
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	431a      	orrs	r2, r3
 800486e:	6a3b      	ldr	r3, [r7, #32]
 8004870:	4313      	orrs	r3, r2
 8004872:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8004876:	617b      	str	r3, [r7, #20]
 8004878:	68fb      	ldr	r3, [r7, #12]
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	685a      	ldr	r2, [r3, #4]
 800487e:	6a3b      	ldr	r3, [r7, #32]
 8004880:	0d5b      	lsrs	r3, r3, #21
 8004882:	f403 6180 	and.w	r1, r3, #1024	@ 0x400
 8004886:	4b08      	ldr	r3, [pc, #32]	@ (80048a8 <I2C_TransferConfig+0x60>)
 8004888:	430b      	orrs	r3, r1
 800488a:	43db      	mvns	r3, r3
 800488c:	ea02 0103 	and.w	r1, r2, r3
 8004890:	68fb      	ldr	r3, [r7, #12]
 8004892:	681b      	ldr	r3, [r3, #0]
 8004894:	697a      	ldr	r2, [r7, #20]
 8004896:	430a      	orrs	r2, r1
 8004898:	605a      	str	r2, [r3, #4]
 800489a:	bf00      	nop
 800489c:	371c      	adds	r7, #28
 800489e:	46bd      	mov	sp, r7
 80048a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048a4:	4770      	bx	lr
 80048a6:	bf00      	nop
 80048a8:	03ff63ff 	.word	0x03ff63ff

080048ac <HAL_I2CEx_ConfigAnalogFilter>:
 80048ac:	b480      	push	{r7}
 80048ae:	b083      	sub	sp, #12
 80048b0:	af00      	add	r7, sp, #0
 80048b2:	6078      	str	r0, [r7, #4]
 80048b4:	6039      	str	r1, [r7, #0]
 80048b6:	687b      	ldr	r3, [r7, #4]
 80048b8:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80048bc:	b2db      	uxtb	r3, r3
 80048be:	2b20      	cmp	r3, #32
 80048c0:	d138      	bne.n	8004934 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 80048c8:	2b01      	cmp	r3, #1
 80048ca:	d101      	bne.n	80048d0 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 80048cc:	2302      	movs	r3, #2
 80048ce:	e032      	b.n	8004936 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	2201      	movs	r2, #1
 80048d4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	2224      	movs	r2, #36	@ 0x24
 80048dc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	681a      	ldr	r2, [r3, #0]
 80048e6:	687b      	ldr	r3, [r7, #4]
 80048e8:	681b      	ldr	r3, [r3, #0]
 80048ea:	f022 0201 	bic.w	r2, r2, #1
 80048ee:	601a      	str	r2, [r3, #0]
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	681a      	ldr	r2, [r3, #0]
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 80048fe:	601a      	str	r2, [r3, #0]
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	6819      	ldr	r1, [r3, #0]
 8004906:	687b      	ldr	r3, [r7, #4]
 8004908:	681b      	ldr	r3, [r3, #0]
 800490a:	683a      	ldr	r2, [r7, #0]
 800490c:	430a      	orrs	r2, r1
 800490e:	601a      	str	r2, [r3, #0]
 8004910:	687b      	ldr	r3, [r7, #4]
 8004912:	681b      	ldr	r3, [r3, #0]
 8004914:	681a      	ldr	r2, [r3, #0]
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	f042 0201 	orr.w	r2, r2, #1
 800491e:	601a      	str	r2, [r3, #0]
 8004920:	687b      	ldr	r3, [r7, #4]
 8004922:	2220      	movs	r2, #32
 8004924:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	2200      	movs	r2, #0
 800492c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004930:	2300      	movs	r3, #0
 8004932:	e000      	b.n	8004936 <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8004934:	2302      	movs	r3, #2
 8004936:	4618      	mov	r0, r3
 8004938:	370c      	adds	r7, #12
 800493a:	46bd      	mov	sp, r7
 800493c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004940:	4770      	bx	lr

08004942 <HAL_I2CEx_ConfigDigitalFilter>:
 8004942:	b480      	push	{r7}
 8004944:	b085      	sub	sp, #20
 8004946:	af00      	add	r7, sp, #0
 8004948:	6078      	str	r0, [r7, #4]
 800494a:	6039      	str	r1, [r7, #0]
 800494c:	687b      	ldr	r3, [r7, #4]
 800494e:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004952:	b2db      	uxtb	r3, r3
 8004954:	2b20      	cmp	r3, #32
 8004956:	d139      	bne.n	80049cc <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8004958:	687b      	ldr	r3, [r7, #4]
 800495a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800495e:	2b01      	cmp	r3, #1
 8004960:	d101      	bne.n	8004966 <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8004962:	2302      	movs	r3, #2
 8004964:	e033      	b.n	80049ce <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8004966:	687b      	ldr	r3, [r7, #4]
 8004968:	2201      	movs	r2, #1
 800496a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800496e:	687b      	ldr	r3, [r7, #4]
 8004970:	2224      	movs	r2, #36	@ 0x24
 8004972:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004976:	687b      	ldr	r3, [r7, #4]
 8004978:	681b      	ldr	r3, [r3, #0]
 800497a:	681a      	ldr	r2, [r3, #0]
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	681b      	ldr	r3, [r3, #0]
 8004980:	f022 0201 	bic.w	r2, r2, #1
 8004984:	601a      	str	r2, [r3, #0]
 8004986:	687b      	ldr	r3, [r7, #4]
 8004988:	681b      	ldr	r3, [r3, #0]
 800498a:	681b      	ldr	r3, [r3, #0]
 800498c:	60fb      	str	r3, [r7, #12]
 800498e:	68fb      	ldr	r3, [r7, #12]
 8004990:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8004994:	60fb      	str	r3, [r7, #12]
 8004996:	683b      	ldr	r3, [r7, #0]
 8004998:	021b      	lsls	r3, r3, #8
 800499a:	68fa      	ldr	r2, [r7, #12]
 800499c:	4313      	orrs	r3, r2
 800499e:	60fb      	str	r3, [r7, #12]
 80049a0:	687b      	ldr	r3, [r7, #4]
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	68fa      	ldr	r2, [r7, #12]
 80049a6:	601a      	str	r2, [r3, #0]
 80049a8:	687b      	ldr	r3, [r7, #4]
 80049aa:	681b      	ldr	r3, [r3, #0]
 80049ac:	681a      	ldr	r2, [r3, #0]
 80049ae:	687b      	ldr	r3, [r7, #4]
 80049b0:	681b      	ldr	r3, [r3, #0]
 80049b2:	f042 0201 	orr.w	r2, r2, #1
 80049b6:	601a      	str	r2, [r3, #0]
 80049b8:	687b      	ldr	r3, [r7, #4]
 80049ba:	2220      	movs	r2, #32
 80049bc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80049c0:	687b      	ldr	r3, [r7, #4]
 80049c2:	2200      	movs	r2, #0
 80049c4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80049c8:	2300      	movs	r3, #0
 80049ca:	e000      	b.n	80049ce <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 80049cc:	2302      	movs	r3, #2
 80049ce:	4618      	mov	r0, r3
 80049d0:	3714      	adds	r7, #20
 80049d2:	46bd      	mov	sp, r7
 80049d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049d8:	4770      	bx	lr
	...

080049dc <HAL_PWREx_ConfigSupply>:
 80049dc:	b580      	push	{r7, lr}
 80049de:	b084      	sub	sp, #16
 80049e0:	af00      	add	r7, sp, #0
 80049e2:	6078      	str	r0, [r7, #4]
 80049e4:	4b19      	ldr	r3, [pc, #100]	@ (8004a4c <HAL_PWREx_ConfigSupply+0x70>)
 80049e6:	68db      	ldr	r3, [r3, #12]
 80049e8:	f003 0304 	and.w	r3, r3, #4
 80049ec:	2b04      	cmp	r3, #4
 80049ee:	d00a      	beq.n	8004a06 <HAL_PWREx_ConfigSupply+0x2a>
 80049f0:	4b16      	ldr	r3, [pc, #88]	@ (8004a4c <HAL_PWREx_ConfigSupply+0x70>)
 80049f2:	68db      	ldr	r3, [r3, #12]
 80049f4:	f003 0307 	and.w	r3, r3, #7
 80049f8:	687a      	ldr	r2, [r7, #4]
 80049fa:	429a      	cmp	r2, r3
 80049fc:	d001      	beq.n	8004a02 <HAL_PWREx_ConfigSupply+0x26>
 80049fe:	2301      	movs	r3, #1
 8004a00:	e01f      	b.n	8004a42 <HAL_PWREx_ConfigSupply+0x66>
 8004a02:	2300      	movs	r3, #0
 8004a04:	e01d      	b.n	8004a42 <HAL_PWREx_ConfigSupply+0x66>
 8004a06:	4b11      	ldr	r3, [pc, #68]	@ (8004a4c <HAL_PWREx_ConfigSupply+0x70>)
 8004a08:	68db      	ldr	r3, [r3, #12]
 8004a0a:	f023 0207 	bic.w	r2, r3, #7
 8004a0e:	490f      	ldr	r1, [pc, #60]	@ (8004a4c <HAL_PWREx_ConfigSupply+0x70>)
 8004a10:	687b      	ldr	r3, [r7, #4]
 8004a12:	4313      	orrs	r3, r2
 8004a14:	60cb      	str	r3, [r1, #12]
 8004a16:	f7fe f8df 	bl	8002bd8 <HAL_GetTick>
 8004a1a:	60f8      	str	r0, [r7, #12]
 8004a1c:	e009      	b.n	8004a32 <HAL_PWREx_ConfigSupply+0x56>
 8004a1e:	f7fe f8db 	bl	8002bd8 <HAL_GetTick>
 8004a22:	4602      	mov	r2, r0
 8004a24:	68fb      	ldr	r3, [r7, #12]
 8004a26:	1ad3      	subs	r3, r2, r3
 8004a28:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8004a2c:	d901      	bls.n	8004a32 <HAL_PWREx_ConfigSupply+0x56>
 8004a2e:	2301      	movs	r3, #1
 8004a30:	e007      	b.n	8004a42 <HAL_PWREx_ConfigSupply+0x66>
 8004a32:	4b06      	ldr	r3, [pc, #24]	@ (8004a4c <HAL_PWREx_ConfigSupply+0x70>)
 8004a34:	685b      	ldr	r3, [r3, #4]
 8004a36:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004a3a:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004a3e:	d1ee      	bne.n	8004a1e <HAL_PWREx_ConfigSupply+0x42>
 8004a40:	2300      	movs	r3, #0
 8004a42:	4618      	mov	r0, r3
 8004a44:	3710      	adds	r7, #16
 8004a46:	46bd      	mov	sp, r7
 8004a48:	bd80      	pop	{r7, pc}
 8004a4a:	bf00      	nop
 8004a4c:	58024800 	.word	0x58024800

08004a50 <HAL_RCC_OscConfig>:
 8004a50:	b580      	push	{r7, lr}
 8004a52:	b08c      	sub	sp, #48	@ 0x30
 8004a54:	af00      	add	r7, sp, #0
 8004a56:	6078      	str	r0, [r7, #4]
 8004a58:	687b      	ldr	r3, [r7, #4]
 8004a5a:	2b00      	cmp	r3, #0
 8004a5c:	d101      	bne.n	8004a62 <HAL_RCC_OscConfig+0x12>
 8004a5e:	2301      	movs	r3, #1
 8004a60:	e3c8      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	f003 0301 	and.w	r3, r3, #1
 8004a6a:	2b00      	cmp	r3, #0
 8004a6c:	f000 8087 	beq.w	8004b7e <HAL_RCC_OscConfig+0x12e>
 8004a70:	4b88      	ldr	r3, [pc, #544]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004a72:	691b      	ldr	r3, [r3, #16]
 8004a74:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004a78:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8004a7a:	4b86      	ldr	r3, [pc, #536]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004a7c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004a7e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8004a80:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004a82:	2b10      	cmp	r3, #16
 8004a84:	d007      	beq.n	8004a96 <HAL_RCC_OscConfig+0x46>
 8004a86:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8004a88:	2b18      	cmp	r3, #24
 8004a8a:	d110      	bne.n	8004aae <HAL_RCC_OscConfig+0x5e>
 8004a8c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004a8e:	f003 0303 	and.w	r3, r3, #3
 8004a92:	2b02      	cmp	r3, #2
 8004a94:	d10b      	bne.n	8004aae <HAL_RCC_OscConfig+0x5e>
 8004a96:	4b7f      	ldr	r3, [pc, #508]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004a98:	681b      	ldr	r3, [r3, #0]
 8004a9a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004a9e:	2b00      	cmp	r3, #0
 8004aa0:	d06c      	beq.n	8004b7c <HAL_RCC_OscConfig+0x12c>
 8004aa2:	687b      	ldr	r3, [r7, #4]
 8004aa4:	685b      	ldr	r3, [r3, #4]
 8004aa6:	2b00      	cmp	r3, #0
 8004aa8:	d168      	bne.n	8004b7c <HAL_RCC_OscConfig+0x12c>
 8004aaa:	2301      	movs	r3, #1
 8004aac:	e3a2      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004aae:	687b      	ldr	r3, [r7, #4]
 8004ab0:	685b      	ldr	r3, [r3, #4]
 8004ab2:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004ab6:	d106      	bne.n	8004ac6 <HAL_RCC_OscConfig+0x76>
 8004ab8:	4b76      	ldr	r3, [pc, #472]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	4a75      	ldr	r2, [pc, #468]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004abe:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004ac2:	6013      	str	r3, [r2, #0]
 8004ac4:	e02e      	b.n	8004b24 <HAL_RCC_OscConfig+0xd4>
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	685b      	ldr	r3, [r3, #4]
 8004aca:	2b00      	cmp	r3, #0
 8004acc:	d10c      	bne.n	8004ae8 <HAL_RCC_OscConfig+0x98>
 8004ace:	4b71      	ldr	r3, [pc, #452]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004ad0:	681b      	ldr	r3, [r3, #0]
 8004ad2:	4a70      	ldr	r2, [pc, #448]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004ad4:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004ad8:	6013      	str	r3, [r2, #0]
 8004ada:	4b6e      	ldr	r3, [pc, #440]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004adc:	681b      	ldr	r3, [r3, #0]
 8004ade:	4a6d      	ldr	r2, [pc, #436]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004ae0:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004ae4:	6013      	str	r3, [r2, #0]
 8004ae6:	e01d      	b.n	8004b24 <HAL_RCC_OscConfig+0xd4>
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	685b      	ldr	r3, [r3, #4]
 8004aec:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004af0:	d10c      	bne.n	8004b0c <HAL_RCC_OscConfig+0xbc>
 8004af2:	4b68      	ldr	r3, [pc, #416]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004af4:	681b      	ldr	r3, [r3, #0]
 8004af6:	4a67      	ldr	r2, [pc, #412]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004af8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004afc:	6013      	str	r3, [r2, #0]
 8004afe:	4b65      	ldr	r3, [pc, #404]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b00:	681b      	ldr	r3, [r3, #0]
 8004b02:	4a64      	ldr	r2, [pc, #400]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b04:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004b08:	6013      	str	r3, [r2, #0]
 8004b0a:	e00b      	b.n	8004b24 <HAL_RCC_OscConfig+0xd4>
 8004b0c:	4b61      	ldr	r3, [pc, #388]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	4a60      	ldr	r2, [pc, #384]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b12:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004b16:	6013      	str	r3, [r2, #0]
 8004b18:	4b5e      	ldr	r3, [pc, #376]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	4a5d      	ldr	r2, [pc, #372]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b1e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004b22:	6013      	str	r3, [r2, #0]
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	685b      	ldr	r3, [r3, #4]
 8004b28:	2b00      	cmp	r3, #0
 8004b2a:	d013      	beq.n	8004b54 <HAL_RCC_OscConfig+0x104>
 8004b2c:	f7fe f854 	bl	8002bd8 <HAL_GetTick>
 8004b30:	6278      	str	r0, [r7, #36]	@ 0x24
 8004b32:	e008      	b.n	8004b46 <HAL_RCC_OscConfig+0xf6>
 8004b34:	f7fe f850 	bl	8002bd8 <HAL_GetTick>
 8004b38:	4602      	mov	r2, r0
 8004b3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b3c:	1ad3      	subs	r3, r2, r3
 8004b3e:	2b64      	cmp	r3, #100	@ 0x64
 8004b40:	d901      	bls.n	8004b46 <HAL_RCC_OscConfig+0xf6>
 8004b42:	2303      	movs	r3, #3
 8004b44:	e356      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004b46:	4b53      	ldr	r3, [pc, #332]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b48:	681b      	ldr	r3, [r3, #0]
 8004b4a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004b4e:	2b00      	cmp	r3, #0
 8004b50:	d0f0      	beq.n	8004b34 <HAL_RCC_OscConfig+0xe4>
 8004b52:	e014      	b.n	8004b7e <HAL_RCC_OscConfig+0x12e>
 8004b54:	f7fe f840 	bl	8002bd8 <HAL_GetTick>
 8004b58:	6278      	str	r0, [r7, #36]	@ 0x24
 8004b5a:	e008      	b.n	8004b6e <HAL_RCC_OscConfig+0x11e>
 8004b5c:	f7fe f83c 	bl	8002bd8 <HAL_GetTick>
 8004b60:	4602      	mov	r2, r0
 8004b62:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b64:	1ad3      	subs	r3, r2, r3
 8004b66:	2b64      	cmp	r3, #100	@ 0x64
 8004b68:	d901      	bls.n	8004b6e <HAL_RCC_OscConfig+0x11e>
 8004b6a:	2303      	movs	r3, #3
 8004b6c:	e342      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004b6e:	4b49      	ldr	r3, [pc, #292]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b70:	681b      	ldr	r3, [r3, #0]
 8004b72:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004b76:	2b00      	cmp	r3, #0
 8004b78:	d1f0      	bne.n	8004b5c <HAL_RCC_OscConfig+0x10c>
 8004b7a:	e000      	b.n	8004b7e <HAL_RCC_OscConfig+0x12e>
 8004b7c:	bf00      	nop
 8004b7e:	687b      	ldr	r3, [r7, #4]
 8004b80:	681b      	ldr	r3, [r3, #0]
 8004b82:	f003 0302 	and.w	r3, r3, #2
 8004b86:	2b00      	cmp	r3, #0
 8004b88:	f000 808c 	beq.w	8004ca4 <HAL_RCC_OscConfig+0x254>
 8004b8c:	4b41      	ldr	r3, [pc, #260]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b8e:	691b      	ldr	r3, [r3, #16]
 8004b90:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004b94:	623b      	str	r3, [r7, #32]
 8004b96:	4b3f      	ldr	r3, [pc, #252]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004b98:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004b9a:	61fb      	str	r3, [r7, #28]
 8004b9c:	6a3b      	ldr	r3, [r7, #32]
 8004b9e:	2b00      	cmp	r3, #0
 8004ba0:	d007      	beq.n	8004bb2 <HAL_RCC_OscConfig+0x162>
 8004ba2:	6a3b      	ldr	r3, [r7, #32]
 8004ba4:	2b18      	cmp	r3, #24
 8004ba6:	d137      	bne.n	8004c18 <HAL_RCC_OscConfig+0x1c8>
 8004ba8:	69fb      	ldr	r3, [r7, #28]
 8004baa:	f003 0303 	and.w	r3, r3, #3
 8004bae:	2b00      	cmp	r3, #0
 8004bb0:	d132      	bne.n	8004c18 <HAL_RCC_OscConfig+0x1c8>
 8004bb2:	4b38      	ldr	r3, [pc, #224]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004bb4:	681b      	ldr	r3, [r3, #0]
 8004bb6:	f003 0304 	and.w	r3, r3, #4
 8004bba:	2b00      	cmp	r3, #0
 8004bbc:	d005      	beq.n	8004bca <HAL_RCC_OscConfig+0x17a>
 8004bbe:	687b      	ldr	r3, [r7, #4]
 8004bc0:	68db      	ldr	r3, [r3, #12]
 8004bc2:	2b00      	cmp	r3, #0
 8004bc4:	d101      	bne.n	8004bca <HAL_RCC_OscConfig+0x17a>
 8004bc6:	2301      	movs	r3, #1
 8004bc8:	e314      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004bca:	4b32      	ldr	r3, [pc, #200]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004bcc:	681b      	ldr	r3, [r3, #0]
 8004bce:	f023 0219 	bic.w	r2, r3, #25
 8004bd2:	687b      	ldr	r3, [r7, #4]
 8004bd4:	68db      	ldr	r3, [r3, #12]
 8004bd6:	492f      	ldr	r1, [pc, #188]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004bd8:	4313      	orrs	r3, r2
 8004bda:	600b      	str	r3, [r1, #0]
 8004bdc:	f7fd fffc 	bl	8002bd8 <HAL_GetTick>
 8004be0:	6278      	str	r0, [r7, #36]	@ 0x24
 8004be2:	e008      	b.n	8004bf6 <HAL_RCC_OscConfig+0x1a6>
 8004be4:	f7fd fff8 	bl	8002bd8 <HAL_GetTick>
 8004be8:	4602      	mov	r2, r0
 8004bea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004bec:	1ad3      	subs	r3, r2, r3
 8004bee:	2b02      	cmp	r3, #2
 8004bf0:	d901      	bls.n	8004bf6 <HAL_RCC_OscConfig+0x1a6>
 8004bf2:	2303      	movs	r3, #3
 8004bf4:	e2fe      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004bf6:	4b27      	ldr	r3, [pc, #156]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004bf8:	681b      	ldr	r3, [r3, #0]
 8004bfa:	f003 0304 	and.w	r3, r3, #4
 8004bfe:	2b00      	cmp	r3, #0
 8004c00:	d0f0      	beq.n	8004be4 <HAL_RCC_OscConfig+0x194>
 8004c02:	4b24      	ldr	r3, [pc, #144]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004c04:	685b      	ldr	r3, [r3, #4]
 8004c06:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	691b      	ldr	r3, [r3, #16]
 8004c0e:	061b      	lsls	r3, r3, #24
 8004c10:	4920      	ldr	r1, [pc, #128]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004c12:	4313      	orrs	r3, r2
 8004c14:	604b      	str	r3, [r1, #4]
 8004c16:	e045      	b.n	8004ca4 <HAL_RCC_OscConfig+0x254>
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	68db      	ldr	r3, [r3, #12]
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d026      	beq.n	8004c6e <HAL_RCC_OscConfig+0x21e>
 8004c20:	4b1c      	ldr	r3, [pc, #112]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004c22:	681b      	ldr	r3, [r3, #0]
 8004c24:	f023 0219 	bic.w	r2, r3, #25
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	68db      	ldr	r3, [r3, #12]
 8004c2c:	4919      	ldr	r1, [pc, #100]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004c2e:	4313      	orrs	r3, r2
 8004c30:	600b      	str	r3, [r1, #0]
 8004c32:	f7fd ffd1 	bl	8002bd8 <HAL_GetTick>
 8004c36:	6278      	str	r0, [r7, #36]	@ 0x24
 8004c38:	e008      	b.n	8004c4c <HAL_RCC_OscConfig+0x1fc>
 8004c3a:	f7fd ffcd 	bl	8002bd8 <HAL_GetTick>
 8004c3e:	4602      	mov	r2, r0
 8004c40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c42:	1ad3      	subs	r3, r2, r3
 8004c44:	2b02      	cmp	r3, #2
 8004c46:	d901      	bls.n	8004c4c <HAL_RCC_OscConfig+0x1fc>
 8004c48:	2303      	movs	r3, #3
 8004c4a:	e2d3      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004c4c:	4b11      	ldr	r3, [pc, #68]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	f003 0304 	and.w	r3, r3, #4
 8004c54:	2b00      	cmp	r3, #0
 8004c56:	d0f0      	beq.n	8004c3a <HAL_RCC_OscConfig+0x1ea>
 8004c58:	4b0e      	ldr	r3, [pc, #56]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004c5a:	685b      	ldr	r3, [r3, #4]
 8004c5c:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	691b      	ldr	r3, [r3, #16]
 8004c64:	061b      	lsls	r3, r3, #24
 8004c66:	490b      	ldr	r1, [pc, #44]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004c68:	4313      	orrs	r3, r2
 8004c6a:	604b      	str	r3, [r1, #4]
 8004c6c:	e01a      	b.n	8004ca4 <HAL_RCC_OscConfig+0x254>
 8004c6e:	4b09      	ldr	r3, [pc, #36]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	4a08      	ldr	r2, [pc, #32]	@ (8004c94 <HAL_RCC_OscConfig+0x244>)
 8004c74:	f023 0301 	bic.w	r3, r3, #1
 8004c78:	6013      	str	r3, [r2, #0]
 8004c7a:	f7fd ffad 	bl	8002bd8 <HAL_GetTick>
 8004c7e:	6278      	str	r0, [r7, #36]	@ 0x24
 8004c80:	e00a      	b.n	8004c98 <HAL_RCC_OscConfig+0x248>
 8004c82:	f7fd ffa9 	bl	8002bd8 <HAL_GetTick>
 8004c86:	4602      	mov	r2, r0
 8004c88:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004c8a:	1ad3      	subs	r3, r2, r3
 8004c8c:	2b02      	cmp	r3, #2
 8004c8e:	d903      	bls.n	8004c98 <HAL_RCC_OscConfig+0x248>
 8004c90:	2303      	movs	r3, #3
 8004c92:	e2af      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004c94:	58024400 	.word	0x58024400
 8004c98:	4b96      	ldr	r3, [pc, #600]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004c9a:	681b      	ldr	r3, [r3, #0]
 8004c9c:	f003 0304 	and.w	r3, r3, #4
 8004ca0:	2b00      	cmp	r3, #0
 8004ca2:	d1ee      	bne.n	8004c82 <HAL_RCC_OscConfig+0x232>
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	f003 0310 	and.w	r3, r3, #16
 8004cac:	2b00      	cmp	r3, #0
 8004cae:	d06a      	beq.n	8004d86 <HAL_RCC_OscConfig+0x336>
 8004cb0:	4b90      	ldr	r3, [pc, #576]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004cb2:	691b      	ldr	r3, [r3, #16]
 8004cb4:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004cb8:	61bb      	str	r3, [r7, #24]
 8004cba:	4b8e      	ldr	r3, [pc, #568]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004cbc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004cbe:	617b      	str	r3, [r7, #20]
 8004cc0:	69bb      	ldr	r3, [r7, #24]
 8004cc2:	2b08      	cmp	r3, #8
 8004cc4:	d007      	beq.n	8004cd6 <HAL_RCC_OscConfig+0x286>
 8004cc6:	69bb      	ldr	r3, [r7, #24]
 8004cc8:	2b18      	cmp	r3, #24
 8004cca:	d11b      	bne.n	8004d04 <HAL_RCC_OscConfig+0x2b4>
 8004ccc:	697b      	ldr	r3, [r7, #20]
 8004cce:	f003 0303 	and.w	r3, r3, #3
 8004cd2:	2b01      	cmp	r3, #1
 8004cd4:	d116      	bne.n	8004d04 <HAL_RCC_OscConfig+0x2b4>
 8004cd6:	4b87      	ldr	r3, [pc, #540]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004cd8:	681b      	ldr	r3, [r3, #0]
 8004cda:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004cde:	2b00      	cmp	r3, #0
 8004ce0:	d005      	beq.n	8004cee <HAL_RCC_OscConfig+0x29e>
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	69db      	ldr	r3, [r3, #28]
 8004ce6:	2b80      	cmp	r3, #128	@ 0x80
 8004ce8:	d001      	beq.n	8004cee <HAL_RCC_OscConfig+0x29e>
 8004cea:	2301      	movs	r3, #1
 8004cec:	e282      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004cee:	4b81      	ldr	r3, [pc, #516]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004cf0:	68db      	ldr	r3, [r3, #12]
 8004cf2:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 8004cf6:	687b      	ldr	r3, [r7, #4]
 8004cf8:	6a1b      	ldr	r3, [r3, #32]
 8004cfa:	061b      	lsls	r3, r3, #24
 8004cfc:	497d      	ldr	r1, [pc, #500]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004cfe:	4313      	orrs	r3, r2
 8004d00:	60cb      	str	r3, [r1, #12]
 8004d02:	e040      	b.n	8004d86 <HAL_RCC_OscConfig+0x336>
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	69db      	ldr	r3, [r3, #28]
 8004d08:	2b00      	cmp	r3, #0
 8004d0a:	d023      	beq.n	8004d54 <HAL_RCC_OscConfig+0x304>
 8004d0c:	4b79      	ldr	r3, [pc, #484]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004d0e:	681b      	ldr	r3, [r3, #0]
 8004d10:	4a78      	ldr	r2, [pc, #480]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004d12:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8004d16:	6013      	str	r3, [r2, #0]
 8004d18:	f7fd ff5e 	bl	8002bd8 <HAL_GetTick>
 8004d1c:	6278      	str	r0, [r7, #36]	@ 0x24
 8004d1e:	e008      	b.n	8004d32 <HAL_RCC_OscConfig+0x2e2>
 8004d20:	f7fd ff5a 	bl	8002bd8 <HAL_GetTick>
 8004d24:	4602      	mov	r2, r0
 8004d26:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004d28:	1ad3      	subs	r3, r2, r3
 8004d2a:	2b02      	cmp	r3, #2
 8004d2c:	d901      	bls.n	8004d32 <HAL_RCC_OscConfig+0x2e2>
 8004d2e:	2303      	movs	r3, #3
 8004d30:	e260      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004d32:	4b70      	ldr	r3, [pc, #448]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004d3a:	2b00      	cmp	r3, #0
 8004d3c:	d0f0      	beq.n	8004d20 <HAL_RCC_OscConfig+0x2d0>
 8004d3e:	4b6d      	ldr	r3, [pc, #436]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004d40:	68db      	ldr	r3, [r3, #12]
 8004d42:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	6a1b      	ldr	r3, [r3, #32]
 8004d4a:	061b      	lsls	r3, r3, #24
 8004d4c:	4969      	ldr	r1, [pc, #420]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004d4e:	4313      	orrs	r3, r2
 8004d50:	60cb      	str	r3, [r1, #12]
 8004d52:	e018      	b.n	8004d86 <HAL_RCC_OscConfig+0x336>
 8004d54:	4b67      	ldr	r3, [pc, #412]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	4a66      	ldr	r2, [pc, #408]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004d5a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8004d5e:	6013      	str	r3, [r2, #0]
 8004d60:	f7fd ff3a 	bl	8002bd8 <HAL_GetTick>
 8004d64:	6278      	str	r0, [r7, #36]	@ 0x24
 8004d66:	e008      	b.n	8004d7a <HAL_RCC_OscConfig+0x32a>
 8004d68:	f7fd ff36 	bl	8002bd8 <HAL_GetTick>
 8004d6c:	4602      	mov	r2, r0
 8004d6e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004d70:	1ad3      	subs	r3, r2, r3
 8004d72:	2b02      	cmp	r3, #2
 8004d74:	d901      	bls.n	8004d7a <HAL_RCC_OscConfig+0x32a>
 8004d76:	2303      	movs	r3, #3
 8004d78:	e23c      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004d7a:	4b5e      	ldr	r3, [pc, #376]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004d82:	2b00      	cmp	r3, #0
 8004d84:	d1f0      	bne.n	8004d68 <HAL_RCC_OscConfig+0x318>
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	681b      	ldr	r3, [r3, #0]
 8004d8a:	f003 0308 	and.w	r3, r3, #8
 8004d8e:	2b00      	cmp	r3, #0
 8004d90:	d036      	beq.n	8004e00 <HAL_RCC_OscConfig+0x3b0>
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	695b      	ldr	r3, [r3, #20]
 8004d96:	2b00      	cmp	r3, #0
 8004d98:	d019      	beq.n	8004dce <HAL_RCC_OscConfig+0x37e>
 8004d9a:	4b56      	ldr	r3, [pc, #344]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004d9c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004d9e:	4a55      	ldr	r2, [pc, #340]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004da0:	f043 0301 	orr.w	r3, r3, #1
 8004da4:	6753      	str	r3, [r2, #116]	@ 0x74
 8004da6:	f7fd ff17 	bl	8002bd8 <HAL_GetTick>
 8004daa:	6278      	str	r0, [r7, #36]	@ 0x24
 8004dac:	e008      	b.n	8004dc0 <HAL_RCC_OscConfig+0x370>
 8004dae:	f7fd ff13 	bl	8002bd8 <HAL_GetTick>
 8004db2:	4602      	mov	r2, r0
 8004db4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004db6:	1ad3      	subs	r3, r2, r3
 8004db8:	2b02      	cmp	r3, #2
 8004dba:	d901      	bls.n	8004dc0 <HAL_RCC_OscConfig+0x370>
 8004dbc:	2303      	movs	r3, #3
 8004dbe:	e219      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004dc0:	4b4c      	ldr	r3, [pc, #304]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004dc2:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004dc4:	f003 0302 	and.w	r3, r3, #2
 8004dc8:	2b00      	cmp	r3, #0
 8004dca:	d0f0      	beq.n	8004dae <HAL_RCC_OscConfig+0x35e>
 8004dcc:	e018      	b.n	8004e00 <HAL_RCC_OscConfig+0x3b0>
 8004dce:	4b49      	ldr	r3, [pc, #292]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004dd0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004dd2:	4a48      	ldr	r2, [pc, #288]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004dd4:	f023 0301 	bic.w	r3, r3, #1
 8004dd8:	6753      	str	r3, [r2, #116]	@ 0x74
 8004dda:	f7fd fefd 	bl	8002bd8 <HAL_GetTick>
 8004dde:	6278      	str	r0, [r7, #36]	@ 0x24
 8004de0:	e008      	b.n	8004df4 <HAL_RCC_OscConfig+0x3a4>
 8004de2:	f7fd fef9 	bl	8002bd8 <HAL_GetTick>
 8004de6:	4602      	mov	r2, r0
 8004de8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004dea:	1ad3      	subs	r3, r2, r3
 8004dec:	2b02      	cmp	r3, #2
 8004dee:	d901      	bls.n	8004df4 <HAL_RCC_OscConfig+0x3a4>
 8004df0:	2303      	movs	r3, #3
 8004df2:	e1ff      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004df4:	4b3f      	ldr	r3, [pc, #252]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004df6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004df8:	f003 0302 	and.w	r3, r3, #2
 8004dfc:	2b00      	cmp	r3, #0
 8004dfe:	d1f0      	bne.n	8004de2 <HAL_RCC_OscConfig+0x392>
 8004e00:	687b      	ldr	r3, [r7, #4]
 8004e02:	681b      	ldr	r3, [r3, #0]
 8004e04:	f003 0320 	and.w	r3, r3, #32
 8004e08:	2b00      	cmp	r3, #0
 8004e0a:	d036      	beq.n	8004e7a <HAL_RCC_OscConfig+0x42a>
 8004e0c:	687b      	ldr	r3, [r7, #4]
 8004e0e:	699b      	ldr	r3, [r3, #24]
 8004e10:	2b00      	cmp	r3, #0
 8004e12:	d019      	beq.n	8004e48 <HAL_RCC_OscConfig+0x3f8>
 8004e14:	4b37      	ldr	r3, [pc, #220]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	4a36      	ldr	r2, [pc, #216]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004e1a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8004e1e:	6013      	str	r3, [r2, #0]
 8004e20:	f7fd feda 	bl	8002bd8 <HAL_GetTick>
 8004e24:	6278      	str	r0, [r7, #36]	@ 0x24
 8004e26:	e008      	b.n	8004e3a <HAL_RCC_OscConfig+0x3ea>
 8004e28:	f7fd fed6 	bl	8002bd8 <HAL_GetTick>
 8004e2c:	4602      	mov	r2, r0
 8004e2e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e30:	1ad3      	subs	r3, r2, r3
 8004e32:	2b02      	cmp	r3, #2
 8004e34:	d901      	bls.n	8004e3a <HAL_RCC_OscConfig+0x3ea>
 8004e36:	2303      	movs	r3, #3
 8004e38:	e1dc      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004e3a:	4b2e      	ldr	r3, [pc, #184]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004e3c:	681b      	ldr	r3, [r3, #0]
 8004e3e:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004e42:	2b00      	cmp	r3, #0
 8004e44:	d0f0      	beq.n	8004e28 <HAL_RCC_OscConfig+0x3d8>
 8004e46:	e018      	b.n	8004e7a <HAL_RCC_OscConfig+0x42a>
 8004e48:	4b2a      	ldr	r3, [pc, #168]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004e4a:	681b      	ldr	r3, [r3, #0]
 8004e4c:	4a29      	ldr	r2, [pc, #164]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004e4e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8004e52:	6013      	str	r3, [r2, #0]
 8004e54:	f7fd fec0 	bl	8002bd8 <HAL_GetTick>
 8004e58:	6278      	str	r0, [r7, #36]	@ 0x24
 8004e5a:	e008      	b.n	8004e6e <HAL_RCC_OscConfig+0x41e>
 8004e5c:	f7fd febc 	bl	8002bd8 <HAL_GetTick>
 8004e60:	4602      	mov	r2, r0
 8004e62:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004e64:	1ad3      	subs	r3, r2, r3
 8004e66:	2b02      	cmp	r3, #2
 8004e68:	d901      	bls.n	8004e6e <HAL_RCC_OscConfig+0x41e>
 8004e6a:	2303      	movs	r3, #3
 8004e6c:	e1c2      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004e6e:	4b21      	ldr	r3, [pc, #132]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004e70:	681b      	ldr	r3, [r3, #0]
 8004e72:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8004e76:	2b00      	cmp	r3, #0
 8004e78:	d1f0      	bne.n	8004e5c <HAL_RCC_OscConfig+0x40c>
 8004e7a:	687b      	ldr	r3, [r7, #4]
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	f003 0304 	and.w	r3, r3, #4
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	f000 8086 	beq.w	8004f94 <HAL_RCC_OscConfig+0x544>
 8004e88:	4b1b      	ldr	r3, [pc, #108]	@ (8004ef8 <HAL_RCC_OscConfig+0x4a8>)
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	4a1a      	ldr	r2, [pc, #104]	@ (8004ef8 <HAL_RCC_OscConfig+0x4a8>)
 8004e8e:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004e92:	6013      	str	r3, [r2, #0]
 8004e94:	f7fd fea0 	bl	8002bd8 <HAL_GetTick>
 8004e98:	6278      	str	r0, [r7, #36]	@ 0x24
 8004e9a:	e008      	b.n	8004eae <HAL_RCC_OscConfig+0x45e>
 8004e9c:	f7fd fe9c 	bl	8002bd8 <HAL_GetTick>
 8004ea0:	4602      	mov	r2, r0
 8004ea2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004ea4:	1ad3      	subs	r3, r2, r3
 8004ea6:	2b64      	cmp	r3, #100	@ 0x64
 8004ea8:	d901      	bls.n	8004eae <HAL_RCC_OscConfig+0x45e>
 8004eaa:	2303      	movs	r3, #3
 8004eac:	e1a2      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004eae:	4b12      	ldr	r3, [pc, #72]	@ (8004ef8 <HAL_RCC_OscConfig+0x4a8>)
 8004eb0:	681b      	ldr	r3, [r3, #0]
 8004eb2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004eb6:	2b00      	cmp	r3, #0
 8004eb8:	d0f0      	beq.n	8004e9c <HAL_RCC_OscConfig+0x44c>
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	689b      	ldr	r3, [r3, #8]
 8004ebe:	2b01      	cmp	r3, #1
 8004ec0:	d106      	bne.n	8004ed0 <HAL_RCC_OscConfig+0x480>
 8004ec2:	4b0c      	ldr	r3, [pc, #48]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004ec4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ec6:	4a0b      	ldr	r2, [pc, #44]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004ec8:	f043 0301 	orr.w	r3, r3, #1
 8004ecc:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ece:	e032      	b.n	8004f36 <HAL_RCC_OscConfig+0x4e6>
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	689b      	ldr	r3, [r3, #8]
 8004ed4:	2b00      	cmp	r3, #0
 8004ed6:	d111      	bne.n	8004efc <HAL_RCC_OscConfig+0x4ac>
 8004ed8:	4b06      	ldr	r3, [pc, #24]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004eda:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004edc:	4a05      	ldr	r2, [pc, #20]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004ede:	f023 0301 	bic.w	r3, r3, #1
 8004ee2:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ee4:	4b03      	ldr	r3, [pc, #12]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004ee6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ee8:	4a02      	ldr	r2, [pc, #8]	@ (8004ef4 <HAL_RCC_OscConfig+0x4a4>)
 8004eea:	f023 0304 	bic.w	r3, r3, #4
 8004eee:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ef0:	e021      	b.n	8004f36 <HAL_RCC_OscConfig+0x4e6>
 8004ef2:	bf00      	nop
 8004ef4:	58024400 	.word	0x58024400
 8004ef8:	58024800 	.word	0x58024800
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	689b      	ldr	r3, [r3, #8]
 8004f00:	2b05      	cmp	r3, #5
 8004f02:	d10c      	bne.n	8004f1e <HAL_RCC_OscConfig+0x4ce>
 8004f04:	4b83      	ldr	r3, [pc, #524]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f06:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f08:	4a82      	ldr	r2, [pc, #520]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f0a:	f043 0304 	orr.w	r3, r3, #4
 8004f0e:	6713      	str	r3, [r2, #112]	@ 0x70
 8004f10:	4b80      	ldr	r3, [pc, #512]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f12:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f14:	4a7f      	ldr	r2, [pc, #508]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f16:	f043 0301 	orr.w	r3, r3, #1
 8004f1a:	6713      	str	r3, [r2, #112]	@ 0x70
 8004f1c:	e00b      	b.n	8004f36 <HAL_RCC_OscConfig+0x4e6>
 8004f1e:	4b7d      	ldr	r3, [pc, #500]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f20:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f22:	4a7c      	ldr	r2, [pc, #496]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f24:	f023 0301 	bic.w	r3, r3, #1
 8004f28:	6713      	str	r3, [r2, #112]	@ 0x70
 8004f2a:	4b7a      	ldr	r3, [pc, #488]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f2c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f2e:	4a79      	ldr	r2, [pc, #484]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f30:	f023 0304 	bic.w	r3, r3, #4
 8004f34:	6713      	str	r3, [r2, #112]	@ 0x70
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	689b      	ldr	r3, [r3, #8]
 8004f3a:	2b00      	cmp	r3, #0
 8004f3c:	d015      	beq.n	8004f6a <HAL_RCC_OscConfig+0x51a>
 8004f3e:	f7fd fe4b 	bl	8002bd8 <HAL_GetTick>
 8004f42:	6278      	str	r0, [r7, #36]	@ 0x24
 8004f44:	e00a      	b.n	8004f5c <HAL_RCC_OscConfig+0x50c>
 8004f46:	f7fd fe47 	bl	8002bd8 <HAL_GetTick>
 8004f4a:	4602      	mov	r2, r0
 8004f4c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004f4e:	1ad3      	subs	r3, r2, r3
 8004f50:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004f54:	4293      	cmp	r3, r2
 8004f56:	d901      	bls.n	8004f5c <HAL_RCC_OscConfig+0x50c>
 8004f58:	2303      	movs	r3, #3
 8004f5a:	e14b      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004f5c:	4b6d      	ldr	r3, [pc, #436]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f5e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f60:	f003 0302 	and.w	r3, r3, #2
 8004f64:	2b00      	cmp	r3, #0
 8004f66:	d0ee      	beq.n	8004f46 <HAL_RCC_OscConfig+0x4f6>
 8004f68:	e014      	b.n	8004f94 <HAL_RCC_OscConfig+0x544>
 8004f6a:	f7fd fe35 	bl	8002bd8 <HAL_GetTick>
 8004f6e:	6278      	str	r0, [r7, #36]	@ 0x24
 8004f70:	e00a      	b.n	8004f88 <HAL_RCC_OscConfig+0x538>
 8004f72:	f7fd fe31 	bl	8002bd8 <HAL_GetTick>
 8004f76:	4602      	mov	r2, r0
 8004f78:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004f7a:	1ad3      	subs	r3, r2, r3
 8004f7c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004f80:	4293      	cmp	r3, r2
 8004f82:	d901      	bls.n	8004f88 <HAL_RCC_OscConfig+0x538>
 8004f84:	2303      	movs	r3, #3
 8004f86:	e135      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004f88:	4b62      	ldr	r3, [pc, #392]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004f8a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f8c:	f003 0302 	and.w	r3, r3, #2
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	d1ee      	bne.n	8004f72 <HAL_RCC_OscConfig+0x522>
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004f98:	2b00      	cmp	r3, #0
 8004f9a:	f000 812a 	beq.w	80051f2 <HAL_RCC_OscConfig+0x7a2>
 8004f9e:	4b5d      	ldr	r3, [pc, #372]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004fa0:	691b      	ldr	r3, [r3, #16]
 8004fa2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8004fa6:	2b18      	cmp	r3, #24
 8004fa8:	f000 80ba 	beq.w	8005120 <HAL_RCC_OscConfig+0x6d0>
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fb0:	2b02      	cmp	r3, #2
 8004fb2:	f040 8095 	bne.w	80050e0 <HAL_RCC_OscConfig+0x690>
 8004fb6:	4b57      	ldr	r3, [pc, #348]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004fb8:	681b      	ldr	r3, [r3, #0]
 8004fba:	4a56      	ldr	r2, [pc, #344]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004fbc:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8004fc0:	6013      	str	r3, [r2, #0]
 8004fc2:	f7fd fe09 	bl	8002bd8 <HAL_GetTick>
 8004fc6:	6278      	str	r0, [r7, #36]	@ 0x24
 8004fc8:	e008      	b.n	8004fdc <HAL_RCC_OscConfig+0x58c>
 8004fca:	f7fd fe05 	bl	8002bd8 <HAL_GetTick>
 8004fce:	4602      	mov	r2, r0
 8004fd0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004fd2:	1ad3      	subs	r3, r2, r3
 8004fd4:	2b02      	cmp	r3, #2
 8004fd6:	d901      	bls.n	8004fdc <HAL_RCC_OscConfig+0x58c>
 8004fd8:	2303      	movs	r3, #3
 8004fda:	e10b      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8004fdc:	4b4d      	ldr	r3, [pc, #308]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004fde:	681b      	ldr	r3, [r3, #0]
 8004fe0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004fe4:	2b00      	cmp	r3, #0
 8004fe6:	d1f0      	bne.n	8004fca <HAL_RCC_OscConfig+0x57a>
 8004fe8:	4b4a      	ldr	r3, [pc, #296]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004fea:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004fec:	4b4a      	ldr	r3, [pc, #296]	@ (8005118 <HAL_RCC_OscConfig+0x6c8>)
 8004fee:	4013      	ands	r3, r2
 8004ff0:	687a      	ldr	r2, [r7, #4]
 8004ff2:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 8004ff4:	687a      	ldr	r2, [r7, #4]
 8004ff6:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8004ff8:	0112      	lsls	r2, r2, #4
 8004ffa:	430a      	orrs	r2, r1
 8004ffc:	4945      	ldr	r1, [pc, #276]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8004ffe:	4313      	orrs	r3, r2
 8005000:	628b      	str	r3, [r1, #40]	@ 0x28
 8005002:	687b      	ldr	r3, [r7, #4]
 8005004:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005006:	3b01      	subs	r3, #1
 8005008:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005010:	3b01      	subs	r3, #1
 8005012:	025b      	lsls	r3, r3, #9
 8005014:	b29b      	uxth	r3, r3
 8005016:	431a      	orrs	r2, r3
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800501c:	3b01      	subs	r3, #1
 800501e:	041b      	lsls	r3, r3, #16
 8005020:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 8005024:	431a      	orrs	r2, r3
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 800502a:	3b01      	subs	r3, #1
 800502c:	061b      	lsls	r3, r3, #24
 800502e:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 8005032:	4938      	ldr	r1, [pc, #224]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8005034:	4313      	orrs	r3, r2
 8005036:	630b      	str	r3, [r1, #48]	@ 0x30
 8005038:	4b36      	ldr	r3, [pc, #216]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 800503a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800503c:	4a35      	ldr	r2, [pc, #212]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 800503e:	f023 0301 	bic.w	r3, r3, #1
 8005042:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005044:	4b33      	ldr	r3, [pc, #204]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8005046:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8005048:	4b34      	ldr	r3, [pc, #208]	@ (800511c <HAL_RCC_OscConfig+0x6cc>)
 800504a:	4013      	ands	r3, r2
 800504c:	687a      	ldr	r2, [r7, #4]
 800504e:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 8005050:	00d2      	lsls	r2, r2, #3
 8005052:	4930      	ldr	r1, [pc, #192]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8005054:	4313      	orrs	r3, r2
 8005056:	634b      	str	r3, [r1, #52]	@ 0x34
 8005058:	4b2e      	ldr	r3, [pc, #184]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 800505a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800505c:	f023 020c 	bic.w	r2, r3, #12
 8005060:	687b      	ldr	r3, [r7, #4]
 8005062:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005064:	492b      	ldr	r1, [pc, #172]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8005066:	4313      	orrs	r3, r2
 8005068:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800506a:	4b2a      	ldr	r3, [pc, #168]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 800506c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800506e:	f023 0202 	bic.w	r2, r3, #2
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8005076:	4927      	ldr	r1, [pc, #156]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8005078:	4313      	orrs	r3, r2
 800507a:	62cb      	str	r3, [r1, #44]	@ 0x2c
 800507c:	4b25      	ldr	r3, [pc, #148]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 800507e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005080:	4a24      	ldr	r2, [pc, #144]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8005082:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005086:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005088:	4b22      	ldr	r3, [pc, #136]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 800508a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800508c:	4a21      	ldr	r2, [pc, #132]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 800508e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005092:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005094:	4b1f      	ldr	r3, [pc, #124]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8005096:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005098:	4a1e      	ldr	r2, [pc, #120]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 800509a:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800509e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80050a0:	4b1c      	ldr	r3, [pc, #112]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 80050a2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050a4:	4a1b      	ldr	r2, [pc, #108]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 80050a6:	f043 0301 	orr.w	r3, r3, #1
 80050aa:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80050ac:	4b19      	ldr	r3, [pc, #100]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 80050ae:	681b      	ldr	r3, [r3, #0]
 80050b0:	4a18      	ldr	r2, [pc, #96]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 80050b2:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80050b6:	6013      	str	r3, [r2, #0]
 80050b8:	f7fd fd8e 	bl	8002bd8 <HAL_GetTick>
 80050bc:	6278      	str	r0, [r7, #36]	@ 0x24
 80050be:	e008      	b.n	80050d2 <HAL_RCC_OscConfig+0x682>
 80050c0:	f7fd fd8a 	bl	8002bd8 <HAL_GetTick>
 80050c4:	4602      	mov	r2, r0
 80050c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050c8:	1ad3      	subs	r3, r2, r3
 80050ca:	2b02      	cmp	r3, #2
 80050cc:	d901      	bls.n	80050d2 <HAL_RCC_OscConfig+0x682>
 80050ce:	2303      	movs	r3, #3
 80050d0:	e090      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 80050d2:	4b10      	ldr	r3, [pc, #64]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 80050d4:	681b      	ldr	r3, [r3, #0]
 80050d6:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80050da:	2b00      	cmp	r3, #0
 80050dc:	d0f0      	beq.n	80050c0 <HAL_RCC_OscConfig+0x670>
 80050de:	e088      	b.n	80051f2 <HAL_RCC_OscConfig+0x7a2>
 80050e0:	4b0c      	ldr	r3, [pc, #48]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 80050e2:	681b      	ldr	r3, [r3, #0]
 80050e4:	4a0b      	ldr	r2, [pc, #44]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 80050e6:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 80050ea:	6013      	str	r3, [r2, #0]
 80050ec:	f7fd fd74 	bl	8002bd8 <HAL_GetTick>
 80050f0:	6278      	str	r0, [r7, #36]	@ 0x24
 80050f2:	e008      	b.n	8005106 <HAL_RCC_OscConfig+0x6b6>
 80050f4:	f7fd fd70 	bl	8002bd8 <HAL_GetTick>
 80050f8:	4602      	mov	r2, r0
 80050fa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80050fc:	1ad3      	subs	r3, r2, r3
 80050fe:	2b02      	cmp	r3, #2
 8005100:	d901      	bls.n	8005106 <HAL_RCC_OscConfig+0x6b6>
 8005102:	2303      	movs	r3, #3
 8005104:	e076      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 8005106:	4b03      	ldr	r3, [pc, #12]	@ (8005114 <HAL_RCC_OscConfig+0x6c4>)
 8005108:	681b      	ldr	r3, [r3, #0]
 800510a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800510e:	2b00      	cmp	r3, #0
 8005110:	d1f0      	bne.n	80050f4 <HAL_RCC_OscConfig+0x6a4>
 8005112:	e06e      	b.n	80051f2 <HAL_RCC_OscConfig+0x7a2>
 8005114:	58024400 	.word	0x58024400
 8005118:	fffffc0c 	.word	0xfffffc0c
 800511c:	ffff0007 	.word	0xffff0007
 8005120:	4b36      	ldr	r3, [pc, #216]	@ (80051fc <HAL_RCC_OscConfig+0x7ac>)
 8005122:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005124:	613b      	str	r3, [r7, #16]
 8005126:	4b35      	ldr	r3, [pc, #212]	@ (80051fc <HAL_RCC_OscConfig+0x7ac>)
 8005128:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800512a:	60fb      	str	r3, [r7, #12]
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005130:	2b01      	cmp	r3, #1
 8005132:	d031      	beq.n	8005198 <HAL_RCC_OscConfig+0x748>
 8005134:	693b      	ldr	r3, [r7, #16]
 8005136:	f003 0203 	and.w	r2, r3, #3
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800513e:	429a      	cmp	r2, r3
 8005140:	d12a      	bne.n	8005198 <HAL_RCC_OscConfig+0x748>
 8005142:	693b      	ldr	r3, [r7, #16]
 8005144:	091b      	lsrs	r3, r3, #4
 8005146:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800514a:	687b      	ldr	r3, [r7, #4]
 800514c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800514e:	429a      	cmp	r2, r3
 8005150:	d122      	bne.n	8005198 <HAL_RCC_OscConfig+0x748>
 8005152:	68fb      	ldr	r3, [r7, #12]
 8005154:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800515c:	3b01      	subs	r3, #1
 800515e:	429a      	cmp	r2, r3
 8005160:	d11a      	bne.n	8005198 <HAL_RCC_OscConfig+0x748>
 8005162:	68fb      	ldr	r3, [r7, #12]
 8005164:	0a5b      	lsrs	r3, r3, #9
 8005166:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800516e:	3b01      	subs	r3, #1
 8005170:	429a      	cmp	r2, r3
 8005172:	d111      	bne.n	8005198 <HAL_RCC_OscConfig+0x748>
 8005174:	68fb      	ldr	r3, [r7, #12]
 8005176:	0c1b      	lsrs	r3, r3, #16
 8005178:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8005180:	3b01      	subs	r3, #1
 8005182:	429a      	cmp	r2, r3
 8005184:	d108      	bne.n	8005198 <HAL_RCC_OscConfig+0x748>
 8005186:	68fb      	ldr	r3, [r7, #12]
 8005188:	0e1b      	lsrs	r3, r3, #24
 800518a:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005192:	3b01      	subs	r3, #1
 8005194:	429a      	cmp	r2, r3
 8005196:	d001      	beq.n	800519c <HAL_RCC_OscConfig+0x74c>
 8005198:	2301      	movs	r3, #1
 800519a:	e02b      	b.n	80051f4 <HAL_RCC_OscConfig+0x7a4>
 800519c:	4b17      	ldr	r3, [pc, #92]	@ (80051fc <HAL_RCC_OscConfig+0x7ac>)
 800519e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80051a0:	08db      	lsrs	r3, r3, #3
 80051a2:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80051a6:	613b      	str	r3, [r7, #16]
 80051a8:	687b      	ldr	r3, [r7, #4]
 80051aa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80051ac:	693a      	ldr	r2, [r7, #16]
 80051ae:	429a      	cmp	r2, r3
 80051b0:	d01f      	beq.n	80051f2 <HAL_RCC_OscConfig+0x7a2>
 80051b2:	4b12      	ldr	r3, [pc, #72]	@ (80051fc <HAL_RCC_OscConfig+0x7ac>)
 80051b4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80051b6:	4a11      	ldr	r2, [pc, #68]	@ (80051fc <HAL_RCC_OscConfig+0x7ac>)
 80051b8:	f023 0301 	bic.w	r3, r3, #1
 80051bc:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80051be:	f7fd fd0b 	bl	8002bd8 <HAL_GetTick>
 80051c2:	6278      	str	r0, [r7, #36]	@ 0x24
 80051c4:	bf00      	nop
 80051c6:	f7fd fd07 	bl	8002bd8 <HAL_GetTick>
 80051ca:	4602      	mov	r2, r0
 80051cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80051ce:	4293      	cmp	r3, r2
 80051d0:	d0f9      	beq.n	80051c6 <HAL_RCC_OscConfig+0x776>
 80051d2:	4b0a      	ldr	r3, [pc, #40]	@ (80051fc <HAL_RCC_OscConfig+0x7ac>)
 80051d4:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80051d6:	4b0a      	ldr	r3, [pc, #40]	@ (8005200 <HAL_RCC_OscConfig+0x7b0>)
 80051d8:	4013      	ands	r3, r2
 80051da:	687a      	ldr	r2, [r7, #4]
 80051dc:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 80051de:	00d2      	lsls	r2, r2, #3
 80051e0:	4906      	ldr	r1, [pc, #24]	@ (80051fc <HAL_RCC_OscConfig+0x7ac>)
 80051e2:	4313      	orrs	r3, r2
 80051e4:	634b      	str	r3, [r1, #52]	@ 0x34
 80051e6:	4b05      	ldr	r3, [pc, #20]	@ (80051fc <HAL_RCC_OscConfig+0x7ac>)
 80051e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80051ea:	4a04      	ldr	r2, [pc, #16]	@ (80051fc <HAL_RCC_OscConfig+0x7ac>)
 80051ec:	f043 0301 	orr.w	r3, r3, #1
 80051f0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80051f2:	2300      	movs	r3, #0
 80051f4:	4618      	mov	r0, r3
 80051f6:	3730      	adds	r7, #48	@ 0x30
 80051f8:	46bd      	mov	sp, r7
 80051fa:	bd80      	pop	{r7, pc}
 80051fc:	58024400 	.word	0x58024400
 8005200:	ffff0007 	.word	0xffff0007

08005204 <HAL_RCC_ClockConfig>:
 8005204:	b580      	push	{r7, lr}
 8005206:	b086      	sub	sp, #24
 8005208:	af00      	add	r7, sp, #0
 800520a:	6078      	str	r0, [r7, #4]
 800520c:	6039      	str	r1, [r7, #0]
 800520e:	687b      	ldr	r3, [r7, #4]
 8005210:	2b00      	cmp	r3, #0
 8005212:	d101      	bne.n	8005218 <HAL_RCC_ClockConfig+0x14>
 8005214:	2301      	movs	r3, #1
 8005216:	e19c      	b.n	8005552 <HAL_RCC_ClockConfig+0x34e>
 8005218:	4b8a      	ldr	r3, [pc, #552]	@ (8005444 <HAL_RCC_ClockConfig+0x240>)
 800521a:	681b      	ldr	r3, [r3, #0]
 800521c:	f003 030f 	and.w	r3, r3, #15
 8005220:	683a      	ldr	r2, [r7, #0]
 8005222:	429a      	cmp	r2, r3
 8005224:	d910      	bls.n	8005248 <HAL_RCC_ClockConfig+0x44>
 8005226:	4b87      	ldr	r3, [pc, #540]	@ (8005444 <HAL_RCC_ClockConfig+0x240>)
 8005228:	681b      	ldr	r3, [r3, #0]
 800522a:	f023 020f 	bic.w	r2, r3, #15
 800522e:	4985      	ldr	r1, [pc, #532]	@ (8005444 <HAL_RCC_ClockConfig+0x240>)
 8005230:	683b      	ldr	r3, [r7, #0]
 8005232:	4313      	orrs	r3, r2
 8005234:	600b      	str	r3, [r1, #0]
 8005236:	4b83      	ldr	r3, [pc, #524]	@ (8005444 <HAL_RCC_ClockConfig+0x240>)
 8005238:	681b      	ldr	r3, [r3, #0]
 800523a:	f003 030f 	and.w	r3, r3, #15
 800523e:	683a      	ldr	r2, [r7, #0]
 8005240:	429a      	cmp	r2, r3
 8005242:	d001      	beq.n	8005248 <HAL_RCC_ClockConfig+0x44>
 8005244:	2301      	movs	r3, #1
 8005246:	e184      	b.n	8005552 <HAL_RCC_ClockConfig+0x34e>
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	f003 0304 	and.w	r3, r3, #4
 8005250:	2b00      	cmp	r3, #0
 8005252:	d010      	beq.n	8005276 <HAL_RCC_ClockConfig+0x72>
 8005254:	687b      	ldr	r3, [r7, #4]
 8005256:	691a      	ldr	r2, [r3, #16]
 8005258:	4b7b      	ldr	r3, [pc, #492]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 800525a:	699b      	ldr	r3, [r3, #24]
 800525c:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8005260:	429a      	cmp	r2, r3
 8005262:	d908      	bls.n	8005276 <HAL_RCC_ClockConfig+0x72>
 8005264:	4b78      	ldr	r3, [pc, #480]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005266:	699b      	ldr	r3, [r3, #24]
 8005268:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	691b      	ldr	r3, [r3, #16]
 8005270:	4975      	ldr	r1, [pc, #468]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005272:	4313      	orrs	r3, r2
 8005274:	618b      	str	r3, [r1, #24]
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	f003 0308 	and.w	r3, r3, #8
 800527e:	2b00      	cmp	r3, #0
 8005280:	d010      	beq.n	80052a4 <HAL_RCC_ClockConfig+0xa0>
 8005282:	687b      	ldr	r3, [r7, #4]
 8005284:	695a      	ldr	r2, [r3, #20]
 8005286:	4b70      	ldr	r3, [pc, #448]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005288:	69db      	ldr	r3, [r3, #28]
 800528a:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800528e:	429a      	cmp	r2, r3
 8005290:	d908      	bls.n	80052a4 <HAL_RCC_ClockConfig+0xa0>
 8005292:	4b6d      	ldr	r3, [pc, #436]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005294:	69db      	ldr	r3, [r3, #28]
 8005296:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	695b      	ldr	r3, [r3, #20]
 800529e:	496a      	ldr	r1, [pc, #424]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80052a0:	4313      	orrs	r3, r2
 80052a2:	61cb      	str	r3, [r1, #28]
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	681b      	ldr	r3, [r3, #0]
 80052a8:	f003 0310 	and.w	r3, r3, #16
 80052ac:	2b00      	cmp	r3, #0
 80052ae:	d010      	beq.n	80052d2 <HAL_RCC_ClockConfig+0xce>
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	699a      	ldr	r2, [r3, #24]
 80052b4:	4b64      	ldr	r3, [pc, #400]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80052b6:	69db      	ldr	r3, [r3, #28]
 80052b8:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80052bc:	429a      	cmp	r2, r3
 80052be:	d908      	bls.n	80052d2 <HAL_RCC_ClockConfig+0xce>
 80052c0:	4b61      	ldr	r3, [pc, #388]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80052c2:	69db      	ldr	r3, [r3, #28]
 80052c4:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80052c8:	687b      	ldr	r3, [r7, #4]
 80052ca:	699b      	ldr	r3, [r3, #24]
 80052cc:	495e      	ldr	r1, [pc, #376]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80052ce:	4313      	orrs	r3, r2
 80052d0:	61cb      	str	r3, [r1, #28]
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	681b      	ldr	r3, [r3, #0]
 80052d6:	f003 0320 	and.w	r3, r3, #32
 80052da:	2b00      	cmp	r3, #0
 80052dc:	d010      	beq.n	8005300 <HAL_RCC_ClockConfig+0xfc>
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	69da      	ldr	r2, [r3, #28]
 80052e2:	4b59      	ldr	r3, [pc, #356]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80052e4:	6a1b      	ldr	r3, [r3, #32]
 80052e6:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80052ea:	429a      	cmp	r2, r3
 80052ec:	d908      	bls.n	8005300 <HAL_RCC_ClockConfig+0xfc>
 80052ee:	4b56      	ldr	r3, [pc, #344]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80052f0:	6a1b      	ldr	r3, [r3, #32]
 80052f2:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80052f6:	687b      	ldr	r3, [r7, #4]
 80052f8:	69db      	ldr	r3, [r3, #28]
 80052fa:	4953      	ldr	r1, [pc, #332]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80052fc:	4313      	orrs	r3, r2
 80052fe:	620b      	str	r3, [r1, #32]
 8005300:	687b      	ldr	r3, [r7, #4]
 8005302:	681b      	ldr	r3, [r3, #0]
 8005304:	f003 0302 	and.w	r3, r3, #2
 8005308:	2b00      	cmp	r3, #0
 800530a:	d010      	beq.n	800532e <HAL_RCC_ClockConfig+0x12a>
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	68da      	ldr	r2, [r3, #12]
 8005310:	4b4d      	ldr	r3, [pc, #308]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005312:	699b      	ldr	r3, [r3, #24]
 8005314:	f003 030f 	and.w	r3, r3, #15
 8005318:	429a      	cmp	r2, r3
 800531a:	d908      	bls.n	800532e <HAL_RCC_ClockConfig+0x12a>
 800531c:	4b4a      	ldr	r3, [pc, #296]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 800531e:	699b      	ldr	r3, [r3, #24]
 8005320:	f023 020f 	bic.w	r2, r3, #15
 8005324:	687b      	ldr	r3, [r7, #4]
 8005326:	68db      	ldr	r3, [r3, #12]
 8005328:	4947      	ldr	r1, [pc, #284]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 800532a:	4313      	orrs	r3, r2
 800532c:	618b      	str	r3, [r1, #24]
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	681b      	ldr	r3, [r3, #0]
 8005332:	f003 0301 	and.w	r3, r3, #1
 8005336:	2b00      	cmp	r3, #0
 8005338:	d055      	beq.n	80053e6 <HAL_RCC_ClockConfig+0x1e2>
 800533a:	4b43      	ldr	r3, [pc, #268]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 800533c:	699b      	ldr	r3, [r3, #24]
 800533e:	f423 6270 	bic.w	r2, r3, #3840	@ 0xf00
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	689b      	ldr	r3, [r3, #8]
 8005346:	4940      	ldr	r1, [pc, #256]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005348:	4313      	orrs	r3, r2
 800534a:	618b      	str	r3, [r1, #24]
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	685b      	ldr	r3, [r3, #4]
 8005350:	2b02      	cmp	r3, #2
 8005352:	d107      	bne.n	8005364 <HAL_RCC_ClockConfig+0x160>
 8005354:	4b3c      	ldr	r3, [pc, #240]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800535c:	2b00      	cmp	r3, #0
 800535e:	d121      	bne.n	80053a4 <HAL_RCC_ClockConfig+0x1a0>
 8005360:	2301      	movs	r3, #1
 8005362:	e0f6      	b.n	8005552 <HAL_RCC_ClockConfig+0x34e>
 8005364:	687b      	ldr	r3, [r7, #4]
 8005366:	685b      	ldr	r3, [r3, #4]
 8005368:	2b03      	cmp	r3, #3
 800536a:	d107      	bne.n	800537c <HAL_RCC_ClockConfig+0x178>
 800536c:	4b36      	ldr	r3, [pc, #216]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 800536e:	681b      	ldr	r3, [r3, #0]
 8005370:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005374:	2b00      	cmp	r3, #0
 8005376:	d115      	bne.n	80053a4 <HAL_RCC_ClockConfig+0x1a0>
 8005378:	2301      	movs	r3, #1
 800537a:	e0ea      	b.n	8005552 <HAL_RCC_ClockConfig+0x34e>
 800537c:	687b      	ldr	r3, [r7, #4]
 800537e:	685b      	ldr	r3, [r3, #4]
 8005380:	2b01      	cmp	r3, #1
 8005382:	d107      	bne.n	8005394 <HAL_RCC_ClockConfig+0x190>
 8005384:	4b30      	ldr	r3, [pc, #192]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800538c:	2b00      	cmp	r3, #0
 800538e:	d109      	bne.n	80053a4 <HAL_RCC_ClockConfig+0x1a0>
 8005390:	2301      	movs	r3, #1
 8005392:	e0de      	b.n	8005552 <HAL_RCC_ClockConfig+0x34e>
 8005394:	4b2c      	ldr	r3, [pc, #176]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005396:	681b      	ldr	r3, [r3, #0]
 8005398:	f003 0304 	and.w	r3, r3, #4
 800539c:	2b00      	cmp	r3, #0
 800539e:	d101      	bne.n	80053a4 <HAL_RCC_ClockConfig+0x1a0>
 80053a0:	2301      	movs	r3, #1
 80053a2:	e0d6      	b.n	8005552 <HAL_RCC_ClockConfig+0x34e>
 80053a4:	4b28      	ldr	r3, [pc, #160]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80053a6:	691b      	ldr	r3, [r3, #16]
 80053a8:	f023 0207 	bic.w	r2, r3, #7
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	685b      	ldr	r3, [r3, #4]
 80053b0:	4925      	ldr	r1, [pc, #148]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80053b2:	4313      	orrs	r3, r2
 80053b4:	610b      	str	r3, [r1, #16]
 80053b6:	f7fd fc0f 	bl	8002bd8 <HAL_GetTick>
 80053ba:	6178      	str	r0, [r7, #20]
 80053bc:	e00a      	b.n	80053d4 <HAL_RCC_ClockConfig+0x1d0>
 80053be:	f7fd fc0b 	bl	8002bd8 <HAL_GetTick>
 80053c2:	4602      	mov	r2, r0
 80053c4:	697b      	ldr	r3, [r7, #20]
 80053c6:	1ad3      	subs	r3, r2, r3
 80053c8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80053cc:	4293      	cmp	r3, r2
 80053ce:	d901      	bls.n	80053d4 <HAL_RCC_ClockConfig+0x1d0>
 80053d0:	2303      	movs	r3, #3
 80053d2:	e0be      	b.n	8005552 <HAL_RCC_ClockConfig+0x34e>
 80053d4:	4b1c      	ldr	r3, [pc, #112]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80053d6:	691b      	ldr	r3, [r3, #16]
 80053d8:	f003 0238 	and.w	r2, r3, #56	@ 0x38
 80053dc:	687b      	ldr	r3, [r7, #4]
 80053de:	685b      	ldr	r3, [r3, #4]
 80053e0:	00db      	lsls	r3, r3, #3
 80053e2:	429a      	cmp	r2, r3
 80053e4:	d1eb      	bne.n	80053be <HAL_RCC_ClockConfig+0x1ba>
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	f003 0302 	and.w	r3, r3, #2
 80053ee:	2b00      	cmp	r3, #0
 80053f0:	d010      	beq.n	8005414 <HAL_RCC_ClockConfig+0x210>
 80053f2:	687b      	ldr	r3, [r7, #4]
 80053f4:	68da      	ldr	r2, [r3, #12]
 80053f6:	4b14      	ldr	r3, [pc, #80]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 80053f8:	699b      	ldr	r3, [r3, #24]
 80053fa:	f003 030f 	and.w	r3, r3, #15
 80053fe:	429a      	cmp	r2, r3
 8005400:	d208      	bcs.n	8005414 <HAL_RCC_ClockConfig+0x210>
 8005402:	4b11      	ldr	r3, [pc, #68]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005404:	699b      	ldr	r3, [r3, #24]
 8005406:	f023 020f 	bic.w	r2, r3, #15
 800540a:	687b      	ldr	r3, [r7, #4]
 800540c:	68db      	ldr	r3, [r3, #12]
 800540e:	490e      	ldr	r1, [pc, #56]	@ (8005448 <HAL_RCC_ClockConfig+0x244>)
 8005410:	4313      	orrs	r3, r2
 8005412:	618b      	str	r3, [r1, #24]
 8005414:	4b0b      	ldr	r3, [pc, #44]	@ (8005444 <HAL_RCC_ClockConfig+0x240>)
 8005416:	681b      	ldr	r3, [r3, #0]
 8005418:	f003 030f 	and.w	r3, r3, #15
 800541c:	683a      	ldr	r2, [r7, #0]
 800541e:	429a      	cmp	r2, r3
 8005420:	d214      	bcs.n	800544c <HAL_RCC_ClockConfig+0x248>
 8005422:	4b08      	ldr	r3, [pc, #32]	@ (8005444 <HAL_RCC_ClockConfig+0x240>)
 8005424:	681b      	ldr	r3, [r3, #0]
 8005426:	f023 020f 	bic.w	r2, r3, #15
 800542a:	4906      	ldr	r1, [pc, #24]	@ (8005444 <HAL_RCC_ClockConfig+0x240>)
 800542c:	683b      	ldr	r3, [r7, #0]
 800542e:	4313      	orrs	r3, r2
 8005430:	600b      	str	r3, [r1, #0]
 8005432:	4b04      	ldr	r3, [pc, #16]	@ (8005444 <HAL_RCC_ClockConfig+0x240>)
 8005434:	681b      	ldr	r3, [r3, #0]
 8005436:	f003 030f 	and.w	r3, r3, #15
 800543a:	683a      	ldr	r2, [r7, #0]
 800543c:	429a      	cmp	r2, r3
 800543e:	d005      	beq.n	800544c <HAL_RCC_ClockConfig+0x248>
 8005440:	2301      	movs	r3, #1
 8005442:	e086      	b.n	8005552 <HAL_RCC_ClockConfig+0x34e>
 8005444:	52002000 	.word	0x52002000
 8005448:	58024400 	.word	0x58024400
 800544c:	687b      	ldr	r3, [r7, #4]
 800544e:	681b      	ldr	r3, [r3, #0]
 8005450:	f003 0304 	and.w	r3, r3, #4
 8005454:	2b00      	cmp	r3, #0
 8005456:	d010      	beq.n	800547a <HAL_RCC_ClockConfig+0x276>
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	691a      	ldr	r2, [r3, #16]
 800545c:	4b3f      	ldr	r3, [pc, #252]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 800545e:	699b      	ldr	r3, [r3, #24]
 8005460:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8005464:	429a      	cmp	r2, r3
 8005466:	d208      	bcs.n	800547a <HAL_RCC_ClockConfig+0x276>
 8005468:	4b3c      	ldr	r3, [pc, #240]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 800546a:	699b      	ldr	r3, [r3, #24]
 800546c:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	691b      	ldr	r3, [r3, #16]
 8005474:	4939      	ldr	r1, [pc, #228]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 8005476:	4313      	orrs	r3, r2
 8005478:	618b      	str	r3, [r1, #24]
 800547a:	687b      	ldr	r3, [r7, #4]
 800547c:	681b      	ldr	r3, [r3, #0]
 800547e:	f003 0308 	and.w	r3, r3, #8
 8005482:	2b00      	cmp	r3, #0
 8005484:	d010      	beq.n	80054a8 <HAL_RCC_ClockConfig+0x2a4>
 8005486:	687b      	ldr	r3, [r7, #4]
 8005488:	695a      	ldr	r2, [r3, #20]
 800548a:	4b34      	ldr	r3, [pc, #208]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 800548c:	69db      	ldr	r3, [r3, #28]
 800548e:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8005492:	429a      	cmp	r2, r3
 8005494:	d208      	bcs.n	80054a8 <HAL_RCC_ClockConfig+0x2a4>
 8005496:	4b31      	ldr	r3, [pc, #196]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 8005498:	69db      	ldr	r3, [r3, #28]
 800549a:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	695b      	ldr	r3, [r3, #20]
 80054a2:	492e      	ldr	r1, [pc, #184]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 80054a4:	4313      	orrs	r3, r2
 80054a6:	61cb      	str	r3, [r1, #28]
 80054a8:	687b      	ldr	r3, [r7, #4]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	f003 0310 	and.w	r3, r3, #16
 80054b0:	2b00      	cmp	r3, #0
 80054b2:	d010      	beq.n	80054d6 <HAL_RCC_ClockConfig+0x2d2>
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	699a      	ldr	r2, [r3, #24]
 80054b8:	4b28      	ldr	r3, [pc, #160]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 80054ba:	69db      	ldr	r3, [r3, #28]
 80054bc:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 80054c0:	429a      	cmp	r2, r3
 80054c2:	d208      	bcs.n	80054d6 <HAL_RCC_ClockConfig+0x2d2>
 80054c4:	4b25      	ldr	r3, [pc, #148]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 80054c6:	69db      	ldr	r3, [r3, #28]
 80054c8:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 80054cc:	687b      	ldr	r3, [r7, #4]
 80054ce:	699b      	ldr	r3, [r3, #24]
 80054d0:	4922      	ldr	r1, [pc, #136]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 80054d2:	4313      	orrs	r3, r2
 80054d4:	61cb      	str	r3, [r1, #28]
 80054d6:	687b      	ldr	r3, [r7, #4]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	f003 0320 	and.w	r3, r3, #32
 80054de:	2b00      	cmp	r3, #0
 80054e0:	d010      	beq.n	8005504 <HAL_RCC_ClockConfig+0x300>
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	69da      	ldr	r2, [r3, #28]
 80054e6:	4b1d      	ldr	r3, [pc, #116]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 80054e8:	6a1b      	ldr	r3, [r3, #32]
 80054ea:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80054ee:	429a      	cmp	r2, r3
 80054f0:	d208      	bcs.n	8005504 <HAL_RCC_ClockConfig+0x300>
 80054f2:	4b1a      	ldr	r3, [pc, #104]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 80054f4:	6a1b      	ldr	r3, [r3, #32]
 80054f6:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	69db      	ldr	r3, [r3, #28]
 80054fe:	4917      	ldr	r1, [pc, #92]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 8005500:	4313      	orrs	r3, r2
 8005502:	620b      	str	r3, [r1, #32]
 8005504:	f000 f834 	bl	8005570 <HAL_RCC_GetSysClockFreq>
 8005508:	4602      	mov	r2, r0
 800550a:	4b14      	ldr	r3, [pc, #80]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 800550c:	699b      	ldr	r3, [r3, #24]
 800550e:	0a1b      	lsrs	r3, r3, #8
 8005510:	f003 030f 	and.w	r3, r3, #15
 8005514:	4912      	ldr	r1, [pc, #72]	@ (8005560 <HAL_RCC_ClockConfig+0x35c>)
 8005516:	5ccb      	ldrb	r3, [r1, r3]
 8005518:	f003 031f 	and.w	r3, r3, #31
 800551c:	fa22 f303 	lsr.w	r3, r2, r3
 8005520:	613b      	str	r3, [r7, #16]
 8005522:	4b0e      	ldr	r3, [pc, #56]	@ (800555c <HAL_RCC_ClockConfig+0x358>)
 8005524:	699b      	ldr	r3, [r3, #24]
 8005526:	f003 030f 	and.w	r3, r3, #15
 800552a:	4a0d      	ldr	r2, [pc, #52]	@ (8005560 <HAL_RCC_ClockConfig+0x35c>)
 800552c:	5cd3      	ldrb	r3, [r2, r3]
 800552e:	f003 031f 	and.w	r3, r3, #31
 8005532:	693a      	ldr	r2, [r7, #16]
 8005534:	fa22 f303 	lsr.w	r3, r2, r3
 8005538:	4a0a      	ldr	r2, [pc, #40]	@ (8005564 <HAL_RCC_ClockConfig+0x360>)
 800553a:	6013      	str	r3, [r2, #0]
 800553c:	4a0a      	ldr	r2, [pc, #40]	@ (8005568 <HAL_RCC_ClockConfig+0x364>)
 800553e:	693b      	ldr	r3, [r7, #16]
 8005540:	6013      	str	r3, [r2, #0]
 8005542:	4b0a      	ldr	r3, [pc, #40]	@ (800556c <HAL_RCC_ClockConfig+0x368>)
 8005544:	681b      	ldr	r3, [r3, #0]
 8005546:	4618      	mov	r0, r3
 8005548:	f7fd fafc 	bl	8002b44 <HAL_InitTick>
 800554c:	4603      	mov	r3, r0
 800554e:	73fb      	strb	r3, [r7, #15]
 8005550:	7bfb      	ldrb	r3, [r7, #15]
 8005552:	4618      	mov	r0, r3
 8005554:	3718      	adds	r7, #24
 8005556:	46bd      	mov	sp, r7
 8005558:	bd80      	pop	{r7, pc}
 800555a:	bf00      	nop
 800555c:	58024400 	.word	0x58024400
 8005560:	0800dc30 	.word	0x0800dc30
 8005564:	24000008 	.word	0x24000008
 8005568:	24000004 	.word	0x24000004
 800556c:	24000010 	.word	0x24000010

08005570 <HAL_RCC_GetSysClockFreq>:
 8005570:	b480      	push	{r7}
 8005572:	b089      	sub	sp, #36	@ 0x24
 8005574:	af00      	add	r7, sp, #0
 8005576:	4bb3      	ldr	r3, [pc, #716]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8005578:	691b      	ldr	r3, [r3, #16]
 800557a:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800557e:	2b18      	cmp	r3, #24
 8005580:	f200 8155 	bhi.w	800582e <HAL_RCC_GetSysClockFreq+0x2be>
 8005584:	a201      	add	r2, pc, #4	@ (adr r2, 800558c <HAL_RCC_GetSysClockFreq+0x1c>)
 8005586:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800558a:	bf00      	nop
 800558c:	080055f1 	.word	0x080055f1
 8005590:	0800582f 	.word	0x0800582f
 8005594:	0800582f 	.word	0x0800582f
 8005598:	0800582f 	.word	0x0800582f
 800559c:	0800582f 	.word	0x0800582f
 80055a0:	0800582f 	.word	0x0800582f
 80055a4:	0800582f 	.word	0x0800582f
 80055a8:	0800582f 	.word	0x0800582f
 80055ac:	08005617 	.word	0x08005617
 80055b0:	0800582f 	.word	0x0800582f
 80055b4:	0800582f 	.word	0x0800582f
 80055b8:	0800582f 	.word	0x0800582f
 80055bc:	0800582f 	.word	0x0800582f
 80055c0:	0800582f 	.word	0x0800582f
 80055c4:	0800582f 	.word	0x0800582f
 80055c8:	0800582f 	.word	0x0800582f
 80055cc:	0800561d 	.word	0x0800561d
 80055d0:	0800582f 	.word	0x0800582f
 80055d4:	0800582f 	.word	0x0800582f
 80055d8:	0800582f 	.word	0x0800582f
 80055dc:	0800582f 	.word	0x0800582f
 80055e0:	0800582f 	.word	0x0800582f
 80055e4:	0800582f 	.word	0x0800582f
 80055e8:	0800582f 	.word	0x0800582f
 80055ec:	08005623 	.word	0x08005623
 80055f0:	4b94      	ldr	r3, [pc, #592]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80055f2:	681b      	ldr	r3, [r3, #0]
 80055f4:	f003 0320 	and.w	r3, r3, #32
 80055f8:	2b00      	cmp	r3, #0
 80055fa:	d009      	beq.n	8005610 <HAL_RCC_GetSysClockFreq+0xa0>
 80055fc:	4b91      	ldr	r3, [pc, #580]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80055fe:	681b      	ldr	r3, [r3, #0]
 8005600:	08db      	lsrs	r3, r3, #3
 8005602:	f003 0303 	and.w	r3, r3, #3
 8005606:	4a90      	ldr	r2, [pc, #576]	@ (8005848 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8005608:	fa22 f303 	lsr.w	r3, r2, r3
 800560c:	61bb      	str	r3, [r7, #24]
 800560e:	e111      	b.n	8005834 <HAL_RCC_GetSysClockFreq+0x2c4>
 8005610:	4b8d      	ldr	r3, [pc, #564]	@ (8005848 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8005612:	61bb      	str	r3, [r7, #24]
 8005614:	e10e      	b.n	8005834 <HAL_RCC_GetSysClockFreq+0x2c4>
 8005616:	4b8d      	ldr	r3, [pc, #564]	@ (800584c <HAL_RCC_GetSysClockFreq+0x2dc>)
 8005618:	61bb      	str	r3, [r7, #24]
 800561a:	e10b      	b.n	8005834 <HAL_RCC_GetSysClockFreq+0x2c4>
 800561c:	4b8c      	ldr	r3, [pc, #560]	@ (8005850 <HAL_RCC_GetSysClockFreq+0x2e0>)
 800561e:	61bb      	str	r3, [r7, #24]
 8005620:	e108      	b.n	8005834 <HAL_RCC_GetSysClockFreq+0x2c4>
 8005622:	4b88      	ldr	r3, [pc, #544]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8005624:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005626:	f003 0303 	and.w	r3, r3, #3
 800562a:	617b      	str	r3, [r7, #20]
 800562c:	4b85      	ldr	r3, [pc, #532]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800562e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005630:	091b      	lsrs	r3, r3, #4
 8005632:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005636:	613b      	str	r3, [r7, #16]
 8005638:	4b82      	ldr	r3, [pc, #520]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800563a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800563c:	f003 0301 	and.w	r3, r3, #1
 8005640:	60fb      	str	r3, [r7, #12]
 8005642:	4b80      	ldr	r3, [pc, #512]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8005644:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005646:	08db      	lsrs	r3, r3, #3
 8005648:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800564c:	68fa      	ldr	r2, [r7, #12]
 800564e:	fb02 f303 	mul.w	r3, r2, r3
 8005652:	ee07 3a90 	vmov	s15, r3
 8005656:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800565a:	edc7 7a02 	vstr	s15, [r7, #8]
 800565e:	693b      	ldr	r3, [r7, #16]
 8005660:	2b00      	cmp	r3, #0
 8005662:	f000 80e1 	beq.w	8005828 <HAL_RCC_GetSysClockFreq+0x2b8>
 8005666:	697b      	ldr	r3, [r7, #20]
 8005668:	2b02      	cmp	r3, #2
 800566a:	f000 8083 	beq.w	8005774 <HAL_RCC_GetSysClockFreq+0x204>
 800566e:	697b      	ldr	r3, [r7, #20]
 8005670:	2b02      	cmp	r3, #2
 8005672:	f200 80a1 	bhi.w	80057b8 <HAL_RCC_GetSysClockFreq+0x248>
 8005676:	697b      	ldr	r3, [r7, #20]
 8005678:	2b00      	cmp	r3, #0
 800567a:	d003      	beq.n	8005684 <HAL_RCC_GetSysClockFreq+0x114>
 800567c:	697b      	ldr	r3, [r7, #20]
 800567e:	2b01      	cmp	r3, #1
 8005680:	d056      	beq.n	8005730 <HAL_RCC_GetSysClockFreq+0x1c0>
 8005682:	e099      	b.n	80057b8 <HAL_RCC_GetSysClockFreq+0x248>
 8005684:	4b6f      	ldr	r3, [pc, #444]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8005686:	681b      	ldr	r3, [r3, #0]
 8005688:	f003 0320 	and.w	r3, r3, #32
 800568c:	2b00      	cmp	r3, #0
 800568e:	d02d      	beq.n	80056ec <HAL_RCC_GetSysClockFreq+0x17c>
 8005690:	4b6c      	ldr	r3, [pc, #432]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8005692:	681b      	ldr	r3, [r3, #0]
 8005694:	08db      	lsrs	r3, r3, #3
 8005696:	f003 0303 	and.w	r3, r3, #3
 800569a:	4a6b      	ldr	r2, [pc, #428]	@ (8005848 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800569c:	fa22 f303 	lsr.w	r3, r2, r3
 80056a0:	607b      	str	r3, [r7, #4]
 80056a2:	687b      	ldr	r3, [r7, #4]
 80056a4:	ee07 3a90 	vmov	s15, r3
 80056a8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80056ac:	693b      	ldr	r3, [r7, #16]
 80056ae:	ee07 3a90 	vmov	s15, r3
 80056b2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80056b6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80056ba:	4b62      	ldr	r3, [pc, #392]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80056bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80056be:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80056c2:	ee07 3a90 	vmov	s15, r3
 80056c6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80056ca:	ed97 6a02 	vldr	s12, [r7, #8]
 80056ce:	eddf 5a61 	vldr	s11, [pc, #388]	@ 8005854 <HAL_RCC_GetSysClockFreq+0x2e4>
 80056d2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80056d6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80056da:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80056de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80056e2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80056e6:	edc7 7a07 	vstr	s15, [r7, #28]
 80056ea:	e087      	b.n	80057fc <HAL_RCC_GetSysClockFreq+0x28c>
 80056ec:	693b      	ldr	r3, [r7, #16]
 80056ee:	ee07 3a90 	vmov	s15, r3
 80056f2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80056f6:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8005858 <HAL_RCC_GetSysClockFreq+0x2e8>
 80056fa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80056fe:	4b51      	ldr	r3, [pc, #324]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8005700:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005702:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005706:	ee07 3a90 	vmov	s15, r3
 800570a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800570e:	ed97 6a02 	vldr	s12, [r7, #8]
 8005712:	eddf 5a50 	vldr	s11, [pc, #320]	@ 8005854 <HAL_RCC_GetSysClockFreq+0x2e4>
 8005716:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800571a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800571e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8005722:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005726:	ee67 7a27 	vmul.f32	s15, s14, s15
 800572a:	edc7 7a07 	vstr	s15, [r7, #28]
 800572e:	e065      	b.n	80057fc <HAL_RCC_GetSysClockFreq+0x28c>
 8005730:	693b      	ldr	r3, [r7, #16]
 8005732:	ee07 3a90 	vmov	s15, r3
 8005736:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800573a:	eddf 6a48 	vldr	s13, [pc, #288]	@ 800585c <HAL_RCC_GetSysClockFreq+0x2ec>
 800573e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8005742:	4b40      	ldr	r3, [pc, #256]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8005744:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005746:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800574a:	ee07 3a90 	vmov	s15, r3
 800574e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8005752:	ed97 6a02 	vldr	s12, [r7, #8]
 8005756:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8005854 <HAL_RCC_GetSysClockFreq+0x2e4>
 800575a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800575e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8005762:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8005766:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800576a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800576e:	edc7 7a07 	vstr	s15, [r7, #28]
 8005772:	e043      	b.n	80057fc <HAL_RCC_GetSysClockFreq+0x28c>
 8005774:	693b      	ldr	r3, [r7, #16]
 8005776:	ee07 3a90 	vmov	s15, r3
 800577a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800577e:	eddf 6a38 	vldr	s13, [pc, #224]	@ 8005860 <HAL_RCC_GetSysClockFreq+0x2f0>
 8005782:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8005786:	4b2f      	ldr	r3, [pc, #188]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8005788:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800578a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800578e:	ee07 3a90 	vmov	s15, r3
 8005792:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8005796:	ed97 6a02 	vldr	s12, [r7, #8]
 800579a:	eddf 5a2e 	vldr	s11, [pc, #184]	@ 8005854 <HAL_RCC_GetSysClockFreq+0x2e4>
 800579e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80057a2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80057a6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80057aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80057ae:	ee67 7a27 	vmul.f32	s15, s14, s15
 80057b2:	edc7 7a07 	vstr	s15, [r7, #28]
 80057b6:	e021      	b.n	80057fc <HAL_RCC_GetSysClockFreq+0x28c>
 80057b8:	693b      	ldr	r3, [r7, #16]
 80057ba:	ee07 3a90 	vmov	s15, r3
 80057be:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80057c2:	eddf 6a26 	vldr	s13, [pc, #152]	@ 800585c <HAL_RCC_GetSysClockFreq+0x2ec>
 80057c6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80057ca:	4b1e      	ldr	r3, [pc, #120]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80057cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80057ce:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80057d2:	ee07 3a90 	vmov	s15, r3
 80057d6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80057da:	ed97 6a02 	vldr	s12, [r7, #8]
 80057de:	eddf 5a1d 	vldr	s11, [pc, #116]	@ 8005854 <HAL_RCC_GetSysClockFreq+0x2e4>
 80057e2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80057e6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80057ea:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80057ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80057f2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80057f6:	edc7 7a07 	vstr	s15, [r7, #28]
 80057fa:	bf00      	nop
 80057fc:	4b11      	ldr	r3, [pc, #68]	@ (8005844 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80057fe:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005800:	0a5b      	lsrs	r3, r3, #9
 8005802:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8005806:	3301      	adds	r3, #1
 8005808:	603b      	str	r3, [r7, #0]
 800580a:	683b      	ldr	r3, [r7, #0]
 800580c:	ee07 3a90 	vmov	s15, r3
 8005810:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8005814:	edd7 6a07 	vldr	s13, [r7, #28]
 8005818:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800581c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8005820:	ee17 3a90 	vmov	r3, s15
 8005824:	61bb      	str	r3, [r7, #24]
 8005826:	e005      	b.n	8005834 <HAL_RCC_GetSysClockFreq+0x2c4>
 8005828:	2300      	movs	r3, #0
 800582a:	61bb      	str	r3, [r7, #24]
 800582c:	e002      	b.n	8005834 <HAL_RCC_GetSysClockFreq+0x2c4>
 800582e:	4b07      	ldr	r3, [pc, #28]	@ (800584c <HAL_RCC_GetSysClockFreq+0x2dc>)
 8005830:	61bb      	str	r3, [r7, #24]
 8005832:	bf00      	nop
 8005834:	69bb      	ldr	r3, [r7, #24]
 8005836:	4618      	mov	r0, r3
 8005838:	3724      	adds	r7, #36	@ 0x24
 800583a:	46bd      	mov	sp, r7
 800583c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005840:	4770      	bx	lr
 8005842:	bf00      	nop
 8005844:	58024400 	.word	0x58024400
 8005848:	03d09000 	.word	0x03d09000
 800584c:	003d0900 	.word	0x003d0900
 8005850:	017d7840 	.word	0x017d7840
 8005854:	46000000 	.word	0x46000000
 8005858:	4c742400 	.word	0x4c742400
 800585c:	4a742400 	.word	0x4a742400
 8005860:	4bbebc20 	.word	0x4bbebc20

08005864 <HAL_RCC_GetHCLKFreq>:
 8005864:	b580      	push	{r7, lr}
 8005866:	b082      	sub	sp, #8
 8005868:	af00      	add	r7, sp, #0
 800586a:	f7ff fe81 	bl	8005570 <HAL_RCC_GetSysClockFreq>
 800586e:	4602      	mov	r2, r0
 8005870:	4b10      	ldr	r3, [pc, #64]	@ (80058b4 <HAL_RCC_GetHCLKFreq+0x50>)
 8005872:	699b      	ldr	r3, [r3, #24]
 8005874:	0a1b      	lsrs	r3, r3, #8
 8005876:	f003 030f 	and.w	r3, r3, #15
 800587a:	490f      	ldr	r1, [pc, #60]	@ (80058b8 <HAL_RCC_GetHCLKFreq+0x54>)
 800587c:	5ccb      	ldrb	r3, [r1, r3]
 800587e:	f003 031f 	and.w	r3, r3, #31
 8005882:	fa22 f303 	lsr.w	r3, r2, r3
 8005886:	607b      	str	r3, [r7, #4]
 8005888:	4b0a      	ldr	r3, [pc, #40]	@ (80058b4 <HAL_RCC_GetHCLKFreq+0x50>)
 800588a:	699b      	ldr	r3, [r3, #24]
 800588c:	f003 030f 	and.w	r3, r3, #15
 8005890:	4a09      	ldr	r2, [pc, #36]	@ (80058b8 <HAL_RCC_GetHCLKFreq+0x54>)
 8005892:	5cd3      	ldrb	r3, [r2, r3]
 8005894:	f003 031f 	and.w	r3, r3, #31
 8005898:	687a      	ldr	r2, [r7, #4]
 800589a:	fa22 f303 	lsr.w	r3, r2, r3
 800589e:	4a07      	ldr	r2, [pc, #28]	@ (80058bc <HAL_RCC_GetHCLKFreq+0x58>)
 80058a0:	6013      	str	r3, [r2, #0]
 80058a2:	4a07      	ldr	r2, [pc, #28]	@ (80058c0 <HAL_RCC_GetHCLKFreq+0x5c>)
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	6013      	str	r3, [r2, #0]
 80058a8:	4b04      	ldr	r3, [pc, #16]	@ (80058bc <HAL_RCC_GetHCLKFreq+0x58>)
 80058aa:	681b      	ldr	r3, [r3, #0]
 80058ac:	4618      	mov	r0, r3
 80058ae:	3708      	adds	r7, #8
 80058b0:	46bd      	mov	sp, r7
 80058b2:	bd80      	pop	{r7, pc}
 80058b4:	58024400 	.word	0x58024400
 80058b8:	0800dc30 	.word	0x0800dc30
 80058bc:	24000008 	.word	0x24000008
 80058c0:	24000004 	.word	0x24000004

080058c4 <HAL_RCC_GetPCLK1Freq>:
 80058c4:	b580      	push	{r7, lr}
 80058c6:	af00      	add	r7, sp, #0
 80058c8:	f7ff ffcc 	bl	8005864 <HAL_RCC_GetHCLKFreq>
 80058cc:	4602      	mov	r2, r0
 80058ce:	4b06      	ldr	r3, [pc, #24]	@ (80058e8 <HAL_RCC_GetPCLK1Freq+0x24>)
 80058d0:	69db      	ldr	r3, [r3, #28]
 80058d2:	091b      	lsrs	r3, r3, #4
 80058d4:	f003 0307 	and.w	r3, r3, #7
 80058d8:	4904      	ldr	r1, [pc, #16]	@ (80058ec <HAL_RCC_GetPCLK1Freq+0x28>)
 80058da:	5ccb      	ldrb	r3, [r1, r3]
 80058dc:	f003 031f 	and.w	r3, r3, #31
 80058e0:	fa22 f303 	lsr.w	r3, r2, r3
 80058e4:	4618      	mov	r0, r3
 80058e6:	bd80      	pop	{r7, pc}
 80058e8:	58024400 	.word	0x58024400
 80058ec:	0800dc30 	.word	0x0800dc30

080058f0 <HAL_RCC_GetPCLK2Freq>:
 80058f0:	b580      	push	{r7, lr}
 80058f2:	af00      	add	r7, sp, #0
 80058f4:	f7ff ffb6 	bl	8005864 <HAL_RCC_GetHCLKFreq>
 80058f8:	4602      	mov	r2, r0
 80058fa:	4b06      	ldr	r3, [pc, #24]	@ (8005914 <HAL_RCC_GetPCLK2Freq+0x24>)
 80058fc:	69db      	ldr	r3, [r3, #28]
 80058fe:	0a1b      	lsrs	r3, r3, #8
 8005900:	f003 0307 	and.w	r3, r3, #7
 8005904:	4904      	ldr	r1, [pc, #16]	@ (8005918 <HAL_RCC_GetPCLK2Freq+0x28>)
 8005906:	5ccb      	ldrb	r3, [r1, r3]
 8005908:	f003 031f 	and.w	r3, r3, #31
 800590c:	fa22 f303 	lsr.w	r3, r2, r3
 8005910:	4618      	mov	r0, r3
 8005912:	bd80      	pop	{r7, pc}
 8005914:	58024400 	.word	0x58024400
 8005918:	0800dc30 	.word	0x0800dc30

0800591c <HAL_RCCEx_PeriphCLKConfig>:
 800591c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005920:	b0c6      	sub	sp, #280	@ 0x118
 8005922:	af00      	add	r7, sp, #0
 8005924:	f8c7 0104 	str.w	r0, [r7, #260]	@ 0x104
 8005928:	2300      	movs	r3, #0
 800592a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800592e:	2300      	movs	r3, #0
 8005930:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8005934:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005938:	e9d3 2300 	ldrd	r2, r3, [r3]
 800593c:	f002 6400 	and.w	r4, r2, #134217728	@ 0x8000000
 8005940:	2500      	movs	r5, #0
 8005942:	ea54 0305 	orrs.w	r3, r4, r5
 8005946:	d049      	beq.n	80059dc <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8005948:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800594c:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800594e:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8005952:	d02f      	beq.n	80059b4 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8005954:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8005958:	d828      	bhi.n	80059ac <HAL_RCCEx_PeriphCLKConfig+0x90>
 800595a:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800595e:	d01a      	beq.n	8005996 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 8005960:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8005964:	d822      	bhi.n	80059ac <HAL_RCCEx_PeriphCLKConfig+0x90>
 8005966:	2b00      	cmp	r3, #0
 8005968:	d003      	beq.n	8005972 <HAL_RCCEx_PeriphCLKConfig+0x56>
 800596a:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800596e:	d007      	beq.n	8005980 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8005970:	e01c      	b.n	80059ac <HAL_RCCEx_PeriphCLKConfig+0x90>
 8005972:	4bab      	ldr	r3, [pc, #684]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005974:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005976:	4aaa      	ldr	r2, [pc, #680]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005978:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800597c:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800597e:	e01a      	b.n	80059b6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8005980:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005984:	3308      	adds	r3, #8
 8005986:	2102      	movs	r1, #2
 8005988:	4618      	mov	r0, r3
 800598a:	f001 fc25 	bl	80071d8 <RCCEx_PLL2_Config>
 800598e:	4603      	mov	r3, r0
 8005990:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005994:	e00f      	b.n	80059b6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8005996:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800599a:	3328      	adds	r3, #40	@ 0x28
 800599c:	2102      	movs	r1, #2
 800599e:	4618      	mov	r0, r3
 80059a0:	f001 fccc 	bl	800733c <RCCEx_PLL3_Config>
 80059a4:	4603      	mov	r3, r0
 80059a6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80059aa:	e004      	b.n	80059b6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80059ac:	2301      	movs	r3, #1
 80059ae:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80059b2:	e000      	b.n	80059b6 <HAL_RCCEx_PeriphCLKConfig+0x9a>
 80059b4:	bf00      	nop
 80059b6:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80059ba:	2b00      	cmp	r3, #0
 80059bc:	d10a      	bne.n	80059d4 <HAL_RCCEx_PeriphCLKConfig+0xb8>
 80059be:	4b98      	ldr	r3, [pc, #608]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80059c0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80059c2:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 80059c6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80059ca:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80059cc:	4a94      	ldr	r2, [pc, #592]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80059ce:	430b      	orrs	r3, r1
 80059d0:	6513      	str	r3, [r2, #80]	@ 0x50
 80059d2:	e003      	b.n	80059dc <HAL_RCCEx_PeriphCLKConfig+0xc0>
 80059d4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80059d8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 80059dc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80059e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80059e4:	f402 7880 	and.w	r8, r2, #256	@ 0x100
 80059e8:	f04f 0900 	mov.w	r9, #0
 80059ec:	ea58 0309 	orrs.w	r3, r8, r9
 80059f0:	d047      	beq.n	8005a82 <HAL_RCCEx_PeriphCLKConfig+0x166>
 80059f2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80059f6:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80059f8:	2b04      	cmp	r3, #4
 80059fa:	d82a      	bhi.n	8005a52 <HAL_RCCEx_PeriphCLKConfig+0x136>
 80059fc:	a201      	add	r2, pc, #4	@ (adr r2, 8005a04 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 80059fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005a02:	bf00      	nop
 8005a04:	08005a19 	.word	0x08005a19
 8005a08:	08005a27 	.word	0x08005a27
 8005a0c:	08005a3d 	.word	0x08005a3d
 8005a10:	08005a5b 	.word	0x08005a5b
 8005a14:	08005a5b 	.word	0x08005a5b
 8005a18:	4b81      	ldr	r3, [pc, #516]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005a1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005a1c:	4a80      	ldr	r2, [pc, #512]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005a1e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005a22:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005a24:	e01a      	b.n	8005a5c <HAL_RCCEx_PeriphCLKConfig+0x140>
 8005a26:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005a2a:	3308      	adds	r3, #8
 8005a2c:	2100      	movs	r1, #0
 8005a2e:	4618      	mov	r0, r3
 8005a30:	f001 fbd2 	bl	80071d8 <RCCEx_PLL2_Config>
 8005a34:	4603      	mov	r3, r0
 8005a36:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005a3a:	e00f      	b.n	8005a5c <HAL_RCCEx_PeriphCLKConfig+0x140>
 8005a3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005a40:	3328      	adds	r3, #40	@ 0x28
 8005a42:	2100      	movs	r1, #0
 8005a44:	4618      	mov	r0, r3
 8005a46:	f001 fc79 	bl	800733c <RCCEx_PLL3_Config>
 8005a4a:	4603      	mov	r3, r0
 8005a4c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005a50:	e004      	b.n	8005a5c <HAL_RCCEx_PeriphCLKConfig+0x140>
 8005a52:	2301      	movs	r3, #1
 8005a54:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005a58:	e000      	b.n	8005a5c <HAL_RCCEx_PeriphCLKConfig+0x140>
 8005a5a:	bf00      	nop
 8005a5c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005a60:	2b00      	cmp	r3, #0
 8005a62:	d10a      	bne.n	8005a7a <HAL_RCCEx_PeriphCLKConfig+0x15e>
 8005a64:	4b6e      	ldr	r3, [pc, #440]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005a66:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005a68:	f023 0107 	bic.w	r1, r3, #7
 8005a6c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005a70:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005a72:	4a6b      	ldr	r2, [pc, #428]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005a74:	430b      	orrs	r3, r1
 8005a76:	6513      	str	r3, [r2, #80]	@ 0x50
 8005a78:	e003      	b.n	8005a82 <HAL_RCCEx_PeriphCLKConfig+0x166>
 8005a7a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005a7e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8005a82:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005a86:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005a8a:	f402 6a80 	and.w	sl, r2, #1024	@ 0x400
 8005a8e:	f04f 0b00 	mov.w	fp, #0
 8005a92:	ea5a 030b 	orrs.w	r3, sl, fp
 8005a96:	d05b      	beq.n	8005b50 <HAL_RCCEx_PeriphCLKConfig+0x234>
 8005a98:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005a9c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8005aa0:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 8005aa4:	d03b      	beq.n	8005b1e <HAL_RCCEx_PeriphCLKConfig+0x202>
 8005aa6:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 8005aaa:	d834      	bhi.n	8005b16 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8005aac:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8005ab0:	d037      	beq.n	8005b22 <HAL_RCCEx_PeriphCLKConfig+0x206>
 8005ab2:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8005ab6:	d82e      	bhi.n	8005b16 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8005ab8:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8005abc:	d033      	beq.n	8005b26 <HAL_RCCEx_PeriphCLKConfig+0x20a>
 8005abe:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8005ac2:	d828      	bhi.n	8005b16 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8005ac4:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005ac8:	d01a      	beq.n	8005b00 <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 8005aca:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005ace:	d822      	bhi.n	8005b16 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8005ad0:	2b00      	cmp	r3, #0
 8005ad2:	d003      	beq.n	8005adc <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 8005ad4:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8005ad8:	d007      	beq.n	8005aea <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 8005ada:	e01c      	b.n	8005b16 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8005adc:	4b50      	ldr	r3, [pc, #320]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005ade:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005ae0:	4a4f      	ldr	r2, [pc, #316]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005ae2:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005ae6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005ae8:	e01e      	b.n	8005b28 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 8005aea:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005aee:	3308      	adds	r3, #8
 8005af0:	2100      	movs	r1, #0
 8005af2:	4618      	mov	r0, r3
 8005af4:	f001 fb70 	bl	80071d8 <RCCEx_PLL2_Config>
 8005af8:	4603      	mov	r3, r0
 8005afa:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005afe:	e013      	b.n	8005b28 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 8005b00:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005b04:	3328      	adds	r3, #40	@ 0x28
 8005b06:	2100      	movs	r1, #0
 8005b08:	4618      	mov	r0, r3
 8005b0a:	f001 fc17 	bl	800733c <RCCEx_PLL3_Config>
 8005b0e:	4603      	mov	r3, r0
 8005b10:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005b14:	e008      	b.n	8005b28 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 8005b16:	2301      	movs	r3, #1
 8005b18:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005b1c:	e004      	b.n	8005b28 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 8005b1e:	bf00      	nop
 8005b20:	e002      	b.n	8005b28 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 8005b22:	bf00      	nop
 8005b24:	e000      	b.n	8005b28 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 8005b26:	bf00      	nop
 8005b28:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005b2c:	2b00      	cmp	r3, #0
 8005b2e:	d10b      	bne.n	8005b48 <HAL_RCCEx_PeriphCLKConfig+0x22c>
 8005b30:	4b3b      	ldr	r3, [pc, #236]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005b32:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005b34:	f423 0160 	bic.w	r1, r3, #14680064	@ 0xe00000
 8005b38:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005b3c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8005b40:	4a37      	ldr	r2, [pc, #220]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005b42:	430b      	orrs	r3, r1
 8005b44:	6593      	str	r3, [r2, #88]	@ 0x58
 8005b46:	e003      	b.n	8005b50 <HAL_RCCEx_PeriphCLKConfig+0x234>
 8005b48:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005b4c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8005b50:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005b54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005b58:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 8005b5c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005b60:	2300      	movs	r3, #0
 8005b62:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 8005b66:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 8005b6a:	460b      	mov	r3, r1
 8005b6c:	4313      	orrs	r3, r2
 8005b6e:	d05d      	beq.n	8005c2c <HAL_RCCEx_PeriphCLKConfig+0x310>
 8005b70:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005b74:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8005b78:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8005b7c:	d03b      	beq.n	8005bf6 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8005b7e:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8005b82:	d834      	bhi.n	8005bee <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8005b84:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8005b88:	d037      	beq.n	8005bfa <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8005b8a:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8005b8e:	d82e      	bhi.n	8005bee <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8005b90:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8005b94:	d033      	beq.n	8005bfe <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8005b96:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8005b9a:	d828      	bhi.n	8005bee <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8005b9c:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8005ba0:	d01a      	beq.n	8005bd8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 8005ba2:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8005ba6:	d822      	bhi.n	8005bee <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8005ba8:	2b00      	cmp	r3, #0
 8005baa:	d003      	beq.n	8005bb4 <HAL_RCCEx_PeriphCLKConfig+0x298>
 8005bac:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8005bb0:	d007      	beq.n	8005bc2 <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 8005bb2:	e01c      	b.n	8005bee <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8005bb4:	4b1a      	ldr	r3, [pc, #104]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005bb6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005bb8:	4a19      	ldr	r2, [pc, #100]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005bba:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005bbe:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005bc0:	e01e      	b.n	8005c00 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8005bc2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005bc6:	3308      	adds	r3, #8
 8005bc8:	2100      	movs	r1, #0
 8005bca:	4618      	mov	r0, r3
 8005bcc:	f001 fb04 	bl	80071d8 <RCCEx_PLL2_Config>
 8005bd0:	4603      	mov	r3, r0
 8005bd2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005bd6:	e013      	b.n	8005c00 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8005bd8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005bdc:	3328      	adds	r3, #40	@ 0x28
 8005bde:	2100      	movs	r1, #0
 8005be0:	4618      	mov	r0, r3
 8005be2:	f001 fbab 	bl	800733c <RCCEx_PLL3_Config>
 8005be6:	4603      	mov	r3, r0
 8005be8:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005bec:	e008      	b.n	8005c00 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8005bee:	2301      	movs	r3, #1
 8005bf0:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005bf4:	e004      	b.n	8005c00 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8005bf6:	bf00      	nop
 8005bf8:	e002      	b.n	8005c00 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8005bfa:	bf00      	nop
 8005bfc:	e000      	b.n	8005c00 <HAL_RCCEx_PeriphCLKConfig+0x2e4>
 8005bfe:	bf00      	nop
 8005c00:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005c04:	2b00      	cmp	r3, #0
 8005c06:	d10d      	bne.n	8005c24 <HAL_RCCEx_PeriphCLKConfig+0x308>
 8005c08:	4b05      	ldr	r3, [pc, #20]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005c0a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005c0c:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 8005c10:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005c14:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8005c18:	4a01      	ldr	r2, [pc, #4]	@ (8005c20 <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8005c1a:	430b      	orrs	r3, r1
 8005c1c:	6593      	str	r3, [r2, #88]	@ 0x58
 8005c1e:	e005      	b.n	8005c2c <HAL_RCCEx_PeriphCLKConfig+0x310>
 8005c20:	58024400 	.word	0x58024400
 8005c24:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005c28:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8005c2c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005c30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005c34:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 8005c38:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8005c3c:	2300      	movs	r3, #0
 8005c3e:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8005c42:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 8005c46:	460b      	mov	r3, r1
 8005c48:	4313      	orrs	r3, r2
 8005c4a:	d03a      	beq.n	8005cc2 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
 8005c4c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005c50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005c52:	2b30      	cmp	r3, #48	@ 0x30
 8005c54:	d01f      	beq.n	8005c96 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8005c56:	2b30      	cmp	r3, #48	@ 0x30
 8005c58:	d819      	bhi.n	8005c8e <HAL_RCCEx_PeriphCLKConfig+0x372>
 8005c5a:	2b20      	cmp	r3, #32
 8005c5c:	d00c      	beq.n	8005c78 <HAL_RCCEx_PeriphCLKConfig+0x35c>
 8005c5e:	2b20      	cmp	r3, #32
 8005c60:	d815      	bhi.n	8005c8e <HAL_RCCEx_PeriphCLKConfig+0x372>
 8005c62:	2b00      	cmp	r3, #0
 8005c64:	d019      	beq.n	8005c9a <HAL_RCCEx_PeriphCLKConfig+0x37e>
 8005c66:	2b10      	cmp	r3, #16
 8005c68:	d111      	bne.n	8005c8e <HAL_RCCEx_PeriphCLKConfig+0x372>
 8005c6a:	4baa      	ldr	r3, [pc, #680]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005c6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005c6e:	4aa9      	ldr	r2, [pc, #676]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005c70:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005c74:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005c76:	e011      	b.n	8005c9c <HAL_RCCEx_PeriphCLKConfig+0x380>
 8005c78:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005c7c:	3308      	adds	r3, #8
 8005c7e:	2102      	movs	r1, #2
 8005c80:	4618      	mov	r0, r3
 8005c82:	f001 faa9 	bl	80071d8 <RCCEx_PLL2_Config>
 8005c86:	4603      	mov	r3, r0
 8005c88:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005c8c:	e006      	b.n	8005c9c <HAL_RCCEx_PeriphCLKConfig+0x380>
 8005c8e:	2301      	movs	r3, #1
 8005c90:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005c94:	e002      	b.n	8005c9c <HAL_RCCEx_PeriphCLKConfig+0x380>
 8005c96:	bf00      	nop
 8005c98:	e000      	b.n	8005c9c <HAL_RCCEx_PeriphCLKConfig+0x380>
 8005c9a:	bf00      	nop
 8005c9c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005ca0:	2b00      	cmp	r3, #0
 8005ca2:	d10a      	bne.n	8005cba <HAL_RCCEx_PeriphCLKConfig+0x39e>
 8005ca4:	4b9b      	ldr	r3, [pc, #620]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005ca6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005ca8:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 8005cac:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005cb0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005cb2:	4a98      	ldr	r2, [pc, #608]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005cb4:	430b      	orrs	r3, r1
 8005cb6:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8005cb8:	e003      	b.n	8005cc2 <HAL_RCCEx_PeriphCLKConfig+0x3a6>
 8005cba:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005cbe:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8005cc2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005cc6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005cca:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 8005cce:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8005cd2:	2300      	movs	r3, #0
 8005cd4:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8005cd8:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 8005cdc:	460b      	mov	r3, r1
 8005cde:	4313      	orrs	r3, r2
 8005ce0:	d051      	beq.n	8005d86 <HAL_RCCEx_PeriphCLKConfig+0x46a>
 8005ce2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005ce6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005ce8:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005cec:	d035      	beq.n	8005d5a <HAL_RCCEx_PeriphCLKConfig+0x43e>
 8005cee:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8005cf2:	d82e      	bhi.n	8005d52 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8005cf4:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8005cf8:	d031      	beq.n	8005d5e <HAL_RCCEx_PeriphCLKConfig+0x442>
 8005cfa:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8005cfe:	d828      	bhi.n	8005d52 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8005d00:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005d04:	d01a      	beq.n	8005d3c <HAL_RCCEx_PeriphCLKConfig+0x420>
 8005d06:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8005d0a:	d822      	bhi.n	8005d52 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8005d0c:	2b00      	cmp	r3, #0
 8005d0e:	d003      	beq.n	8005d18 <HAL_RCCEx_PeriphCLKConfig+0x3fc>
 8005d10:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8005d14:	d007      	beq.n	8005d26 <HAL_RCCEx_PeriphCLKConfig+0x40a>
 8005d16:	e01c      	b.n	8005d52 <HAL_RCCEx_PeriphCLKConfig+0x436>
 8005d18:	4b7e      	ldr	r3, [pc, #504]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005d1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005d1c:	4a7d      	ldr	r2, [pc, #500]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005d1e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005d22:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005d24:	e01c      	b.n	8005d60 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8005d26:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005d2a:	3308      	adds	r3, #8
 8005d2c:	2100      	movs	r1, #0
 8005d2e:	4618      	mov	r0, r3
 8005d30:	f001 fa52 	bl	80071d8 <RCCEx_PLL2_Config>
 8005d34:	4603      	mov	r3, r0
 8005d36:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005d3a:	e011      	b.n	8005d60 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8005d3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005d40:	3328      	adds	r3, #40	@ 0x28
 8005d42:	2100      	movs	r1, #0
 8005d44:	4618      	mov	r0, r3
 8005d46:	f001 faf9 	bl	800733c <RCCEx_PLL3_Config>
 8005d4a:	4603      	mov	r3, r0
 8005d4c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005d50:	e006      	b.n	8005d60 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8005d52:	2301      	movs	r3, #1
 8005d54:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005d58:	e002      	b.n	8005d60 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8005d5a:	bf00      	nop
 8005d5c:	e000      	b.n	8005d60 <HAL_RCCEx_PeriphCLKConfig+0x444>
 8005d5e:	bf00      	nop
 8005d60:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005d64:	2b00      	cmp	r3, #0
 8005d66:	d10a      	bne.n	8005d7e <HAL_RCCEx_PeriphCLKConfig+0x462>
 8005d68:	4b6a      	ldr	r3, [pc, #424]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005d6a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005d6c:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 8005d70:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005d74:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8005d76:	4a67      	ldr	r2, [pc, #412]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005d78:	430b      	orrs	r3, r1
 8005d7a:	6513      	str	r3, [r2, #80]	@ 0x50
 8005d7c:	e003      	b.n	8005d86 <HAL_RCCEx_PeriphCLKConfig+0x46a>
 8005d7e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005d82:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8005d86:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005d8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d8e:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 8005d92:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8005d96:	2300      	movs	r3, #0
 8005d98:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005d9c:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 8005da0:	460b      	mov	r3, r1
 8005da2:	4313      	orrs	r3, r2
 8005da4:	d053      	beq.n	8005e4e <HAL_RCCEx_PeriphCLKConfig+0x532>
 8005da6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005daa:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005dac:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005db0:	d033      	beq.n	8005e1a <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 8005db2:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005db6:	d82c      	bhi.n	8005e12 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8005db8:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8005dbc:	d02f      	beq.n	8005e1e <HAL_RCCEx_PeriphCLKConfig+0x502>
 8005dbe:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8005dc2:	d826      	bhi.n	8005e12 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8005dc4:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8005dc8:	d02b      	beq.n	8005e22 <HAL_RCCEx_PeriphCLKConfig+0x506>
 8005dca:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8005dce:	d820      	bhi.n	8005e12 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8005dd0:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005dd4:	d012      	beq.n	8005dfc <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 8005dd6:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8005dda:	d81a      	bhi.n	8005e12 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8005ddc:	2b00      	cmp	r3, #0
 8005dde:	d022      	beq.n	8005e26 <HAL_RCCEx_PeriphCLKConfig+0x50a>
 8005de0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005de4:	d115      	bne.n	8005e12 <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8005de6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005dea:	3308      	adds	r3, #8
 8005dec:	2101      	movs	r1, #1
 8005dee:	4618      	mov	r0, r3
 8005df0:	f001 f9f2 	bl	80071d8 <RCCEx_PLL2_Config>
 8005df4:	4603      	mov	r3, r0
 8005df6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005dfa:	e015      	b.n	8005e28 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 8005dfc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005e00:	3328      	adds	r3, #40	@ 0x28
 8005e02:	2101      	movs	r1, #1
 8005e04:	4618      	mov	r0, r3
 8005e06:	f001 fa99 	bl	800733c <RCCEx_PLL3_Config>
 8005e0a:	4603      	mov	r3, r0
 8005e0c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005e10:	e00a      	b.n	8005e28 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 8005e12:	2301      	movs	r3, #1
 8005e14:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005e18:	e006      	b.n	8005e28 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 8005e1a:	bf00      	nop
 8005e1c:	e004      	b.n	8005e28 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 8005e1e:	bf00      	nop
 8005e20:	e002      	b.n	8005e28 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 8005e22:	bf00      	nop
 8005e24:	e000      	b.n	8005e28 <HAL_RCCEx_PeriphCLKConfig+0x50c>
 8005e26:	bf00      	nop
 8005e28:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	d10a      	bne.n	8005e46 <HAL_RCCEx_PeriphCLKConfig+0x52a>
 8005e30:	4b38      	ldr	r3, [pc, #224]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005e32:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005e34:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 8005e38:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005e3c:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8005e3e:	4a35      	ldr	r2, [pc, #212]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005e40:	430b      	orrs	r3, r1
 8005e42:	6513      	str	r3, [r2, #80]	@ 0x50
 8005e44:	e003      	b.n	8005e4e <HAL_RCCEx_PeriphCLKConfig+0x532>
 8005e46:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005e4a:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8005e4e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005e52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e56:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 8005e5a:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005e5e:	2300      	movs	r3, #0
 8005e60:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8005e64:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8005e68:	460b      	mov	r3, r1
 8005e6a:	4313      	orrs	r3, r2
 8005e6c:	d058      	beq.n	8005f20 <HAL_RCCEx_PeriphCLKConfig+0x604>
 8005e6e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005e72:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8005e76:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8005e7a:	d033      	beq.n	8005ee4 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8005e7c:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8005e80:	d82c      	bhi.n	8005edc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8005e82:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005e86:	d02f      	beq.n	8005ee8 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 8005e88:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005e8c:	d826      	bhi.n	8005edc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8005e8e:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8005e92:	d02b      	beq.n	8005eec <HAL_RCCEx_PeriphCLKConfig+0x5d0>
 8005e94:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8005e98:	d820      	bhi.n	8005edc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8005e9a:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8005e9e:	d012      	beq.n	8005ec6 <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 8005ea0:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8005ea4:	d81a      	bhi.n	8005edc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8005ea6:	2b00      	cmp	r3, #0
 8005ea8:	d022      	beq.n	8005ef0 <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 8005eaa:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005eae:	d115      	bne.n	8005edc <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8005eb0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005eb4:	3308      	adds	r3, #8
 8005eb6:	2101      	movs	r1, #1
 8005eb8:	4618      	mov	r0, r3
 8005eba:	f001 f98d 	bl	80071d8 <RCCEx_PLL2_Config>
 8005ebe:	4603      	mov	r3, r0
 8005ec0:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005ec4:	e015      	b.n	8005ef2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 8005ec6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005eca:	3328      	adds	r3, #40	@ 0x28
 8005ecc:	2101      	movs	r1, #1
 8005ece:	4618      	mov	r0, r3
 8005ed0:	f001 fa34 	bl	800733c <RCCEx_PLL3_Config>
 8005ed4:	4603      	mov	r3, r0
 8005ed6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005eda:	e00a      	b.n	8005ef2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 8005edc:	2301      	movs	r3, #1
 8005ede:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005ee2:	e006      	b.n	8005ef2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 8005ee4:	bf00      	nop
 8005ee6:	e004      	b.n	8005ef2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 8005ee8:	bf00      	nop
 8005eea:	e002      	b.n	8005ef2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 8005eec:	bf00      	nop
 8005eee:	e000      	b.n	8005ef2 <HAL_RCCEx_PeriphCLKConfig+0x5d6>
 8005ef0:	bf00      	nop
 8005ef2:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005ef6:	2b00      	cmp	r3, #0
 8005ef8:	d10e      	bne.n	8005f18 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
 8005efa:	4b06      	ldr	r3, [pc, #24]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005efc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005efe:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 8005f02:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005f06:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8005f0a:	4a02      	ldr	r2, [pc, #8]	@ (8005f14 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8005f0c:	430b      	orrs	r3, r1
 8005f0e:	6593      	str	r3, [r2, #88]	@ 0x58
 8005f10:	e006      	b.n	8005f20 <HAL_RCCEx_PeriphCLKConfig+0x604>
 8005f12:	bf00      	nop
 8005f14:	58024400 	.word	0x58024400
 8005f18:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005f1c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8005f20:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005f24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005f28:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 8005f2c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8005f30:	2300      	movs	r3, #0
 8005f32:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8005f36:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 8005f3a:	460b      	mov	r3, r1
 8005f3c:	4313      	orrs	r3, r2
 8005f3e:	d037      	beq.n	8005fb0 <HAL_RCCEx_PeriphCLKConfig+0x694>
 8005f40:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005f44:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8005f46:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8005f4a:	d00e      	beq.n	8005f6a <HAL_RCCEx_PeriphCLKConfig+0x64e>
 8005f4c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8005f50:	d816      	bhi.n	8005f80 <HAL_RCCEx_PeriphCLKConfig+0x664>
 8005f52:	2b00      	cmp	r3, #0
 8005f54:	d018      	beq.n	8005f88 <HAL_RCCEx_PeriphCLKConfig+0x66c>
 8005f56:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8005f5a:	d111      	bne.n	8005f80 <HAL_RCCEx_PeriphCLKConfig+0x664>
 8005f5c:	4bc4      	ldr	r3, [pc, #784]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8005f5e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005f60:	4ac3      	ldr	r2, [pc, #780]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8005f62:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005f66:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005f68:	e00f      	b.n	8005f8a <HAL_RCCEx_PeriphCLKConfig+0x66e>
 8005f6a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005f6e:	3308      	adds	r3, #8
 8005f70:	2101      	movs	r1, #1
 8005f72:	4618      	mov	r0, r3
 8005f74:	f001 f930 	bl	80071d8 <RCCEx_PLL2_Config>
 8005f78:	4603      	mov	r3, r0
 8005f7a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005f7e:	e004      	b.n	8005f8a <HAL_RCCEx_PeriphCLKConfig+0x66e>
 8005f80:	2301      	movs	r3, #1
 8005f82:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8005f86:	e000      	b.n	8005f8a <HAL_RCCEx_PeriphCLKConfig+0x66e>
 8005f88:	bf00      	nop
 8005f8a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005f8e:	2b00      	cmp	r3, #0
 8005f90:	d10a      	bne.n	8005fa8 <HAL_RCCEx_PeriphCLKConfig+0x68c>
 8005f92:	4bb7      	ldr	r3, [pc, #732]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8005f94:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005f96:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 8005f9a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005f9e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8005fa0:	4ab3      	ldr	r2, [pc, #716]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8005fa2:	430b      	orrs	r3, r1
 8005fa4:	6513      	str	r3, [r2, #80]	@ 0x50
 8005fa6:	e003      	b.n	8005fb0 <HAL_RCCEx_PeriphCLKConfig+0x694>
 8005fa8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8005fac:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8005fb0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005fb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005fb8:	f002 7380 	and.w	r3, r2, #16777216	@ 0x1000000
 8005fbc:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8005fc0:	2300      	movs	r3, #0
 8005fc2:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8005fc6:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 8005fca:	460b      	mov	r3, r1
 8005fcc:	4313      	orrs	r3, r2
 8005fce:	d039      	beq.n	8006044 <HAL_RCCEx_PeriphCLKConfig+0x728>
 8005fd0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8005fd4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005fd6:	2b03      	cmp	r3, #3
 8005fd8:	d81c      	bhi.n	8006014 <HAL_RCCEx_PeriphCLKConfig+0x6f8>
 8005fda:	a201      	add	r2, pc, #4	@ (adr r2, 8005fe0 <HAL_RCCEx_PeriphCLKConfig+0x6c4>)
 8005fdc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005fe0:	0800601d 	.word	0x0800601d
 8005fe4:	08005ff1 	.word	0x08005ff1
 8005fe8:	08005fff 	.word	0x08005fff
 8005fec:	0800601d 	.word	0x0800601d
 8005ff0:	4b9f      	ldr	r3, [pc, #636]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8005ff2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005ff4:	4a9e      	ldr	r2, [pc, #632]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8005ff6:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8005ffa:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8005ffc:	e00f      	b.n	800601e <HAL_RCCEx_PeriphCLKConfig+0x702>
 8005ffe:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006002:	3308      	adds	r3, #8
 8006004:	2102      	movs	r1, #2
 8006006:	4618      	mov	r0, r3
 8006008:	f001 f8e6 	bl	80071d8 <RCCEx_PLL2_Config>
 800600c:	4603      	mov	r3, r0
 800600e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006012:	e004      	b.n	800601e <HAL_RCCEx_PeriphCLKConfig+0x702>
 8006014:	2301      	movs	r3, #1
 8006016:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800601a:	e000      	b.n	800601e <HAL_RCCEx_PeriphCLKConfig+0x702>
 800601c:	bf00      	nop
 800601e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006022:	2b00      	cmp	r3, #0
 8006024:	d10a      	bne.n	800603c <HAL_RCCEx_PeriphCLKConfig+0x720>
 8006026:	4b92      	ldr	r3, [pc, #584]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8006028:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800602a:	f023 0103 	bic.w	r1, r3, #3
 800602e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006032:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006034:	4a8e      	ldr	r2, [pc, #568]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8006036:	430b      	orrs	r3, r1
 8006038:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800603a:	e003      	b.n	8006044 <HAL_RCCEx_PeriphCLKConfig+0x728>
 800603c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006040:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006044:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006048:	e9d3 2300 	ldrd	r2, r3, [r3]
 800604c:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 8006050:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8006054:	2300      	movs	r3, #0
 8006056:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 800605a:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 800605e:	460b      	mov	r3, r1
 8006060:	4313      	orrs	r3, r2
 8006062:	f000 8099 	beq.w	8006198 <HAL_RCCEx_PeriphCLKConfig+0x87c>
 8006066:	4b83      	ldr	r3, [pc, #524]	@ (8006274 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	4a82      	ldr	r2, [pc, #520]	@ (8006274 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 800606c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006070:	6013      	str	r3, [r2, #0]
 8006072:	f7fc fdb1 	bl	8002bd8 <HAL_GetTick>
 8006076:	f8c7 0110 	str.w	r0, [r7, #272]	@ 0x110
 800607a:	e00b      	b.n	8006094 <HAL_RCCEx_PeriphCLKConfig+0x778>
 800607c:	f7fc fdac 	bl	8002bd8 <HAL_GetTick>
 8006080:	4602      	mov	r2, r0
 8006082:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 8006086:	1ad3      	subs	r3, r2, r3
 8006088:	2b64      	cmp	r3, #100	@ 0x64
 800608a:	d903      	bls.n	8006094 <HAL_RCCEx_PeriphCLKConfig+0x778>
 800608c:	2303      	movs	r3, #3
 800608e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006092:	e005      	b.n	80060a0 <HAL_RCCEx_PeriphCLKConfig+0x784>
 8006094:	4b77      	ldr	r3, [pc, #476]	@ (8006274 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8006096:	681b      	ldr	r3, [r3, #0]
 8006098:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800609c:	2b00      	cmp	r3, #0
 800609e:	d0ed      	beq.n	800607c <HAL_RCCEx_PeriphCLKConfig+0x760>
 80060a0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80060a4:	2b00      	cmp	r3, #0
 80060a6:	d173      	bne.n	8006190 <HAL_RCCEx_PeriphCLKConfig+0x874>
 80060a8:	4b71      	ldr	r3, [pc, #452]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80060aa:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 80060ac:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80060b0:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80060b4:	4053      	eors	r3, r2
 80060b6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80060ba:	2b00      	cmp	r3, #0
 80060bc:	d015      	beq.n	80060ea <HAL_RCCEx_PeriphCLKConfig+0x7ce>
 80060be:	4b6c      	ldr	r3, [pc, #432]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80060c0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80060c2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80060c6:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
 80060ca:	4b69      	ldr	r3, [pc, #420]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80060cc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80060ce:	4a68      	ldr	r2, [pc, #416]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80060d0:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80060d4:	6713      	str	r3, [r2, #112]	@ 0x70
 80060d6:	4b66      	ldr	r3, [pc, #408]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80060d8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80060da:	4a65      	ldr	r2, [pc, #404]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80060dc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80060e0:	6713      	str	r3, [r2, #112]	@ 0x70
 80060e2:	4a63      	ldr	r2, [pc, #396]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80060e4:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 80060e8:	6713      	str	r3, [r2, #112]	@ 0x70
 80060ea:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80060ee:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80060f2:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80060f6:	d118      	bne.n	800612a <HAL_RCCEx_PeriphCLKConfig+0x80e>
 80060f8:	f7fc fd6e 	bl	8002bd8 <HAL_GetTick>
 80060fc:	f8c7 0110 	str.w	r0, [r7, #272]	@ 0x110
 8006100:	e00d      	b.n	800611e <HAL_RCCEx_PeriphCLKConfig+0x802>
 8006102:	f7fc fd69 	bl	8002bd8 <HAL_GetTick>
 8006106:	4602      	mov	r2, r0
 8006108:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 800610c:	1ad2      	subs	r2, r2, r3
 800610e:	f241 3388 	movw	r3, #5000	@ 0x1388
 8006112:	429a      	cmp	r2, r3
 8006114:	d903      	bls.n	800611e <HAL_RCCEx_PeriphCLKConfig+0x802>
 8006116:	2303      	movs	r3, #3
 8006118:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800611c:	e005      	b.n	800612a <HAL_RCCEx_PeriphCLKConfig+0x80e>
 800611e:	4b54      	ldr	r3, [pc, #336]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8006120:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006122:	f003 0302 	and.w	r3, r3, #2
 8006126:	2b00      	cmp	r3, #0
 8006128:	d0eb      	beq.n	8006102 <HAL_RCCEx_PeriphCLKConfig+0x7e6>
 800612a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800612e:	2b00      	cmp	r3, #0
 8006130:	d129      	bne.n	8006186 <HAL_RCCEx_PeriphCLKConfig+0x86a>
 8006132:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006136:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800613a:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800613e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8006142:	d10e      	bne.n	8006162 <HAL_RCCEx_PeriphCLKConfig+0x846>
 8006144:	4b4a      	ldr	r3, [pc, #296]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8006146:	691b      	ldr	r3, [r3, #16]
 8006148:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 800614c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006150:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8006154:	091a      	lsrs	r2, r3, #4
 8006156:	4b48      	ldr	r3, [pc, #288]	@ (8006278 <HAL_RCCEx_PeriphCLKConfig+0x95c>)
 8006158:	4013      	ands	r3, r2
 800615a:	4a45      	ldr	r2, [pc, #276]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800615c:	430b      	orrs	r3, r1
 800615e:	6113      	str	r3, [r2, #16]
 8006160:	e005      	b.n	800616e <HAL_RCCEx_PeriphCLKConfig+0x852>
 8006162:	4b43      	ldr	r3, [pc, #268]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8006164:	691b      	ldr	r3, [r3, #16]
 8006166:	4a42      	ldr	r2, [pc, #264]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8006168:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 800616c:	6113      	str	r3, [r2, #16]
 800616e:	4b40      	ldr	r3, [pc, #256]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8006170:	6f19      	ldr	r1, [r3, #112]	@ 0x70
 8006172:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006176:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800617a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800617e:	4a3c      	ldr	r2, [pc, #240]	@ (8006270 <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8006180:	430b      	orrs	r3, r1
 8006182:	6713      	str	r3, [r2, #112]	@ 0x70
 8006184:	e008      	b.n	8006198 <HAL_RCCEx_PeriphCLKConfig+0x87c>
 8006186:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800618a:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800618e:	e003      	b.n	8006198 <HAL_RCCEx_PeriphCLKConfig+0x87c>
 8006190:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006194:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006198:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800619c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80061a0:	f002 0301 	and.w	r3, r2, #1
 80061a4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80061a8:	2300      	movs	r3, #0
 80061aa:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 80061ae:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 80061b2:	460b      	mov	r3, r1
 80061b4:	4313      	orrs	r3, r2
 80061b6:	f000 808f 	beq.w	80062d8 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
 80061ba:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80061be:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80061c0:	2b28      	cmp	r3, #40	@ 0x28
 80061c2:	d871      	bhi.n	80062a8 <HAL_RCCEx_PeriphCLKConfig+0x98c>
 80061c4:	a201      	add	r2, pc, #4	@ (adr r2, 80061cc <HAL_RCCEx_PeriphCLKConfig+0x8b0>)
 80061c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80061ca:	bf00      	nop
 80061cc:	080062b1 	.word	0x080062b1
 80061d0:	080062a9 	.word	0x080062a9
 80061d4:	080062a9 	.word	0x080062a9
 80061d8:	080062a9 	.word	0x080062a9
 80061dc:	080062a9 	.word	0x080062a9
 80061e0:	080062a9 	.word	0x080062a9
 80061e4:	080062a9 	.word	0x080062a9
 80061e8:	080062a9 	.word	0x080062a9
 80061ec:	0800627d 	.word	0x0800627d
 80061f0:	080062a9 	.word	0x080062a9
 80061f4:	080062a9 	.word	0x080062a9
 80061f8:	080062a9 	.word	0x080062a9
 80061fc:	080062a9 	.word	0x080062a9
 8006200:	080062a9 	.word	0x080062a9
 8006204:	080062a9 	.word	0x080062a9
 8006208:	080062a9 	.word	0x080062a9
 800620c:	08006293 	.word	0x08006293
 8006210:	080062a9 	.word	0x080062a9
 8006214:	080062a9 	.word	0x080062a9
 8006218:	080062a9 	.word	0x080062a9
 800621c:	080062a9 	.word	0x080062a9
 8006220:	080062a9 	.word	0x080062a9
 8006224:	080062a9 	.word	0x080062a9
 8006228:	080062a9 	.word	0x080062a9
 800622c:	080062b1 	.word	0x080062b1
 8006230:	080062a9 	.word	0x080062a9
 8006234:	080062a9 	.word	0x080062a9
 8006238:	080062a9 	.word	0x080062a9
 800623c:	080062a9 	.word	0x080062a9
 8006240:	080062a9 	.word	0x080062a9
 8006244:	080062a9 	.word	0x080062a9
 8006248:	080062a9 	.word	0x080062a9
 800624c:	080062b1 	.word	0x080062b1
 8006250:	080062a9 	.word	0x080062a9
 8006254:	080062a9 	.word	0x080062a9
 8006258:	080062a9 	.word	0x080062a9
 800625c:	080062a9 	.word	0x080062a9
 8006260:	080062a9 	.word	0x080062a9
 8006264:	080062a9 	.word	0x080062a9
 8006268:	080062a9 	.word	0x080062a9
 800626c:	080062b1 	.word	0x080062b1
 8006270:	58024400 	.word	0x58024400
 8006274:	58024800 	.word	0x58024800
 8006278:	00ffffcf 	.word	0x00ffffcf
 800627c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006280:	3308      	adds	r3, #8
 8006282:	2101      	movs	r1, #1
 8006284:	4618      	mov	r0, r3
 8006286:	f000 ffa7 	bl	80071d8 <RCCEx_PLL2_Config>
 800628a:	4603      	mov	r3, r0
 800628c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006290:	e00f      	b.n	80062b2 <HAL_RCCEx_PeriphCLKConfig+0x996>
 8006292:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006296:	3328      	adds	r3, #40	@ 0x28
 8006298:	2101      	movs	r1, #1
 800629a:	4618      	mov	r0, r3
 800629c:	f001 f84e 	bl	800733c <RCCEx_PLL3_Config>
 80062a0:	4603      	mov	r3, r0
 80062a2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80062a6:	e004      	b.n	80062b2 <HAL_RCCEx_PeriphCLKConfig+0x996>
 80062a8:	2301      	movs	r3, #1
 80062aa:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80062ae:	e000      	b.n	80062b2 <HAL_RCCEx_PeriphCLKConfig+0x996>
 80062b0:	bf00      	nop
 80062b2:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80062b6:	2b00      	cmp	r3, #0
 80062b8:	d10a      	bne.n	80062d0 <HAL_RCCEx_PeriphCLKConfig+0x9b4>
 80062ba:	4bbf      	ldr	r3, [pc, #764]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80062bc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80062be:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 80062c2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80062c6:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80062c8:	4abb      	ldr	r2, [pc, #748]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80062ca:	430b      	orrs	r3, r1
 80062cc:	6553      	str	r3, [r2, #84]	@ 0x54
 80062ce:	e003      	b.n	80062d8 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
 80062d0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80062d4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 80062d8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80062dc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80062e0:	f002 0302 	and.w	r3, r2, #2
 80062e4:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80062e8:	2300      	movs	r3, #0
 80062ea:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80062ee:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 80062f2:	460b      	mov	r3, r1
 80062f4:	4313      	orrs	r3, r2
 80062f6:	d041      	beq.n	800637c <HAL_RCCEx_PeriphCLKConfig+0xa60>
 80062f8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80062fc:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80062fe:	2b05      	cmp	r3, #5
 8006300:	d824      	bhi.n	800634c <HAL_RCCEx_PeriphCLKConfig+0xa30>
 8006302:	a201      	add	r2, pc, #4	@ (adr r2, 8006308 <HAL_RCCEx_PeriphCLKConfig+0x9ec>)
 8006304:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006308:	08006355 	.word	0x08006355
 800630c:	08006321 	.word	0x08006321
 8006310:	08006337 	.word	0x08006337
 8006314:	08006355 	.word	0x08006355
 8006318:	08006355 	.word	0x08006355
 800631c:	08006355 	.word	0x08006355
 8006320:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006324:	3308      	adds	r3, #8
 8006326:	2101      	movs	r1, #1
 8006328:	4618      	mov	r0, r3
 800632a:	f000 ff55 	bl	80071d8 <RCCEx_PLL2_Config>
 800632e:	4603      	mov	r3, r0
 8006330:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006334:	e00f      	b.n	8006356 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
 8006336:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800633a:	3328      	adds	r3, #40	@ 0x28
 800633c:	2101      	movs	r1, #1
 800633e:	4618      	mov	r0, r3
 8006340:	f000 fffc 	bl	800733c <RCCEx_PLL3_Config>
 8006344:	4603      	mov	r3, r0
 8006346:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800634a:	e004      	b.n	8006356 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
 800634c:	2301      	movs	r3, #1
 800634e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006352:	e000      	b.n	8006356 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
 8006354:	bf00      	nop
 8006356:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800635a:	2b00      	cmp	r3, #0
 800635c:	d10a      	bne.n	8006374 <HAL_RCCEx_PeriphCLKConfig+0xa58>
 800635e:	4b96      	ldr	r3, [pc, #600]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8006360:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006362:	f023 0107 	bic.w	r1, r3, #7
 8006366:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800636a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800636c:	4a92      	ldr	r2, [pc, #584]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800636e:	430b      	orrs	r3, r1
 8006370:	6553      	str	r3, [r2, #84]	@ 0x54
 8006372:	e003      	b.n	800637c <HAL_RCCEx_PeriphCLKConfig+0xa60>
 8006374:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006378:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800637c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006380:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006384:	f002 0304 	and.w	r3, r2, #4
 8006388:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800638c:	2300      	movs	r3, #0
 800638e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8006392:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8006396:	460b      	mov	r3, r1
 8006398:	4313      	orrs	r3, r2
 800639a:	d044      	beq.n	8006426 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
 800639c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80063a0:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80063a4:	2b05      	cmp	r3, #5
 80063a6:	d825      	bhi.n	80063f4 <HAL_RCCEx_PeriphCLKConfig+0xad8>
 80063a8:	a201      	add	r2, pc, #4	@ (adr r2, 80063b0 <HAL_RCCEx_PeriphCLKConfig+0xa94>)
 80063aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80063ae:	bf00      	nop
 80063b0:	080063fd 	.word	0x080063fd
 80063b4:	080063c9 	.word	0x080063c9
 80063b8:	080063df 	.word	0x080063df
 80063bc:	080063fd 	.word	0x080063fd
 80063c0:	080063fd 	.word	0x080063fd
 80063c4:	080063fd 	.word	0x080063fd
 80063c8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80063cc:	3308      	adds	r3, #8
 80063ce:	2101      	movs	r1, #1
 80063d0:	4618      	mov	r0, r3
 80063d2:	f000 ff01 	bl	80071d8 <RCCEx_PLL2_Config>
 80063d6:	4603      	mov	r3, r0
 80063d8:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80063dc:	e00f      	b.n	80063fe <HAL_RCCEx_PeriphCLKConfig+0xae2>
 80063de:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80063e2:	3328      	adds	r3, #40	@ 0x28
 80063e4:	2101      	movs	r1, #1
 80063e6:	4618      	mov	r0, r3
 80063e8:	f000 ffa8 	bl	800733c <RCCEx_PLL3_Config>
 80063ec:	4603      	mov	r3, r0
 80063ee:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80063f2:	e004      	b.n	80063fe <HAL_RCCEx_PeriphCLKConfig+0xae2>
 80063f4:	2301      	movs	r3, #1
 80063f6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80063fa:	e000      	b.n	80063fe <HAL_RCCEx_PeriphCLKConfig+0xae2>
 80063fc:	bf00      	nop
 80063fe:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006402:	2b00      	cmp	r3, #0
 8006404:	d10b      	bne.n	800641e <HAL_RCCEx_PeriphCLKConfig+0xb02>
 8006406:	4b6c      	ldr	r3, [pc, #432]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8006408:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800640a:	f023 0107 	bic.w	r1, r3, #7
 800640e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006412:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8006416:	4a68      	ldr	r2, [pc, #416]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8006418:	430b      	orrs	r3, r1
 800641a:	6593      	str	r3, [r2, #88]	@ 0x58
 800641c:	e003      	b.n	8006426 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
 800641e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006422:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006426:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800642a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800642e:	f002 0320 	and.w	r3, r2, #32
 8006432:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 8006436:	2300      	movs	r3, #0
 8006438:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800643c:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 8006440:	460b      	mov	r3, r1
 8006442:	4313      	orrs	r3, r2
 8006444:	d055      	beq.n	80064f2 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
 8006446:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800644a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800644e:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8006452:	d033      	beq.n	80064bc <HAL_RCCEx_PeriphCLKConfig+0xba0>
 8006454:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8006458:	d82c      	bhi.n	80064b4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800645a:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800645e:	d02f      	beq.n	80064c0 <HAL_RCCEx_PeriphCLKConfig+0xba4>
 8006460:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006464:	d826      	bhi.n	80064b4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8006466:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 800646a:	d02b      	beq.n	80064c4 <HAL_RCCEx_PeriphCLKConfig+0xba8>
 800646c:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8006470:	d820      	bhi.n	80064b4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8006472:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8006476:	d012      	beq.n	800649e <HAL_RCCEx_PeriphCLKConfig+0xb82>
 8006478:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 800647c:	d81a      	bhi.n	80064b4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 800647e:	2b00      	cmp	r3, #0
 8006480:	d022      	beq.n	80064c8 <HAL_RCCEx_PeriphCLKConfig+0xbac>
 8006482:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8006486:	d115      	bne.n	80064b4 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8006488:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800648c:	3308      	adds	r3, #8
 800648e:	2100      	movs	r1, #0
 8006490:	4618      	mov	r0, r3
 8006492:	f000 fea1 	bl	80071d8 <RCCEx_PLL2_Config>
 8006496:	4603      	mov	r3, r0
 8006498:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800649c:	e015      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0xbae>
 800649e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80064a2:	3328      	adds	r3, #40	@ 0x28
 80064a4:	2102      	movs	r1, #2
 80064a6:	4618      	mov	r0, r3
 80064a8:	f000 ff48 	bl	800733c <RCCEx_PLL3_Config>
 80064ac:	4603      	mov	r3, r0
 80064ae:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80064b2:	e00a      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0xbae>
 80064b4:	2301      	movs	r3, #1
 80064b6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80064ba:	e006      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0xbae>
 80064bc:	bf00      	nop
 80064be:	e004      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0xbae>
 80064c0:	bf00      	nop
 80064c2:	e002      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0xbae>
 80064c4:	bf00      	nop
 80064c6:	e000      	b.n	80064ca <HAL_RCCEx_PeriphCLKConfig+0xbae>
 80064c8:	bf00      	nop
 80064ca:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80064ce:	2b00      	cmp	r3, #0
 80064d0:	d10b      	bne.n	80064ea <HAL_RCCEx_PeriphCLKConfig+0xbce>
 80064d2:	4b39      	ldr	r3, [pc, #228]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80064d4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80064d6:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 80064da:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80064de:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80064e2:	4a35      	ldr	r2, [pc, #212]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80064e4:	430b      	orrs	r3, r1
 80064e6:	6553      	str	r3, [r2, #84]	@ 0x54
 80064e8:	e003      	b.n	80064f2 <HAL_RCCEx_PeriphCLKConfig+0xbd6>
 80064ea:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80064ee:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 80064f2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80064f6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80064fa:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 80064fe:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006502:	2300      	movs	r3, #0
 8006504:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8006508:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 800650c:	460b      	mov	r3, r1
 800650e:	4313      	orrs	r3, r2
 8006510:	d058      	beq.n	80065c4 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 8006512:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006516:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800651a:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 800651e:	d033      	beq.n	8006588 <HAL_RCCEx_PeriphCLKConfig+0xc6c>
 8006520:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 8006524:	d82c      	bhi.n	8006580 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8006526:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800652a:	d02f      	beq.n	800658c <HAL_RCCEx_PeriphCLKConfig+0xc70>
 800652c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8006530:	d826      	bhi.n	8006580 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8006532:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 8006536:	d02b      	beq.n	8006590 <HAL_RCCEx_PeriphCLKConfig+0xc74>
 8006538:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 800653c:	d820      	bhi.n	8006580 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800653e:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8006542:	d012      	beq.n	800656a <HAL_RCCEx_PeriphCLKConfig+0xc4e>
 8006544:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8006548:	d81a      	bhi.n	8006580 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800654a:	2b00      	cmp	r3, #0
 800654c:	d022      	beq.n	8006594 <HAL_RCCEx_PeriphCLKConfig+0xc78>
 800654e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006552:	d115      	bne.n	8006580 <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8006554:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006558:	3308      	adds	r3, #8
 800655a:	2100      	movs	r1, #0
 800655c:	4618      	mov	r0, r3
 800655e:	f000 fe3b 	bl	80071d8 <RCCEx_PLL2_Config>
 8006562:	4603      	mov	r3, r0
 8006564:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006568:	e015      	b.n	8006596 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800656a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800656e:	3328      	adds	r3, #40	@ 0x28
 8006570:	2102      	movs	r1, #2
 8006572:	4618      	mov	r0, r3
 8006574:	f000 fee2 	bl	800733c <RCCEx_PLL3_Config>
 8006578:	4603      	mov	r3, r0
 800657a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800657e:	e00a      	b.n	8006596 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 8006580:	2301      	movs	r3, #1
 8006582:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006586:	e006      	b.n	8006596 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 8006588:	bf00      	nop
 800658a:	e004      	b.n	8006596 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 800658c:	bf00      	nop
 800658e:	e002      	b.n	8006596 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 8006590:	bf00      	nop
 8006592:	e000      	b.n	8006596 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
 8006594:	bf00      	nop
 8006596:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800659a:	2b00      	cmp	r3, #0
 800659c:	d10e      	bne.n	80065bc <HAL_RCCEx_PeriphCLKConfig+0xca0>
 800659e:	4b06      	ldr	r3, [pc, #24]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80065a0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80065a2:	f423 51e0 	bic.w	r1, r3, #7168	@ 0x1c00
 80065a6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80065aa:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80065ae:	4a02      	ldr	r2, [pc, #8]	@ (80065b8 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80065b0:	430b      	orrs	r3, r1
 80065b2:	6593      	str	r3, [r2, #88]	@ 0x58
 80065b4:	e006      	b.n	80065c4 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 80065b6:	bf00      	nop
 80065b8:	58024400 	.word	0x58024400
 80065bc:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80065c0:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 80065c4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80065c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80065cc:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 80065d0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80065d4:	2300      	movs	r3, #0
 80065d6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80065da:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 80065de:	460b      	mov	r3, r1
 80065e0:	4313      	orrs	r3, r2
 80065e2:	d055      	beq.n	8006690 <HAL_RCCEx_PeriphCLKConfig+0xd74>
 80065e4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80065e8:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80065ec:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 80065f0:	d033      	beq.n	800665a <HAL_RCCEx_PeriphCLKConfig+0xd3e>
 80065f2:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 80065f6:	d82c      	bhi.n	8006652 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 80065f8:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80065fc:	d02f      	beq.n	800665e <HAL_RCCEx_PeriphCLKConfig+0xd42>
 80065fe:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006602:	d826      	bhi.n	8006652 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8006604:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 8006608:	d02b      	beq.n	8006662 <HAL_RCCEx_PeriphCLKConfig+0xd46>
 800660a:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 800660e:	d820      	bhi.n	8006652 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8006610:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8006614:	d012      	beq.n	800663c <HAL_RCCEx_PeriphCLKConfig+0xd20>
 8006616:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800661a:	d81a      	bhi.n	8006652 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800661c:	2b00      	cmp	r3, #0
 800661e:	d022      	beq.n	8006666 <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 8006620:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006624:	d115      	bne.n	8006652 <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8006626:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800662a:	3308      	adds	r3, #8
 800662c:	2100      	movs	r1, #0
 800662e:	4618      	mov	r0, r3
 8006630:	f000 fdd2 	bl	80071d8 <RCCEx_PLL2_Config>
 8006634:	4603      	mov	r3, r0
 8006636:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800663a:	e015      	b.n	8006668 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800663c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006640:	3328      	adds	r3, #40	@ 0x28
 8006642:	2102      	movs	r1, #2
 8006644:	4618      	mov	r0, r3
 8006646:	f000 fe79 	bl	800733c <RCCEx_PLL3_Config>
 800664a:	4603      	mov	r3, r0
 800664c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006650:	e00a      	b.n	8006668 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 8006652:	2301      	movs	r3, #1
 8006654:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006658:	e006      	b.n	8006668 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800665a:	bf00      	nop
 800665c:	e004      	b.n	8006668 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 800665e:	bf00      	nop
 8006660:	e002      	b.n	8006668 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 8006662:	bf00      	nop
 8006664:	e000      	b.n	8006668 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
 8006666:	bf00      	nop
 8006668:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800666c:	2b00      	cmp	r3, #0
 800666e:	d10b      	bne.n	8006688 <HAL_RCCEx_PeriphCLKConfig+0xd6c>
 8006670:	4ba0      	ldr	r3, [pc, #640]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8006672:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8006674:	f423 4160 	bic.w	r1, r3, #57344	@ 0xe000
 8006678:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800667c:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8006680:	4a9c      	ldr	r2, [pc, #624]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8006682:	430b      	orrs	r3, r1
 8006684:	6593      	str	r3, [r2, #88]	@ 0x58
 8006686:	e003      	b.n	8006690 <HAL_RCCEx_PeriphCLKConfig+0xd74>
 8006688:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800668c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006690:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006694:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006698:	f002 0308 	and.w	r3, r2, #8
 800669c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80066a0:	2300      	movs	r3, #0
 80066a2:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 80066a6:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 80066aa:	460b      	mov	r3, r1
 80066ac:	4313      	orrs	r3, r2
 80066ae:	d01e      	beq.n	80066ee <HAL_RCCEx_PeriphCLKConfig+0xdd2>
 80066b0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80066b4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80066b8:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80066bc:	d10c      	bne.n	80066d8 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 80066be:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80066c2:	3328      	adds	r3, #40	@ 0x28
 80066c4:	2102      	movs	r1, #2
 80066c6:	4618      	mov	r0, r3
 80066c8:	f000 fe38 	bl	800733c <RCCEx_PLL3_Config>
 80066cc:	4603      	mov	r3, r0
 80066ce:	2b00      	cmp	r3, #0
 80066d0:	d002      	beq.n	80066d8 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
 80066d2:	2301      	movs	r3, #1
 80066d4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 80066d8:	4b86      	ldr	r3, [pc, #536]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80066da:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80066dc:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 80066e0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80066e4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80066e8:	4a82      	ldr	r2, [pc, #520]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80066ea:	430b      	orrs	r3, r1
 80066ec:	6553      	str	r3, [r2, #84]	@ 0x54
 80066ee:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80066f2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80066f6:	f002 0310 	and.w	r3, r2, #16
 80066fa:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80066fe:	2300      	movs	r3, #0
 8006700:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8006704:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 8006708:	460b      	mov	r3, r1
 800670a:	4313      	orrs	r3, r2
 800670c:	d01e      	beq.n	800674c <HAL_RCCEx_PeriphCLKConfig+0xe30>
 800670e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006712:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006716:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800671a:	d10c      	bne.n	8006736 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
 800671c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006720:	3328      	adds	r3, #40	@ 0x28
 8006722:	2102      	movs	r1, #2
 8006724:	4618      	mov	r0, r3
 8006726:	f000 fe09 	bl	800733c <RCCEx_PLL3_Config>
 800672a:	4603      	mov	r3, r0
 800672c:	2b00      	cmp	r3, #0
 800672e:	d002      	beq.n	8006736 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
 8006730:	2301      	movs	r3, #1
 8006732:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006736:	4b6f      	ldr	r3, [pc, #444]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8006738:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800673a:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 800673e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006742:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8006746:	4a6b      	ldr	r2, [pc, #428]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8006748:	430b      	orrs	r3, r1
 800674a:	6593      	str	r3, [r2, #88]	@ 0x58
 800674c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006750:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006754:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 8006758:	67bb      	str	r3, [r7, #120]	@ 0x78
 800675a:	2300      	movs	r3, #0
 800675c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800675e:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 8006762:	460b      	mov	r3, r1
 8006764:	4313      	orrs	r3, r2
 8006766:	d03e      	beq.n	80067e6 <HAL_RCCEx_PeriphCLKConfig+0xeca>
 8006768:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800676c:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8006770:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8006774:	d022      	beq.n	80067bc <HAL_RCCEx_PeriphCLKConfig+0xea0>
 8006776:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 800677a:	d81b      	bhi.n	80067b4 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 800677c:	2b00      	cmp	r3, #0
 800677e:	d003      	beq.n	8006788 <HAL_RCCEx_PeriphCLKConfig+0xe6c>
 8006780:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006784:	d00b      	beq.n	800679e <HAL_RCCEx_PeriphCLKConfig+0xe82>
 8006786:	e015      	b.n	80067b4 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 8006788:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800678c:	3308      	adds	r3, #8
 800678e:	2100      	movs	r1, #0
 8006790:	4618      	mov	r0, r3
 8006792:	f000 fd21 	bl	80071d8 <RCCEx_PLL2_Config>
 8006796:	4603      	mov	r3, r0
 8006798:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800679c:	e00f      	b.n	80067be <HAL_RCCEx_PeriphCLKConfig+0xea2>
 800679e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80067a2:	3328      	adds	r3, #40	@ 0x28
 80067a4:	2102      	movs	r1, #2
 80067a6:	4618      	mov	r0, r3
 80067a8:	f000 fdc8 	bl	800733c <RCCEx_PLL3_Config>
 80067ac:	4603      	mov	r3, r0
 80067ae:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80067b2:	e004      	b.n	80067be <HAL_RCCEx_PeriphCLKConfig+0xea2>
 80067b4:	2301      	movs	r3, #1
 80067b6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80067ba:	e000      	b.n	80067be <HAL_RCCEx_PeriphCLKConfig+0xea2>
 80067bc:	bf00      	nop
 80067be:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80067c2:	2b00      	cmp	r3, #0
 80067c4:	d10b      	bne.n	80067de <HAL_RCCEx_PeriphCLKConfig+0xec2>
 80067c6:	4b4b      	ldr	r3, [pc, #300]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80067c8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80067ca:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 80067ce:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80067d2:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80067d6:	4a47      	ldr	r2, [pc, #284]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80067d8:	430b      	orrs	r3, r1
 80067da:	6593      	str	r3, [r2, #88]	@ 0x58
 80067dc:	e003      	b.n	80067e6 <HAL_RCCEx_PeriphCLKConfig+0xeca>
 80067de:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80067e2:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 80067e6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80067ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067ee:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 80067f2:	673b      	str	r3, [r7, #112]	@ 0x70
 80067f4:	2300      	movs	r3, #0
 80067f6:	677b      	str	r3, [r7, #116]	@ 0x74
 80067f8:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 80067fc:	460b      	mov	r3, r1
 80067fe:	4313      	orrs	r3, r2
 8006800:	d03b      	beq.n	800687a <HAL_RCCEx_PeriphCLKConfig+0xf5e>
 8006802:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006806:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800680a:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800680e:	d01f      	beq.n	8006850 <HAL_RCCEx_PeriphCLKConfig+0xf34>
 8006810:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8006814:	d818      	bhi.n	8006848 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 8006816:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800681a:	d003      	beq.n	8006824 <HAL_RCCEx_PeriphCLKConfig+0xf08>
 800681c:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8006820:	d007      	beq.n	8006832 <HAL_RCCEx_PeriphCLKConfig+0xf16>
 8006822:	e011      	b.n	8006848 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 8006824:	4b33      	ldr	r3, [pc, #204]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8006826:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006828:	4a32      	ldr	r2, [pc, #200]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800682a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800682e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8006830:	e00f      	b.n	8006852 <HAL_RCCEx_PeriphCLKConfig+0xf36>
 8006832:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006836:	3328      	adds	r3, #40	@ 0x28
 8006838:	2101      	movs	r1, #1
 800683a:	4618      	mov	r0, r3
 800683c:	f000 fd7e 	bl	800733c <RCCEx_PLL3_Config>
 8006840:	4603      	mov	r3, r0
 8006842:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006846:	e004      	b.n	8006852 <HAL_RCCEx_PeriphCLKConfig+0xf36>
 8006848:	2301      	movs	r3, #1
 800684a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800684e:	e000      	b.n	8006852 <HAL_RCCEx_PeriphCLKConfig+0xf36>
 8006850:	bf00      	nop
 8006852:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006856:	2b00      	cmp	r3, #0
 8006858:	d10b      	bne.n	8006872 <HAL_RCCEx_PeriphCLKConfig+0xf56>
 800685a:	4b26      	ldr	r3, [pc, #152]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800685c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800685e:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8006862:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006866:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 800686a:	4a22      	ldr	r2, [pc, #136]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800686c:	430b      	orrs	r3, r1
 800686e:	6553      	str	r3, [r2, #84]	@ 0x54
 8006870:	e003      	b.n	800687a <HAL_RCCEx_PeriphCLKConfig+0xf5e>
 8006872:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006876:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 800687a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800687e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006882:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 8006886:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006888:	2300      	movs	r3, #0
 800688a:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800688c:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 8006890:	460b      	mov	r3, r1
 8006892:	4313      	orrs	r3, r2
 8006894:	d034      	beq.n	8006900 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 8006896:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800689a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800689c:	2b00      	cmp	r3, #0
 800689e:	d003      	beq.n	80068a8 <HAL_RCCEx_PeriphCLKConfig+0xf8c>
 80068a0:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80068a4:	d007      	beq.n	80068b6 <HAL_RCCEx_PeriphCLKConfig+0xf9a>
 80068a6:	e011      	b.n	80068cc <HAL_RCCEx_PeriphCLKConfig+0xfb0>
 80068a8:	4b12      	ldr	r3, [pc, #72]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80068aa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80068ac:	4a11      	ldr	r2, [pc, #68]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80068ae:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80068b2:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80068b4:	e00e      	b.n	80068d4 <HAL_RCCEx_PeriphCLKConfig+0xfb8>
 80068b6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80068ba:	3308      	adds	r3, #8
 80068bc:	2102      	movs	r1, #2
 80068be:	4618      	mov	r0, r3
 80068c0:	f000 fc8a 	bl	80071d8 <RCCEx_PLL2_Config>
 80068c4:	4603      	mov	r3, r0
 80068c6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80068ca:	e003      	b.n	80068d4 <HAL_RCCEx_PeriphCLKConfig+0xfb8>
 80068cc:	2301      	movs	r3, #1
 80068ce:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 80068d2:	bf00      	nop
 80068d4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80068d8:	2b00      	cmp	r3, #0
 80068da:	d10d      	bne.n	80068f8 <HAL_RCCEx_PeriphCLKConfig+0xfdc>
 80068dc:	4b05      	ldr	r3, [pc, #20]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80068de:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80068e0:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 80068e4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80068e8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80068ea:	4a02      	ldr	r2, [pc, #8]	@ (80068f4 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80068ec:	430b      	orrs	r3, r1
 80068ee:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80068f0:	e006      	b.n	8006900 <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 80068f2:	bf00      	nop
 80068f4:	58024400 	.word	0x58024400
 80068f8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80068fc:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006900:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006904:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006908:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 800690c:	663b      	str	r3, [r7, #96]	@ 0x60
 800690e:	2300      	movs	r3, #0
 8006910:	667b      	str	r3, [r7, #100]	@ 0x64
 8006912:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 8006916:	460b      	mov	r3, r1
 8006918:	4313      	orrs	r3, r2
 800691a:	d00c      	beq.n	8006936 <HAL_RCCEx_PeriphCLKConfig+0x101a>
 800691c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006920:	3328      	adds	r3, #40	@ 0x28
 8006922:	2102      	movs	r1, #2
 8006924:	4618      	mov	r0, r3
 8006926:	f000 fd09 	bl	800733c <RCCEx_PLL3_Config>
 800692a:	4603      	mov	r3, r0
 800692c:	2b00      	cmp	r3, #0
 800692e:	d002      	beq.n	8006936 <HAL_RCCEx_PeriphCLKConfig+0x101a>
 8006930:	2301      	movs	r3, #1
 8006932:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006936:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800693a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800693e:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 8006942:	65bb      	str	r3, [r7, #88]	@ 0x58
 8006944:	2300      	movs	r3, #0
 8006946:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8006948:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 800694c:	460b      	mov	r3, r1
 800694e:	4313      	orrs	r3, r2
 8006950:	d036      	beq.n	80069c0 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
 8006952:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006956:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8006958:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800695c:	d018      	beq.n	8006990 <HAL_RCCEx_PeriphCLKConfig+0x1074>
 800695e:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8006962:	d811      	bhi.n	8006988 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 8006964:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8006968:	d014      	beq.n	8006994 <HAL_RCCEx_PeriphCLKConfig+0x1078>
 800696a:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800696e:	d80b      	bhi.n	8006988 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 8006970:	2b00      	cmp	r3, #0
 8006972:	d011      	beq.n	8006998 <HAL_RCCEx_PeriphCLKConfig+0x107c>
 8006974:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006978:	d106      	bne.n	8006988 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 800697a:	4bb7      	ldr	r3, [pc, #732]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 800697c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800697e:	4ab6      	ldr	r2, [pc, #728]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006980:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8006984:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8006986:	e008      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0x107e>
 8006988:	2301      	movs	r3, #1
 800698a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 800698e:	e004      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0x107e>
 8006990:	bf00      	nop
 8006992:	e002      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0x107e>
 8006994:	bf00      	nop
 8006996:	e000      	b.n	800699a <HAL_RCCEx_PeriphCLKConfig+0x107e>
 8006998:	bf00      	nop
 800699a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800699e:	2b00      	cmp	r3, #0
 80069a0:	d10a      	bne.n	80069b8 <HAL_RCCEx_PeriphCLKConfig+0x109c>
 80069a2:	4bad      	ldr	r3, [pc, #692]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80069a4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80069a6:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 80069aa:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80069ae:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80069b0:	4aa9      	ldr	r2, [pc, #676]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80069b2:	430b      	orrs	r3, r1
 80069b4:	6553      	str	r3, [r2, #84]	@ 0x54
 80069b6:	e003      	b.n	80069c0 <HAL_RCCEx_PeriphCLKConfig+0x10a4>
 80069b8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80069bc:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 80069c0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80069c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80069c8:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 80069cc:	653b      	str	r3, [r7, #80]	@ 0x50
 80069ce:	2300      	movs	r3, #0
 80069d0:	657b      	str	r3, [r7, #84]	@ 0x54
 80069d2:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 80069d6:	460b      	mov	r3, r1
 80069d8:	4313      	orrs	r3, r2
 80069da:	d009      	beq.n	80069f0 <HAL_RCCEx_PeriphCLKConfig+0x10d4>
 80069dc:	4b9e      	ldr	r3, [pc, #632]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80069de:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80069e0:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 80069e4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80069e8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80069ea:	4a9b      	ldr	r2, [pc, #620]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80069ec:	430b      	orrs	r3, r1
 80069ee:	6513      	str	r3, [r2, #80]	@ 0x50
 80069f0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80069f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80069f8:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 80069fc:	64bb      	str	r3, [r7, #72]	@ 0x48
 80069fe:	2300      	movs	r3, #0
 8006a00:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006a02:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 8006a06:	460b      	mov	r3, r1
 8006a08:	4313      	orrs	r3, r2
 8006a0a:	d009      	beq.n	8006a20 <HAL_RCCEx_PeriphCLKConfig+0x1104>
 8006a0c:	4b92      	ldr	r3, [pc, #584]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006a0e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8006a10:	f023 7180 	bic.w	r1, r3, #16777216	@ 0x1000000
 8006a14:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006a18:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8006a1a:	4a8f      	ldr	r2, [pc, #572]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006a1c:	430b      	orrs	r3, r1
 8006a1e:	6513      	str	r3, [r2, #80]	@ 0x50
 8006a20:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006a24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a28:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 8006a2c:	643b      	str	r3, [r7, #64]	@ 0x40
 8006a2e:	2300      	movs	r3, #0
 8006a30:	647b      	str	r3, [r7, #68]	@ 0x44
 8006a32:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 8006a36:	460b      	mov	r3, r1
 8006a38:	4313      	orrs	r3, r2
 8006a3a:	d00e      	beq.n	8006a5a <HAL_RCCEx_PeriphCLKConfig+0x113e>
 8006a3c:	4b86      	ldr	r3, [pc, #536]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006a3e:	691b      	ldr	r3, [r3, #16]
 8006a40:	4a85      	ldr	r2, [pc, #532]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006a42:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8006a46:	6113      	str	r3, [r2, #16]
 8006a48:	4b83      	ldr	r3, [pc, #524]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006a4a:	6919      	ldr	r1, [r3, #16]
 8006a4c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006a50:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8006a54:	4a80      	ldr	r2, [pc, #512]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006a56:	430b      	orrs	r3, r1
 8006a58:	6113      	str	r3, [r2, #16]
 8006a5a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006a5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a62:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 8006a66:	63bb      	str	r3, [r7, #56]	@ 0x38
 8006a68:	2300      	movs	r3, #0
 8006a6a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8006a6c:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 8006a70:	460b      	mov	r3, r1
 8006a72:	4313      	orrs	r3, r2
 8006a74:	d009      	beq.n	8006a8a <HAL_RCCEx_PeriphCLKConfig+0x116e>
 8006a76:	4b78      	ldr	r3, [pc, #480]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006a78:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006a7a:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 8006a7e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006a82:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006a84:	4a74      	ldr	r2, [pc, #464]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006a86:	430b      	orrs	r3, r1
 8006a88:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8006a8a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006a8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a92:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 8006a96:	633b      	str	r3, [r7, #48]	@ 0x30
 8006a98:	2300      	movs	r3, #0
 8006a9a:	637b      	str	r3, [r7, #52]	@ 0x34
 8006a9c:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 8006aa0:	460b      	mov	r3, r1
 8006aa2:	4313      	orrs	r3, r2
 8006aa4:	d00a      	beq.n	8006abc <HAL_RCCEx_PeriphCLKConfig+0x11a0>
 8006aa6:	4b6c      	ldr	r3, [pc, #432]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006aa8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006aaa:	f423 0140 	bic.w	r1, r3, #12582912	@ 0xc00000
 8006aae:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006ab2:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8006ab6:	4a68      	ldr	r2, [pc, #416]	@ (8006c58 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8006ab8:	430b      	orrs	r3, r1
 8006aba:	6553      	str	r3, [r2, #84]	@ 0x54
 8006abc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006ac0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006ac4:	2100      	movs	r1, #0
 8006ac6:	62b9      	str	r1, [r7, #40]	@ 0x28
 8006ac8:	f003 0301 	and.w	r3, r3, #1
 8006acc:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006ace:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 8006ad2:	460b      	mov	r3, r1
 8006ad4:	4313      	orrs	r3, r2
 8006ad6:	d011      	beq.n	8006afc <HAL_RCCEx_PeriphCLKConfig+0x11e0>
 8006ad8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006adc:	3308      	adds	r3, #8
 8006ade:	2100      	movs	r1, #0
 8006ae0:	4618      	mov	r0, r3
 8006ae2:	f000 fb79 	bl	80071d8 <RCCEx_PLL2_Config>
 8006ae6:	4603      	mov	r3, r0
 8006ae8:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006aec:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006af0:	2b00      	cmp	r3, #0
 8006af2:	d003      	beq.n	8006afc <HAL_RCCEx_PeriphCLKConfig+0x11e0>
 8006af4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006af8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006afc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006b00:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b04:	2100      	movs	r1, #0
 8006b06:	6239      	str	r1, [r7, #32]
 8006b08:	f003 0302 	and.w	r3, r3, #2
 8006b0c:	627b      	str	r3, [r7, #36]	@ 0x24
 8006b0e:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 8006b12:	460b      	mov	r3, r1
 8006b14:	4313      	orrs	r3, r2
 8006b16:	d011      	beq.n	8006b3c <HAL_RCCEx_PeriphCLKConfig+0x1220>
 8006b18:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006b1c:	3308      	adds	r3, #8
 8006b1e:	2101      	movs	r1, #1
 8006b20:	4618      	mov	r0, r3
 8006b22:	f000 fb59 	bl	80071d8 <RCCEx_PLL2_Config>
 8006b26:	4603      	mov	r3, r0
 8006b28:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006b2c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006b30:	2b00      	cmp	r3, #0
 8006b32:	d003      	beq.n	8006b3c <HAL_RCCEx_PeriphCLKConfig+0x1220>
 8006b34:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006b38:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006b3c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006b40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b44:	2100      	movs	r1, #0
 8006b46:	61b9      	str	r1, [r7, #24]
 8006b48:	f003 0304 	and.w	r3, r3, #4
 8006b4c:	61fb      	str	r3, [r7, #28]
 8006b4e:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 8006b52:	460b      	mov	r3, r1
 8006b54:	4313      	orrs	r3, r2
 8006b56:	d011      	beq.n	8006b7c <HAL_RCCEx_PeriphCLKConfig+0x1260>
 8006b58:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006b5c:	3308      	adds	r3, #8
 8006b5e:	2102      	movs	r1, #2
 8006b60:	4618      	mov	r0, r3
 8006b62:	f000 fb39 	bl	80071d8 <RCCEx_PLL2_Config>
 8006b66:	4603      	mov	r3, r0
 8006b68:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006b6c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006b70:	2b00      	cmp	r3, #0
 8006b72:	d003      	beq.n	8006b7c <HAL_RCCEx_PeriphCLKConfig+0x1260>
 8006b74:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006b78:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006b7c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006b80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006b84:	2100      	movs	r1, #0
 8006b86:	6139      	str	r1, [r7, #16]
 8006b88:	f003 0308 	and.w	r3, r3, #8
 8006b8c:	617b      	str	r3, [r7, #20]
 8006b8e:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8006b92:	460b      	mov	r3, r1
 8006b94:	4313      	orrs	r3, r2
 8006b96:	d011      	beq.n	8006bbc <HAL_RCCEx_PeriphCLKConfig+0x12a0>
 8006b98:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006b9c:	3328      	adds	r3, #40	@ 0x28
 8006b9e:	2100      	movs	r1, #0
 8006ba0:	4618      	mov	r0, r3
 8006ba2:	f000 fbcb 	bl	800733c <RCCEx_PLL3_Config>
 8006ba6:	4603      	mov	r3, r0
 8006ba8:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006bac:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006bb0:	2b00      	cmp	r3, #0
 8006bb2:	d003      	beq.n	8006bbc <HAL_RCCEx_PeriphCLKConfig+0x12a0>
 8006bb4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006bb8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006bbc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006bc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006bc4:	2100      	movs	r1, #0
 8006bc6:	60b9      	str	r1, [r7, #8]
 8006bc8:	f003 0310 	and.w	r3, r3, #16
 8006bcc:	60fb      	str	r3, [r7, #12]
 8006bce:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8006bd2:	460b      	mov	r3, r1
 8006bd4:	4313      	orrs	r3, r2
 8006bd6:	d011      	beq.n	8006bfc <HAL_RCCEx_PeriphCLKConfig+0x12e0>
 8006bd8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006bdc:	3328      	adds	r3, #40	@ 0x28
 8006bde:	2101      	movs	r1, #1
 8006be0:	4618      	mov	r0, r3
 8006be2:	f000 fbab 	bl	800733c <RCCEx_PLL3_Config>
 8006be6:	4603      	mov	r3, r0
 8006be8:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006bec:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006bf0:	2b00      	cmp	r3, #0
 8006bf2:	d003      	beq.n	8006bfc <HAL_RCCEx_PeriphCLKConfig+0x12e0>
 8006bf4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006bf8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006bfc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006c00:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006c04:	2100      	movs	r1, #0
 8006c06:	6039      	str	r1, [r7, #0]
 8006c08:	f003 0320 	and.w	r3, r3, #32
 8006c0c:	607b      	str	r3, [r7, #4]
 8006c0e:	e9d7 1200 	ldrd	r1, r2, [r7]
 8006c12:	460b      	mov	r3, r1
 8006c14:	4313      	orrs	r3, r2
 8006c16:	d011      	beq.n	8006c3c <HAL_RCCEx_PeriphCLKConfig+0x1320>
 8006c18:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8006c1c:	3328      	adds	r3, #40	@ 0x28
 8006c1e:	2102      	movs	r1, #2
 8006c20:	4618      	mov	r0, r3
 8006c22:	f000 fb8b 	bl	800733c <RCCEx_PLL3_Config>
 8006c26:	4603      	mov	r3, r0
 8006c28:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
 8006c2c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006c30:	2b00      	cmp	r3, #0
 8006c32:	d003      	beq.n	8006c3c <HAL_RCCEx_PeriphCLKConfig+0x1320>
 8006c34:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8006c38:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 8006c3c:	f897 3116 	ldrb.w	r3, [r7, #278]	@ 0x116
 8006c40:	2b00      	cmp	r3, #0
 8006c42:	d101      	bne.n	8006c48 <HAL_RCCEx_PeriphCLKConfig+0x132c>
 8006c44:	2300      	movs	r3, #0
 8006c46:	e000      	b.n	8006c4a <HAL_RCCEx_PeriphCLKConfig+0x132e>
 8006c48:	2301      	movs	r3, #1
 8006c4a:	4618      	mov	r0, r3
 8006c4c:	f507 778c 	add.w	r7, r7, #280	@ 0x118
 8006c50:	46bd      	mov	sp, r7
 8006c52:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8006c56:	bf00      	nop
 8006c58:	58024400 	.word	0x58024400

08006c5c <HAL_RCCEx_GetD3PCLK1Freq>:
 8006c5c:	b580      	push	{r7, lr}
 8006c5e:	af00      	add	r7, sp, #0
 8006c60:	f7fe fe00 	bl	8005864 <HAL_RCC_GetHCLKFreq>
 8006c64:	4602      	mov	r2, r0
 8006c66:	4b06      	ldr	r3, [pc, #24]	@ (8006c80 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8006c68:	6a1b      	ldr	r3, [r3, #32]
 8006c6a:	091b      	lsrs	r3, r3, #4
 8006c6c:	f003 0307 	and.w	r3, r3, #7
 8006c70:	4904      	ldr	r1, [pc, #16]	@ (8006c84 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8006c72:	5ccb      	ldrb	r3, [r1, r3]
 8006c74:	f003 031f 	and.w	r3, r3, #31
 8006c78:	fa22 f303 	lsr.w	r3, r2, r3
 8006c7c:	4618      	mov	r0, r3
 8006c7e:	bd80      	pop	{r7, pc}
 8006c80:	58024400 	.word	0x58024400
 8006c84:	0800dc30 	.word	0x0800dc30

08006c88 <HAL_RCCEx_GetPLL2ClockFreq>:
 8006c88:	b480      	push	{r7}
 8006c8a:	b089      	sub	sp, #36	@ 0x24
 8006c8c:	af00      	add	r7, sp, #0
 8006c8e:	6078      	str	r0, [r7, #4]
 8006c90:	4ba1      	ldr	r3, [pc, #644]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006c92:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006c94:	f003 0303 	and.w	r3, r3, #3
 8006c98:	61bb      	str	r3, [r7, #24]
 8006c9a:	4b9f      	ldr	r3, [pc, #636]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006c9c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006c9e:	0b1b      	lsrs	r3, r3, #12
 8006ca0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006ca4:	617b      	str	r3, [r7, #20]
 8006ca6:	4b9c      	ldr	r3, [pc, #624]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006ca8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006caa:	091b      	lsrs	r3, r3, #4
 8006cac:	f003 0301 	and.w	r3, r3, #1
 8006cb0:	613b      	str	r3, [r7, #16]
 8006cb2:	4b99      	ldr	r3, [pc, #612]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006cb4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8006cb6:	08db      	lsrs	r3, r3, #3
 8006cb8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8006cbc:	693a      	ldr	r2, [r7, #16]
 8006cbe:	fb02 f303 	mul.w	r3, r2, r3
 8006cc2:	ee07 3a90 	vmov	s15, r3
 8006cc6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006cca:	edc7 7a03 	vstr	s15, [r7, #12]
 8006cce:	697b      	ldr	r3, [r7, #20]
 8006cd0:	2b00      	cmp	r3, #0
 8006cd2:	f000 8111 	beq.w	8006ef8 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 8006cd6:	69bb      	ldr	r3, [r7, #24]
 8006cd8:	2b02      	cmp	r3, #2
 8006cda:	f000 8083 	beq.w	8006de4 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8006cde:	69bb      	ldr	r3, [r7, #24]
 8006ce0:	2b02      	cmp	r3, #2
 8006ce2:	f200 80a1 	bhi.w	8006e28 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8006ce6:	69bb      	ldr	r3, [r7, #24]
 8006ce8:	2b00      	cmp	r3, #0
 8006cea:	d003      	beq.n	8006cf4 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8006cec:	69bb      	ldr	r3, [r7, #24]
 8006cee:	2b01      	cmp	r3, #1
 8006cf0:	d056      	beq.n	8006da0 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8006cf2:	e099      	b.n	8006e28 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8006cf4:	4b88      	ldr	r3, [pc, #544]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006cf6:	681b      	ldr	r3, [r3, #0]
 8006cf8:	f003 0320 	and.w	r3, r3, #32
 8006cfc:	2b00      	cmp	r3, #0
 8006cfe:	d02d      	beq.n	8006d5c <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 8006d00:	4b85      	ldr	r3, [pc, #532]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006d02:	681b      	ldr	r3, [r3, #0]
 8006d04:	08db      	lsrs	r3, r3, #3
 8006d06:	f003 0303 	and.w	r3, r3, #3
 8006d0a:	4a84      	ldr	r2, [pc, #528]	@ (8006f1c <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 8006d0c:	fa22 f303 	lsr.w	r3, r2, r3
 8006d10:	60bb      	str	r3, [r7, #8]
 8006d12:	68bb      	ldr	r3, [r7, #8]
 8006d14:	ee07 3a90 	vmov	s15, r3
 8006d18:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006d1c:	697b      	ldr	r3, [r7, #20]
 8006d1e:	ee07 3a90 	vmov	s15, r3
 8006d22:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006d26:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006d2a:	4b7b      	ldr	r3, [pc, #492]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006d2c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006d2e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006d32:	ee07 3a90 	vmov	s15, r3
 8006d36:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006d3a:	ed97 6a03 	vldr	s12, [r7, #12]
 8006d3e:	eddf 5a78 	vldr	s11, [pc, #480]	@ 8006f20 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8006d42:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006d46:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006d4a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006d4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006d52:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006d56:	edc7 7a07 	vstr	s15, [r7, #28]
 8006d5a:	e087      	b.n	8006e6c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8006d5c:	697b      	ldr	r3, [r7, #20]
 8006d5e:	ee07 3a90 	vmov	s15, r3
 8006d62:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006d66:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 8006f24 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8006d6a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006d6e:	4b6a      	ldr	r3, [pc, #424]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006d70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006d72:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006d76:	ee07 3a90 	vmov	s15, r3
 8006d7a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006d7e:	ed97 6a03 	vldr	s12, [r7, #12]
 8006d82:	eddf 5a67 	vldr	s11, [pc, #412]	@ 8006f20 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8006d86:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006d8a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006d8e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006d92:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006d96:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006d9a:	edc7 7a07 	vstr	s15, [r7, #28]
 8006d9e:	e065      	b.n	8006e6c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8006da0:	697b      	ldr	r3, [r7, #20]
 8006da2:	ee07 3a90 	vmov	s15, r3
 8006da6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006daa:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 8006f28 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8006dae:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006db2:	4b59      	ldr	r3, [pc, #356]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006db4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006db6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006dba:	ee07 3a90 	vmov	s15, r3
 8006dbe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006dc2:	ed97 6a03 	vldr	s12, [r7, #12]
 8006dc6:	eddf 5a56 	vldr	s11, [pc, #344]	@ 8006f20 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8006dca:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006dce:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006dd2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006dd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006dda:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006dde:	edc7 7a07 	vstr	s15, [r7, #28]
 8006de2:	e043      	b.n	8006e6c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8006de4:	697b      	ldr	r3, [r7, #20]
 8006de6:	ee07 3a90 	vmov	s15, r3
 8006dea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006dee:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 8006f2c <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 8006df2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006df6:	4b48      	ldr	r3, [pc, #288]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006df8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006dfa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006dfe:	ee07 3a90 	vmov	s15, r3
 8006e02:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006e06:	ed97 6a03 	vldr	s12, [r7, #12]
 8006e0a:	eddf 5a45 	vldr	s11, [pc, #276]	@ 8006f20 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8006e0e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006e12:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006e16:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006e1a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006e1e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006e22:	edc7 7a07 	vstr	s15, [r7, #28]
 8006e26:	e021      	b.n	8006e6c <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8006e28:	697b      	ldr	r3, [r7, #20]
 8006e2a:	ee07 3a90 	vmov	s15, r3
 8006e2e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006e32:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8006f28 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8006e36:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006e3a:	4b37      	ldr	r3, [pc, #220]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006e3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006e3e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006e42:	ee07 3a90 	vmov	s15, r3
 8006e46:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006e4a:	ed97 6a03 	vldr	s12, [r7, #12]
 8006e4e:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8006f20 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8006e52:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006e56:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006e5a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006e5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006e62:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006e66:	edc7 7a07 	vstr	s15, [r7, #28]
 8006e6a:	bf00      	nop
 8006e6c:	4b2a      	ldr	r3, [pc, #168]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006e6e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006e70:	0a5b      	lsrs	r3, r3, #9
 8006e72:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006e76:	ee07 3a90 	vmov	s15, r3
 8006e7a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006e7e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006e82:	ee37 7a87 	vadd.f32	s14, s15, s14
 8006e86:	edd7 6a07 	vldr	s13, [r7, #28]
 8006e8a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006e8e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006e92:	ee17 2a90 	vmov	r2, s15
 8006e96:	687b      	ldr	r3, [r7, #4]
 8006e98:	601a      	str	r2, [r3, #0]
 8006e9a:	4b1f      	ldr	r3, [pc, #124]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006e9c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006e9e:	0c1b      	lsrs	r3, r3, #16
 8006ea0:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006ea4:	ee07 3a90 	vmov	s15, r3
 8006ea8:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006eac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006eb0:	ee37 7a87 	vadd.f32	s14, s15, s14
 8006eb4:	edd7 6a07 	vldr	s13, [r7, #28]
 8006eb8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006ebc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006ec0:	ee17 2a90 	vmov	r2, s15
 8006ec4:	687b      	ldr	r3, [r7, #4]
 8006ec6:	605a      	str	r2, [r3, #4]
 8006ec8:	4b13      	ldr	r3, [pc, #76]	@ (8006f18 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8006eca:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006ecc:	0e1b      	lsrs	r3, r3, #24
 8006ece:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8006ed2:	ee07 3a90 	vmov	s15, r3
 8006ed6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006eda:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8006ede:	ee37 7a87 	vadd.f32	s14, s15, s14
 8006ee2:	edd7 6a07 	vldr	s13, [r7, #28]
 8006ee6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8006eea:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8006eee:	ee17 2a90 	vmov	r2, s15
 8006ef2:	687b      	ldr	r3, [r7, #4]
 8006ef4:	609a      	str	r2, [r3, #8]
 8006ef6:	e008      	b.n	8006f0a <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 8006ef8:	687b      	ldr	r3, [r7, #4]
 8006efa:	2200      	movs	r2, #0
 8006efc:	601a      	str	r2, [r3, #0]
 8006efe:	687b      	ldr	r3, [r7, #4]
 8006f00:	2200      	movs	r2, #0
 8006f02:	605a      	str	r2, [r3, #4]
 8006f04:	687b      	ldr	r3, [r7, #4]
 8006f06:	2200      	movs	r2, #0
 8006f08:	609a      	str	r2, [r3, #8]
 8006f0a:	bf00      	nop
 8006f0c:	3724      	adds	r7, #36	@ 0x24
 8006f0e:	46bd      	mov	sp, r7
 8006f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006f14:	4770      	bx	lr
 8006f16:	bf00      	nop
 8006f18:	58024400 	.word	0x58024400
 8006f1c:	03d09000 	.word	0x03d09000
 8006f20:	46000000 	.word	0x46000000
 8006f24:	4c742400 	.word	0x4c742400
 8006f28:	4a742400 	.word	0x4a742400
 8006f2c:	4bbebc20 	.word	0x4bbebc20

08006f30 <HAL_RCCEx_GetPLL3ClockFreq>:
 8006f30:	b480      	push	{r7}
 8006f32:	b089      	sub	sp, #36	@ 0x24
 8006f34:	af00      	add	r7, sp, #0
 8006f36:	6078      	str	r0, [r7, #4]
 8006f38:	4ba1      	ldr	r3, [pc, #644]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006f3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f3c:	f003 0303 	and.w	r3, r3, #3
 8006f40:	61bb      	str	r3, [r7, #24]
 8006f42:	4b9f      	ldr	r3, [pc, #636]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006f44:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006f46:	0d1b      	lsrs	r3, r3, #20
 8006f48:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8006f4c:	617b      	str	r3, [r7, #20]
 8006f4e:	4b9c      	ldr	r3, [pc, #624]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006f50:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006f52:	0a1b      	lsrs	r3, r3, #8
 8006f54:	f003 0301 	and.w	r3, r3, #1
 8006f58:	613b      	str	r3, [r7, #16]
 8006f5a:	4b99      	ldr	r3, [pc, #612]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006f5c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006f5e:	08db      	lsrs	r3, r3, #3
 8006f60:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8006f64:	693a      	ldr	r2, [r7, #16]
 8006f66:	fb02 f303 	mul.w	r3, r2, r3
 8006f6a:	ee07 3a90 	vmov	s15, r3
 8006f6e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006f72:	edc7 7a03 	vstr	s15, [r7, #12]
 8006f76:	697b      	ldr	r3, [r7, #20]
 8006f78:	2b00      	cmp	r3, #0
 8006f7a:	f000 8111 	beq.w	80071a0 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 8006f7e:	69bb      	ldr	r3, [r7, #24]
 8006f80:	2b02      	cmp	r3, #2
 8006f82:	f000 8083 	beq.w	800708c <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 8006f86:	69bb      	ldr	r3, [r7, #24]
 8006f88:	2b02      	cmp	r3, #2
 8006f8a:	f200 80a1 	bhi.w	80070d0 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8006f8e:	69bb      	ldr	r3, [r7, #24]
 8006f90:	2b00      	cmp	r3, #0
 8006f92:	d003      	beq.n	8006f9c <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 8006f94:	69bb      	ldr	r3, [r7, #24]
 8006f96:	2b01      	cmp	r3, #1
 8006f98:	d056      	beq.n	8007048 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 8006f9a:	e099      	b.n	80070d0 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8006f9c:	4b88      	ldr	r3, [pc, #544]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006f9e:	681b      	ldr	r3, [r3, #0]
 8006fa0:	f003 0320 	and.w	r3, r3, #32
 8006fa4:	2b00      	cmp	r3, #0
 8006fa6:	d02d      	beq.n	8007004 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 8006fa8:	4b85      	ldr	r3, [pc, #532]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006faa:	681b      	ldr	r3, [r3, #0]
 8006fac:	08db      	lsrs	r3, r3, #3
 8006fae:	f003 0303 	and.w	r3, r3, #3
 8006fb2:	4a84      	ldr	r2, [pc, #528]	@ (80071c4 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 8006fb4:	fa22 f303 	lsr.w	r3, r2, r3
 8006fb8:	60bb      	str	r3, [r7, #8]
 8006fba:	68bb      	ldr	r3, [r7, #8]
 8006fbc:	ee07 3a90 	vmov	s15, r3
 8006fc0:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006fc4:	697b      	ldr	r3, [r7, #20]
 8006fc6:	ee07 3a90 	vmov	s15, r3
 8006fca:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006fce:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8006fd2:	4b7b      	ldr	r3, [pc, #492]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8006fd4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006fd6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8006fda:	ee07 3a90 	vmov	s15, r3
 8006fde:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8006fe2:	ed97 6a03 	vldr	s12, [r7, #12]
 8006fe6:	eddf 5a78 	vldr	s11, [pc, #480]	@ 80071c8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8006fea:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8006fee:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8006ff2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8006ff6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8006ffa:	ee67 7a27 	vmul.f32	s15, s14, s15
 8006ffe:	edc7 7a07 	vstr	s15, [r7, #28]
 8007002:	e087      	b.n	8007114 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8007004:	697b      	ldr	r3, [r7, #20]
 8007006:	ee07 3a90 	vmov	s15, r3
 800700a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800700e:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 80071cc <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 8007012:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007016:	4b6a      	ldr	r3, [pc, #424]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8007018:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800701a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800701e:	ee07 3a90 	vmov	s15, r3
 8007022:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007026:	ed97 6a03 	vldr	s12, [r7, #12]
 800702a:	eddf 5a67 	vldr	s11, [pc, #412]	@ 80071c8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800702e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007032:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007036:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800703a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800703e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007042:	edc7 7a07 	vstr	s15, [r7, #28]
 8007046:	e065      	b.n	8007114 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8007048:	697b      	ldr	r3, [r7, #20]
 800704a:	ee07 3a90 	vmov	s15, r3
 800704e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007052:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 80071d0 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8007056:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800705a:	4b59      	ldr	r3, [pc, #356]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800705c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800705e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007062:	ee07 3a90 	vmov	s15, r3
 8007066:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800706a:	ed97 6a03 	vldr	s12, [r7, #12]
 800706e:	eddf 5a56 	vldr	s11, [pc, #344]	@ 80071c8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8007072:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007076:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800707a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800707e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007082:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007086:	edc7 7a07 	vstr	s15, [r7, #28]
 800708a:	e043      	b.n	8007114 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 800708c:	697b      	ldr	r3, [r7, #20]
 800708e:	ee07 3a90 	vmov	s15, r3
 8007092:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007096:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 80071d4 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 800709a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800709e:	4b48      	ldr	r3, [pc, #288]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80070a0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80070a2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80070a6:	ee07 3a90 	vmov	s15, r3
 80070aa:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80070ae:	ed97 6a03 	vldr	s12, [r7, #12]
 80070b2:	eddf 5a45 	vldr	s11, [pc, #276]	@ 80071c8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 80070b6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80070ba:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80070be:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80070c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80070c6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80070ca:	edc7 7a07 	vstr	s15, [r7, #28]
 80070ce:	e021      	b.n	8007114 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 80070d0:	697b      	ldr	r3, [r7, #20]
 80070d2:	ee07 3a90 	vmov	s15, r3
 80070d6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80070da:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 80071d0 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 80070de:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80070e2:	4b37      	ldr	r3, [pc, #220]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80070e4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80070e6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80070ea:	ee07 3a90 	vmov	s15, r3
 80070ee:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80070f2:	ed97 6a03 	vldr	s12, [r7, #12]
 80070f6:	eddf 5a34 	vldr	s11, [pc, #208]	@ 80071c8 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 80070fa:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80070fe:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007102:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007106:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800710a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800710e:	edc7 7a07 	vstr	s15, [r7, #28]
 8007112:	bf00      	nop
 8007114:	4b2a      	ldr	r3, [pc, #168]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8007116:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007118:	0a5b      	lsrs	r3, r3, #9
 800711a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800711e:	ee07 3a90 	vmov	s15, r3
 8007122:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007126:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 800712a:	ee37 7a87 	vadd.f32	s14, s15, s14
 800712e:	edd7 6a07 	vldr	s13, [r7, #28]
 8007132:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007136:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800713a:	ee17 2a90 	vmov	r2, s15
 800713e:	687b      	ldr	r3, [r7, #4]
 8007140:	601a      	str	r2, [r3, #0]
 8007142:	4b1f      	ldr	r3, [pc, #124]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8007144:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007146:	0c1b      	lsrs	r3, r3, #16
 8007148:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800714c:	ee07 3a90 	vmov	s15, r3
 8007150:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007154:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8007158:	ee37 7a87 	vadd.f32	s14, s15, s14
 800715c:	edd7 6a07 	vldr	s13, [r7, #28]
 8007160:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007164:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007168:	ee17 2a90 	vmov	r2, s15
 800716c:	687b      	ldr	r3, [r7, #4]
 800716e:	605a      	str	r2, [r3, #4]
 8007170:	4b13      	ldr	r3, [pc, #76]	@ (80071c0 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8007172:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8007174:	0e1b      	lsrs	r3, r3, #24
 8007176:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800717a:	ee07 3a90 	vmov	s15, r3
 800717e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007182:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8007186:	ee37 7a87 	vadd.f32	s14, s15, s14
 800718a:	edd7 6a07 	vldr	s13, [r7, #28]
 800718e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007192:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8007196:	ee17 2a90 	vmov	r2, s15
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	609a      	str	r2, [r3, #8]
 800719e:	e008      	b.n	80071b2 <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 80071a0:	687b      	ldr	r3, [r7, #4]
 80071a2:	2200      	movs	r2, #0
 80071a4:	601a      	str	r2, [r3, #0]
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	2200      	movs	r2, #0
 80071aa:	605a      	str	r2, [r3, #4]
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	2200      	movs	r2, #0
 80071b0:	609a      	str	r2, [r3, #8]
 80071b2:	bf00      	nop
 80071b4:	3724      	adds	r7, #36	@ 0x24
 80071b6:	46bd      	mov	sp, r7
 80071b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071bc:	4770      	bx	lr
 80071be:	bf00      	nop
 80071c0:	58024400 	.word	0x58024400
 80071c4:	03d09000 	.word	0x03d09000
 80071c8:	46000000 	.word	0x46000000
 80071cc:	4c742400 	.word	0x4c742400
 80071d0:	4a742400 	.word	0x4a742400
 80071d4:	4bbebc20 	.word	0x4bbebc20

080071d8 <RCCEx_PLL2_Config>:
 80071d8:	b580      	push	{r7, lr}
 80071da:	b084      	sub	sp, #16
 80071dc:	af00      	add	r7, sp, #0
 80071de:	6078      	str	r0, [r7, #4]
 80071e0:	6039      	str	r1, [r7, #0]
 80071e2:	2300      	movs	r3, #0
 80071e4:	73fb      	strb	r3, [r7, #15]
 80071e6:	4b53      	ldr	r3, [pc, #332]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80071e8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80071ea:	f003 0303 	and.w	r3, r3, #3
 80071ee:	2b03      	cmp	r3, #3
 80071f0:	d101      	bne.n	80071f6 <RCCEx_PLL2_Config+0x1e>
 80071f2:	2301      	movs	r3, #1
 80071f4:	e099      	b.n	800732a <RCCEx_PLL2_Config+0x152>
 80071f6:	4b4f      	ldr	r3, [pc, #316]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80071f8:	681b      	ldr	r3, [r3, #0]
 80071fa:	4a4e      	ldr	r2, [pc, #312]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80071fc:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 8007200:	6013      	str	r3, [r2, #0]
 8007202:	f7fb fce9 	bl	8002bd8 <HAL_GetTick>
 8007206:	60b8      	str	r0, [r7, #8]
 8007208:	e008      	b.n	800721c <RCCEx_PLL2_Config+0x44>
 800720a:	f7fb fce5 	bl	8002bd8 <HAL_GetTick>
 800720e:	4602      	mov	r2, r0
 8007210:	68bb      	ldr	r3, [r7, #8]
 8007212:	1ad3      	subs	r3, r2, r3
 8007214:	2b02      	cmp	r3, #2
 8007216:	d901      	bls.n	800721c <RCCEx_PLL2_Config+0x44>
 8007218:	2303      	movs	r3, #3
 800721a:	e086      	b.n	800732a <RCCEx_PLL2_Config+0x152>
 800721c:	4b45      	ldr	r3, [pc, #276]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 800721e:	681b      	ldr	r3, [r3, #0]
 8007220:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007224:	2b00      	cmp	r3, #0
 8007226:	d1f0      	bne.n	800720a <RCCEx_PLL2_Config+0x32>
 8007228:	4b42      	ldr	r3, [pc, #264]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 800722a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800722c:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 8007230:	687b      	ldr	r3, [r7, #4]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	031b      	lsls	r3, r3, #12
 8007236:	493f      	ldr	r1, [pc, #252]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 8007238:	4313      	orrs	r3, r2
 800723a:	628b      	str	r3, [r1, #40]	@ 0x28
 800723c:	687b      	ldr	r3, [r7, #4]
 800723e:	685b      	ldr	r3, [r3, #4]
 8007240:	3b01      	subs	r3, #1
 8007242:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8007246:	687b      	ldr	r3, [r7, #4]
 8007248:	689b      	ldr	r3, [r3, #8]
 800724a:	3b01      	subs	r3, #1
 800724c:	025b      	lsls	r3, r3, #9
 800724e:	b29b      	uxth	r3, r3
 8007250:	431a      	orrs	r2, r3
 8007252:	687b      	ldr	r3, [r7, #4]
 8007254:	68db      	ldr	r3, [r3, #12]
 8007256:	3b01      	subs	r3, #1
 8007258:	041b      	lsls	r3, r3, #16
 800725a:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800725e:	431a      	orrs	r2, r3
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	691b      	ldr	r3, [r3, #16]
 8007264:	3b01      	subs	r3, #1
 8007266:	061b      	lsls	r3, r3, #24
 8007268:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800726c:	4931      	ldr	r1, [pc, #196]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 800726e:	4313      	orrs	r3, r2
 8007270:	638b      	str	r3, [r1, #56]	@ 0x38
 8007272:	4b30      	ldr	r3, [pc, #192]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 8007274:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007276:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	695b      	ldr	r3, [r3, #20]
 800727e:	492d      	ldr	r1, [pc, #180]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 8007280:	4313      	orrs	r3, r2
 8007282:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8007284:	4b2b      	ldr	r3, [pc, #172]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 8007286:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007288:	f023 0220 	bic.w	r2, r3, #32
 800728c:	687b      	ldr	r3, [r7, #4]
 800728e:	699b      	ldr	r3, [r3, #24]
 8007290:	4928      	ldr	r1, [pc, #160]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 8007292:	4313      	orrs	r3, r2
 8007294:	62cb      	str	r3, [r1, #44]	@ 0x2c
 8007296:	4b27      	ldr	r3, [pc, #156]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 8007298:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800729a:	4a26      	ldr	r2, [pc, #152]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 800729c:	f023 0310 	bic.w	r3, r3, #16
 80072a0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80072a2:	4b24      	ldr	r3, [pc, #144]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072a4:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 80072a6:	4b24      	ldr	r3, [pc, #144]	@ (8007338 <RCCEx_PLL2_Config+0x160>)
 80072a8:	4013      	ands	r3, r2
 80072aa:	687a      	ldr	r2, [r7, #4]
 80072ac:	69d2      	ldr	r2, [r2, #28]
 80072ae:	00d2      	lsls	r2, r2, #3
 80072b0:	4920      	ldr	r1, [pc, #128]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072b2:	4313      	orrs	r3, r2
 80072b4:	63cb      	str	r3, [r1, #60]	@ 0x3c
 80072b6:	4b1f      	ldr	r3, [pc, #124]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80072ba:	4a1e      	ldr	r2, [pc, #120]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072bc:	f043 0310 	orr.w	r3, r3, #16
 80072c0:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80072c2:	683b      	ldr	r3, [r7, #0]
 80072c4:	2b00      	cmp	r3, #0
 80072c6:	d106      	bne.n	80072d6 <RCCEx_PLL2_Config+0xfe>
 80072c8:	4b1a      	ldr	r3, [pc, #104]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072ca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80072cc:	4a19      	ldr	r2, [pc, #100]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072ce:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 80072d2:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80072d4:	e00f      	b.n	80072f6 <RCCEx_PLL2_Config+0x11e>
 80072d6:	683b      	ldr	r3, [r7, #0]
 80072d8:	2b01      	cmp	r3, #1
 80072da:	d106      	bne.n	80072ea <RCCEx_PLL2_Config+0x112>
 80072dc:	4b15      	ldr	r3, [pc, #84]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80072e0:	4a14      	ldr	r2, [pc, #80]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072e2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80072e6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80072e8:	e005      	b.n	80072f6 <RCCEx_PLL2_Config+0x11e>
 80072ea:	4b12      	ldr	r3, [pc, #72]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072ec:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80072ee:	4a11      	ldr	r2, [pc, #68]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072f0:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 80072f4:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80072f6:	4b0f      	ldr	r3, [pc, #60]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072f8:	681b      	ldr	r3, [r3, #0]
 80072fa:	4a0e      	ldr	r2, [pc, #56]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 80072fc:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8007300:	6013      	str	r3, [r2, #0]
 8007302:	f7fb fc69 	bl	8002bd8 <HAL_GetTick>
 8007306:	60b8      	str	r0, [r7, #8]
 8007308:	e008      	b.n	800731c <RCCEx_PLL2_Config+0x144>
 800730a:	f7fb fc65 	bl	8002bd8 <HAL_GetTick>
 800730e:	4602      	mov	r2, r0
 8007310:	68bb      	ldr	r3, [r7, #8]
 8007312:	1ad3      	subs	r3, r2, r3
 8007314:	2b02      	cmp	r3, #2
 8007316:	d901      	bls.n	800731c <RCCEx_PLL2_Config+0x144>
 8007318:	2303      	movs	r3, #3
 800731a:	e006      	b.n	800732a <RCCEx_PLL2_Config+0x152>
 800731c:	4b05      	ldr	r3, [pc, #20]	@ (8007334 <RCCEx_PLL2_Config+0x15c>)
 800731e:	681b      	ldr	r3, [r3, #0]
 8007320:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8007324:	2b00      	cmp	r3, #0
 8007326:	d0f0      	beq.n	800730a <RCCEx_PLL2_Config+0x132>
 8007328:	7bfb      	ldrb	r3, [r7, #15]
 800732a:	4618      	mov	r0, r3
 800732c:	3710      	adds	r7, #16
 800732e:	46bd      	mov	sp, r7
 8007330:	bd80      	pop	{r7, pc}
 8007332:	bf00      	nop
 8007334:	58024400 	.word	0x58024400
 8007338:	ffff0007 	.word	0xffff0007

0800733c <RCCEx_PLL3_Config>:
 800733c:	b580      	push	{r7, lr}
 800733e:	b084      	sub	sp, #16
 8007340:	af00      	add	r7, sp, #0
 8007342:	6078      	str	r0, [r7, #4]
 8007344:	6039      	str	r1, [r7, #0]
 8007346:	2300      	movs	r3, #0
 8007348:	73fb      	strb	r3, [r7, #15]
 800734a:	4b53      	ldr	r3, [pc, #332]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 800734c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800734e:	f003 0303 	and.w	r3, r3, #3
 8007352:	2b03      	cmp	r3, #3
 8007354:	d101      	bne.n	800735a <RCCEx_PLL3_Config+0x1e>
 8007356:	2301      	movs	r3, #1
 8007358:	e099      	b.n	800748e <RCCEx_PLL3_Config+0x152>
 800735a:	4b4f      	ldr	r3, [pc, #316]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 800735c:	681b      	ldr	r3, [r3, #0]
 800735e:	4a4e      	ldr	r2, [pc, #312]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007360:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8007364:	6013      	str	r3, [r2, #0]
 8007366:	f7fb fc37 	bl	8002bd8 <HAL_GetTick>
 800736a:	60b8      	str	r0, [r7, #8]
 800736c:	e008      	b.n	8007380 <RCCEx_PLL3_Config+0x44>
 800736e:	f7fb fc33 	bl	8002bd8 <HAL_GetTick>
 8007372:	4602      	mov	r2, r0
 8007374:	68bb      	ldr	r3, [r7, #8]
 8007376:	1ad3      	subs	r3, r2, r3
 8007378:	2b02      	cmp	r3, #2
 800737a:	d901      	bls.n	8007380 <RCCEx_PLL3_Config+0x44>
 800737c:	2303      	movs	r3, #3
 800737e:	e086      	b.n	800748e <RCCEx_PLL3_Config+0x152>
 8007380:	4b45      	ldr	r3, [pc, #276]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007382:	681b      	ldr	r3, [r3, #0]
 8007384:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8007388:	2b00      	cmp	r3, #0
 800738a:	d1f0      	bne.n	800736e <RCCEx_PLL3_Config+0x32>
 800738c:	4b42      	ldr	r3, [pc, #264]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 800738e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007390:	f023 727c 	bic.w	r2, r3, #66060288	@ 0x3f00000
 8007394:	687b      	ldr	r3, [r7, #4]
 8007396:	681b      	ldr	r3, [r3, #0]
 8007398:	051b      	lsls	r3, r3, #20
 800739a:	493f      	ldr	r1, [pc, #252]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 800739c:	4313      	orrs	r3, r2
 800739e:	628b      	str	r3, [r1, #40]	@ 0x28
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	685b      	ldr	r3, [r3, #4]
 80073a4:	3b01      	subs	r3, #1
 80073a6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	689b      	ldr	r3, [r3, #8]
 80073ae:	3b01      	subs	r3, #1
 80073b0:	025b      	lsls	r3, r3, #9
 80073b2:	b29b      	uxth	r3, r3
 80073b4:	431a      	orrs	r2, r3
 80073b6:	687b      	ldr	r3, [r7, #4]
 80073b8:	68db      	ldr	r3, [r3, #12]
 80073ba:	3b01      	subs	r3, #1
 80073bc:	041b      	lsls	r3, r3, #16
 80073be:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 80073c2:	431a      	orrs	r2, r3
 80073c4:	687b      	ldr	r3, [r7, #4]
 80073c6:	691b      	ldr	r3, [r3, #16]
 80073c8:	3b01      	subs	r3, #1
 80073ca:	061b      	lsls	r3, r3, #24
 80073cc:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 80073d0:	4931      	ldr	r1, [pc, #196]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 80073d2:	4313      	orrs	r3, r2
 80073d4:	640b      	str	r3, [r1, #64]	@ 0x40
 80073d6:	4b30      	ldr	r3, [pc, #192]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 80073d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80073da:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 80073de:	687b      	ldr	r3, [r7, #4]
 80073e0:	695b      	ldr	r3, [r3, #20]
 80073e2:	492d      	ldr	r1, [pc, #180]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 80073e4:	4313      	orrs	r3, r2
 80073e6:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80073e8:	4b2b      	ldr	r3, [pc, #172]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 80073ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80073ec:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	699b      	ldr	r3, [r3, #24]
 80073f4:	4928      	ldr	r1, [pc, #160]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 80073f6:	4313      	orrs	r3, r2
 80073f8:	62cb      	str	r3, [r1, #44]	@ 0x2c
 80073fa:	4b27      	ldr	r3, [pc, #156]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 80073fc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80073fe:	4a26      	ldr	r2, [pc, #152]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007400:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007404:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007406:	4b24      	ldr	r3, [pc, #144]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007408:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800740a:	4b24      	ldr	r3, [pc, #144]	@ (800749c <RCCEx_PLL3_Config+0x160>)
 800740c:	4013      	ands	r3, r2
 800740e:	687a      	ldr	r2, [r7, #4]
 8007410:	69d2      	ldr	r2, [r2, #28]
 8007412:	00d2      	lsls	r2, r2, #3
 8007414:	4920      	ldr	r1, [pc, #128]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007416:	4313      	orrs	r3, r2
 8007418:	644b      	str	r3, [r1, #68]	@ 0x44
 800741a:	4b1f      	ldr	r3, [pc, #124]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 800741c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800741e:	4a1e      	ldr	r2, [pc, #120]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007420:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8007424:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007426:	683b      	ldr	r3, [r7, #0]
 8007428:	2b00      	cmp	r3, #0
 800742a:	d106      	bne.n	800743a <RCCEx_PLL3_Config+0xfe>
 800742c:	4b1a      	ldr	r3, [pc, #104]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 800742e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007430:	4a19      	ldr	r2, [pc, #100]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007432:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8007436:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8007438:	e00f      	b.n	800745a <RCCEx_PLL3_Config+0x11e>
 800743a:	683b      	ldr	r3, [r7, #0]
 800743c:	2b01      	cmp	r3, #1
 800743e:	d106      	bne.n	800744e <RCCEx_PLL3_Config+0x112>
 8007440:	4b15      	ldr	r3, [pc, #84]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007442:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007444:	4a14      	ldr	r2, [pc, #80]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007446:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 800744a:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800744c:	e005      	b.n	800745a <RCCEx_PLL3_Config+0x11e>
 800744e:	4b12      	ldr	r3, [pc, #72]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007450:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007452:	4a11      	ldr	r2, [pc, #68]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007454:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8007458:	62d3      	str	r3, [r2, #44]	@ 0x2c
 800745a:	4b0f      	ldr	r3, [pc, #60]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 800745c:	681b      	ldr	r3, [r3, #0]
 800745e:	4a0e      	ldr	r2, [pc, #56]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007460:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8007464:	6013      	str	r3, [r2, #0]
 8007466:	f7fb fbb7 	bl	8002bd8 <HAL_GetTick>
 800746a:	60b8      	str	r0, [r7, #8]
 800746c:	e008      	b.n	8007480 <RCCEx_PLL3_Config+0x144>
 800746e:	f7fb fbb3 	bl	8002bd8 <HAL_GetTick>
 8007472:	4602      	mov	r2, r0
 8007474:	68bb      	ldr	r3, [r7, #8]
 8007476:	1ad3      	subs	r3, r2, r3
 8007478:	2b02      	cmp	r3, #2
 800747a:	d901      	bls.n	8007480 <RCCEx_PLL3_Config+0x144>
 800747c:	2303      	movs	r3, #3
 800747e:	e006      	b.n	800748e <RCCEx_PLL3_Config+0x152>
 8007480:	4b05      	ldr	r3, [pc, #20]	@ (8007498 <RCCEx_PLL3_Config+0x15c>)
 8007482:	681b      	ldr	r3, [r3, #0]
 8007484:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 8007488:	2b00      	cmp	r3, #0
 800748a:	d0f0      	beq.n	800746e <RCCEx_PLL3_Config+0x132>
 800748c:	7bfb      	ldrb	r3, [r7, #15]
 800748e:	4618      	mov	r0, r3
 8007490:	3710      	adds	r7, #16
 8007492:	46bd      	mov	sp, r7
 8007494:	bd80      	pop	{r7, pc}
 8007496:	bf00      	nop
 8007498:	58024400 	.word	0x58024400
 800749c:	ffff0007 	.word	0xffff0007

080074a0 <HAL_TIM_PWM_Init>:
 80074a0:	b580      	push	{r7, lr}
 80074a2:	b082      	sub	sp, #8
 80074a4:	af00      	add	r7, sp, #0
 80074a6:	6078      	str	r0, [r7, #4]
 80074a8:	687b      	ldr	r3, [r7, #4]
 80074aa:	2b00      	cmp	r3, #0
 80074ac:	d101      	bne.n	80074b2 <HAL_TIM_PWM_Init+0x12>
 80074ae:	2301      	movs	r3, #1
 80074b0:	e049      	b.n	8007546 <HAL_TIM_PWM_Init+0xa6>
 80074b2:	687b      	ldr	r3, [r7, #4]
 80074b4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80074b8:	b2db      	uxtb	r3, r3
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	d106      	bne.n	80074cc <HAL_TIM_PWM_Init+0x2c>
 80074be:	687b      	ldr	r3, [r7, #4]
 80074c0:	2200      	movs	r2, #0
 80074c2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80074c6:	6878      	ldr	r0, [r7, #4]
 80074c8:	f7fa fc12 	bl	8001cf0 <HAL_TIM_PWM_MspInit>
 80074cc:	687b      	ldr	r3, [r7, #4]
 80074ce:	2202      	movs	r2, #2
 80074d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80074d4:	687b      	ldr	r3, [r7, #4]
 80074d6:	681a      	ldr	r2, [r3, #0]
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	3304      	adds	r3, #4
 80074dc:	4619      	mov	r1, r3
 80074de:	4610      	mov	r0, r2
 80074e0:	f000 fa66 	bl	80079b0 <TIM_Base_SetConfig>
 80074e4:	687b      	ldr	r3, [r7, #4]
 80074e6:	2201      	movs	r2, #1
 80074e8:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
 80074ec:	687b      	ldr	r3, [r7, #4]
 80074ee:	2201      	movs	r2, #1
 80074f0:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80074f4:	687b      	ldr	r3, [r7, #4]
 80074f6:	2201      	movs	r2, #1
 80074f8:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80074fc:	687b      	ldr	r3, [r7, #4]
 80074fe:	2201      	movs	r2, #1
 8007500:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	2201      	movs	r2, #1
 8007508:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	2201      	movs	r2, #1
 8007510:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	2201      	movs	r2, #1
 8007518:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800751c:	687b      	ldr	r3, [r7, #4]
 800751e:	2201      	movs	r2, #1
 8007520:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007524:	687b      	ldr	r3, [r7, #4]
 8007526:	2201      	movs	r2, #1
 8007528:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800752c:	687b      	ldr	r3, [r7, #4]
 800752e:	2201      	movs	r2, #1
 8007530:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8007534:	687b      	ldr	r3, [r7, #4]
 8007536:	2201      	movs	r2, #1
 8007538:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47
 800753c:	687b      	ldr	r3, [r7, #4]
 800753e:	2201      	movs	r2, #1
 8007540:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8007544:	2300      	movs	r3, #0
 8007546:	4618      	mov	r0, r3
 8007548:	3708      	adds	r7, #8
 800754a:	46bd      	mov	sp, r7
 800754c:	bd80      	pop	{r7, pc}
	...

08007550 <HAL_TIM_PWM_Start>:
 8007550:	b580      	push	{r7, lr}
 8007552:	b084      	sub	sp, #16
 8007554:	af00      	add	r7, sp, #0
 8007556:	6078      	str	r0, [r7, #4]
 8007558:	6039      	str	r1, [r7, #0]
 800755a:	683b      	ldr	r3, [r7, #0]
 800755c:	2b00      	cmp	r3, #0
 800755e:	d109      	bne.n	8007574 <HAL_TIM_PWM_Start+0x24>
 8007560:	687b      	ldr	r3, [r7, #4]
 8007562:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8007566:	b2db      	uxtb	r3, r3
 8007568:	2b01      	cmp	r3, #1
 800756a:	bf14      	ite	ne
 800756c:	2301      	movne	r3, #1
 800756e:	2300      	moveq	r3, #0
 8007570:	b2db      	uxtb	r3, r3
 8007572:	e03c      	b.n	80075ee <HAL_TIM_PWM_Start+0x9e>
 8007574:	683b      	ldr	r3, [r7, #0]
 8007576:	2b04      	cmp	r3, #4
 8007578:	d109      	bne.n	800758e <HAL_TIM_PWM_Start+0x3e>
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8007580:	b2db      	uxtb	r3, r3
 8007582:	2b01      	cmp	r3, #1
 8007584:	bf14      	ite	ne
 8007586:	2301      	movne	r3, #1
 8007588:	2300      	moveq	r3, #0
 800758a:	b2db      	uxtb	r3, r3
 800758c:	e02f      	b.n	80075ee <HAL_TIM_PWM_Start+0x9e>
 800758e:	683b      	ldr	r3, [r7, #0]
 8007590:	2b08      	cmp	r3, #8
 8007592:	d109      	bne.n	80075a8 <HAL_TIM_PWM_Start+0x58>
 8007594:	687b      	ldr	r3, [r7, #4]
 8007596:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800759a:	b2db      	uxtb	r3, r3
 800759c:	2b01      	cmp	r3, #1
 800759e:	bf14      	ite	ne
 80075a0:	2301      	movne	r3, #1
 80075a2:	2300      	moveq	r3, #0
 80075a4:	b2db      	uxtb	r3, r3
 80075a6:	e022      	b.n	80075ee <HAL_TIM_PWM_Start+0x9e>
 80075a8:	683b      	ldr	r3, [r7, #0]
 80075aa:	2b0c      	cmp	r3, #12
 80075ac:	d109      	bne.n	80075c2 <HAL_TIM_PWM_Start+0x72>
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80075b4:	b2db      	uxtb	r3, r3
 80075b6:	2b01      	cmp	r3, #1
 80075b8:	bf14      	ite	ne
 80075ba:	2301      	movne	r3, #1
 80075bc:	2300      	moveq	r3, #0
 80075be:	b2db      	uxtb	r3, r3
 80075c0:	e015      	b.n	80075ee <HAL_TIM_PWM_Start+0x9e>
 80075c2:	683b      	ldr	r3, [r7, #0]
 80075c4:	2b10      	cmp	r3, #16
 80075c6:	d109      	bne.n	80075dc <HAL_TIM_PWM_Start+0x8c>
 80075c8:	687b      	ldr	r3, [r7, #4]
 80075ca:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80075ce:	b2db      	uxtb	r3, r3
 80075d0:	2b01      	cmp	r3, #1
 80075d2:	bf14      	ite	ne
 80075d4:	2301      	movne	r3, #1
 80075d6:	2300      	moveq	r3, #0
 80075d8:	b2db      	uxtb	r3, r3
 80075da:	e008      	b.n	80075ee <HAL_TIM_PWM_Start+0x9e>
 80075dc:	687b      	ldr	r3, [r7, #4]
 80075de:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 80075e2:	b2db      	uxtb	r3, r3
 80075e4:	2b01      	cmp	r3, #1
 80075e6:	bf14      	ite	ne
 80075e8:	2301      	movne	r3, #1
 80075ea:	2300      	moveq	r3, #0
 80075ec:	b2db      	uxtb	r3, r3
 80075ee:	2b00      	cmp	r3, #0
 80075f0:	d001      	beq.n	80075f6 <HAL_TIM_PWM_Start+0xa6>
 80075f2:	2301      	movs	r3, #1
 80075f4:	e0ab      	b.n	800774e <HAL_TIM_PWM_Start+0x1fe>
 80075f6:	683b      	ldr	r3, [r7, #0]
 80075f8:	2b00      	cmp	r3, #0
 80075fa:	d104      	bne.n	8007606 <HAL_TIM_PWM_Start+0xb6>
 80075fc:	687b      	ldr	r3, [r7, #4]
 80075fe:	2202      	movs	r2, #2
 8007600:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007604:	e023      	b.n	800764e <HAL_TIM_PWM_Start+0xfe>
 8007606:	683b      	ldr	r3, [r7, #0]
 8007608:	2b04      	cmp	r3, #4
 800760a:	d104      	bne.n	8007616 <HAL_TIM_PWM_Start+0xc6>
 800760c:	687b      	ldr	r3, [r7, #4]
 800760e:	2202      	movs	r2, #2
 8007610:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007614:	e01b      	b.n	800764e <HAL_TIM_PWM_Start+0xfe>
 8007616:	683b      	ldr	r3, [r7, #0]
 8007618:	2b08      	cmp	r3, #8
 800761a:	d104      	bne.n	8007626 <HAL_TIM_PWM_Start+0xd6>
 800761c:	687b      	ldr	r3, [r7, #4]
 800761e:	2202      	movs	r2, #2
 8007620:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007624:	e013      	b.n	800764e <HAL_TIM_PWM_Start+0xfe>
 8007626:	683b      	ldr	r3, [r7, #0]
 8007628:	2b0c      	cmp	r3, #12
 800762a:	d104      	bne.n	8007636 <HAL_TIM_PWM_Start+0xe6>
 800762c:	687b      	ldr	r3, [r7, #4]
 800762e:	2202      	movs	r2, #2
 8007630:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8007634:	e00b      	b.n	800764e <HAL_TIM_PWM_Start+0xfe>
 8007636:	683b      	ldr	r3, [r7, #0]
 8007638:	2b10      	cmp	r3, #16
 800763a:	d104      	bne.n	8007646 <HAL_TIM_PWM_Start+0xf6>
 800763c:	687b      	ldr	r3, [r7, #4]
 800763e:	2202      	movs	r2, #2
 8007640:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007644:	e003      	b.n	800764e <HAL_TIM_PWM_Start+0xfe>
 8007646:	687b      	ldr	r3, [r7, #4]
 8007648:	2202      	movs	r2, #2
 800764a:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800764e:	687b      	ldr	r3, [r7, #4]
 8007650:	681b      	ldr	r3, [r3, #0]
 8007652:	2201      	movs	r2, #1
 8007654:	6839      	ldr	r1, [r7, #0]
 8007656:	4618      	mov	r0, r3
 8007658:	f000 fd2c 	bl	80080b4 <TIM_CCxChannelCmd>
 800765c:	687b      	ldr	r3, [r7, #4]
 800765e:	681b      	ldr	r3, [r3, #0]
 8007660:	4a3d      	ldr	r2, [pc, #244]	@ (8007758 <HAL_TIM_PWM_Start+0x208>)
 8007662:	4293      	cmp	r3, r2
 8007664:	d013      	beq.n	800768e <HAL_TIM_PWM_Start+0x13e>
 8007666:	687b      	ldr	r3, [r7, #4]
 8007668:	681b      	ldr	r3, [r3, #0]
 800766a:	4a3c      	ldr	r2, [pc, #240]	@ (800775c <HAL_TIM_PWM_Start+0x20c>)
 800766c:	4293      	cmp	r3, r2
 800766e:	d00e      	beq.n	800768e <HAL_TIM_PWM_Start+0x13e>
 8007670:	687b      	ldr	r3, [r7, #4]
 8007672:	681b      	ldr	r3, [r3, #0]
 8007674:	4a3a      	ldr	r2, [pc, #232]	@ (8007760 <HAL_TIM_PWM_Start+0x210>)
 8007676:	4293      	cmp	r3, r2
 8007678:	d009      	beq.n	800768e <HAL_TIM_PWM_Start+0x13e>
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	681b      	ldr	r3, [r3, #0]
 800767e:	4a39      	ldr	r2, [pc, #228]	@ (8007764 <HAL_TIM_PWM_Start+0x214>)
 8007680:	4293      	cmp	r3, r2
 8007682:	d004      	beq.n	800768e <HAL_TIM_PWM_Start+0x13e>
 8007684:	687b      	ldr	r3, [r7, #4]
 8007686:	681b      	ldr	r3, [r3, #0]
 8007688:	4a37      	ldr	r2, [pc, #220]	@ (8007768 <HAL_TIM_PWM_Start+0x218>)
 800768a:	4293      	cmp	r3, r2
 800768c:	d101      	bne.n	8007692 <HAL_TIM_PWM_Start+0x142>
 800768e:	2301      	movs	r3, #1
 8007690:	e000      	b.n	8007694 <HAL_TIM_PWM_Start+0x144>
 8007692:	2300      	movs	r3, #0
 8007694:	2b00      	cmp	r3, #0
 8007696:	d007      	beq.n	80076a8 <HAL_TIM_PWM_Start+0x158>
 8007698:	687b      	ldr	r3, [r7, #4]
 800769a:	681b      	ldr	r3, [r3, #0]
 800769c:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800769e:	687b      	ldr	r3, [r7, #4]
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80076a6:	645a      	str	r2, [r3, #68]	@ 0x44
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	681b      	ldr	r3, [r3, #0]
 80076ac:	4a2a      	ldr	r2, [pc, #168]	@ (8007758 <HAL_TIM_PWM_Start+0x208>)
 80076ae:	4293      	cmp	r3, r2
 80076b0:	d02c      	beq.n	800770c <HAL_TIM_PWM_Start+0x1bc>
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	681b      	ldr	r3, [r3, #0]
 80076b6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80076ba:	d027      	beq.n	800770c <HAL_TIM_PWM_Start+0x1bc>
 80076bc:	687b      	ldr	r3, [r7, #4]
 80076be:	681b      	ldr	r3, [r3, #0]
 80076c0:	4a2a      	ldr	r2, [pc, #168]	@ (800776c <HAL_TIM_PWM_Start+0x21c>)
 80076c2:	4293      	cmp	r3, r2
 80076c4:	d022      	beq.n	800770c <HAL_TIM_PWM_Start+0x1bc>
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	681b      	ldr	r3, [r3, #0]
 80076ca:	4a29      	ldr	r2, [pc, #164]	@ (8007770 <HAL_TIM_PWM_Start+0x220>)
 80076cc:	4293      	cmp	r3, r2
 80076ce:	d01d      	beq.n	800770c <HAL_TIM_PWM_Start+0x1bc>
 80076d0:	687b      	ldr	r3, [r7, #4]
 80076d2:	681b      	ldr	r3, [r3, #0]
 80076d4:	4a27      	ldr	r2, [pc, #156]	@ (8007774 <HAL_TIM_PWM_Start+0x224>)
 80076d6:	4293      	cmp	r3, r2
 80076d8:	d018      	beq.n	800770c <HAL_TIM_PWM_Start+0x1bc>
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	681b      	ldr	r3, [r3, #0]
 80076de:	4a1f      	ldr	r2, [pc, #124]	@ (800775c <HAL_TIM_PWM_Start+0x20c>)
 80076e0:	4293      	cmp	r3, r2
 80076e2:	d013      	beq.n	800770c <HAL_TIM_PWM_Start+0x1bc>
 80076e4:	687b      	ldr	r3, [r7, #4]
 80076e6:	681b      	ldr	r3, [r3, #0]
 80076e8:	4a23      	ldr	r2, [pc, #140]	@ (8007778 <HAL_TIM_PWM_Start+0x228>)
 80076ea:	4293      	cmp	r3, r2
 80076ec:	d00e      	beq.n	800770c <HAL_TIM_PWM_Start+0x1bc>
 80076ee:	687b      	ldr	r3, [r7, #4]
 80076f0:	681b      	ldr	r3, [r3, #0]
 80076f2:	4a1b      	ldr	r2, [pc, #108]	@ (8007760 <HAL_TIM_PWM_Start+0x210>)
 80076f4:	4293      	cmp	r3, r2
 80076f6:	d009      	beq.n	800770c <HAL_TIM_PWM_Start+0x1bc>
 80076f8:	687b      	ldr	r3, [r7, #4]
 80076fa:	681b      	ldr	r3, [r3, #0]
 80076fc:	4a1f      	ldr	r2, [pc, #124]	@ (800777c <HAL_TIM_PWM_Start+0x22c>)
 80076fe:	4293      	cmp	r3, r2
 8007700:	d004      	beq.n	800770c <HAL_TIM_PWM_Start+0x1bc>
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	681b      	ldr	r3, [r3, #0]
 8007706:	4a1e      	ldr	r2, [pc, #120]	@ (8007780 <HAL_TIM_PWM_Start+0x230>)
 8007708:	4293      	cmp	r3, r2
 800770a:	d115      	bne.n	8007738 <HAL_TIM_PWM_Start+0x1e8>
 800770c:	687b      	ldr	r3, [r7, #4]
 800770e:	681b      	ldr	r3, [r3, #0]
 8007710:	689a      	ldr	r2, [r3, #8]
 8007712:	4b1c      	ldr	r3, [pc, #112]	@ (8007784 <HAL_TIM_PWM_Start+0x234>)
 8007714:	4013      	ands	r3, r2
 8007716:	60fb      	str	r3, [r7, #12]
 8007718:	68fb      	ldr	r3, [r7, #12]
 800771a:	2b06      	cmp	r3, #6
 800771c:	d015      	beq.n	800774a <HAL_TIM_PWM_Start+0x1fa>
 800771e:	68fb      	ldr	r3, [r7, #12]
 8007720:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007724:	d011      	beq.n	800774a <HAL_TIM_PWM_Start+0x1fa>
 8007726:	687b      	ldr	r3, [r7, #4]
 8007728:	681b      	ldr	r3, [r3, #0]
 800772a:	681a      	ldr	r2, [r3, #0]
 800772c:	687b      	ldr	r3, [r7, #4]
 800772e:	681b      	ldr	r3, [r3, #0]
 8007730:	f042 0201 	orr.w	r2, r2, #1
 8007734:	601a      	str	r2, [r3, #0]
 8007736:	e008      	b.n	800774a <HAL_TIM_PWM_Start+0x1fa>
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	681a      	ldr	r2, [r3, #0]
 800773e:	687b      	ldr	r3, [r7, #4]
 8007740:	681b      	ldr	r3, [r3, #0]
 8007742:	f042 0201 	orr.w	r2, r2, #1
 8007746:	601a      	str	r2, [r3, #0]
 8007748:	e000      	b.n	800774c <HAL_TIM_PWM_Start+0x1fc>
 800774a:	bf00      	nop
 800774c:	2300      	movs	r3, #0
 800774e:	4618      	mov	r0, r3
 8007750:	3710      	adds	r7, #16
 8007752:	46bd      	mov	sp, r7
 8007754:	bd80      	pop	{r7, pc}
 8007756:	bf00      	nop
 8007758:	40010000 	.word	0x40010000
 800775c:	40010400 	.word	0x40010400
 8007760:	40014000 	.word	0x40014000
 8007764:	40014400 	.word	0x40014400
 8007768:	40014800 	.word	0x40014800
 800776c:	40000400 	.word	0x40000400
 8007770:	40000800 	.word	0x40000800
 8007774:	40000c00 	.word	0x40000c00
 8007778:	40001800 	.word	0x40001800
 800777c:	4000e000 	.word	0x4000e000
 8007780:	4000e400 	.word	0x4000e400
 8007784:	00010007 	.word	0x00010007

08007788 <HAL_TIM_PWM_ConfigChannel>:
 8007788:	b580      	push	{r7, lr}
 800778a:	b086      	sub	sp, #24
 800778c:	af00      	add	r7, sp, #0
 800778e:	60f8      	str	r0, [r7, #12]
 8007790:	60b9      	str	r1, [r7, #8]
 8007792:	607a      	str	r2, [r7, #4]
 8007794:	2300      	movs	r3, #0
 8007796:	75fb      	strb	r3, [r7, #23]
 8007798:	68fb      	ldr	r3, [r7, #12]
 800779a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800779e:	2b01      	cmp	r3, #1
 80077a0:	d101      	bne.n	80077a6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80077a2:	2302      	movs	r3, #2
 80077a4:	e0ff      	b.n	80079a6 <HAL_TIM_PWM_ConfigChannel+0x21e>
 80077a6:	68fb      	ldr	r3, [r7, #12]
 80077a8:	2201      	movs	r2, #1
 80077aa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	2b14      	cmp	r3, #20
 80077b2:	f200 80f0 	bhi.w	8007996 <HAL_TIM_PWM_ConfigChannel+0x20e>
 80077b6:	a201      	add	r2, pc, #4	@ (adr r2, 80077bc <HAL_TIM_PWM_ConfigChannel+0x34>)
 80077b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80077bc:	08007811 	.word	0x08007811
 80077c0:	08007997 	.word	0x08007997
 80077c4:	08007997 	.word	0x08007997
 80077c8:	08007997 	.word	0x08007997
 80077cc:	08007851 	.word	0x08007851
 80077d0:	08007997 	.word	0x08007997
 80077d4:	08007997 	.word	0x08007997
 80077d8:	08007997 	.word	0x08007997
 80077dc:	08007893 	.word	0x08007893
 80077e0:	08007997 	.word	0x08007997
 80077e4:	08007997 	.word	0x08007997
 80077e8:	08007997 	.word	0x08007997
 80077ec:	080078d3 	.word	0x080078d3
 80077f0:	08007997 	.word	0x08007997
 80077f4:	08007997 	.word	0x08007997
 80077f8:	08007997 	.word	0x08007997
 80077fc:	08007915 	.word	0x08007915
 8007800:	08007997 	.word	0x08007997
 8007804:	08007997 	.word	0x08007997
 8007808:	08007997 	.word	0x08007997
 800780c:	08007955 	.word	0x08007955
 8007810:	68fb      	ldr	r3, [r7, #12]
 8007812:	681b      	ldr	r3, [r3, #0]
 8007814:	68b9      	ldr	r1, [r7, #8]
 8007816:	4618      	mov	r0, r3
 8007818:	f000 f976 	bl	8007b08 <TIM_OC1_SetConfig>
 800781c:	68fb      	ldr	r3, [r7, #12]
 800781e:	681b      	ldr	r3, [r3, #0]
 8007820:	699a      	ldr	r2, [r3, #24]
 8007822:	68fb      	ldr	r3, [r7, #12]
 8007824:	681b      	ldr	r3, [r3, #0]
 8007826:	f042 0208 	orr.w	r2, r2, #8
 800782a:	619a      	str	r2, [r3, #24]
 800782c:	68fb      	ldr	r3, [r7, #12]
 800782e:	681b      	ldr	r3, [r3, #0]
 8007830:	699a      	ldr	r2, [r3, #24]
 8007832:	68fb      	ldr	r3, [r7, #12]
 8007834:	681b      	ldr	r3, [r3, #0]
 8007836:	f022 0204 	bic.w	r2, r2, #4
 800783a:	619a      	str	r2, [r3, #24]
 800783c:	68fb      	ldr	r3, [r7, #12]
 800783e:	681b      	ldr	r3, [r3, #0]
 8007840:	6999      	ldr	r1, [r3, #24]
 8007842:	68bb      	ldr	r3, [r7, #8]
 8007844:	691a      	ldr	r2, [r3, #16]
 8007846:	68fb      	ldr	r3, [r7, #12]
 8007848:	681b      	ldr	r3, [r3, #0]
 800784a:	430a      	orrs	r2, r1
 800784c:	619a      	str	r2, [r3, #24]
 800784e:	e0a5      	b.n	800799c <HAL_TIM_PWM_ConfigChannel+0x214>
 8007850:	68fb      	ldr	r3, [r7, #12]
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	68b9      	ldr	r1, [r7, #8]
 8007856:	4618      	mov	r0, r3
 8007858:	f000 f9e6 	bl	8007c28 <TIM_OC2_SetConfig>
 800785c:	68fb      	ldr	r3, [r7, #12]
 800785e:	681b      	ldr	r3, [r3, #0]
 8007860:	699a      	ldr	r2, [r3, #24]
 8007862:	68fb      	ldr	r3, [r7, #12]
 8007864:	681b      	ldr	r3, [r3, #0]
 8007866:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800786a:	619a      	str	r2, [r3, #24]
 800786c:	68fb      	ldr	r3, [r7, #12]
 800786e:	681b      	ldr	r3, [r3, #0]
 8007870:	699a      	ldr	r2, [r3, #24]
 8007872:	68fb      	ldr	r3, [r7, #12]
 8007874:	681b      	ldr	r3, [r3, #0]
 8007876:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800787a:	619a      	str	r2, [r3, #24]
 800787c:	68fb      	ldr	r3, [r7, #12]
 800787e:	681b      	ldr	r3, [r3, #0]
 8007880:	6999      	ldr	r1, [r3, #24]
 8007882:	68bb      	ldr	r3, [r7, #8]
 8007884:	691b      	ldr	r3, [r3, #16]
 8007886:	021a      	lsls	r2, r3, #8
 8007888:	68fb      	ldr	r3, [r7, #12]
 800788a:	681b      	ldr	r3, [r3, #0]
 800788c:	430a      	orrs	r2, r1
 800788e:	619a      	str	r2, [r3, #24]
 8007890:	e084      	b.n	800799c <HAL_TIM_PWM_ConfigChannel+0x214>
 8007892:	68fb      	ldr	r3, [r7, #12]
 8007894:	681b      	ldr	r3, [r3, #0]
 8007896:	68b9      	ldr	r1, [r7, #8]
 8007898:	4618      	mov	r0, r3
 800789a:	f000 fa4f 	bl	8007d3c <TIM_OC3_SetConfig>
 800789e:	68fb      	ldr	r3, [r7, #12]
 80078a0:	681b      	ldr	r3, [r3, #0]
 80078a2:	69da      	ldr	r2, [r3, #28]
 80078a4:	68fb      	ldr	r3, [r7, #12]
 80078a6:	681b      	ldr	r3, [r3, #0]
 80078a8:	f042 0208 	orr.w	r2, r2, #8
 80078ac:	61da      	str	r2, [r3, #28]
 80078ae:	68fb      	ldr	r3, [r7, #12]
 80078b0:	681b      	ldr	r3, [r3, #0]
 80078b2:	69da      	ldr	r2, [r3, #28]
 80078b4:	68fb      	ldr	r3, [r7, #12]
 80078b6:	681b      	ldr	r3, [r3, #0]
 80078b8:	f022 0204 	bic.w	r2, r2, #4
 80078bc:	61da      	str	r2, [r3, #28]
 80078be:	68fb      	ldr	r3, [r7, #12]
 80078c0:	681b      	ldr	r3, [r3, #0]
 80078c2:	69d9      	ldr	r1, [r3, #28]
 80078c4:	68bb      	ldr	r3, [r7, #8]
 80078c6:	691a      	ldr	r2, [r3, #16]
 80078c8:	68fb      	ldr	r3, [r7, #12]
 80078ca:	681b      	ldr	r3, [r3, #0]
 80078cc:	430a      	orrs	r2, r1
 80078ce:	61da      	str	r2, [r3, #28]
 80078d0:	e064      	b.n	800799c <HAL_TIM_PWM_ConfigChannel+0x214>
 80078d2:	68fb      	ldr	r3, [r7, #12]
 80078d4:	681b      	ldr	r3, [r3, #0]
 80078d6:	68b9      	ldr	r1, [r7, #8]
 80078d8:	4618      	mov	r0, r3
 80078da:	f000 fab7 	bl	8007e4c <TIM_OC4_SetConfig>
 80078de:	68fb      	ldr	r3, [r7, #12]
 80078e0:	681b      	ldr	r3, [r3, #0]
 80078e2:	69da      	ldr	r2, [r3, #28]
 80078e4:	68fb      	ldr	r3, [r7, #12]
 80078e6:	681b      	ldr	r3, [r3, #0]
 80078e8:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80078ec:	61da      	str	r2, [r3, #28]
 80078ee:	68fb      	ldr	r3, [r7, #12]
 80078f0:	681b      	ldr	r3, [r3, #0]
 80078f2:	69da      	ldr	r2, [r3, #28]
 80078f4:	68fb      	ldr	r3, [r7, #12]
 80078f6:	681b      	ldr	r3, [r3, #0]
 80078f8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80078fc:	61da      	str	r2, [r3, #28]
 80078fe:	68fb      	ldr	r3, [r7, #12]
 8007900:	681b      	ldr	r3, [r3, #0]
 8007902:	69d9      	ldr	r1, [r3, #28]
 8007904:	68bb      	ldr	r3, [r7, #8]
 8007906:	691b      	ldr	r3, [r3, #16]
 8007908:	021a      	lsls	r2, r3, #8
 800790a:	68fb      	ldr	r3, [r7, #12]
 800790c:	681b      	ldr	r3, [r3, #0]
 800790e:	430a      	orrs	r2, r1
 8007910:	61da      	str	r2, [r3, #28]
 8007912:	e043      	b.n	800799c <HAL_TIM_PWM_ConfigChannel+0x214>
 8007914:	68fb      	ldr	r3, [r7, #12]
 8007916:	681b      	ldr	r3, [r3, #0]
 8007918:	68b9      	ldr	r1, [r7, #8]
 800791a:	4618      	mov	r0, r3
 800791c:	f000 fb00 	bl	8007f20 <TIM_OC5_SetConfig>
 8007920:	68fb      	ldr	r3, [r7, #12]
 8007922:	681b      	ldr	r3, [r3, #0]
 8007924:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8007926:	68fb      	ldr	r3, [r7, #12]
 8007928:	681b      	ldr	r3, [r3, #0]
 800792a:	f042 0208 	orr.w	r2, r2, #8
 800792e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007930:	68fb      	ldr	r3, [r7, #12]
 8007932:	681b      	ldr	r3, [r3, #0]
 8007934:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8007936:	68fb      	ldr	r3, [r7, #12]
 8007938:	681b      	ldr	r3, [r3, #0]
 800793a:	f022 0204 	bic.w	r2, r2, #4
 800793e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007940:	68fb      	ldr	r3, [r7, #12]
 8007942:	681b      	ldr	r3, [r3, #0]
 8007944:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8007946:	68bb      	ldr	r3, [r7, #8]
 8007948:	691a      	ldr	r2, [r3, #16]
 800794a:	68fb      	ldr	r3, [r7, #12]
 800794c:	681b      	ldr	r3, [r3, #0]
 800794e:	430a      	orrs	r2, r1
 8007950:	655a      	str	r2, [r3, #84]	@ 0x54
 8007952:	e023      	b.n	800799c <HAL_TIM_PWM_ConfigChannel+0x214>
 8007954:	68fb      	ldr	r3, [r7, #12]
 8007956:	681b      	ldr	r3, [r3, #0]
 8007958:	68b9      	ldr	r1, [r7, #8]
 800795a:	4618      	mov	r0, r3
 800795c:	f000 fb44 	bl	8007fe8 <TIM_OC6_SetConfig>
 8007960:	68fb      	ldr	r3, [r7, #12]
 8007962:	681b      	ldr	r3, [r3, #0]
 8007964:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8007966:	68fb      	ldr	r3, [r7, #12]
 8007968:	681b      	ldr	r3, [r3, #0]
 800796a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800796e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007970:	68fb      	ldr	r3, [r7, #12]
 8007972:	681b      	ldr	r3, [r3, #0]
 8007974:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8007976:	68fb      	ldr	r3, [r7, #12]
 8007978:	681b      	ldr	r3, [r3, #0]
 800797a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800797e:	655a      	str	r2, [r3, #84]	@ 0x54
 8007980:	68fb      	ldr	r3, [r7, #12]
 8007982:	681b      	ldr	r3, [r3, #0]
 8007984:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 8007986:	68bb      	ldr	r3, [r7, #8]
 8007988:	691b      	ldr	r3, [r3, #16]
 800798a:	021a      	lsls	r2, r3, #8
 800798c:	68fb      	ldr	r3, [r7, #12]
 800798e:	681b      	ldr	r3, [r3, #0]
 8007990:	430a      	orrs	r2, r1
 8007992:	655a      	str	r2, [r3, #84]	@ 0x54
 8007994:	e002      	b.n	800799c <HAL_TIM_PWM_ConfigChannel+0x214>
 8007996:	2301      	movs	r3, #1
 8007998:	75fb      	strb	r3, [r7, #23]
 800799a:	bf00      	nop
 800799c:	68fb      	ldr	r3, [r7, #12]
 800799e:	2200      	movs	r2, #0
 80079a0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80079a4:	7dfb      	ldrb	r3, [r7, #23]
 80079a6:	4618      	mov	r0, r3
 80079a8:	3718      	adds	r7, #24
 80079aa:	46bd      	mov	sp, r7
 80079ac:	bd80      	pop	{r7, pc}
 80079ae:	bf00      	nop

080079b0 <TIM_Base_SetConfig>:
 80079b0:	b480      	push	{r7}
 80079b2:	b085      	sub	sp, #20
 80079b4:	af00      	add	r7, sp, #0
 80079b6:	6078      	str	r0, [r7, #4]
 80079b8:	6039      	str	r1, [r7, #0]
 80079ba:	687b      	ldr	r3, [r7, #4]
 80079bc:	681b      	ldr	r3, [r3, #0]
 80079be:	60fb      	str	r3, [r7, #12]
 80079c0:	687b      	ldr	r3, [r7, #4]
 80079c2:	4a47      	ldr	r2, [pc, #284]	@ (8007ae0 <TIM_Base_SetConfig+0x130>)
 80079c4:	4293      	cmp	r3, r2
 80079c6:	d013      	beq.n	80079f0 <TIM_Base_SetConfig+0x40>
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80079ce:	d00f      	beq.n	80079f0 <TIM_Base_SetConfig+0x40>
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	4a44      	ldr	r2, [pc, #272]	@ (8007ae4 <TIM_Base_SetConfig+0x134>)
 80079d4:	4293      	cmp	r3, r2
 80079d6:	d00b      	beq.n	80079f0 <TIM_Base_SetConfig+0x40>
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	4a43      	ldr	r2, [pc, #268]	@ (8007ae8 <TIM_Base_SetConfig+0x138>)
 80079dc:	4293      	cmp	r3, r2
 80079de:	d007      	beq.n	80079f0 <TIM_Base_SetConfig+0x40>
 80079e0:	687b      	ldr	r3, [r7, #4]
 80079e2:	4a42      	ldr	r2, [pc, #264]	@ (8007aec <TIM_Base_SetConfig+0x13c>)
 80079e4:	4293      	cmp	r3, r2
 80079e6:	d003      	beq.n	80079f0 <TIM_Base_SetConfig+0x40>
 80079e8:	687b      	ldr	r3, [r7, #4]
 80079ea:	4a41      	ldr	r2, [pc, #260]	@ (8007af0 <TIM_Base_SetConfig+0x140>)
 80079ec:	4293      	cmp	r3, r2
 80079ee:	d108      	bne.n	8007a02 <TIM_Base_SetConfig+0x52>
 80079f0:	68fb      	ldr	r3, [r7, #12]
 80079f2:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80079f6:	60fb      	str	r3, [r7, #12]
 80079f8:	683b      	ldr	r3, [r7, #0]
 80079fa:	685b      	ldr	r3, [r3, #4]
 80079fc:	68fa      	ldr	r2, [r7, #12]
 80079fe:	4313      	orrs	r3, r2
 8007a00:	60fb      	str	r3, [r7, #12]
 8007a02:	687b      	ldr	r3, [r7, #4]
 8007a04:	4a36      	ldr	r2, [pc, #216]	@ (8007ae0 <TIM_Base_SetConfig+0x130>)
 8007a06:	4293      	cmp	r3, r2
 8007a08:	d027      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a0a:	687b      	ldr	r3, [r7, #4]
 8007a0c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007a10:	d023      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a12:	687b      	ldr	r3, [r7, #4]
 8007a14:	4a33      	ldr	r2, [pc, #204]	@ (8007ae4 <TIM_Base_SetConfig+0x134>)
 8007a16:	4293      	cmp	r3, r2
 8007a18:	d01f      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a1a:	687b      	ldr	r3, [r7, #4]
 8007a1c:	4a32      	ldr	r2, [pc, #200]	@ (8007ae8 <TIM_Base_SetConfig+0x138>)
 8007a1e:	4293      	cmp	r3, r2
 8007a20:	d01b      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a22:	687b      	ldr	r3, [r7, #4]
 8007a24:	4a31      	ldr	r2, [pc, #196]	@ (8007aec <TIM_Base_SetConfig+0x13c>)
 8007a26:	4293      	cmp	r3, r2
 8007a28:	d017      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a2a:	687b      	ldr	r3, [r7, #4]
 8007a2c:	4a30      	ldr	r2, [pc, #192]	@ (8007af0 <TIM_Base_SetConfig+0x140>)
 8007a2e:	4293      	cmp	r3, r2
 8007a30:	d013      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a32:	687b      	ldr	r3, [r7, #4]
 8007a34:	4a2f      	ldr	r2, [pc, #188]	@ (8007af4 <TIM_Base_SetConfig+0x144>)
 8007a36:	4293      	cmp	r3, r2
 8007a38:	d00f      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	4a2e      	ldr	r2, [pc, #184]	@ (8007af8 <TIM_Base_SetConfig+0x148>)
 8007a3e:	4293      	cmp	r3, r2
 8007a40:	d00b      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a42:	687b      	ldr	r3, [r7, #4]
 8007a44:	4a2d      	ldr	r2, [pc, #180]	@ (8007afc <TIM_Base_SetConfig+0x14c>)
 8007a46:	4293      	cmp	r3, r2
 8007a48:	d007      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	4a2c      	ldr	r2, [pc, #176]	@ (8007b00 <TIM_Base_SetConfig+0x150>)
 8007a4e:	4293      	cmp	r3, r2
 8007a50:	d003      	beq.n	8007a5a <TIM_Base_SetConfig+0xaa>
 8007a52:	687b      	ldr	r3, [r7, #4]
 8007a54:	4a2b      	ldr	r2, [pc, #172]	@ (8007b04 <TIM_Base_SetConfig+0x154>)
 8007a56:	4293      	cmp	r3, r2
 8007a58:	d108      	bne.n	8007a6c <TIM_Base_SetConfig+0xbc>
 8007a5a:	68fb      	ldr	r3, [r7, #12]
 8007a5c:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007a60:	60fb      	str	r3, [r7, #12]
 8007a62:	683b      	ldr	r3, [r7, #0]
 8007a64:	68db      	ldr	r3, [r3, #12]
 8007a66:	68fa      	ldr	r2, [r7, #12]
 8007a68:	4313      	orrs	r3, r2
 8007a6a:	60fb      	str	r3, [r7, #12]
 8007a6c:	68fb      	ldr	r3, [r7, #12]
 8007a6e:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8007a72:	683b      	ldr	r3, [r7, #0]
 8007a74:	695b      	ldr	r3, [r3, #20]
 8007a76:	4313      	orrs	r3, r2
 8007a78:	60fb      	str	r3, [r7, #12]
 8007a7a:	683b      	ldr	r3, [r7, #0]
 8007a7c:	689a      	ldr	r2, [r3, #8]
 8007a7e:	687b      	ldr	r3, [r7, #4]
 8007a80:	62da      	str	r2, [r3, #44]	@ 0x2c
 8007a82:	683b      	ldr	r3, [r7, #0]
 8007a84:	681a      	ldr	r2, [r3, #0]
 8007a86:	687b      	ldr	r3, [r7, #4]
 8007a88:	629a      	str	r2, [r3, #40]	@ 0x28
 8007a8a:	687b      	ldr	r3, [r7, #4]
 8007a8c:	4a14      	ldr	r2, [pc, #80]	@ (8007ae0 <TIM_Base_SetConfig+0x130>)
 8007a8e:	4293      	cmp	r3, r2
 8007a90:	d00f      	beq.n	8007ab2 <TIM_Base_SetConfig+0x102>
 8007a92:	687b      	ldr	r3, [r7, #4]
 8007a94:	4a16      	ldr	r2, [pc, #88]	@ (8007af0 <TIM_Base_SetConfig+0x140>)
 8007a96:	4293      	cmp	r3, r2
 8007a98:	d00b      	beq.n	8007ab2 <TIM_Base_SetConfig+0x102>
 8007a9a:	687b      	ldr	r3, [r7, #4]
 8007a9c:	4a15      	ldr	r2, [pc, #84]	@ (8007af4 <TIM_Base_SetConfig+0x144>)
 8007a9e:	4293      	cmp	r3, r2
 8007aa0:	d007      	beq.n	8007ab2 <TIM_Base_SetConfig+0x102>
 8007aa2:	687b      	ldr	r3, [r7, #4]
 8007aa4:	4a14      	ldr	r2, [pc, #80]	@ (8007af8 <TIM_Base_SetConfig+0x148>)
 8007aa6:	4293      	cmp	r3, r2
 8007aa8:	d003      	beq.n	8007ab2 <TIM_Base_SetConfig+0x102>
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	4a13      	ldr	r2, [pc, #76]	@ (8007afc <TIM_Base_SetConfig+0x14c>)
 8007aae:	4293      	cmp	r3, r2
 8007ab0:	d103      	bne.n	8007aba <TIM_Base_SetConfig+0x10a>
 8007ab2:	683b      	ldr	r3, [r7, #0]
 8007ab4:	691a      	ldr	r2, [r3, #16]
 8007ab6:	687b      	ldr	r3, [r7, #4]
 8007ab8:	631a      	str	r2, [r3, #48]	@ 0x30
 8007aba:	687b      	ldr	r3, [r7, #4]
 8007abc:	681b      	ldr	r3, [r3, #0]
 8007abe:	f043 0204 	orr.w	r2, r3, #4
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	601a      	str	r2, [r3, #0]
 8007ac6:	687b      	ldr	r3, [r7, #4]
 8007ac8:	2201      	movs	r2, #1
 8007aca:	615a      	str	r2, [r3, #20]
 8007acc:	687b      	ldr	r3, [r7, #4]
 8007ace:	68fa      	ldr	r2, [r7, #12]
 8007ad0:	601a      	str	r2, [r3, #0]
 8007ad2:	bf00      	nop
 8007ad4:	3714      	adds	r7, #20
 8007ad6:	46bd      	mov	sp, r7
 8007ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007adc:	4770      	bx	lr
 8007ade:	bf00      	nop
 8007ae0:	40010000 	.word	0x40010000
 8007ae4:	40000400 	.word	0x40000400
 8007ae8:	40000800 	.word	0x40000800
 8007aec:	40000c00 	.word	0x40000c00
 8007af0:	40010400 	.word	0x40010400
 8007af4:	40014000 	.word	0x40014000
 8007af8:	40014400 	.word	0x40014400
 8007afc:	40014800 	.word	0x40014800
 8007b00:	4000e000 	.word	0x4000e000
 8007b04:	4000e400 	.word	0x4000e400

08007b08 <TIM_OC1_SetConfig>:
 8007b08:	b480      	push	{r7}
 8007b0a:	b087      	sub	sp, #28
 8007b0c:	af00      	add	r7, sp, #0
 8007b0e:	6078      	str	r0, [r7, #4]
 8007b10:	6039      	str	r1, [r7, #0]
 8007b12:	687b      	ldr	r3, [r7, #4]
 8007b14:	6a1b      	ldr	r3, [r3, #32]
 8007b16:	617b      	str	r3, [r7, #20]
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	6a1b      	ldr	r3, [r3, #32]
 8007b1c:	f023 0201 	bic.w	r2, r3, #1
 8007b20:	687b      	ldr	r3, [r7, #4]
 8007b22:	621a      	str	r2, [r3, #32]
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	685b      	ldr	r3, [r3, #4]
 8007b28:	613b      	str	r3, [r7, #16]
 8007b2a:	687b      	ldr	r3, [r7, #4]
 8007b2c:	699b      	ldr	r3, [r3, #24]
 8007b2e:	60fb      	str	r3, [r7, #12]
 8007b30:	68fa      	ldr	r2, [r7, #12]
 8007b32:	4b37      	ldr	r3, [pc, #220]	@ (8007c10 <TIM_OC1_SetConfig+0x108>)
 8007b34:	4013      	ands	r3, r2
 8007b36:	60fb      	str	r3, [r7, #12]
 8007b38:	68fb      	ldr	r3, [r7, #12]
 8007b3a:	f023 0303 	bic.w	r3, r3, #3
 8007b3e:	60fb      	str	r3, [r7, #12]
 8007b40:	683b      	ldr	r3, [r7, #0]
 8007b42:	681b      	ldr	r3, [r3, #0]
 8007b44:	68fa      	ldr	r2, [r7, #12]
 8007b46:	4313      	orrs	r3, r2
 8007b48:	60fb      	str	r3, [r7, #12]
 8007b4a:	697b      	ldr	r3, [r7, #20]
 8007b4c:	f023 0302 	bic.w	r3, r3, #2
 8007b50:	617b      	str	r3, [r7, #20]
 8007b52:	683b      	ldr	r3, [r7, #0]
 8007b54:	689b      	ldr	r3, [r3, #8]
 8007b56:	697a      	ldr	r2, [r7, #20]
 8007b58:	4313      	orrs	r3, r2
 8007b5a:	617b      	str	r3, [r7, #20]
 8007b5c:	687b      	ldr	r3, [r7, #4]
 8007b5e:	4a2d      	ldr	r2, [pc, #180]	@ (8007c14 <TIM_OC1_SetConfig+0x10c>)
 8007b60:	4293      	cmp	r3, r2
 8007b62:	d00f      	beq.n	8007b84 <TIM_OC1_SetConfig+0x7c>
 8007b64:	687b      	ldr	r3, [r7, #4]
 8007b66:	4a2c      	ldr	r2, [pc, #176]	@ (8007c18 <TIM_OC1_SetConfig+0x110>)
 8007b68:	4293      	cmp	r3, r2
 8007b6a:	d00b      	beq.n	8007b84 <TIM_OC1_SetConfig+0x7c>
 8007b6c:	687b      	ldr	r3, [r7, #4]
 8007b6e:	4a2b      	ldr	r2, [pc, #172]	@ (8007c1c <TIM_OC1_SetConfig+0x114>)
 8007b70:	4293      	cmp	r3, r2
 8007b72:	d007      	beq.n	8007b84 <TIM_OC1_SetConfig+0x7c>
 8007b74:	687b      	ldr	r3, [r7, #4]
 8007b76:	4a2a      	ldr	r2, [pc, #168]	@ (8007c20 <TIM_OC1_SetConfig+0x118>)
 8007b78:	4293      	cmp	r3, r2
 8007b7a:	d003      	beq.n	8007b84 <TIM_OC1_SetConfig+0x7c>
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	4a29      	ldr	r2, [pc, #164]	@ (8007c24 <TIM_OC1_SetConfig+0x11c>)
 8007b80:	4293      	cmp	r3, r2
 8007b82:	d10c      	bne.n	8007b9e <TIM_OC1_SetConfig+0x96>
 8007b84:	697b      	ldr	r3, [r7, #20]
 8007b86:	f023 0308 	bic.w	r3, r3, #8
 8007b8a:	617b      	str	r3, [r7, #20]
 8007b8c:	683b      	ldr	r3, [r7, #0]
 8007b8e:	68db      	ldr	r3, [r3, #12]
 8007b90:	697a      	ldr	r2, [r7, #20]
 8007b92:	4313      	orrs	r3, r2
 8007b94:	617b      	str	r3, [r7, #20]
 8007b96:	697b      	ldr	r3, [r7, #20]
 8007b98:	f023 0304 	bic.w	r3, r3, #4
 8007b9c:	617b      	str	r3, [r7, #20]
 8007b9e:	687b      	ldr	r3, [r7, #4]
 8007ba0:	4a1c      	ldr	r2, [pc, #112]	@ (8007c14 <TIM_OC1_SetConfig+0x10c>)
 8007ba2:	4293      	cmp	r3, r2
 8007ba4:	d00f      	beq.n	8007bc6 <TIM_OC1_SetConfig+0xbe>
 8007ba6:	687b      	ldr	r3, [r7, #4]
 8007ba8:	4a1b      	ldr	r2, [pc, #108]	@ (8007c18 <TIM_OC1_SetConfig+0x110>)
 8007baa:	4293      	cmp	r3, r2
 8007bac:	d00b      	beq.n	8007bc6 <TIM_OC1_SetConfig+0xbe>
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	4a1a      	ldr	r2, [pc, #104]	@ (8007c1c <TIM_OC1_SetConfig+0x114>)
 8007bb2:	4293      	cmp	r3, r2
 8007bb4:	d007      	beq.n	8007bc6 <TIM_OC1_SetConfig+0xbe>
 8007bb6:	687b      	ldr	r3, [r7, #4]
 8007bb8:	4a19      	ldr	r2, [pc, #100]	@ (8007c20 <TIM_OC1_SetConfig+0x118>)
 8007bba:	4293      	cmp	r3, r2
 8007bbc:	d003      	beq.n	8007bc6 <TIM_OC1_SetConfig+0xbe>
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	4a18      	ldr	r2, [pc, #96]	@ (8007c24 <TIM_OC1_SetConfig+0x11c>)
 8007bc2:	4293      	cmp	r3, r2
 8007bc4:	d111      	bne.n	8007bea <TIM_OC1_SetConfig+0xe2>
 8007bc6:	693b      	ldr	r3, [r7, #16]
 8007bc8:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007bcc:	613b      	str	r3, [r7, #16]
 8007bce:	693b      	ldr	r3, [r7, #16]
 8007bd0:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007bd4:	613b      	str	r3, [r7, #16]
 8007bd6:	683b      	ldr	r3, [r7, #0]
 8007bd8:	695b      	ldr	r3, [r3, #20]
 8007bda:	693a      	ldr	r2, [r7, #16]
 8007bdc:	4313      	orrs	r3, r2
 8007bde:	613b      	str	r3, [r7, #16]
 8007be0:	683b      	ldr	r3, [r7, #0]
 8007be2:	699b      	ldr	r3, [r3, #24]
 8007be4:	693a      	ldr	r2, [r7, #16]
 8007be6:	4313      	orrs	r3, r2
 8007be8:	613b      	str	r3, [r7, #16]
 8007bea:	687b      	ldr	r3, [r7, #4]
 8007bec:	693a      	ldr	r2, [r7, #16]
 8007bee:	605a      	str	r2, [r3, #4]
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	68fa      	ldr	r2, [r7, #12]
 8007bf4:	619a      	str	r2, [r3, #24]
 8007bf6:	683b      	ldr	r3, [r7, #0]
 8007bf8:	685a      	ldr	r2, [r3, #4]
 8007bfa:	687b      	ldr	r3, [r7, #4]
 8007bfc:	635a      	str	r2, [r3, #52]	@ 0x34
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	697a      	ldr	r2, [r7, #20]
 8007c02:	621a      	str	r2, [r3, #32]
 8007c04:	bf00      	nop
 8007c06:	371c      	adds	r7, #28
 8007c08:	46bd      	mov	sp, r7
 8007c0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c0e:	4770      	bx	lr
 8007c10:	fffeff8f 	.word	0xfffeff8f
 8007c14:	40010000 	.word	0x40010000
 8007c18:	40010400 	.word	0x40010400
 8007c1c:	40014000 	.word	0x40014000
 8007c20:	40014400 	.word	0x40014400
 8007c24:	40014800 	.word	0x40014800

08007c28 <TIM_OC2_SetConfig>:
 8007c28:	b480      	push	{r7}
 8007c2a:	b087      	sub	sp, #28
 8007c2c:	af00      	add	r7, sp, #0
 8007c2e:	6078      	str	r0, [r7, #4]
 8007c30:	6039      	str	r1, [r7, #0]
 8007c32:	687b      	ldr	r3, [r7, #4]
 8007c34:	6a1b      	ldr	r3, [r3, #32]
 8007c36:	617b      	str	r3, [r7, #20]
 8007c38:	687b      	ldr	r3, [r7, #4]
 8007c3a:	6a1b      	ldr	r3, [r3, #32]
 8007c3c:	f023 0210 	bic.w	r2, r3, #16
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	621a      	str	r2, [r3, #32]
 8007c44:	687b      	ldr	r3, [r7, #4]
 8007c46:	685b      	ldr	r3, [r3, #4]
 8007c48:	613b      	str	r3, [r7, #16]
 8007c4a:	687b      	ldr	r3, [r7, #4]
 8007c4c:	699b      	ldr	r3, [r3, #24]
 8007c4e:	60fb      	str	r3, [r7, #12]
 8007c50:	68fa      	ldr	r2, [r7, #12]
 8007c52:	4b34      	ldr	r3, [pc, #208]	@ (8007d24 <TIM_OC2_SetConfig+0xfc>)
 8007c54:	4013      	ands	r3, r2
 8007c56:	60fb      	str	r3, [r7, #12]
 8007c58:	68fb      	ldr	r3, [r7, #12]
 8007c5a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007c5e:	60fb      	str	r3, [r7, #12]
 8007c60:	683b      	ldr	r3, [r7, #0]
 8007c62:	681b      	ldr	r3, [r3, #0]
 8007c64:	021b      	lsls	r3, r3, #8
 8007c66:	68fa      	ldr	r2, [r7, #12]
 8007c68:	4313      	orrs	r3, r2
 8007c6a:	60fb      	str	r3, [r7, #12]
 8007c6c:	697b      	ldr	r3, [r7, #20]
 8007c6e:	f023 0320 	bic.w	r3, r3, #32
 8007c72:	617b      	str	r3, [r7, #20]
 8007c74:	683b      	ldr	r3, [r7, #0]
 8007c76:	689b      	ldr	r3, [r3, #8]
 8007c78:	011b      	lsls	r3, r3, #4
 8007c7a:	697a      	ldr	r2, [r7, #20]
 8007c7c:	4313      	orrs	r3, r2
 8007c7e:	617b      	str	r3, [r7, #20]
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	4a29      	ldr	r2, [pc, #164]	@ (8007d28 <TIM_OC2_SetConfig+0x100>)
 8007c84:	4293      	cmp	r3, r2
 8007c86:	d003      	beq.n	8007c90 <TIM_OC2_SetConfig+0x68>
 8007c88:	687b      	ldr	r3, [r7, #4]
 8007c8a:	4a28      	ldr	r2, [pc, #160]	@ (8007d2c <TIM_OC2_SetConfig+0x104>)
 8007c8c:	4293      	cmp	r3, r2
 8007c8e:	d10d      	bne.n	8007cac <TIM_OC2_SetConfig+0x84>
 8007c90:	697b      	ldr	r3, [r7, #20]
 8007c92:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007c96:	617b      	str	r3, [r7, #20]
 8007c98:	683b      	ldr	r3, [r7, #0]
 8007c9a:	68db      	ldr	r3, [r3, #12]
 8007c9c:	011b      	lsls	r3, r3, #4
 8007c9e:	697a      	ldr	r2, [r7, #20]
 8007ca0:	4313      	orrs	r3, r2
 8007ca2:	617b      	str	r3, [r7, #20]
 8007ca4:	697b      	ldr	r3, [r7, #20]
 8007ca6:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007caa:	617b      	str	r3, [r7, #20]
 8007cac:	687b      	ldr	r3, [r7, #4]
 8007cae:	4a1e      	ldr	r2, [pc, #120]	@ (8007d28 <TIM_OC2_SetConfig+0x100>)
 8007cb0:	4293      	cmp	r3, r2
 8007cb2:	d00f      	beq.n	8007cd4 <TIM_OC2_SetConfig+0xac>
 8007cb4:	687b      	ldr	r3, [r7, #4]
 8007cb6:	4a1d      	ldr	r2, [pc, #116]	@ (8007d2c <TIM_OC2_SetConfig+0x104>)
 8007cb8:	4293      	cmp	r3, r2
 8007cba:	d00b      	beq.n	8007cd4 <TIM_OC2_SetConfig+0xac>
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	4a1c      	ldr	r2, [pc, #112]	@ (8007d30 <TIM_OC2_SetConfig+0x108>)
 8007cc0:	4293      	cmp	r3, r2
 8007cc2:	d007      	beq.n	8007cd4 <TIM_OC2_SetConfig+0xac>
 8007cc4:	687b      	ldr	r3, [r7, #4]
 8007cc6:	4a1b      	ldr	r2, [pc, #108]	@ (8007d34 <TIM_OC2_SetConfig+0x10c>)
 8007cc8:	4293      	cmp	r3, r2
 8007cca:	d003      	beq.n	8007cd4 <TIM_OC2_SetConfig+0xac>
 8007ccc:	687b      	ldr	r3, [r7, #4]
 8007cce:	4a1a      	ldr	r2, [pc, #104]	@ (8007d38 <TIM_OC2_SetConfig+0x110>)
 8007cd0:	4293      	cmp	r3, r2
 8007cd2:	d113      	bne.n	8007cfc <TIM_OC2_SetConfig+0xd4>
 8007cd4:	693b      	ldr	r3, [r7, #16]
 8007cd6:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007cda:	613b      	str	r3, [r7, #16]
 8007cdc:	693b      	ldr	r3, [r7, #16]
 8007cde:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007ce2:	613b      	str	r3, [r7, #16]
 8007ce4:	683b      	ldr	r3, [r7, #0]
 8007ce6:	695b      	ldr	r3, [r3, #20]
 8007ce8:	009b      	lsls	r3, r3, #2
 8007cea:	693a      	ldr	r2, [r7, #16]
 8007cec:	4313      	orrs	r3, r2
 8007cee:	613b      	str	r3, [r7, #16]
 8007cf0:	683b      	ldr	r3, [r7, #0]
 8007cf2:	699b      	ldr	r3, [r3, #24]
 8007cf4:	009b      	lsls	r3, r3, #2
 8007cf6:	693a      	ldr	r2, [r7, #16]
 8007cf8:	4313      	orrs	r3, r2
 8007cfa:	613b      	str	r3, [r7, #16]
 8007cfc:	687b      	ldr	r3, [r7, #4]
 8007cfe:	693a      	ldr	r2, [r7, #16]
 8007d00:	605a      	str	r2, [r3, #4]
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	68fa      	ldr	r2, [r7, #12]
 8007d06:	619a      	str	r2, [r3, #24]
 8007d08:	683b      	ldr	r3, [r7, #0]
 8007d0a:	685a      	ldr	r2, [r3, #4]
 8007d0c:	687b      	ldr	r3, [r7, #4]
 8007d0e:	639a      	str	r2, [r3, #56]	@ 0x38
 8007d10:	687b      	ldr	r3, [r7, #4]
 8007d12:	697a      	ldr	r2, [r7, #20]
 8007d14:	621a      	str	r2, [r3, #32]
 8007d16:	bf00      	nop
 8007d18:	371c      	adds	r7, #28
 8007d1a:	46bd      	mov	sp, r7
 8007d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d20:	4770      	bx	lr
 8007d22:	bf00      	nop
 8007d24:	feff8fff 	.word	0xfeff8fff
 8007d28:	40010000 	.word	0x40010000
 8007d2c:	40010400 	.word	0x40010400
 8007d30:	40014000 	.word	0x40014000
 8007d34:	40014400 	.word	0x40014400
 8007d38:	40014800 	.word	0x40014800

08007d3c <TIM_OC3_SetConfig>:
 8007d3c:	b480      	push	{r7}
 8007d3e:	b087      	sub	sp, #28
 8007d40:	af00      	add	r7, sp, #0
 8007d42:	6078      	str	r0, [r7, #4]
 8007d44:	6039      	str	r1, [r7, #0]
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	6a1b      	ldr	r3, [r3, #32]
 8007d4a:	617b      	str	r3, [r7, #20]
 8007d4c:	687b      	ldr	r3, [r7, #4]
 8007d4e:	6a1b      	ldr	r3, [r3, #32]
 8007d50:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8007d54:	687b      	ldr	r3, [r7, #4]
 8007d56:	621a      	str	r2, [r3, #32]
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	685b      	ldr	r3, [r3, #4]
 8007d5c:	613b      	str	r3, [r7, #16]
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	69db      	ldr	r3, [r3, #28]
 8007d62:	60fb      	str	r3, [r7, #12]
 8007d64:	68fa      	ldr	r2, [r7, #12]
 8007d66:	4b33      	ldr	r3, [pc, #204]	@ (8007e34 <TIM_OC3_SetConfig+0xf8>)
 8007d68:	4013      	ands	r3, r2
 8007d6a:	60fb      	str	r3, [r7, #12]
 8007d6c:	68fb      	ldr	r3, [r7, #12]
 8007d6e:	f023 0303 	bic.w	r3, r3, #3
 8007d72:	60fb      	str	r3, [r7, #12]
 8007d74:	683b      	ldr	r3, [r7, #0]
 8007d76:	681b      	ldr	r3, [r3, #0]
 8007d78:	68fa      	ldr	r2, [r7, #12]
 8007d7a:	4313      	orrs	r3, r2
 8007d7c:	60fb      	str	r3, [r7, #12]
 8007d7e:	697b      	ldr	r3, [r7, #20]
 8007d80:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007d84:	617b      	str	r3, [r7, #20]
 8007d86:	683b      	ldr	r3, [r7, #0]
 8007d88:	689b      	ldr	r3, [r3, #8]
 8007d8a:	021b      	lsls	r3, r3, #8
 8007d8c:	697a      	ldr	r2, [r7, #20]
 8007d8e:	4313      	orrs	r3, r2
 8007d90:	617b      	str	r3, [r7, #20]
 8007d92:	687b      	ldr	r3, [r7, #4]
 8007d94:	4a28      	ldr	r2, [pc, #160]	@ (8007e38 <TIM_OC3_SetConfig+0xfc>)
 8007d96:	4293      	cmp	r3, r2
 8007d98:	d003      	beq.n	8007da2 <TIM_OC3_SetConfig+0x66>
 8007d9a:	687b      	ldr	r3, [r7, #4]
 8007d9c:	4a27      	ldr	r2, [pc, #156]	@ (8007e3c <TIM_OC3_SetConfig+0x100>)
 8007d9e:	4293      	cmp	r3, r2
 8007da0:	d10d      	bne.n	8007dbe <TIM_OC3_SetConfig+0x82>
 8007da2:	697b      	ldr	r3, [r7, #20]
 8007da4:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007da8:	617b      	str	r3, [r7, #20]
 8007daa:	683b      	ldr	r3, [r7, #0]
 8007dac:	68db      	ldr	r3, [r3, #12]
 8007dae:	021b      	lsls	r3, r3, #8
 8007db0:	697a      	ldr	r2, [r7, #20]
 8007db2:	4313      	orrs	r3, r2
 8007db4:	617b      	str	r3, [r7, #20]
 8007db6:	697b      	ldr	r3, [r7, #20]
 8007db8:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007dbc:	617b      	str	r3, [r7, #20]
 8007dbe:	687b      	ldr	r3, [r7, #4]
 8007dc0:	4a1d      	ldr	r2, [pc, #116]	@ (8007e38 <TIM_OC3_SetConfig+0xfc>)
 8007dc2:	4293      	cmp	r3, r2
 8007dc4:	d00f      	beq.n	8007de6 <TIM_OC3_SetConfig+0xaa>
 8007dc6:	687b      	ldr	r3, [r7, #4]
 8007dc8:	4a1c      	ldr	r2, [pc, #112]	@ (8007e3c <TIM_OC3_SetConfig+0x100>)
 8007dca:	4293      	cmp	r3, r2
 8007dcc:	d00b      	beq.n	8007de6 <TIM_OC3_SetConfig+0xaa>
 8007dce:	687b      	ldr	r3, [r7, #4]
 8007dd0:	4a1b      	ldr	r2, [pc, #108]	@ (8007e40 <TIM_OC3_SetConfig+0x104>)
 8007dd2:	4293      	cmp	r3, r2
 8007dd4:	d007      	beq.n	8007de6 <TIM_OC3_SetConfig+0xaa>
 8007dd6:	687b      	ldr	r3, [r7, #4]
 8007dd8:	4a1a      	ldr	r2, [pc, #104]	@ (8007e44 <TIM_OC3_SetConfig+0x108>)
 8007dda:	4293      	cmp	r3, r2
 8007ddc:	d003      	beq.n	8007de6 <TIM_OC3_SetConfig+0xaa>
 8007dde:	687b      	ldr	r3, [r7, #4]
 8007de0:	4a19      	ldr	r2, [pc, #100]	@ (8007e48 <TIM_OC3_SetConfig+0x10c>)
 8007de2:	4293      	cmp	r3, r2
 8007de4:	d113      	bne.n	8007e0e <TIM_OC3_SetConfig+0xd2>
 8007de6:	693b      	ldr	r3, [r7, #16]
 8007de8:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007dec:	613b      	str	r3, [r7, #16]
 8007dee:	693b      	ldr	r3, [r7, #16]
 8007df0:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007df4:	613b      	str	r3, [r7, #16]
 8007df6:	683b      	ldr	r3, [r7, #0]
 8007df8:	695b      	ldr	r3, [r3, #20]
 8007dfa:	011b      	lsls	r3, r3, #4
 8007dfc:	693a      	ldr	r2, [r7, #16]
 8007dfe:	4313      	orrs	r3, r2
 8007e00:	613b      	str	r3, [r7, #16]
 8007e02:	683b      	ldr	r3, [r7, #0]
 8007e04:	699b      	ldr	r3, [r3, #24]
 8007e06:	011b      	lsls	r3, r3, #4
 8007e08:	693a      	ldr	r2, [r7, #16]
 8007e0a:	4313      	orrs	r3, r2
 8007e0c:	613b      	str	r3, [r7, #16]
 8007e0e:	687b      	ldr	r3, [r7, #4]
 8007e10:	693a      	ldr	r2, [r7, #16]
 8007e12:	605a      	str	r2, [r3, #4]
 8007e14:	687b      	ldr	r3, [r7, #4]
 8007e16:	68fa      	ldr	r2, [r7, #12]
 8007e18:	61da      	str	r2, [r3, #28]
 8007e1a:	683b      	ldr	r3, [r7, #0]
 8007e1c:	685a      	ldr	r2, [r3, #4]
 8007e1e:	687b      	ldr	r3, [r7, #4]
 8007e20:	63da      	str	r2, [r3, #60]	@ 0x3c
 8007e22:	687b      	ldr	r3, [r7, #4]
 8007e24:	697a      	ldr	r2, [r7, #20]
 8007e26:	621a      	str	r2, [r3, #32]
 8007e28:	bf00      	nop
 8007e2a:	371c      	adds	r7, #28
 8007e2c:	46bd      	mov	sp, r7
 8007e2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e32:	4770      	bx	lr
 8007e34:	fffeff8f 	.word	0xfffeff8f
 8007e38:	40010000 	.word	0x40010000
 8007e3c:	40010400 	.word	0x40010400
 8007e40:	40014000 	.word	0x40014000
 8007e44:	40014400 	.word	0x40014400
 8007e48:	40014800 	.word	0x40014800

08007e4c <TIM_OC4_SetConfig>:
 8007e4c:	b480      	push	{r7}
 8007e4e:	b087      	sub	sp, #28
 8007e50:	af00      	add	r7, sp, #0
 8007e52:	6078      	str	r0, [r7, #4]
 8007e54:	6039      	str	r1, [r7, #0]
 8007e56:	687b      	ldr	r3, [r7, #4]
 8007e58:	6a1b      	ldr	r3, [r3, #32]
 8007e5a:	613b      	str	r3, [r7, #16]
 8007e5c:	687b      	ldr	r3, [r7, #4]
 8007e5e:	6a1b      	ldr	r3, [r3, #32]
 8007e60:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007e64:	687b      	ldr	r3, [r7, #4]
 8007e66:	621a      	str	r2, [r3, #32]
 8007e68:	687b      	ldr	r3, [r7, #4]
 8007e6a:	685b      	ldr	r3, [r3, #4]
 8007e6c:	617b      	str	r3, [r7, #20]
 8007e6e:	687b      	ldr	r3, [r7, #4]
 8007e70:	69db      	ldr	r3, [r3, #28]
 8007e72:	60fb      	str	r3, [r7, #12]
 8007e74:	68fa      	ldr	r2, [r7, #12]
 8007e76:	4b24      	ldr	r3, [pc, #144]	@ (8007f08 <TIM_OC4_SetConfig+0xbc>)
 8007e78:	4013      	ands	r3, r2
 8007e7a:	60fb      	str	r3, [r7, #12]
 8007e7c:	68fb      	ldr	r3, [r7, #12]
 8007e7e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007e82:	60fb      	str	r3, [r7, #12]
 8007e84:	683b      	ldr	r3, [r7, #0]
 8007e86:	681b      	ldr	r3, [r3, #0]
 8007e88:	021b      	lsls	r3, r3, #8
 8007e8a:	68fa      	ldr	r2, [r7, #12]
 8007e8c:	4313      	orrs	r3, r2
 8007e8e:	60fb      	str	r3, [r7, #12]
 8007e90:	693b      	ldr	r3, [r7, #16]
 8007e92:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007e96:	613b      	str	r3, [r7, #16]
 8007e98:	683b      	ldr	r3, [r7, #0]
 8007e9a:	689b      	ldr	r3, [r3, #8]
 8007e9c:	031b      	lsls	r3, r3, #12
 8007e9e:	693a      	ldr	r2, [r7, #16]
 8007ea0:	4313      	orrs	r3, r2
 8007ea2:	613b      	str	r3, [r7, #16]
 8007ea4:	687b      	ldr	r3, [r7, #4]
 8007ea6:	4a19      	ldr	r2, [pc, #100]	@ (8007f0c <TIM_OC4_SetConfig+0xc0>)
 8007ea8:	4293      	cmp	r3, r2
 8007eaa:	d00f      	beq.n	8007ecc <TIM_OC4_SetConfig+0x80>
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	4a18      	ldr	r2, [pc, #96]	@ (8007f10 <TIM_OC4_SetConfig+0xc4>)
 8007eb0:	4293      	cmp	r3, r2
 8007eb2:	d00b      	beq.n	8007ecc <TIM_OC4_SetConfig+0x80>
 8007eb4:	687b      	ldr	r3, [r7, #4]
 8007eb6:	4a17      	ldr	r2, [pc, #92]	@ (8007f14 <TIM_OC4_SetConfig+0xc8>)
 8007eb8:	4293      	cmp	r3, r2
 8007eba:	d007      	beq.n	8007ecc <TIM_OC4_SetConfig+0x80>
 8007ebc:	687b      	ldr	r3, [r7, #4]
 8007ebe:	4a16      	ldr	r2, [pc, #88]	@ (8007f18 <TIM_OC4_SetConfig+0xcc>)
 8007ec0:	4293      	cmp	r3, r2
 8007ec2:	d003      	beq.n	8007ecc <TIM_OC4_SetConfig+0x80>
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	4a15      	ldr	r2, [pc, #84]	@ (8007f1c <TIM_OC4_SetConfig+0xd0>)
 8007ec8:	4293      	cmp	r3, r2
 8007eca:	d109      	bne.n	8007ee0 <TIM_OC4_SetConfig+0x94>
 8007ecc:	697b      	ldr	r3, [r7, #20]
 8007ece:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007ed2:	617b      	str	r3, [r7, #20]
 8007ed4:	683b      	ldr	r3, [r7, #0]
 8007ed6:	695b      	ldr	r3, [r3, #20]
 8007ed8:	019b      	lsls	r3, r3, #6
 8007eda:	697a      	ldr	r2, [r7, #20]
 8007edc:	4313      	orrs	r3, r2
 8007ede:	617b      	str	r3, [r7, #20]
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	697a      	ldr	r2, [r7, #20]
 8007ee4:	605a      	str	r2, [r3, #4]
 8007ee6:	687b      	ldr	r3, [r7, #4]
 8007ee8:	68fa      	ldr	r2, [r7, #12]
 8007eea:	61da      	str	r2, [r3, #28]
 8007eec:	683b      	ldr	r3, [r7, #0]
 8007eee:	685a      	ldr	r2, [r3, #4]
 8007ef0:	687b      	ldr	r3, [r7, #4]
 8007ef2:	641a      	str	r2, [r3, #64]	@ 0x40
 8007ef4:	687b      	ldr	r3, [r7, #4]
 8007ef6:	693a      	ldr	r2, [r7, #16]
 8007ef8:	621a      	str	r2, [r3, #32]
 8007efa:	bf00      	nop
 8007efc:	371c      	adds	r7, #28
 8007efe:	46bd      	mov	sp, r7
 8007f00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f04:	4770      	bx	lr
 8007f06:	bf00      	nop
 8007f08:	feff8fff 	.word	0xfeff8fff
 8007f0c:	40010000 	.word	0x40010000
 8007f10:	40010400 	.word	0x40010400
 8007f14:	40014000 	.word	0x40014000
 8007f18:	40014400 	.word	0x40014400
 8007f1c:	40014800 	.word	0x40014800

08007f20 <TIM_OC5_SetConfig>:
 8007f20:	b480      	push	{r7}
 8007f22:	b087      	sub	sp, #28
 8007f24:	af00      	add	r7, sp, #0
 8007f26:	6078      	str	r0, [r7, #4]
 8007f28:	6039      	str	r1, [r7, #0]
 8007f2a:	687b      	ldr	r3, [r7, #4]
 8007f2c:	6a1b      	ldr	r3, [r3, #32]
 8007f2e:	613b      	str	r3, [r7, #16]
 8007f30:	687b      	ldr	r3, [r7, #4]
 8007f32:	6a1b      	ldr	r3, [r3, #32]
 8007f34:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 8007f38:	687b      	ldr	r3, [r7, #4]
 8007f3a:	621a      	str	r2, [r3, #32]
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	685b      	ldr	r3, [r3, #4]
 8007f40:	617b      	str	r3, [r7, #20]
 8007f42:	687b      	ldr	r3, [r7, #4]
 8007f44:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8007f46:	60fb      	str	r3, [r7, #12]
 8007f48:	68fa      	ldr	r2, [r7, #12]
 8007f4a:	4b21      	ldr	r3, [pc, #132]	@ (8007fd0 <TIM_OC5_SetConfig+0xb0>)
 8007f4c:	4013      	ands	r3, r2
 8007f4e:	60fb      	str	r3, [r7, #12]
 8007f50:	683b      	ldr	r3, [r7, #0]
 8007f52:	681b      	ldr	r3, [r3, #0]
 8007f54:	68fa      	ldr	r2, [r7, #12]
 8007f56:	4313      	orrs	r3, r2
 8007f58:	60fb      	str	r3, [r7, #12]
 8007f5a:	693b      	ldr	r3, [r7, #16]
 8007f5c:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8007f60:	613b      	str	r3, [r7, #16]
 8007f62:	683b      	ldr	r3, [r7, #0]
 8007f64:	689b      	ldr	r3, [r3, #8]
 8007f66:	041b      	lsls	r3, r3, #16
 8007f68:	693a      	ldr	r2, [r7, #16]
 8007f6a:	4313      	orrs	r3, r2
 8007f6c:	613b      	str	r3, [r7, #16]
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	4a18      	ldr	r2, [pc, #96]	@ (8007fd4 <TIM_OC5_SetConfig+0xb4>)
 8007f72:	4293      	cmp	r3, r2
 8007f74:	d00f      	beq.n	8007f96 <TIM_OC5_SetConfig+0x76>
 8007f76:	687b      	ldr	r3, [r7, #4]
 8007f78:	4a17      	ldr	r2, [pc, #92]	@ (8007fd8 <TIM_OC5_SetConfig+0xb8>)
 8007f7a:	4293      	cmp	r3, r2
 8007f7c:	d00b      	beq.n	8007f96 <TIM_OC5_SetConfig+0x76>
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	4a16      	ldr	r2, [pc, #88]	@ (8007fdc <TIM_OC5_SetConfig+0xbc>)
 8007f82:	4293      	cmp	r3, r2
 8007f84:	d007      	beq.n	8007f96 <TIM_OC5_SetConfig+0x76>
 8007f86:	687b      	ldr	r3, [r7, #4]
 8007f88:	4a15      	ldr	r2, [pc, #84]	@ (8007fe0 <TIM_OC5_SetConfig+0xc0>)
 8007f8a:	4293      	cmp	r3, r2
 8007f8c:	d003      	beq.n	8007f96 <TIM_OC5_SetConfig+0x76>
 8007f8e:	687b      	ldr	r3, [r7, #4]
 8007f90:	4a14      	ldr	r2, [pc, #80]	@ (8007fe4 <TIM_OC5_SetConfig+0xc4>)
 8007f92:	4293      	cmp	r3, r2
 8007f94:	d109      	bne.n	8007faa <TIM_OC5_SetConfig+0x8a>
 8007f96:	697b      	ldr	r3, [r7, #20]
 8007f98:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8007f9c:	617b      	str	r3, [r7, #20]
 8007f9e:	683b      	ldr	r3, [r7, #0]
 8007fa0:	695b      	ldr	r3, [r3, #20]
 8007fa2:	021b      	lsls	r3, r3, #8
 8007fa4:	697a      	ldr	r2, [r7, #20]
 8007fa6:	4313      	orrs	r3, r2
 8007fa8:	617b      	str	r3, [r7, #20]
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	697a      	ldr	r2, [r7, #20]
 8007fae:	605a      	str	r2, [r3, #4]
 8007fb0:	687b      	ldr	r3, [r7, #4]
 8007fb2:	68fa      	ldr	r2, [r7, #12]
 8007fb4:	655a      	str	r2, [r3, #84]	@ 0x54
 8007fb6:	683b      	ldr	r3, [r7, #0]
 8007fb8:	685a      	ldr	r2, [r3, #4]
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	659a      	str	r2, [r3, #88]	@ 0x58
 8007fbe:	687b      	ldr	r3, [r7, #4]
 8007fc0:	693a      	ldr	r2, [r7, #16]
 8007fc2:	621a      	str	r2, [r3, #32]
 8007fc4:	bf00      	nop
 8007fc6:	371c      	adds	r7, #28
 8007fc8:	46bd      	mov	sp, r7
 8007fca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fce:	4770      	bx	lr
 8007fd0:	fffeff8f 	.word	0xfffeff8f
 8007fd4:	40010000 	.word	0x40010000
 8007fd8:	40010400 	.word	0x40010400
 8007fdc:	40014000 	.word	0x40014000
 8007fe0:	40014400 	.word	0x40014400
 8007fe4:	40014800 	.word	0x40014800

08007fe8 <TIM_OC6_SetConfig>:
 8007fe8:	b480      	push	{r7}
 8007fea:	b087      	sub	sp, #28
 8007fec:	af00      	add	r7, sp, #0
 8007fee:	6078      	str	r0, [r7, #4]
 8007ff0:	6039      	str	r1, [r7, #0]
 8007ff2:	687b      	ldr	r3, [r7, #4]
 8007ff4:	6a1b      	ldr	r3, [r3, #32]
 8007ff6:	613b      	str	r3, [r7, #16]
 8007ff8:	687b      	ldr	r3, [r7, #4]
 8007ffa:	6a1b      	ldr	r3, [r3, #32]
 8007ffc:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8008000:	687b      	ldr	r3, [r7, #4]
 8008002:	621a      	str	r2, [r3, #32]
 8008004:	687b      	ldr	r3, [r7, #4]
 8008006:	685b      	ldr	r3, [r3, #4]
 8008008:	617b      	str	r3, [r7, #20]
 800800a:	687b      	ldr	r3, [r7, #4]
 800800c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800800e:	60fb      	str	r3, [r7, #12]
 8008010:	68fa      	ldr	r2, [r7, #12]
 8008012:	4b22      	ldr	r3, [pc, #136]	@ (800809c <TIM_OC6_SetConfig+0xb4>)
 8008014:	4013      	ands	r3, r2
 8008016:	60fb      	str	r3, [r7, #12]
 8008018:	683b      	ldr	r3, [r7, #0]
 800801a:	681b      	ldr	r3, [r3, #0]
 800801c:	021b      	lsls	r3, r3, #8
 800801e:	68fa      	ldr	r2, [r7, #12]
 8008020:	4313      	orrs	r3, r2
 8008022:	60fb      	str	r3, [r7, #12]
 8008024:	693b      	ldr	r3, [r7, #16]
 8008026:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800802a:	613b      	str	r3, [r7, #16]
 800802c:	683b      	ldr	r3, [r7, #0]
 800802e:	689b      	ldr	r3, [r3, #8]
 8008030:	051b      	lsls	r3, r3, #20
 8008032:	693a      	ldr	r2, [r7, #16]
 8008034:	4313      	orrs	r3, r2
 8008036:	613b      	str	r3, [r7, #16]
 8008038:	687b      	ldr	r3, [r7, #4]
 800803a:	4a19      	ldr	r2, [pc, #100]	@ (80080a0 <TIM_OC6_SetConfig+0xb8>)
 800803c:	4293      	cmp	r3, r2
 800803e:	d00f      	beq.n	8008060 <TIM_OC6_SetConfig+0x78>
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	4a18      	ldr	r2, [pc, #96]	@ (80080a4 <TIM_OC6_SetConfig+0xbc>)
 8008044:	4293      	cmp	r3, r2
 8008046:	d00b      	beq.n	8008060 <TIM_OC6_SetConfig+0x78>
 8008048:	687b      	ldr	r3, [r7, #4]
 800804a:	4a17      	ldr	r2, [pc, #92]	@ (80080a8 <TIM_OC6_SetConfig+0xc0>)
 800804c:	4293      	cmp	r3, r2
 800804e:	d007      	beq.n	8008060 <TIM_OC6_SetConfig+0x78>
 8008050:	687b      	ldr	r3, [r7, #4]
 8008052:	4a16      	ldr	r2, [pc, #88]	@ (80080ac <TIM_OC6_SetConfig+0xc4>)
 8008054:	4293      	cmp	r3, r2
 8008056:	d003      	beq.n	8008060 <TIM_OC6_SetConfig+0x78>
 8008058:	687b      	ldr	r3, [r7, #4]
 800805a:	4a15      	ldr	r2, [pc, #84]	@ (80080b0 <TIM_OC6_SetConfig+0xc8>)
 800805c:	4293      	cmp	r3, r2
 800805e:	d109      	bne.n	8008074 <TIM_OC6_SetConfig+0x8c>
 8008060:	697b      	ldr	r3, [r7, #20]
 8008062:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8008066:	617b      	str	r3, [r7, #20]
 8008068:	683b      	ldr	r3, [r7, #0]
 800806a:	695b      	ldr	r3, [r3, #20]
 800806c:	029b      	lsls	r3, r3, #10
 800806e:	697a      	ldr	r2, [r7, #20]
 8008070:	4313      	orrs	r3, r2
 8008072:	617b      	str	r3, [r7, #20]
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	697a      	ldr	r2, [r7, #20]
 8008078:	605a      	str	r2, [r3, #4]
 800807a:	687b      	ldr	r3, [r7, #4]
 800807c:	68fa      	ldr	r2, [r7, #12]
 800807e:	655a      	str	r2, [r3, #84]	@ 0x54
 8008080:	683b      	ldr	r3, [r7, #0]
 8008082:	685a      	ldr	r2, [r3, #4]
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	65da      	str	r2, [r3, #92]	@ 0x5c
 8008088:	687b      	ldr	r3, [r7, #4]
 800808a:	693a      	ldr	r2, [r7, #16]
 800808c:	621a      	str	r2, [r3, #32]
 800808e:	bf00      	nop
 8008090:	371c      	adds	r7, #28
 8008092:	46bd      	mov	sp, r7
 8008094:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008098:	4770      	bx	lr
 800809a:	bf00      	nop
 800809c:	feff8fff 	.word	0xfeff8fff
 80080a0:	40010000 	.word	0x40010000
 80080a4:	40010400 	.word	0x40010400
 80080a8:	40014000 	.word	0x40014000
 80080ac:	40014400 	.word	0x40014400
 80080b0:	40014800 	.word	0x40014800

080080b4 <TIM_CCxChannelCmd>:
 80080b4:	b480      	push	{r7}
 80080b6:	b087      	sub	sp, #28
 80080b8:	af00      	add	r7, sp, #0
 80080ba:	60f8      	str	r0, [r7, #12]
 80080bc:	60b9      	str	r1, [r7, #8]
 80080be:	607a      	str	r2, [r7, #4]
 80080c0:	68bb      	ldr	r3, [r7, #8]
 80080c2:	f003 031f 	and.w	r3, r3, #31
 80080c6:	2201      	movs	r2, #1
 80080c8:	fa02 f303 	lsl.w	r3, r2, r3
 80080cc:	617b      	str	r3, [r7, #20]
 80080ce:	68fb      	ldr	r3, [r7, #12]
 80080d0:	6a1a      	ldr	r2, [r3, #32]
 80080d2:	697b      	ldr	r3, [r7, #20]
 80080d4:	43db      	mvns	r3, r3
 80080d6:	401a      	ands	r2, r3
 80080d8:	68fb      	ldr	r3, [r7, #12]
 80080da:	621a      	str	r2, [r3, #32]
 80080dc:	68fb      	ldr	r3, [r7, #12]
 80080de:	6a1a      	ldr	r2, [r3, #32]
 80080e0:	68bb      	ldr	r3, [r7, #8]
 80080e2:	f003 031f 	and.w	r3, r3, #31
 80080e6:	6879      	ldr	r1, [r7, #4]
 80080e8:	fa01 f303 	lsl.w	r3, r1, r3
 80080ec:	431a      	orrs	r2, r3
 80080ee:	68fb      	ldr	r3, [r7, #12]
 80080f0:	621a      	str	r2, [r3, #32]
 80080f2:	bf00      	nop
 80080f4:	371c      	adds	r7, #28
 80080f6:	46bd      	mov	sp, r7
 80080f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80080fc:	4770      	bx	lr
	...

08008100 <HAL_TIMEx_MasterConfigSynchronization>:
 8008100:	b480      	push	{r7}
 8008102:	b085      	sub	sp, #20
 8008104:	af00      	add	r7, sp, #0
 8008106:	6078      	str	r0, [r7, #4]
 8008108:	6039      	str	r1, [r7, #0]
 800810a:	687b      	ldr	r3, [r7, #4]
 800810c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8008110:	2b01      	cmp	r3, #1
 8008112:	d101      	bne.n	8008118 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8008114:	2302      	movs	r3, #2
 8008116:	e077      	b.n	8008208 <HAL_TIMEx_MasterConfigSynchronization+0x108>
 8008118:	687b      	ldr	r3, [r7, #4]
 800811a:	2201      	movs	r2, #1
 800811c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008120:	687b      	ldr	r3, [r7, #4]
 8008122:	2202      	movs	r2, #2
 8008124:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8008128:	687b      	ldr	r3, [r7, #4]
 800812a:	681b      	ldr	r3, [r3, #0]
 800812c:	685b      	ldr	r3, [r3, #4]
 800812e:	60fb      	str	r3, [r7, #12]
 8008130:	687b      	ldr	r3, [r7, #4]
 8008132:	681b      	ldr	r3, [r3, #0]
 8008134:	689b      	ldr	r3, [r3, #8]
 8008136:	60bb      	str	r3, [r7, #8]
 8008138:	687b      	ldr	r3, [r7, #4]
 800813a:	681b      	ldr	r3, [r3, #0]
 800813c:	4a35      	ldr	r2, [pc, #212]	@ (8008214 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800813e:	4293      	cmp	r3, r2
 8008140:	d004      	beq.n	800814c <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 8008142:	687b      	ldr	r3, [r7, #4]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	4a34      	ldr	r2, [pc, #208]	@ (8008218 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 8008148:	4293      	cmp	r3, r2
 800814a:	d108      	bne.n	800815e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800814c:	68fb      	ldr	r3, [r7, #12]
 800814e:	f423 0370 	bic.w	r3, r3, #15728640	@ 0xf00000
 8008152:	60fb      	str	r3, [r7, #12]
 8008154:	683b      	ldr	r3, [r7, #0]
 8008156:	685b      	ldr	r3, [r3, #4]
 8008158:	68fa      	ldr	r2, [r7, #12]
 800815a:	4313      	orrs	r3, r2
 800815c:	60fb      	str	r3, [r7, #12]
 800815e:	68fb      	ldr	r3, [r7, #12]
 8008160:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8008164:	60fb      	str	r3, [r7, #12]
 8008166:	683b      	ldr	r3, [r7, #0]
 8008168:	681b      	ldr	r3, [r3, #0]
 800816a:	68fa      	ldr	r2, [r7, #12]
 800816c:	4313      	orrs	r3, r2
 800816e:	60fb      	str	r3, [r7, #12]
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	681b      	ldr	r3, [r3, #0]
 8008174:	68fa      	ldr	r2, [r7, #12]
 8008176:	605a      	str	r2, [r3, #4]
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	681b      	ldr	r3, [r3, #0]
 800817c:	4a25      	ldr	r2, [pc, #148]	@ (8008214 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800817e:	4293      	cmp	r3, r2
 8008180:	d02c      	beq.n	80081dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8008182:	687b      	ldr	r3, [r7, #4]
 8008184:	681b      	ldr	r3, [r3, #0]
 8008186:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800818a:	d027      	beq.n	80081dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800818c:	687b      	ldr	r3, [r7, #4]
 800818e:	681b      	ldr	r3, [r3, #0]
 8008190:	4a22      	ldr	r2, [pc, #136]	@ (800821c <HAL_TIMEx_MasterConfigSynchronization+0x11c>)
 8008192:	4293      	cmp	r3, r2
 8008194:	d022      	beq.n	80081dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 8008196:	687b      	ldr	r3, [r7, #4]
 8008198:	681b      	ldr	r3, [r3, #0]
 800819a:	4a21      	ldr	r2, [pc, #132]	@ (8008220 <HAL_TIMEx_MasterConfigSynchronization+0x120>)
 800819c:	4293      	cmp	r3, r2
 800819e:	d01d      	beq.n	80081dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 80081a0:	687b      	ldr	r3, [r7, #4]
 80081a2:	681b      	ldr	r3, [r3, #0]
 80081a4:	4a1f      	ldr	r2, [pc, #124]	@ (8008224 <HAL_TIMEx_MasterConfigSynchronization+0x124>)
 80081a6:	4293      	cmp	r3, r2
 80081a8:	d018      	beq.n	80081dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 80081aa:	687b      	ldr	r3, [r7, #4]
 80081ac:	681b      	ldr	r3, [r3, #0]
 80081ae:	4a1a      	ldr	r2, [pc, #104]	@ (8008218 <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 80081b0:	4293      	cmp	r3, r2
 80081b2:	d013      	beq.n	80081dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 80081b4:	687b      	ldr	r3, [r7, #4]
 80081b6:	681b      	ldr	r3, [r3, #0]
 80081b8:	4a1b      	ldr	r2, [pc, #108]	@ (8008228 <HAL_TIMEx_MasterConfigSynchronization+0x128>)
 80081ba:	4293      	cmp	r3, r2
 80081bc:	d00e      	beq.n	80081dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 80081be:	687b      	ldr	r3, [r7, #4]
 80081c0:	681b      	ldr	r3, [r3, #0]
 80081c2:	4a1a      	ldr	r2, [pc, #104]	@ (800822c <HAL_TIMEx_MasterConfigSynchronization+0x12c>)
 80081c4:	4293      	cmp	r3, r2
 80081c6:	d009      	beq.n	80081dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 80081c8:	687b      	ldr	r3, [r7, #4]
 80081ca:	681b      	ldr	r3, [r3, #0]
 80081cc:	4a18      	ldr	r2, [pc, #96]	@ (8008230 <HAL_TIMEx_MasterConfigSynchronization+0x130>)
 80081ce:	4293      	cmp	r3, r2
 80081d0:	d004      	beq.n	80081dc <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 80081d2:	687b      	ldr	r3, [r7, #4]
 80081d4:	681b      	ldr	r3, [r3, #0]
 80081d6:	4a17      	ldr	r2, [pc, #92]	@ (8008234 <HAL_TIMEx_MasterConfigSynchronization+0x134>)
 80081d8:	4293      	cmp	r3, r2
 80081da:	d10c      	bne.n	80081f6 <HAL_TIMEx_MasterConfigSynchronization+0xf6>
 80081dc:	68bb      	ldr	r3, [r7, #8]
 80081de:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80081e2:	60bb      	str	r3, [r7, #8]
 80081e4:	683b      	ldr	r3, [r7, #0]
 80081e6:	689b      	ldr	r3, [r3, #8]
 80081e8:	68ba      	ldr	r2, [r7, #8]
 80081ea:	4313      	orrs	r3, r2
 80081ec:	60bb      	str	r3, [r7, #8]
 80081ee:	687b      	ldr	r3, [r7, #4]
 80081f0:	681b      	ldr	r3, [r3, #0]
 80081f2:	68ba      	ldr	r2, [r7, #8]
 80081f4:	609a      	str	r2, [r3, #8]
 80081f6:	687b      	ldr	r3, [r7, #4]
 80081f8:	2201      	movs	r2, #1
 80081fa:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80081fe:	687b      	ldr	r3, [r7, #4]
 8008200:	2200      	movs	r2, #0
 8008202:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8008206:	2300      	movs	r3, #0
 8008208:	4618      	mov	r0, r3
 800820a:	3714      	adds	r7, #20
 800820c:	46bd      	mov	sp, r7
 800820e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008212:	4770      	bx	lr
 8008214:	40010000 	.word	0x40010000
 8008218:	40010400 	.word	0x40010400
 800821c:	40000400 	.word	0x40000400
 8008220:	40000800 	.word	0x40000800
 8008224:	40000c00 	.word	0x40000c00
 8008228:	40001800 	.word	0x40001800
 800822c:	40014000 	.word	0x40014000
 8008230:	4000e000 	.word	0x4000e000
 8008234:	4000e400 	.word	0x4000e400

08008238 <HAL_TIMEx_ConfigBreakDeadTime>:
 8008238:	b480      	push	{r7}
 800823a:	b085      	sub	sp, #20
 800823c:	af00      	add	r7, sp, #0
 800823e:	6078      	str	r0, [r7, #4]
 8008240:	6039      	str	r1, [r7, #0]
 8008242:	2300      	movs	r3, #0
 8008244:	60fb      	str	r3, [r7, #12]
 8008246:	687b      	ldr	r3, [r7, #4]
 8008248:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800824c:	2b01      	cmp	r3, #1
 800824e:	d101      	bne.n	8008254 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8008250:	2302      	movs	r3, #2
 8008252:	e073      	b.n	800833c <HAL_TIMEx_ConfigBreakDeadTime+0x104>
 8008254:	687b      	ldr	r3, [r7, #4]
 8008256:	2201      	movs	r2, #1
 8008258:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800825c:	68fb      	ldr	r3, [r7, #12]
 800825e:	f023 02ff 	bic.w	r2, r3, #255	@ 0xff
 8008262:	683b      	ldr	r3, [r7, #0]
 8008264:	68db      	ldr	r3, [r3, #12]
 8008266:	4313      	orrs	r3, r2
 8008268:	60fb      	str	r3, [r7, #12]
 800826a:	68fb      	ldr	r3, [r7, #12]
 800826c:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8008270:	683b      	ldr	r3, [r7, #0]
 8008272:	689b      	ldr	r3, [r3, #8]
 8008274:	4313      	orrs	r3, r2
 8008276:	60fb      	str	r3, [r7, #12]
 8008278:	68fb      	ldr	r3, [r7, #12]
 800827a:	f423 6280 	bic.w	r2, r3, #1024	@ 0x400
 800827e:	683b      	ldr	r3, [r7, #0]
 8008280:	685b      	ldr	r3, [r3, #4]
 8008282:	4313      	orrs	r3, r2
 8008284:	60fb      	str	r3, [r7, #12]
 8008286:	68fb      	ldr	r3, [r7, #12]
 8008288:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 800828c:	683b      	ldr	r3, [r7, #0]
 800828e:	681b      	ldr	r3, [r3, #0]
 8008290:	4313      	orrs	r3, r2
 8008292:	60fb      	str	r3, [r7, #12]
 8008294:	68fb      	ldr	r3, [r7, #12]
 8008296:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 800829a:	683b      	ldr	r3, [r7, #0]
 800829c:	691b      	ldr	r3, [r3, #16]
 800829e:	4313      	orrs	r3, r2
 80082a0:	60fb      	str	r3, [r7, #12]
 80082a2:	68fb      	ldr	r3, [r7, #12]
 80082a4:	f423 5200 	bic.w	r2, r3, #8192	@ 0x2000
 80082a8:	683b      	ldr	r3, [r7, #0]
 80082aa:	695b      	ldr	r3, [r3, #20]
 80082ac:	4313      	orrs	r3, r2
 80082ae:	60fb      	str	r3, [r7, #12]
 80082b0:	68fb      	ldr	r3, [r7, #12]
 80082b2:	f423 4280 	bic.w	r2, r3, #16384	@ 0x4000
 80082b6:	683b      	ldr	r3, [r7, #0]
 80082b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80082ba:	4313      	orrs	r3, r2
 80082bc:	60fb      	str	r3, [r7, #12]
 80082be:	68fb      	ldr	r3, [r7, #12]
 80082c0:	f423 2270 	bic.w	r2, r3, #983040	@ 0xf0000
 80082c4:	683b      	ldr	r3, [r7, #0]
 80082c6:	699b      	ldr	r3, [r3, #24]
 80082c8:	041b      	lsls	r3, r3, #16
 80082ca:	4313      	orrs	r3, r2
 80082cc:	60fb      	str	r3, [r7, #12]
 80082ce:	68fb      	ldr	r3, [r7, #12]
 80082d0:	f023 5280 	bic.w	r2, r3, #268435456	@ 0x10000000
 80082d4:	683b      	ldr	r3, [r7, #0]
 80082d6:	69db      	ldr	r3, [r3, #28]
 80082d8:	4313      	orrs	r3, r2
 80082da:	60fb      	str	r3, [r7, #12]
 80082dc:	687b      	ldr	r3, [r7, #4]
 80082de:	681b      	ldr	r3, [r3, #0]
 80082e0:	4a19      	ldr	r2, [pc, #100]	@ (8008348 <HAL_TIMEx_ConfigBreakDeadTime+0x110>)
 80082e2:	4293      	cmp	r3, r2
 80082e4:	d004      	beq.n	80082f0 <HAL_TIMEx_ConfigBreakDeadTime+0xb8>
 80082e6:	687b      	ldr	r3, [r7, #4]
 80082e8:	681b      	ldr	r3, [r3, #0]
 80082ea:	4a18      	ldr	r2, [pc, #96]	@ (800834c <HAL_TIMEx_ConfigBreakDeadTime+0x114>)
 80082ec:	4293      	cmp	r3, r2
 80082ee:	d11c      	bne.n	800832a <HAL_TIMEx_ConfigBreakDeadTime+0xf2>
 80082f0:	68fb      	ldr	r3, [r7, #12]
 80082f2:	f423 0270 	bic.w	r2, r3, #15728640	@ 0xf00000
 80082f6:	683b      	ldr	r3, [r7, #0]
 80082f8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80082fa:	051b      	lsls	r3, r3, #20
 80082fc:	4313      	orrs	r3, r2
 80082fe:	60fb      	str	r3, [r7, #12]
 8008300:	68fb      	ldr	r3, [r7, #12]
 8008302:	f023 7280 	bic.w	r2, r3, #16777216	@ 0x1000000
 8008306:	683b      	ldr	r3, [r7, #0]
 8008308:	6a1b      	ldr	r3, [r3, #32]
 800830a:	4313      	orrs	r3, r2
 800830c:	60fb      	str	r3, [r7, #12]
 800830e:	68fb      	ldr	r3, [r7, #12]
 8008310:	f023 7200 	bic.w	r2, r3, #33554432	@ 0x2000000
 8008314:	683b      	ldr	r3, [r7, #0]
 8008316:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8008318:	4313      	orrs	r3, r2
 800831a:	60fb      	str	r3, [r7, #12]
 800831c:	68fb      	ldr	r3, [r7, #12]
 800831e:	f023 5200 	bic.w	r2, r3, #536870912	@ 0x20000000
 8008322:	683b      	ldr	r3, [r7, #0]
 8008324:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008326:	4313      	orrs	r3, r2
 8008328:	60fb      	str	r3, [r7, #12]
 800832a:	687b      	ldr	r3, [r7, #4]
 800832c:	681b      	ldr	r3, [r3, #0]
 800832e:	68fa      	ldr	r2, [r7, #12]
 8008330:	645a      	str	r2, [r3, #68]	@ 0x44
 8008332:	687b      	ldr	r3, [r7, #4]
 8008334:	2200      	movs	r2, #0
 8008336:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800833a:	2300      	movs	r3, #0
 800833c:	4618      	mov	r0, r3
 800833e:	3714      	adds	r7, #20
 8008340:	46bd      	mov	sp, r7
 8008342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008346:	4770      	bx	lr
 8008348:	40010000 	.word	0x40010000
 800834c:	40010400 	.word	0x40010400

08008350 <HAL_UART_Init>:
 8008350:	b580      	push	{r7, lr}
 8008352:	b082      	sub	sp, #8
 8008354:	af00      	add	r7, sp, #0
 8008356:	6078      	str	r0, [r7, #4]
 8008358:	687b      	ldr	r3, [r7, #4]
 800835a:	2b00      	cmp	r3, #0
 800835c:	d101      	bne.n	8008362 <HAL_UART_Init+0x12>
 800835e:	2301      	movs	r3, #1
 8008360:	e042      	b.n	80083e8 <HAL_UART_Init+0x98>
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008368:	2b00      	cmp	r3, #0
 800836a:	d106      	bne.n	800837a <HAL_UART_Init+0x2a>
 800836c:	687b      	ldr	r3, [r7, #4]
 800836e:	2200      	movs	r2, #0
 8008370:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8008374:	6878      	ldr	r0, [r7, #4]
 8008376:	f7f9 fd19 	bl	8001dac <HAL_UART_MspInit>
 800837a:	687b      	ldr	r3, [r7, #4]
 800837c:	2224      	movs	r2, #36	@ 0x24
 800837e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8008382:	687b      	ldr	r3, [r7, #4]
 8008384:	681b      	ldr	r3, [r3, #0]
 8008386:	681a      	ldr	r2, [r3, #0]
 8008388:	687b      	ldr	r3, [r7, #4]
 800838a:	681b      	ldr	r3, [r3, #0]
 800838c:	f022 0201 	bic.w	r2, r2, #1
 8008390:	601a      	str	r2, [r3, #0]
 8008392:	687b      	ldr	r3, [r7, #4]
 8008394:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008396:	2b00      	cmp	r3, #0
 8008398:	d002      	beq.n	80083a0 <HAL_UART_Init+0x50>
 800839a:	6878      	ldr	r0, [r7, #4]
 800839c:	f001 fb64 	bl	8009a68 <UART_AdvFeatureConfig>
 80083a0:	6878      	ldr	r0, [r7, #4]
 80083a2:	f000 fcf5 	bl	8008d90 <UART_SetConfig>
 80083a6:	4603      	mov	r3, r0
 80083a8:	2b01      	cmp	r3, #1
 80083aa:	d101      	bne.n	80083b0 <HAL_UART_Init+0x60>
 80083ac:	2301      	movs	r3, #1
 80083ae:	e01b      	b.n	80083e8 <HAL_UART_Init+0x98>
 80083b0:	687b      	ldr	r3, [r7, #4]
 80083b2:	681b      	ldr	r3, [r3, #0]
 80083b4:	685a      	ldr	r2, [r3, #4]
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	681b      	ldr	r3, [r3, #0]
 80083ba:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80083be:	605a      	str	r2, [r3, #4]
 80083c0:	687b      	ldr	r3, [r7, #4]
 80083c2:	681b      	ldr	r3, [r3, #0]
 80083c4:	689a      	ldr	r2, [r3, #8]
 80083c6:	687b      	ldr	r3, [r7, #4]
 80083c8:	681b      	ldr	r3, [r3, #0]
 80083ca:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80083ce:	609a      	str	r2, [r3, #8]
 80083d0:	687b      	ldr	r3, [r7, #4]
 80083d2:	681b      	ldr	r3, [r3, #0]
 80083d4:	681a      	ldr	r2, [r3, #0]
 80083d6:	687b      	ldr	r3, [r7, #4]
 80083d8:	681b      	ldr	r3, [r3, #0]
 80083da:	f042 0201 	orr.w	r2, r2, #1
 80083de:	601a      	str	r2, [r3, #0]
 80083e0:	6878      	ldr	r0, [r7, #4]
 80083e2:	f001 fbe3 	bl	8009bac <UART_CheckIdleState>
 80083e6:	4603      	mov	r3, r0
 80083e8:	4618      	mov	r0, r3
 80083ea:	3708      	adds	r7, #8
 80083ec:	46bd      	mov	sp, r7
 80083ee:	bd80      	pop	{r7, pc}

080083f0 <HAL_UART_Transmit>:
 80083f0:	b580      	push	{r7, lr}
 80083f2:	b08a      	sub	sp, #40	@ 0x28
 80083f4:	af02      	add	r7, sp, #8
 80083f6:	60f8      	str	r0, [r7, #12]
 80083f8:	60b9      	str	r1, [r7, #8]
 80083fa:	603b      	str	r3, [r7, #0]
 80083fc:	4613      	mov	r3, r2
 80083fe:	80fb      	strh	r3, [r7, #6]
 8008400:	68fb      	ldr	r3, [r7, #12]
 8008402:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008406:	2b20      	cmp	r3, #32
 8008408:	d17b      	bne.n	8008502 <HAL_UART_Transmit+0x112>
 800840a:	68bb      	ldr	r3, [r7, #8]
 800840c:	2b00      	cmp	r3, #0
 800840e:	d002      	beq.n	8008416 <HAL_UART_Transmit+0x26>
 8008410:	88fb      	ldrh	r3, [r7, #6]
 8008412:	2b00      	cmp	r3, #0
 8008414:	d101      	bne.n	800841a <HAL_UART_Transmit+0x2a>
 8008416:	2301      	movs	r3, #1
 8008418:	e074      	b.n	8008504 <HAL_UART_Transmit+0x114>
 800841a:	68fb      	ldr	r3, [r7, #12]
 800841c:	2200      	movs	r2, #0
 800841e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008422:	68fb      	ldr	r3, [r7, #12]
 8008424:	2221      	movs	r2, #33	@ 0x21
 8008426:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800842a:	f7fa fbd5 	bl	8002bd8 <HAL_GetTick>
 800842e:	6178      	str	r0, [r7, #20]
 8008430:	68fb      	ldr	r3, [r7, #12]
 8008432:	88fa      	ldrh	r2, [r7, #6]
 8008434:	f8a3 2054 	strh.w	r2, [r3, #84]	@ 0x54
 8008438:	68fb      	ldr	r3, [r7, #12]
 800843a:	88fa      	ldrh	r2, [r7, #6]
 800843c:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 8008440:	68fb      	ldr	r3, [r7, #12]
 8008442:	689b      	ldr	r3, [r3, #8]
 8008444:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008448:	d108      	bne.n	800845c <HAL_UART_Transmit+0x6c>
 800844a:	68fb      	ldr	r3, [r7, #12]
 800844c:	691b      	ldr	r3, [r3, #16]
 800844e:	2b00      	cmp	r3, #0
 8008450:	d104      	bne.n	800845c <HAL_UART_Transmit+0x6c>
 8008452:	2300      	movs	r3, #0
 8008454:	61fb      	str	r3, [r7, #28]
 8008456:	68bb      	ldr	r3, [r7, #8]
 8008458:	61bb      	str	r3, [r7, #24]
 800845a:	e003      	b.n	8008464 <HAL_UART_Transmit+0x74>
 800845c:	68bb      	ldr	r3, [r7, #8]
 800845e:	61fb      	str	r3, [r7, #28]
 8008460:	2300      	movs	r3, #0
 8008462:	61bb      	str	r3, [r7, #24]
 8008464:	e030      	b.n	80084c8 <HAL_UART_Transmit+0xd8>
 8008466:	683b      	ldr	r3, [r7, #0]
 8008468:	9300      	str	r3, [sp, #0]
 800846a:	697b      	ldr	r3, [r7, #20]
 800846c:	2200      	movs	r2, #0
 800846e:	2180      	movs	r1, #128	@ 0x80
 8008470:	68f8      	ldr	r0, [r7, #12]
 8008472:	f001 fc45 	bl	8009d00 <UART_WaitOnFlagUntilTimeout>
 8008476:	4603      	mov	r3, r0
 8008478:	2b00      	cmp	r3, #0
 800847a:	d005      	beq.n	8008488 <HAL_UART_Transmit+0x98>
 800847c:	68fb      	ldr	r3, [r7, #12]
 800847e:	2220      	movs	r2, #32
 8008480:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8008484:	2303      	movs	r3, #3
 8008486:	e03d      	b.n	8008504 <HAL_UART_Transmit+0x114>
 8008488:	69fb      	ldr	r3, [r7, #28]
 800848a:	2b00      	cmp	r3, #0
 800848c:	d10b      	bne.n	80084a6 <HAL_UART_Transmit+0xb6>
 800848e:	69bb      	ldr	r3, [r7, #24]
 8008490:	881b      	ldrh	r3, [r3, #0]
 8008492:	461a      	mov	r2, r3
 8008494:	68fb      	ldr	r3, [r7, #12]
 8008496:	681b      	ldr	r3, [r3, #0]
 8008498:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800849c:	629a      	str	r2, [r3, #40]	@ 0x28
 800849e:	69bb      	ldr	r3, [r7, #24]
 80084a0:	3302      	adds	r3, #2
 80084a2:	61bb      	str	r3, [r7, #24]
 80084a4:	e007      	b.n	80084b6 <HAL_UART_Transmit+0xc6>
 80084a6:	69fb      	ldr	r3, [r7, #28]
 80084a8:	781a      	ldrb	r2, [r3, #0]
 80084aa:	68fb      	ldr	r3, [r7, #12]
 80084ac:	681b      	ldr	r3, [r3, #0]
 80084ae:	629a      	str	r2, [r3, #40]	@ 0x28
 80084b0:	69fb      	ldr	r3, [r7, #28]
 80084b2:	3301      	adds	r3, #1
 80084b4:	61fb      	str	r3, [r7, #28]
 80084b6:	68fb      	ldr	r3, [r7, #12]
 80084b8:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 80084bc:	b29b      	uxth	r3, r3
 80084be:	3b01      	subs	r3, #1
 80084c0:	b29a      	uxth	r2, r3
 80084c2:	68fb      	ldr	r3, [r7, #12]
 80084c4:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
 80084c8:	68fb      	ldr	r3, [r7, #12]
 80084ca:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 80084ce:	b29b      	uxth	r3, r3
 80084d0:	2b00      	cmp	r3, #0
 80084d2:	d1c8      	bne.n	8008466 <HAL_UART_Transmit+0x76>
 80084d4:	683b      	ldr	r3, [r7, #0]
 80084d6:	9300      	str	r3, [sp, #0]
 80084d8:	697b      	ldr	r3, [r7, #20]
 80084da:	2200      	movs	r2, #0
 80084dc:	2140      	movs	r1, #64	@ 0x40
 80084de:	68f8      	ldr	r0, [r7, #12]
 80084e0:	f001 fc0e 	bl	8009d00 <UART_WaitOnFlagUntilTimeout>
 80084e4:	4603      	mov	r3, r0
 80084e6:	2b00      	cmp	r3, #0
 80084e8:	d005      	beq.n	80084f6 <HAL_UART_Transmit+0x106>
 80084ea:	68fb      	ldr	r3, [r7, #12]
 80084ec:	2220      	movs	r2, #32
 80084ee:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80084f2:	2303      	movs	r3, #3
 80084f4:	e006      	b.n	8008504 <HAL_UART_Transmit+0x114>
 80084f6:	68fb      	ldr	r3, [r7, #12]
 80084f8:	2220      	movs	r2, #32
 80084fa:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 80084fe:	2300      	movs	r3, #0
 8008500:	e000      	b.n	8008504 <HAL_UART_Transmit+0x114>
 8008502:	2302      	movs	r3, #2
 8008504:	4618      	mov	r0, r3
 8008506:	3720      	adds	r7, #32
 8008508:	46bd      	mov	sp, r7
 800850a:	bd80      	pop	{r7, pc}

0800850c <HAL_UART_Receive_IT>:
 800850c:	b580      	push	{r7, lr}
 800850e:	b08a      	sub	sp, #40	@ 0x28
 8008510:	af00      	add	r7, sp, #0
 8008512:	60f8      	str	r0, [r7, #12]
 8008514:	60b9      	str	r1, [r7, #8]
 8008516:	4613      	mov	r3, r2
 8008518:	80fb      	strh	r3, [r7, #6]
 800851a:	68fb      	ldr	r3, [r7, #12]
 800851c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 8008520:	2b20      	cmp	r3, #32
 8008522:	d137      	bne.n	8008594 <HAL_UART_Receive_IT+0x88>
 8008524:	68bb      	ldr	r3, [r7, #8]
 8008526:	2b00      	cmp	r3, #0
 8008528:	d002      	beq.n	8008530 <HAL_UART_Receive_IT+0x24>
 800852a:	88fb      	ldrh	r3, [r7, #6]
 800852c:	2b00      	cmp	r3, #0
 800852e:	d101      	bne.n	8008534 <HAL_UART_Receive_IT+0x28>
 8008530:	2301      	movs	r3, #1
 8008532:	e030      	b.n	8008596 <HAL_UART_Receive_IT+0x8a>
 8008534:	68fb      	ldr	r3, [r7, #12]
 8008536:	2200      	movs	r2, #0
 8008538:	66da      	str	r2, [r3, #108]	@ 0x6c
 800853a:	68fb      	ldr	r3, [r7, #12]
 800853c:	681b      	ldr	r3, [r3, #0]
 800853e:	4a18      	ldr	r2, [pc, #96]	@ (80085a0 <HAL_UART_Receive_IT+0x94>)
 8008540:	4293      	cmp	r3, r2
 8008542:	d01f      	beq.n	8008584 <HAL_UART_Receive_IT+0x78>
 8008544:	68fb      	ldr	r3, [r7, #12]
 8008546:	681b      	ldr	r3, [r3, #0]
 8008548:	685b      	ldr	r3, [r3, #4]
 800854a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800854e:	2b00      	cmp	r3, #0
 8008550:	d018      	beq.n	8008584 <HAL_UART_Receive_IT+0x78>
 8008552:	68fb      	ldr	r3, [r7, #12]
 8008554:	681b      	ldr	r3, [r3, #0]
 8008556:	617b      	str	r3, [r7, #20]
 8008558:	697b      	ldr	r3, [r7, #20]
 800855a:	e853 3f00 	ldrex	r3, [r3]
 800855e:	613b      	str	r3, [r7, #16]
 8008560:	693b      	ldr	r3, [r7, #16]
 8008562:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8008566:	627b      	str	r3, [r7, #36]	@ 0x24
 8008568:	68fb      	ldr	r3, [r7, #12]
 800856a:	681b      	ldr	r3, [r3, #0]
 800856c:	461a      	mov	r2, r3
 800856e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008570:	623b      	str	r3, [r7, #32]
 8008572:	61fa      	str	r2, [r7, #28]
 8008574:	69f9      	ldr	r1, [r7, #28]
 8008576:	6a3a      	ldr	r2, [r7, #32]
 8008578:	e841 2300 	strex	r3, r2, [r1]
 800857c:	61bb      	str	r3, [r7, #24]
 800857e:	69bb      	ldr	r3, [r7, #24]
 8008580:	2b00      	cmp	r3, #0
 8008582:	d1e6      	bne.n	8008552 <HAL_UART_Receive_IT+0x46>
 8008584:	88fb      	ldrh	r3, [r7, #6]
 8008586:	461a      	mov	r2, r3
 8008588:	68b9      	ldr	r1, [r7, #8]
 800858a:	68f8      	ldr	r0, [r7, #12]
 800858c:	f001 fc26 	bl	8009ddc <UART_Start_Receive_IT>
 8008590:	4603      	mov	r3, r0
 8008592:	e000      	b.n	8008596 <HAL_UART_Receive_IT+0x8a>
 8008594:	2302      	movs	r3, #2
 8008596:	4618      	mov	r0, r3
 8008598:	3728      	adds	r7, #40	@ 0x28
 800859a:	46bd      	mov	sp, r7
 800859c:	bd80      	pop	{r7, pc}
 800859e:	bf00      	nop
 80085a0:	58000c00 	.word	0x58000c00

080085a4 <HAL_UART_IRQHandler>:
 80085a4:	b580      	push	{r7, lr}
 80085a6:	b0ba      	sub	sp, #232	@ 0xe8
 80085a8:	af00      	add	r7, sp, #0
 80085aa:	6078      	str	r0, [r7, #4]
 80085ac:	687b      	ldr	r3, [r7, #4]
 80085ae:	681b      	ldr	r3, [r3, #0]
 80085b0:	69db      	ldr	r3, [r3, #28]
 80085b2:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	681b      	ldr	r3, [r3, #0]
 80085bc:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	681b      	ldr	r3, [r3, #0]
 80085c4:	689b      	ldr	r3, [r3, #8]
 80085c6:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 80085ca:	f8d7 20e4 	ldr.w	r2, [r7, #228]	@ 0xe4
 80085ce:	f640 030f 	movw	r3, #2063	@ 0x80f
 80085d2:	4013      	ands	r3, r2
 80085d4:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 80085d8:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 80085dc:	2b00      	cmp	r3, #0
 80085de:	d11b      	bne.n	8008618 <HAL_UART_IRQHandler+0x74>
 80085e0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80085e4:	f003 0320 	and.w	r3, r3, #32
 80085e8:	2b00      	cmp	r3, #0
 80085ea:	d015      	beq.n	8008618 <HAL_UART_IRQHandler+0x74>
 80085ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80085f0:	f003 0320 	and.w	r3, r3, #32
 80085f4:	2b00      	cmp	r3, #0
 80085f6:	d105      	bne.n	8008604 <HAL_UART_IRQHandler+0x60>
 80085f8:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80085fc:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8008600:	2b00      	cmp	r3, #0
 8008602:	d009      	beq.n	8008618 <HAL_UART_IRQHandler+0x74>
 8008604:	687b      	ldr	r3, [r7, #4]
 8008606:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8008608:	2b00      	cmp	r3, #0
 800860a:	f000 8393 	beq.w	8008d34 <HAL_UART_IRQHandler+0x790>
 800860e:	687b      	ldr	r3, [r7, #4]
 8008610:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8008612:	6878      	ldr	r0, [r7, #4]
 8008614:	4798      	blx	r3
 8008616:	e38d      	b.n	8008d34 <HAL_UART_IRQHandler+0x790>
 8008618:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800861c:	2b00      	cmp	r3, #0
 800861e:	f000 8123 	beq.w	8008868 <HAL_UART_IRQHandler+0x2c4>
 8008622:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 8008626:	4b8d      	ldr	r3, [pc, #564]	@ (800885c <HAL_UART_IRQHandler+0x2b8>)
 8008628:	4013      	ands	r3, r2
 800862a:	2b00      	cmp	r3, #0
 800862c:	d106      	bne.n	800863c <HAL_UART_IRQHandler+0x98>
 800862e:	f8d7 20e0 	ldr.w	r2, [r7, #224]	@ 0xe0
 8008632:	4b8b      	ldr	r3, [pc, #556]	@ (8008860 <HAL_UART_IRQHandler+0x2bc>)
 8008634:	4013      	ands	r3, r2
 8008636:	2b00      	cmp	r3, #0
 8008638:	f000 8116 	beq.w	8008868 <HAL_UART_IRQHandler+0x2c4>
 800863c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008640:	f003 0301 	and.w	r3, r3, #1
 8008644:	2b00      	cmp	r3, #0
 8008646:	d011      	beq.n	800866c <HAL_UART_IRQHandler+0xc8>
 8008648:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800864c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8008650:	2b00      	cmp	r3, #0
 8008652:	d00b      	beq.n	800866c <HAL_UART_IRQHandler+0xc8>
 8008654:	687b      	ldr	r3, [r7, #4]
 8008656:	681b      	ldr	r3, [r3, #0]
 8008658:	2201      	movs	r2, #1
 800865a:	621a      	str	r2, [r3, #32]
 800865c:	687b      	ldr	r3, [r7, #4]
 800865e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008662:	f043 0201 	orr.w	r2, r3, #1
 8008666:	687b      	ldr	r3, [r7, #4]
 8008668:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800866c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008670:	f003 0302 	and.w	r3, r3, #2
 8008674:	2b00      	cmp	r3, #0
 8008676:	d011      	beq.n	800869c <HAL_UART_IRQHandler+0xf8>
 8008678:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 800867c:	f003 0301 	and.w	r3, r3, #1
 8008680:	2b00      	cmp	r3, #0
 8008682:	d00b      	beq.n	800869c <HAL_UART_IRQHandler+0xf8>
 8008684:	687b      	ldr	r3, [r7, #4]
 8008686:	681b      	ldr	r3, [r3, #0]
 8008688:	2202      	movs	r2, #2
 800868a:	621a      	str	r2, [r3, #32]
 800868c:	687b      	ldr	r3, [r7, #4]
 800868e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008692:	f043 0204 	orr.w	r2, r3, #4
 8008696:	687b      	ldr	r3, [r7, #4]
 8008698:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800869c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80086a0:	f003 0304 	and.w	r3, r3, #4
 80086a4:	2b00      	cmp	r3, #0
 80086a6:	d011      	beq.n	80086cc <HAL_UART_IRQHandler+0x128>
 80086a8:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 80086ac:	f003 0301 	and.w	r3, r3, #1
 80086b0:	2b00      	cmp	r3, #0
 80086b2:	d00b      	beq.n	80086cc <HAL_UART_IRQHandler+0x128>
 80086b4:	687b      	ldr	r3, [r7, #4]
 80086b6:	681b      	ldr	r3, [r3, #0]
 80086b8:	2204      	movs	r2, #4
 80086ba:	621a      	str	r2, [r3, #32]
 80086bc:	687b      	ldr	r3, [r7, #4]
 80086be:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80086c2:	f043 0202 	orr.w	r2, r3, #2
 80086c6:	687b      	ldr	r3, [r7, #4]
 80086c8:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 80086cc:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 80086d0:	f003 0308 	and.w	r3, r3, #8
 80086d4:	2b00      	cmp	r3, #0
 80086d6:	d017      	beq.n	8008708 <HAL_UART_IRQHandler+0x164>
 80086d8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 80086dc:	f003 0320 	and.w	r3, r3, #32
 80086e0:	2b00      	cmp	r3, #0
 80086e2:	d105      	bne.n	80086f0 <HAL_UART_IRQHandler+0x14c>
 80086e4:	f8d7 20dc 	ldr.w	r2, [r7, #220]	@ 0xdc
 80086e8:	4b5c      	ldr	r3, [pc, #368]	@ (800885c <HAL_UART_IRQHandler+0x2b8>)
 80086ea:	4013      	ands	r3, r2
 80086ec:	2b00      	cmp	r3, #0
 80086ee:	d00b      	beq.n	8008708 <HAL_UART_IRQHandler+0x164>
 80086f0:	687b      	ldr	r3, [r7, #4]
 80086f2:	681b      	ldr	r3, [r3, #0]
 80086f4:	2208      	movs	r2, #8
 80086f6:	621a      	str	r2, [r3, #32]
 80086f8:	687b      	ldr	r3, [r7, #4]
 80086fa:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 80086fe:	f043 0208 	orr.w	r2, r3, #8
 8008702:	687b      	ldr	r3, [r7, #4]
 8008704:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008708:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800870c:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8008710:	2b00      	cmp	r3, #0
 8008712:	d012      	beq.n	800873a <HAL_UART_IRQHandler+0x196>
 8008714:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008718:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800871c:	2b00      	cmp	r3, #0
 800871e:	d00c      	beq.n	800873a <HAL_UART_IRQHandler+0x196>
 8008720:	687b      	ldr	r3, [r7, #4]
 8008722:	681b      	ldr	r3, [r3, #0]
 8008724:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8008728:	621a      	str	r2, [r3, #32]
 800872a:	687b      	ldr	r3, [r7, #4]
 800872c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008730:	f043 0220 	orr.w	r2, r3, #32
 8008734:	687b      	ldr	r3, [r7, #4]
 8008736:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800873a:	687b      	ldr	r3, [r7, #4]
 800873c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008740:	2b00      	cmp	r3, #0
 8008742:	f000 82f9 	beq.w	8008d38 <HAL_UART_IRQHandler+0x794>
 8008746:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 800874a:	f003 0320 	and.w	r3, r3, #32
 800874e:	2b00      	cmp	r3, #0
 8008750:	d013      	beq.n	800877a <HAL_UART_IRQHandler+0x1d6>
 8008752:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008756:	f003 0320 	and.w	r3, r3, #32
 800875a:	2b00      	cmp	r3, #0
 800875c:	d105      	bne.n	800876a <HAL_UART_IRQHandler+0x1c6>
 800875e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8008762:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8008766:	2b00      	cmp	r3, #0
 8008768:	d007      	beq.n	800877a <HAL_UART_IRQHandler+0x1d6>
 800876a:	687b      	ldr	r3, [r7, #4]
 800876c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800876e:	2b00      	cmp	r3, #0
 8008770:	d003      	beq.n	800877a <HAL_UART_IRQHandler+0x1d6>
 8008772:	687b      	ldr	r3, [r7, #4]
 8008774:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8008776:	6878      	ldr	r0, [r7, #4]
 8008778:	4798      	blx	r3
 800877a:	687b      	ldr	r3, [r7, #4]
 800877c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008780:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8008784:	687b      	ldr	r3, [r7, #4]
 8008786:	681b      	ldr	r3, [r3, #0]
 8008788:	689b      	ldr	r3, [r3, #8]
 800878a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800878e:	2b40      	cmp	r3, #64	@ 0x40
 8008790:	d005      	beq.n	800879e <HAL_UART_IRQHandler+0x1fa>
 8008792:	f8d7 30d4 	ldr.w	r3, [r7, #212]	@ 0xd4
 8008796:	f003 0328 	and.w	r3, r3, #40	@ 0x28
 800879a:	2b00      	cmp	r3, #0
 800879c:	d054      	beq.n	8008848 <HAL_UART_IRQHandler+0x2a4>
 800879e:	6878      	ldr	r0, [r7, #4]
 80087a0:	f001 fc3e 	bl	800a020 <UART_EndRxTransfer>
 80087a4:	687b      	ldr	r3, [r7, #4]
 80087a6:	681b      	ldr	r3, [r3, #0]
 80087a8:	689b      	ldr	r3, [r3, #8]
 80087aa:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80087ae:	2b40      	cmp	r3, #64	@ 0x40
 80087b0:	d146      	bne.n	8008840 <HAL_UART_IRQHandler+0x29c>
 80087b2:	687b      	ldr	r3, [r7, #4]
 80087b4:	681b      	ldr	r3, [r3, #0]
 80087b6:	3308      	adds	r3, #8
 80087b8:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 80087bc:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 80087c0:	e853 3f00 	ldrex	r3, [r3]
 80087c4:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80087c8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80087cc:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80087d0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 80087d4:	687b      	ldr	r3, [r7, #4]
 80087d6:	681b      	ldr	r3, [r3, #0]
 80087d8:	3308      	adds	r3, #8
 80087da:	f8d7 20d0 	ldr.w	r2, [r7, #208]	@ 0xd0
 80087de:	f8c7 20a8 	str.w	r2, [r7, #168]	@ 0xa8
 80087e2:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80087e6:	f8d7 10a4 	ldr.w	r1, [r7, #164]	@ 0xa4
 80087ea:	f8d7 20a8 	ldr.w	r2, [r7, #168]	@ 0xa8
 80087ee:	e841 2300 	strex	r3, r2, [r1]
 80087f2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80087f6:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 80087fa:	2b00      	cmp	r3, #0
 80087fc:	d1d9      	bne.n	80087b2 <HAL_UART_IRQHandler+0x20e>
 80087fe:	687b      	ldr	r3, [r7, #4]
 8008800:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008804:	2b00      	cmp	r3, #0
 8008806:	d017      	beq.n	8008838 <HAL_UART_IRQHandler+0x294>
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800880e:	4a15      	ldr	r2, [pc, #84]	@ (8008864 <HAL_UART_IRQHandler+0x2c0>)
 8008810:	651a      	str	r2, [r3, #80]	@ 0x50
 8008812:	687b      	ldr	r3, [r7, #4]
 8008814:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008818:	4618      	mov	r0, r3
 800881a:	f7fa feb3 	bl	8003584 <HAL_DMA_Abort_IT>
 800881e:	4603      	mov	r3, r0
 8008820:	2b00      	cmp	r3, #0
 8008822:	d019      	beq.n	8008858 <HAL_UART_IRQHandler+0x2b4>
 8008824:	687b      	ldr	r3, [r7, #4]
 8008826:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800882a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800882c:	687a      	ldr	r2, [r7, #4]
 800882e:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8008832:	4610      	mov	r0, r2
 8008834:	4798      	blx	r3
 8008836:	e00f      	b.n	8008858 <HAL_UART_IRQHandler+0x2b4>
 8008838:	6878      	ldr	r0, [r7, #4]
 800883a:	f000 fa93 	bl	8008d64 <HAL_UART_ErrorCallback>
 800883e:	e00b      	b.n	8008858 <HAL_UART_IRQHandler+0x2b4>
 8008840:	6878      	ldr	r0, [r7, #4]
 8008842:	f000 fa8f 	bl	8008d64 <HAL_UART_ErrorCallback>
 8008846:	e007      	b.n	8008858 <HAL_UART_IRQHandler+0x2b4>
 8008848:	6878      	ldr	r0, [r7, #4]
 800884a:	f000 fa8b 	bl	8008d64 <HAL_UART_ErrorCallback>
 800884e:	687b      	ldr	r3, [r7, #4]
 8008850:	2200      	movs	r2, #0
 8008852:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8008856:	e26f      	b.n	8008d38 <HAL_UART_IRQHandler+0x794>
 8008858:	bf00      	nop
 800885a:	e26d      	b.n	8008d38 <HAL_UART_IRQHandler+0x794>
 800885c:	10000001 	.word	0x10000001
 8008860:	04000120 	.word	0x04000120
 8008864:	0800a0ed 	.word	0x0800a0ed
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800886c:	2b01      	cmp	r3, #1
 800886e:	f040 8203 	bne.w	8008c78 <HAL_UART_IRQHandler+0x6d4>
 8008872:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008876:	f003 0310 	and.w	r3, r3, #16
 800887a:	2b00      	cmp	r3, #0
 800887c:	f000 81fc 	beq.w	8008c78 <HAL_UART_IRQHandler+0x6d4>
 8008880:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008884:	f003 0310 	and.w	r3, r3, #16
 8008888:	2b00      	cmp	r3, #0
 800888a:	f000 81f5 	beq.w	8008c78 <HAL_UART_IRQHandler+0x6d4>
 800888e:	687b      	ldr	r3, [r7, #4]
 8008890:	681b      	ldr	r3, [r3, #0]
 8008892:	2210      	movs	r2, #16
 8008894:	621a      	str	r2, [r3, #32]
 8008896:	687b      	ldr	r3, [r7, #4]
 8008898:	681b      	ldr	r3, [r3, #0]
 800889a:	689b      	ldr	r3, [r3, #8]
 800889c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80088a0:	2b40      	cmp	r3, #64	@ 0x40
 80088a2:	f040 816d 	bne.w	8008b80 <HAL_UART_IRQHandler+0x5dc>
 80088a6:	687b      	ldr	r3, [r7, #4]
 80088a8:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80088ac:	681b      	ldr	r3, [r3, #0]
 80088ae:	4aa4      	ldr	r2, [pc, #656]	@ (8008b40 <HAL_UART_IRQHandler+0x59c>)
 80088b0:	4293      	cmp	r3, r2
 80088b2:	d068      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 80088b4:	687b      	ldr	r3, [r7, #4]
 80088b6:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80088ba:	681b      	ldr	r3, [r3, #0]
 80088bc:	4aa1      	ldr	r2, [pc, #644]	@ (8008b44 <HAL_UART_IRQHandler+0x5a0>)
 80088be:	4293      	cmp	r3, r2
 80088c0:	d061      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80088c8:	681b      	ldr	r3, [r3, #0]
 80088ca:	4a9f      	ldr	r2, [pc, #636]	@ (8008b48 <HAL_UART_IRQHandler+0x5a4>)
 80088cc:	4293      	cmp	r3, r2
 80088ce:	d05a      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80088d6:	681b      	ldr	r3, [r3, #0]
 80088d8:	4a9c      	ldr	r2, [pc, #624]	@ (8008b4c <HAL_UART_IRQHandler+0x5a8>)
 80088da:	4293      	cmp	r3, r2
 80088dc:	d053      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 80088de:	687b      	ldr	r3, [r7, #4]
 80088e0:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80088e4:	681b      	ldr	r3, [r3, #0]
 80088e6:	4a9a      	ldr	r2, [pc, #616]	@ (8008b50 <HAL_UART_IRQHandler+0x5ac>)
 80088e8:	4293      	cmp	r3, r2
 80088ea:	d04c      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 80088ec:	687b      	ldr	r3, [r7, #4]
 80088ee:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80088f2:	681b      	ldr	r3, [r3, #0]
 80088f4:	4a97      	ldr	r2, [pc, #604]	@ (8008b54 <HAL_UART_IRQHandler+0x5b0>)
 80088f6:	4293      	cmp	r3, r2
 80088f8:	d045      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 80088fa:	687b      	ldr	r3, [r7, #4]
 80088fc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008900:	681b      	ldr	r3, [r3, #0]
 8008902:	4a95      	ldr	r2, [pc, #596]	@ (8008b58 <HAL_UART_IRQHandler+0x5b4>)
 8008904:	4293      	cmp	r3, r2
 8008906:	d03e      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 8008908:	687b      	ldr	r3, [r7, #4]
 800890a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800890e:	681b      	ldr	r3, [r3, #0]
 8008910:	4a92      	ldr	r2, [pc, #584]	@ (8008b5c <HAL_UART_IRQHandler+0x5b8>)
 8008912:	4293      	cmp	r3, r2
 8008914:	d037      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 8008916:	687b      	ldr	r3, [r7, #4]
 8008918:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800891c:	681b      	ldr	r3, [r3, #0]
 800891e:	4a90      	ldr	r2, [pc, #576]	@ (8008b60 <HAL_UART_IRQHandler+0x5bc>)
 8008920:	4293      	cmp	r3, r2
 8008922:	d030      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 8008924:	687b      	ldr	r3, [r7, #4]
 8008926:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800892a:	681b      	ldr	r3, [r3, #0]
 800892c:	4a8d      	ldr	r2, [pc, #564]	@ (8008b64 <HAL_UART_IRQHandler+0x5c0>)
 800892e:	4293      	cmp	r3, r2
 8008930:	d029      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 8008932:	687b      	ldr	r3, [r7, #4]
 8008934:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008938:	681b      	ldr	r3, [r3, #0]
 800893a:	4a8b      	ldr	r2, [pc, #556]	@ (8008b68 <HAL_UART_IRQHandler+0x5c4>)
 800893c:	4293      	cmp	r3, r2
 800893e:	d022      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008946:	681b      	ldr	r3, [r3, #0]
 8008948:	4a88      	ldr	r2, [pc, #544]	@ (8008b6c <HAL_UART_IRQHandler+0x5c8>)
 800894a:	4293      	cmp	r3, r2
 800894c:	d01b      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 800894e:	687b      	ldr	r3, [r7, #4]
 8008950:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008954:	681b      	ldr	r3, [r3, #0]
 8008956:	4a86      	ldr	r2, [pc, #536]	@ (8008b70 <HAL_UART_IRQHandler+0x5cc>)
 8008958:	4293      	cmp	r3, r2
 800895a:	d014      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 800895c:	687b      	ldr	r3, [r7, #4]
 800895e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008962:	681b      	ldr	r3, [r3, #0]
 8008964:	4a83      	ldr	r2, [pc, #524]	@ (8008b74 <HAL_UART_IRQHandler+0x5d0>)
 8008966:	4293      	cmp	r3, r2
 8008968:	d00d      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 800896a:	687b      	ldr	r3, [r7, #4]
 800896c:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008970:	681b      	ldr	r3, [r3, #0]
 8008972:	4a81      	ldr	r2, [pc, #516]	@ (8008b78 <HAL_UART_IRQHandler+0x5d4>)
 8008974:	4293      	cmp	r3, r2
 8008976:	d006      	beq.n	8008986 <HAL_UART_IRQHandler+0x3e2>
 8008978:	687b      	ldr	r3, [r7, #4]
 800897a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800897e:	681b      	ldr	r3, [r3, #0]
 8008980:	4a7e      	ldr	r2, [pc, #504]	@ (8008b7c <HAL_UART_IRQHandler+0x5d8>)
 8008982:	4293      	cmp	r3, r2
 8008984:	d106      	bne.n	8008994 <HAL_UART_IRQHandler+0x3f0>
 8008986:	687b      	ldr	r3, [r7, #4]
 8008988:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800898c:	681b      	ldr	r3, [r3, #0]
 800898e:	685b      	ldr	r3, [r3, #4]
 8008990:	b29b      	uxth	r3, r3
 8008992:	e005      	b.n	80089a0 <HAL_UART_IRQHandler+0x3fc>
 8008994:	687b      	ldr	r3, [r7, #4]
 8008996:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 800899a:	681b      	ldr	r3, [r3, #0]
 800899c:	685b      	ldr	r3, [r3, #4]
 800899e:	b29b      	uxth	r3, r3
 80089a0:	f8a7 30be 	strh.w	r3, [r7, #190]	@ 0xbe
 80089a4:	f8b7 30be 	ldrh.w	r3, [r7, #190]	@ 0xbe
 80089a8:	2b00      	cmp	r3, #0
 80089aa:	f000 80ad 	beq.w	8008b08 <HAL_UART_IRQHandler+0x564>
 80089ae:	687b      	ldr	r3, [r7, #4]
 80089b0:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 80089b4:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80089b8:	429a      	cmp	r2, r3
 80089ba:	f080 80a5 	bcs.w	8008b08 <HAL_UART_IRQHandler+0x564>
 80089be:	687b      	ldr	r3, [r7, #4]
 80089c0:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 80089c4:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80089ce:	69db      	ldr	r3, [r3, #28]
 80089d0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80089d4:	f000 8087 	beq.w	8008ae6 <HAL_UART_IRQHandler+0x542>
 80089d8:	687b      	ldr	r3, [r7, #4]
 80089da:	681b      	ldr	r3, [r3, #0]
 80089dc:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 80089e0:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 80089e4:	e853 3f00 	ldrex	r3, [r3]
 80089e8:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80089ec:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80089f0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80089f4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	681b      	ldr	r3, [r3, #0]
 80089fc:	461a      	mov	r2, r3
 80089fe:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 8008a02:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8008a06:	f8c7 2090 	str.w	r2, [r7, #144]	@ 0x90
 8008a0a:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 8008a0e:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8008a12:	e841 2300 	strex	r3, r2, [r1]
 8008a16:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8008a1a:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8008a1e:	2b00      	cmp	r3, #0
 8008a20:	d1da      	bne.n	80089d8 <HAL_UART_IRQHandler+0x434>
 8008a22:	687b      	ldr	r3, [r7, #4]
 8008a24:	681b      	ldr	r3, [r3, #0]
 8008a26:	3308      	adds	r3, #8
 8008a28:	677b      	str	r3, [r7, #116]	@ 0x74
 8008a2a:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8008a2c:	e853 3f00 	ldrex	r3, [r3]
 8008a30:	673b      	str	r3, [r7, #112]	@ 0x70
 8008a32:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 8008a34:	f023 0301 	bic.w	r3, r3, #1
 8008a38:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8008a3c:	687b      	ldr	r3, [r7, #4]
 8008a3e:	681b      	ldr	r3, [r3, #0]
 8008a40:	3308      	adds	r3, #8
 8008a42:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8008a46:	f8c7 2080 	str.w	r2, [r7, #128]	@ 0x80
 8008a4a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8008a4c:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 8008a4e:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 8008a52:	e841 2300 	strex	r3, r2, [r1]
 8008a56:	67bb      	str	r3, [r7, #120]	@ 0x78
 8008a58:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8008a5a:	2b00      	cmp	r3, #0
 8008a5c:	d1e1      	bne.n	8008a22 <HAL_UART_IRQHandler+0x47e>
 8008a5e:	687b      	ldr	r3, [r7, #4]
 8008a60:	681b      	ldr	r3, [r3, #0]
 8008a62:	3308      	adds	r3, #8
 8008a64:	663b      	str	r3, [r7, #96]	@ 0x60
 8008a66:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8008a68:	e853 3f00 	ldrex	r3, [r3]
 8008a6c:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8008a6e:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 8008a70:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8008a74:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8008a78:	687b      	ldr	r3, [r7, #4]
 8008a7a:	681b      	ldr	r3, [r3, #0]
 8008a7c:	3308      	adds	r3, #8
 8008a7e:	f8d7 20b0 	ldr.w	r2, [r7, #176]	@ 0xb0
 8008a82:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8008a84:	66bb      	str	r3, [r7, #104]	@ 0x68
 8008a86:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 8008a88:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 8008a8a:	e841 2300 	strex	r3, r2, [r1]
 8008a8e:	667b      	str	r3, [r7, #100]	@ 0x64
 8008a90:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8008a92:	2b00      	cmp	r3, #0
 8008a94:	d1e3      	bne.n	8008a5e <HAL_UART_IRQHandler+0x4ba>
 8008a96:	687b      	ldr	r3, [r7, #4]
 8008a98:	2220      	movs	r2, #32
 8008a9a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8008a9e:	687b      	ldr	r3, [r7, #4]
 8008aa0:	2200      	movs	r2, #0
 8008aa2:	66da      	str	r2, [r3, #108]	@ 0x6c
 8008aa4:	687b      	ldr	r3, [r7, #4]
 8008aa6:	681b      	ldr	r3, [r3, #0]
 8008aa8:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008aaa:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8008aac:	e853 3f00 	ldrex	r3, [r3]
 8008ab0:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008ab2:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8008ab4:	f023 0310 	bic.w	r3, r3, #16
 8008ab8:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 8008abc:	687b      	ldr	r3, [r7, #4]
 8008abe:	681b      	ldr	r3, [r3, #0]
 8008ac0:	461a      	mov	r2, r3
 8008ac2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8008ac6:	65bb      	str	r3, [r7, #88]	@ 0x58
 8008ac8:	657a      	str	r2, [r7, #84]	@ 0x54
 8008aca:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 8008acc:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 8008ace:	e841 2300 	strex	r3, r2, [r1]
 8008ad2:	653b      	str	r3, [r7, #80]	@ 0x50
 8008ad4:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8008ad6:	2b00      	cmp	r3, #0
 8008ad8:	d1e4      	bne.n	8008aa4 <HAL_UART_IRQHandler+0x500>
 8008ada:	687b      	ldr	r3, [r7, #4]
 8008adc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008ae0:	4618      	mov	r0, r3
 8008ae2:	f7fa fa31 	bl	8002f48 <HAL_DMA_Abort>
 8008ae6:	687b      	ldr	r3, [r7, #4]
 8008ae8:	2202      	movs	r2, #2
 8008aea:	671a      	str	r2, [r3, #112]	@ 0x70
 8008aec:	687b      	ldr	r3, [r7, #4]
 8008aee:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 8008af2:	687b      	ldr	r3, [r7, #4]
 8008af4:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8008af8:	b29b      	uxth	r3, r3
 8008afa:	1ad3      	subs	r3, r2, r3
 8008afc:	b29b      	uxth	r3, r3
 8008afe:	4619      	mov	r1, r3
 8008b00:	6878      	ldr	r0, [r7, #4]
 8008b02:	f000 f939 	bl	8008d78 <HAL_UARTEx_RxEventCallback>
 8008b06:	e119      	b.n	8008d3c <HAL_UART_IRQHandler+0x798>
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8008b0e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	@ 0xbe
 8008b12:	429a      	cmp	r2, r3
 8008b14:	f040 8112 	bne.w	8008d3c <HAL_UART_IRQHandler+0x798>
 8008b18:	687b      	ldr	r3, [r7, #4]
 8008b1a:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008b1e:	69db      	ldr	r3, [r3, #28]
 8008b20:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008b24:	f040 810a 	bne.w	8008d3c <HAL_UART_IRQHandler+0x798>
 8008b28:	687b      	ldr	r3, [r7, #4]
 8008b2a:	2202      	movs	r2, #2
 8008b2c:	671a      	str	r2, [r3, #112]	@ 0x70
 8008b2e:	687b      	ldr	r3, [r7, #4]
 8008b30:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 8008b34:	4619      	mov	r1, r3
 8008b36:	6878      	ldr	r0, [r7, #4]
 8008b38:	f000 f91e 	bl	8008d78 <HAL_UARTEx_RxEventCallback>
 8008b3c:	e0fe      	b.n	8008d3c <HAL_UART_IRQHandler+0x798>
 8008b3e:	bf00      	nop
 8008b40:	40020010 	.word	0x40020010
 8008b44:	40020028 	.word	0x40020028
 8008b48:	40020040 	.word	0x40020040
 8008b4c:	40020058 	.word	0x40020058
 8008b50:	40020070 	.word	0x40020070
 8008b54:	40020088 	.word	0x40020088
 8008b58:	400200a0 	.word	0x400200a0
 8008b5c:	400200b8 	.word	0x400200b8
 8008b60:	40020410 	.word	0x40020410
 8008b64:	40020428 	.word	0x40020428
 8008b68:	40020440 	.word	0x40020440
 8008b6c:	40020458 	.word	0x40020458
 8008b70:	40020470 	.word	0x40020470
 8008b74:	40020488 	.word	0x40020488
 8008b78:	400204a0 	.word	0x400204a0
 8008b7c:	400204b8 	.word	0x400204b8
 8008b80:	687b      	ldr	r3, [r7, #4]
 8008b82:	f8b3 205c 	ldrh.w	r2, [r3, #92]	@ 0x5c
 8008b86:	687b      	ldr	r3, [r7, #4]
 8008b88:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8008b8c:	b29b      	uxth	r3, r3
 8008b8e:	1ad3      	subs	r3, r2, r3
 8008b90:	f8a7 30ce 	strh.w	r3, [r7, #206]	@ 0xce
 8008b94:	687b      	ldr	r3, [r7, #4]
 8008b96:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 8008b9a:	b29b      	uxth	r3, r3
 8008b9c:	2b00      	cmp	r3, #0
 8008b9e:	f000 80cf 	beq.w	8008d40 <HAL_UART_IRQHandler+0x79c>
 8008ba2:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8008ba6:	2b00      	cmp	r3, #0
 8008ba8:	f000 80ca 	beq.w	8008d40 <HAL_UART_IRQHandler+0x79c>
 8008bac:	687b      	ldr	r3, [r7, #4]
 8008bae:	681b      	ldr	r3, [r3, #0]
 8008bb0:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008bb2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8008bb4:	e853 3f00 	ldrex	r3, [r3]
 8008bb8:	637b      	str	r3, [r7, #52]	@ 0x34
 8008bba:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8008bbc:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8008bc0:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 8008bc4:	687b      	ldr	r3, [r7, #4]
 8008bc6:	681b      	ldr	r3, [r3, #0]
 8008bc8:	461a      	mov	r2, r3
 8008bca:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 8008bce:	647b      	str	r3, [r7, #68]	@ 0x44
 8008bd0:	643a      	str	r2, [r7, #64]	@ 0x40
 8008bd2:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8008bd4:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008bd6:	e841 2300 	strex	r3, r2, [r1]
 8008bda:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008bdc:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8008bde:	2b00      	cmp	r3, #0
 8008be0:	d1e4      	bne.n	8008bac <HAL_UART_IRQHandler+0x608>
 8008be2:	687b      	ldr	r3, [r7, #4]
 8008be4:	681b      	ldr	r3, [r3, #0]
 8008be6:	3308      	adds	r3, #8
 8008be8:	627b      	str	r3, [r7, #36]	@ 0x24
 8008bea:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008bec:	e853 3f00 	ldrex	r3, [r3]
 8008bf0:	623b      	str	r3, [r7, #32]
 8008bf2:	6a3a      	ldr	r2, [r7, #32]
 8008bf4:	4b55      	ldr	r3, [pc, #340]	@ (8008d4c <HAL_UART_IRQHandler+0x7a8>)
 8008bf6:	4013      	ands	r3, r2
 8008bf8:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 8008bfc:	687b      	ldr	r3, [r7, #4]
 8008bfe:	681b      	ldr	r3, [r3, #0]
 8008c00:	3308      	adds	r3, #8
 8008c02:	f8d7 20c4 	ldr.w	r2, [r7, #196]	@ 0xc4
 8008c06:	633a      	str	r2, [r7, #48]	@ 0x30
 8008c08:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008c0a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8008c0c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8008c0e:	e841 2300 	strex	r3, r2, [r1]
 8008c12:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008c14:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008c16:	2b00      	cmp	r3, #0
 8008c18:	d1e3      	bne.n	8008be2 <HAL_UART_IRQHandler+0x63e>
 8008c1a:	687b      	ldr	r3, [r7, #4]
 8008c1c:	2220      	movs	r2, #32
 8008c1e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8008c22:	687b      	ldr	r3, [r7, #4]
 8008c24:	2200      	movs	r2, #0
 8008c26:	66da      	str	r2, [r3, #108]	@ 0x6c
 8008c28:	687b      	ldr	r3, [r7, #4]
 8008c2a:	2200      	movs	r2, #0
 8008c2c:	675a      	str	r2, [r3, #116]	@ 0x74
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	681b      	ldr	r3, [r3, #0]
 8008c32:	613b      	str	r3, [r7, #16]
 8008c34:	693b      	ldr	r3, [r7, #16]
 8008c36:	e853 3f00 	ldrex	r3, [r3]
 8008c3a:	60fb      	str	r3, [r7, #12]
 8008c3c:	68fb      	ldr	r3, [r7, #12]
 8008c3e:	f023 0310 	bic.w	r3, r3, #16
 8008c42:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	681b      	ldr	r3, [r3, #0]
 8008c4a:	461a      	mov	r2, r3
 8008c4c:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8008c50:	61fb      	str	r3, [r7, #28]
 8008c52:	61ba      	str	r2, [r7, #24]
 8008c54:	69b9      	ldr	r1, [r7, #24]
 8008c56:	69fa      	ldr	r2, [r7, #28]
 8008c58:	e841 2300 	strex	r3, r2, [r1]
 8008c5c:	617b      	str	r3, [r7, #20]
 8008c5e:	697b      	ldr	r3, [r7, #20]
 8008c60:	2b00      	cmp	r3, #0
 8008c62:	d1e4      	bne.n	8008c2e <HAL_UART_IRQHandler+0x68a>
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	2202      	movs	r2, #2
 8008c68:	671a      	str	r2, [r3, #112]	@ 0x70
 8008c6a:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	@ 0xce
 8008c6e:	4619      	mov	r1, r3
 8008c70:	6878      	ldr	r0, [r7, #4]
 8008c72:	f000 f881 	bl	8008d78 <HAL_UARTEx_RxEventCallback>
 8008c76:	e063      	b.n	8008d40 <HAL_UART_IRQHandler+0x79c>
 8008c78:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008c7c:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8008c80:	2b00      	cmp	r3, #0
 8008c82:	d00e      	beq.n	8008ca2 <HAL_UART_IRQHandler+0x6fe>
 8008c84:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8008c88:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8008c8c:	2b00      	cmp	r3, #0
 8008c8e:	d008      	beq.n	8008ca2 <HAL_UART_IRQHandler+0x6fe>
 8008c90:	687b      	ldr	r3, [r7, #4]
 8008c92:	681b      	ldr	r3, [r3, #0]
 8008c94:	f44f 1280 	mov.w	r2, #1048576	@ 0x100000
 8008c98:	621a      	str	r2, [r3, #32]
 8008c9a:	6878      	ldr	r0, [r7, #4]
 8008c9c:	f001 ff84 	bl	800aba8 <HAL_UARTEx_WakeupCallback>
 8008ca0:	e051      	b.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008ca2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008ca6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008caa:	2b00      	cmp	r3, #0
 8008cac:	d014      	beq.n	8008cd8 <HAL_UART_IRQHandler+0x734>
 8008cae:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008cb2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8008cb6:	2b00      	cmp	r3, #0
 8008cb8:	d105      	bne.n	8008cc6 <HAL_UART_IRQHandler+0x722>
 8008cba:	f8d7 30dc 	ldr.w	r3, [r7, #220]	@ 0xdc
 8008cbe:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8008cc2:	2b00      	cmp	r3, #0
 8008cc4:	d008      	beq.n	8008cd8 <HAL_UART_IRQHandler+0x734>
 8008cc6:	687b      	ldr	r3, [r7, #4]
 8008cc8:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8008cca:	2b00      	cmp	r3, #0
 8008ccc:	d03a      	beq.n	8008d44 <HAL_UART_IRQHandler+0x7a0>
 8008cce:	687b      	ldr	r3, [r7, #4]
 8008cd0:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8008cd2:	6878      	ldr	r0, [r7, #4]
 8008cd4:	4798      	blx	r3
 8008cd6:	e035      	b.n	8008d44 <HAL_UART_IRQHandler+0x7a0>
 8008cd8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008cdc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008ce0:	2b00      	cmp	r3, #0
 8008ce2:	d009      	beq.n	8008cf8 <HAL_UART_IRQHandler+0x754>
 8008ce4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008ce8:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8008cec:	2b00      	cmp	r3, #0
 8008cee:	d003      	beq.n	8008cf8 <HAL_UART_IRQHandler+0x754>
 8008cf0:	6878      	ldr	r0, [r7, #4]
 8008cf2:	f001 fa0d 	bl	800a110 <UART_EndTransmit_IT>
 8008cf6:	e026      	b.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008cf8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008cfc:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 8008d00:	2b00      	cmp	r3, #0
 8008d02:	d009      	beq.n	8008d18 <HAL_UART_IRQHandler+0x774>
 8008d04:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008d08:	f003 4380 	and.w	r3, r3, #1073741824	@ 0x40000000
 8008d0c:	2b00      	cmp	r3, #0
 8008d0e:	d003      	beq.n	8008d18 <HAL_UART_IRQHandler+0x774>
 8008d10:	6878      	ldr	r0, [r7, #4]
 8008d12:	f001 ff5d 	bl	800abd0 <HAL_UARTEx_TxFifoEmptyCallback>
 8008d16:	e016      	b.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008d18:	f8d7 30e4 	ldr.w	r3, [r7, #228]	@ 0xe4
 8008d1c:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8008d20:	2b00      	cmp	r3, #0
 8008d22:	d010      	beq.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008d24:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 8008d28:	2b00      	cmp	r3, #0
 8008d2a:	da0c      	bge.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008d2c:	6878      	ldr	r0, [r7, #4]
 8008d2e:	f001 ff45 	bl	800abbc <HAL_UARTEx_RxFifoFullCallback>
 8008d32:	e008      	b.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008d34:	bf00      	nop
 8008d36:	e006      	b.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008d38:	bf00      	nop
 8008d3a:	e004      	b.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008d3c:	bf00      	nop
 8008d3e:	e002      	b.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008d40:	bf00      	nop
 8008d42:	e000      	b.n	8008d46 <HAL_UART_IRQHandler+0x7a2>
 8008d44:	bf00      	nop
 8008d46:	37e8      	adds	r7, #232	@ 0xe8
 8008d48:	46bd      	mov	sp, r7
 8008d4a:	bd80      	pop	{r7, pc}
 8008d4c:	effffffe 	.word	0xeffffffe

08008d50 <HAL_UART_TxCpltCallback>:
 8008d50:	b480      	push	{r7}
 8008d52:	b083      	sub	sp, #12
 8008d54:	af00      	add	r7, sp, #0
 8008d56:	6078      	str	r0, [r7, #4]
 8008d58:	bf00      	nop
 8008d5a:	370c      	adds	r7, #12
 8008d5c:	46bd      	mov	sp, r7
 8008d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d62:	4770      	bx	lr

08008d64 <HAL_UART_ErrorCallback>:
 8008d64:	b480      	push	{r7}
 8008d66:	b083      	sub	sp, #12
 8008d68:	af00      	add	r7, sp, #0
 8008d6a:	6078      	str	r0, [r7, #4]
 8008d6c:	bf00      	nop
 8008d6e:	370c      	adds	r7, #12
 8008d70:	46bd      	mov	sp, r7
 8008d72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d76:	4770      	bx	lr

08008d78 <HAL_UARTEx_RxEventCallback>:
 8008d78:	b480      	push	{r7}
 8008d7a:	b083      	sub	sp, #12
 8008d7c:	af00      	add	r7, sp, #0
 8008d7e:	6078      	str	r0, [r7, #4]
 8008d80:	460b      	mov	r3, r1
 8008d82:	807b      	strh	r3, [r7, #2]
 8008d84:	bf00      	nop
 8008d86:	370c      	adds	r7, #12
 8008d88:	46bd      	mov	sp, r7
 8008d8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d8e:	4770      	bx	lr

08008d90 <UART_SetConfig>:
 8008d90:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8008d94:	b092      	sub	sp, #72	@ 0x48
 8008d96:	af00      	add	r7, sp, #0
 8008d98:	6178      	str	r0, [r7, #20]
 8008d9a:	2300      	movs	r3, #0
 8008d9c:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8008da0:	697b      	ldr	r3, [r7, #20]
 8008da2:	689a      	ldr	r2, [r3, #8]
 8008da4:	697b      	ldr	r3, [r7, #20]
 8008da6:	691b      	ldr	r3, [r3, #16]
 8008da8:	431a      	orrs	r2, r3
 8008daa:	697b      	ldr	r3, [r7, #20]
 8008dac:	695b      	ldr	r3, [r3, #20]
 8008dae:	431a      	orrs	r2, r3
 8008db0:	697b      	ldr	r3, [r7, #20]
 8008db2:	69db      	ldr	r3, [r3, #28]
 8008db4:	4313      	orrs	r3, r2
 8008db6:	647b      	str	r3, [r7, #68]	@ 0x44
 8008db8:	697b      	ldr	r3, [r7, #20]
 8008dba:	681b      	ldr	r3, [r3, #0]
 8008dbc:	681a      	ldr	r2, [r3, #0]
 8008dbe:	4bbe      	ldr	r3, [pc, #760]	@ (80090b8 <UART_SetConfig+0x328>)
 8008dc0:	4013      	ands	r3, r2
 8008dc2:	697a      	ldr	r2, [r7, #20]
 8008dc4:	6812      	ldr	r2, [r2, #0]
 8008dc6:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8008dc8:	430b      	orrs	r3, r1
 8008dca:	6013      	str	r3, [r2, #0]
 8008dcc:	697b      	ldr	r3, [r7, #20]
 8008dce:	681b      	ldr	r3, [r3, #0]
 8008dd0:	685b      	ldr	r3, [r3, #4]
 8008dd2:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 8008dd6:	697b      	ldr	r3, [r7, #20]
 8008dd8:	68da      	ldr	r2, [r3, #12]
 8008dda:	697b      	ldr	r3, [r7, #20]
 8008ddc:	681b      	ldr	r3, [r3, #0]
 8008dde:	430a      	orrs	r2, r1
 8008de0:	605a      	str	r2, [r3, #4]
 8008de2:	697b      	ldr	r3, [r7, #20]
 8008de4:	699b      	ldr	r3, [r3, #24]
 8008de6:	647b      	str	r3, [r7, #68]	@ 0x44
 8008de8:	697b      	ldr	r3, [r7, #20]
 8008dea:	681b      	ldr	r3, [r3, #0]
 8008dec:	4ab3      	ldr	r2, [pc, #716]	@ (80090bc <UART_SetConfig+0x32c>)
 8008dee:	4293      	cmp	r3, r2
 8008df0:	d004      	beq.n	8008dfc <UART_SetConfig+0x6c>
 8008df2:	697b      	ldr	r3, [r7, #20]
 8008df4:	6a1b      	ldr	r3, [r3, #32]
 8008df6:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8008df8:	4313      	orrs	r3, r2
 8008dfa:	647b      	str	r3, [r7, #68]	@ 0x44
 8008dfc:	697b      	ldr	r3, [r7, #20]
 8008dfe:	681b      	ldr	r3, [r3, #0]
 8008e00:	689a      	ldr	r2, [r3, #8]
 8008e02:	4baf      	ldr	r3, [pc, #700]	@ (80090c0 <UART_SetConfig+0x330>)
 8008e04:	4013      	ands	r3, r2
 8008e06:	697a      	ldr	r2, [r7, #20]
 8008e08:	6812      	ldr	r2, [r2, #0]
 8008e0a:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8008e0c:	430b      	orrs	r3, r1
 8008e0e:	6093      	str	r3, [r2, #8]
 8008e10:	697b      	ldr	r3, [r7, #20]
 8008e12:	681b      	ldr	r3, [r3, #0]
 8008e14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008e16:	f023 010f 	bic.w	r1, r3, #15
 8008e1a:	697b      	ldr	r3, [r7, #20]
 8008e1c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8008e1e:	697b      	ldr	r3, [r7, #20]
 8008e20:	681b      	ldr	r3, [r3, #0]
 8008e22:	430a      	orrs	r2, r1
 8008e24:	62da      	str	r2, [r3, #44]	@ 0x2c
 8008e26:	697b      	ldr	r3, [r7, #20]
 8008e28:	681b      	ldr	r3, [r3, #0]
 8008e2a:	4aa6      	ldr	r2, [pc, #664]	@ (80090c4 <UART_SetConfig+0x334>)
 8008e2c:	4293      	cmp	r3, r2
 8008e2e:	d177      	bne.n	8008f20 <UART_SetConfig+0x190>
 8008e30:	4ba5      	ldr	r3, [pc, #660]	@ (80090c8 <UART_SetConfig+0x338>)
 8008e32:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008e34:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8008e38:	2b28      	cmp	r3, #40	@ 0x28
 8008e3a:	d86d      	bhi.n	8008f18 <UART_SetConfig+0x188>
 8008e3c:	a201      	add	r2, pc, #4	@ (adr r2, 8008e44 <UART_SetConfig+0xb4>)
 8008e3e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008e42:	bf00      	nop
 8008e44:	08008ee9 	.word	0x08008ee9
 8008e48:	08008f19 	.word	0x08008f19
 8008e4c:	08008f19 	.word	0x08008f19
 8008e50:	08008f19 	.word	0x08008f19
 8008e54:	08008f19 	.word	0x08008f19
 8008e58:	08008f19 	.word	0x08008f19
 8008e5c:	08008f19 	.word	0x08008f19
 8008e60:	08008f19 	.word	0x08008f19
 8008e64:	08008ef1 	.word	0x08008ef1
 8008e68:	08008f19 	.word	0x08008f19
 8008e6c:	08008f19 	.word	0x08008f19
 8008e70:	08008f19 	.word	0x08008f19
 8008e74:	08008f19 	.word	0x08008f19
 8008e78:	08008f19 	.word	0x08008f19
 8008e7c:	08008f19 	.word	0x08008f19
 8008e80:	08008f19 	.word	0x08008f19
 8008e84:	08008ef9 	.word	0x08008ef9
 8008e88:	08008f19 	.word	0x08008f19
 8008e8c:	08008f19 	.word	0x08008f19
 8008e90:	08008f19 	.word	0x08008f19
 8008e94:	08008f19 	.word	0x08008f19
 8008e98:	08008f19 	.word	0x08008f19
 8008e9c:	08008f19 	.word	0x08008f19
 8008ea0:	08008f19 	.word	0x08008f19
 8008ea4:	08008f01 	.word	0x08008f01
 8008ea8:	08008f19 	.word	0x08008f19
 8008eac:	08008f19 	.word	0x08008f19
 8008eb0:	08008f19 	.word	0x08008f19
 8008eb4:	08008f19 	.word	0x08008f19
 8008eb8:	08008f19 	.word	0x08008f19
 8008ebc:	08008f19 	.word	0x08008f19
 8008ec0:	08008f19 	.word	0x08008f19
 8008ec4:	08008f09 	.word	0x08008f09
 8008ec8:	08008f19 	.word	0x08008f19
 8008ecc:	08008f19 	.word	0x08008f19
 8008ed0:	08008f19 	.word	0x08008f19
 8008ed4:	08008f19 	.word	0x08008f19
 8008ed8:	08008f19 	.word	0x08008f19
 8008edc:	08008f19 	.word	0x08008f19
 8008ee0:	08008f19 	.word	0x08008f19
 8008ee4:	08008f11 	.word	0x08008f11
 8008ee8:	2301      	movs	r3, #1
 8008eea:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008eee:	e326      	b.n	800953e <UART_SetConfig+0x7ae>
 8008ef0:	2304      	movs	r3, #4
 8008ef2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008ef6:	e322      	b.n	800953e <UART_SetConfig+0x7ae>
 8008ef8:	2308      	movs	r3, #8
 8008efa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008efe:	e31e      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f00:	2310      	movs	r3, #16
 8008f02:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f06:	e31a      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f08:	2320      	movs	r3, #32
 8008f0a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f0e:	e316      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f10:	2340      	movs	r3, #64	@ 0x40
 8008f12:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f16:	e312      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f18:	2380      	movs	r3, #128	@ 0x80
 8008f1a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f1e:	e30e      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f20:	697b      	ldr	r3, [r7, #20]
 8008f22:	681b      	ldr	r3, [r3, #0]
 8008f24:	4a69      	ldr	r2, [pc, #420]	@ (80090cc <UART_SetConfig+0x33c>)
 8008f26:	4293      	cmp	r3, r2
 8008f28:	d130      	bne.n	8008f8c <UART_SetConfig+0x1fc>
 8008f2a:	4b67      	ldr	r3, [pc, #412]	@ (80090c8 <UART_SetConfig+0x338>)
 8008f2c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008f2e:	f003 0307 	and.w	r3, r3, #7
 8008f32:	2b05      	cmp	r3, #5
 8008f34:	d826      	bhi.n	8008f84 <UART_SetConfig+0x1f4>
 8008f36:	a201      	add	r2, pc, #4	@ (adr r2, 8008f3c <UART_SetConfig+0x1ac>)
 8008f38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008f3c:	08008f55 	.word	0x08008f55
 8008f40:	08008f5d 	.word	0x08008f5d
 8008f44:	08008f65 	.word	0x08008f65
 8008f48:	08008f6d 	.word	0x08008f6d
 8008f4c:	08008f75 	.word	0x08008f75
 8008f50:	08008f7d 	.word	0x08008f7d
 8008f54:	2300      	movs	r3, #0
 8008f56:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f5a:	e2f0      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f5c:	2304      	movs	r3, #4
 8008f5e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f62:	e2ec      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f64:	2308      	movs	r3, #8
 8008f66:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f6a:	e2e8      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f6c:	2310      	movs	r3, #16
 8008f6e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f72:	e2e4      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f74:	2320      	movs	r3, #32
 8008f76:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f7a:	e2e0      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f7c:	2340      	movs	r3, #64	@ 0x40
 8008f7e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f82:	e2dc      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f84:	2380      	movs	r3, #128	@ 0x80
 8008f86:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008f8a:	e2d8      	b.n	800953e <UART_SetConfig+0x7ae>
 8008f8c:	697b      	ldr	r3, [r7, #20]
 8008f8e:	681b      	ldr	r3, [r3, #0]
 8008f90:	4a4f      	ldr	r2, [pc, #316]	@ (80090d0 <UART_SetConfig+0x340>)
 8008f92:	4293      	cmp	r3, r2
 8008f94:	d130      	bne.n	8008ff8 <UART_SetConfig+0x268>
 8008f96:	4b4c      	ldr	r3, [pc, #304]	@ (80090c8 <UART_SetConfig+0x338>)
 8008f98:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008f9a:	f003 0307 	and.w	r3, r3, #7
 8008f9e:	2b05      	cmp	r3, #5
 8008fa0:	d826      	bhi.n	8008ff0 <UART_SetConfig+0x260>
 8008fa2:	a201      	add	r2, pc, #4	@ (adr r2, 8008fa8 <UART_SetConfig+0x218>)
 8008fa4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008fa8:	08008fc1 	.word	0x08008fc1
 8008fac:	08008fc9 	.word	0x08008fc9
 8008fb0:	08008fd1 	.word	0x08008fd1
 8008fb4:	08008fd9 	.word	0x08008fd9
 8008fb8:	08008fe1 	.word	0x08008fe1
 8008fbc:	08008fe9 	.word	0x08008fe9
 8008fc0:	2300      	movs	r3, #0
 8008fc2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008fc6:	e2ba      	b.n	800953e <UART_SetConfig+0x7ae>
 8008fc8:	2304      	movs	r3, #4
 8008fca:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008fce:	e2b6      	b.n	800953e <UART_SetConfig+0x7ae>
 8008fd0:	2308      	movs	r3, #8
 8008fd2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008fd6:	e2b2      	b.n	800953e <UART_SetConfig+0x7ae>
 8008fd8:	2310      	movs	r3, #16
 8008fda:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008fde:	e2ae      	b.n	800953e <UART_SetConfig+0x7ae>
 8008fe0:	2320      	movs	r3, #32
 8008fe2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008fe6:	e2aa      	b.n	800953e <UART_SetConfig+0x7ae>
 8008fe8:	2340      	movs	r3, #64	@ 0x40
 8008fea:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008fee:	e2a6      	b.n	800953e <UART_SetConfig+0x7ae>
 8008ff0:	2380      	movs	r3, #128	@ 0x80
 8008ff2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8008ff6:	e2a2      	b.n	800953e <UART_SetConfig+0x7ae>
 8008ff8:	697b      	ldr	r3, [r7, #20]
 8008ffa:	681b      	ldr	r3, [r3, #0]
 8008ffc:	4a35      	ldr	r2, [pc, #212]	@ (80090d4 <UART_SetConfig+0x344>)
 8008ffe:	4293      	cmp	r3, r2
 8009000:	d130      	bne.n	8009064 <UART_SetConfig+0x2d4>
 8009002:	4b31      	ldr	r3, [pc, #196]	@ (80090c8 <UART_SetConfig+0x338>)
 8009004:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009006:	f003 0307 	and.w	r3, r3, #7
 800900a:	2b05      	cmp	r3, #5
 800900c:	d826      	bhi.n	800905c <UART_SetConfig+0x2cc>
 800900e:	a201      	add	r2, pc, #4	@ (adr r2, 8009014 <UART_SetConfig+0x284>)
 8009010:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009014:	0800902d 	.word	0x0800902d
 8009018:	08009035 	.word	0x08009035
 800901c:	0800903d 	.word	0x0800903d
 8009020:	08009045 	.word	0x08009045
 8009024:	0800904d 	.word	0x0800904d
 8009028:	08009055 	.word	0x08009055
 800902c:	2300      	movs	r3, #0
 800902e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009032:	e284      	b.n	800953e <UART_SetConfig+0x7ae>
 8009034:	2304      	movs	r3, #4
 8009036:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800903a:	e280      	b.n	800953e <UART_SetConfig+0x7ae>
 800903c:	2308      	movs	r3, #8
 800903e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009042:	e27c      	b.n	800953e <UART_SetConfig+0x7ae>
 8009044:	2310      	movs	r3, #16
 8009046:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800904a:	e278      	b.n	800953e <UART_SetConfig+0x7ae>
 800904c:	2320      	movs	r3, #32
 800904e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009052:	e274      	b.n	800953e <UART_SetConfig+0x7ae>
 8009054:	2340      	movs	r3, #64	@ 0x40
 8009056:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800905a:	e270      	b.n	800953e <UART_SetConfig+0x7ae>
 800905c:	2380      	movs	r3, #128	@ 0x80
 800905e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009062:	e26c      	b.n	800953e <UART_SetConfig+0x7ae>
 8009064:	697b      	ldr	r3, [r7, #20]
 8009066:	681b      	ldr	r3, [r3, #0]
 8009068:	4a1b      	ldr	r2, [pc, #108]	@ (80090d8 <UART_SetConfig+0x348>)
 800906a:	4293      	cmp	r3, r2
 800906c:	d142      	bne.n	80090f4 <UART_SetConfig+0x364>
 800906e:	4b16      	ldr	r3, [pc, #88]	@ (80090c8 <UART_SetConfig+0x338>)
 8009070:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009072:	f003 0307 	and.w	r3, r3, #7
 8009076:	2b05      	cmp	r3, #5
 8009078:	d838      	bhi.n	80090ec <UART_SetConfig+0x35c>
 800907a:	a201      	add	r2, pc, #4	@ (adr r2, 8009080 <UART_SetConfig+0x2f0>)
 800907c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009080:	08009099 	.word	0x08009099
 8009084:	080090a1 	.word	0x080090a1
 8009088:	080090a9 	.word	0x080090a9
 800908c:	080090b1 	.word	0x080090b1
 8009090:	080090dd 	.word	0x080090dd
 8009094:	080090e5 	.word	0x080090e5
 8009098:	2300      	movs	r3, #0
 800909a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800909e:	e24e      	b.n	800953e <UART_SetConfig+0x7ae>
 80090a0:	2304      	movs	r3, #4
 80090a2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80090a6:	e24a      	b.n	800953e <UART_SetConfig+0x7ae>
 80090a8:	2308      	movs	r3, #8
 80090aa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80090ae:	e246      	b.n	800953e <UART_SetConfig+0x7ae>
 80090b0:	2310      	movs	r3, #16
 80090b2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80090b6:	e242      	b.n	800953e <UART_SetConfig+0x7ae>
 80090b8:	cfff69f3 	.word	0xcfff69f3
 80090bc:	58000c00 	.word	0x58000c00
 80090c0:	11fff4ff 	.word	0x11fff4ff
 80090c4:	40011000 	.word	0x40011000
 80090c8:	58024400 	.word	0x58024400
 80090cc:	40004400 	.word	0x40004400
 80090d0:	40004800 	.word	0x40004800
 80090d4:	40004c00 	.word	0x40004c00
 80090d8:	40005000 	.word	0x40005000
 80090dc:	2320      	movs	r3, #32
 80090de:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80090e2:	e22c      	b.n	800953e <UART_SetConfig+0x7ae>
 80090e4:	2340      	movs	r3, #64	@ 0x40
 80090e6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80090ea:	e228      	b.n	800953e <UART_SetConfig+0x7ae>
 80090ec:	2380      	movs	r3, #128	@ 0x80
 80090ee:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80090f2:	e224      	b.n	800953e <UART_SetConfig+0x7ae>
 80090f4:	697b      	ldr	r3, [r7, #20]
 80090f6:	681b      	ldr	r3, [r3, #0]
 80090f8:	4ab1      	ldr	r2, [pc, #708]	@ (80093c0 <UART_SetConfig+0x630>)
 80090fa:	4293      	cmp	r3, r2
 80090fc:	d176      	bne.n	80091ec <UART_SetConfig+0x45c>
 80090fe:	4bb1      	ldr	r3, [pc, #708]	@ (80093c4 <UART_SetConfig+0x634>)
 8009100:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009102:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8009106:	2b28      	cmp	r3, #40	@ 0x28
 8009108:	d86c      	bhi.n	80091e4 <UART_SetConfig+0x454>
 800910a:	a201      	add	r2, pc, #4	@ (adr r2, 8009110 <UART_SetConfig+0x380>)
 800910c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009110:	080091b5 	.word	0x080091b5
 8009114:	080091e5 	.word	0x080091e5
 8009118:	080091e5 	.word	0x080091e5
 800911c:	080091e5 	.word	0x080091e5
 8009120:	080091e5 	.word	0x080091e5
 8009124:	080091e5 	.word	0x080091e5
 8009128:	080091e5 	.word	0x080091e5
 800912c:	080091e5 	.word	0x080091e5
 8009130:	080091bd 	.word	0x080091bd
 8009134:	080091e5 	.word	0x080091e5
 8009138:	080091e5 	.word	0x080091e5
 800913c:	080091e5 	.word	0x080091e5
 8009140:	080091e5 	.word	0x080091e5
 8009144:	080091e5 	.word	0x080091e5
 8009148:	080091e5 	.word	0x080091e5
 800914c:	080091e5 	.word	0x080091e5
 8009150:	080091c5 	.word	0x080091c5
 8009154:	080091e5 	.word	0x080091e5
 8009158:	080091e5 	.word	0x080091e5
 800915c:	080091e5 	.word	0x080091e5
 8009160:	080091e5 	.word	0x080091e5
 8009164:	080091e5 	.word	0x080091e5
 8009168:	080091e5 	.word	0x080091e5
 800916c:	080091e5 	.word	0x080091e5
 8009170:	080091cd 	.word	0x080091cd
 8009174:	080091e5 	.word	0x080091e5
 8009178:	080091e5 	.word	0x080091e5
 800917c:	080091e5 	.word	0x080091e5
 8009180:	080091e5 	.word	0x080091e5
 8009184:	080091e5 	.word	0x080091e5
 8009188:	080091e5 	.word	0x080091e5
 800918c:	080091e5 	.word	0x080091e5
 8009190:	080091d5 	.word	0x080091d5
 8009194:	080091e5 	.word	0x080091e5
 8009198:	080091e5 	.word	0x080091e5
 800919c:	080091e5 	.word	0x080091e5
 80091a0:	080091e5 	.word	0x080091e5
 80091a4:	080091e5 	.word	0x080091e5
 80091a8:	080091e5 	.word	0x080091e5
 80091ac:	080091e5 	.word	0x080091e5
 80091b0:	080091dd 	.word	0x080091dd
 80091b4:	2301      	movs	r3, #1
 80091b6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80091ba:	e1c0      	b.n	800953e <UART_SetConfig+0x7ae>
 80091bc:	2304      	movs	r3, #4
 80091be:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80091c2:	e1bc      	b.n	800953e <UART_SetConfig+0x7ae>
 80091c4:	2308      	movs	r3, #8
 80091c6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80091ca:	e1b8      	b.n	800953e <UART_SetConfig+0x7ae>
 80091cc:	2310      	movs	r3, #16
 80091ce:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80091d2:	e1b4      	b.n	800953e <UART_SetConfig+0x7ae>
 80091d4:	2320      	movs	r3, #32
 80091d6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80091da:	e1b0      	b.n	800953e <UART_SetConfig+0x7ae>
 80091dc:	2340      	movs	r3, #64	@ 0x40
 80091de:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80091e2:	e1ac      	b.n	800953e <UART_SetConfig+0x7ae>
 80091e4:	2380      	movs	r3, #128	@ 0x80
 80091e6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80091ea:	e1a8      	b.n	800953e <UART_SetConfig+0x7ae>
 80091ec:	697b      	ldr	r3, [r7, #20]
 80091ee:	681b      	ldr	r3, [r3, #0]
 80091f0:	4a75      	ldr	r2, [pc, #468]	@ (80093c8 <UART_SetConfig+0x638>)
 80091f2:	4293      	cmp	r3, r2
 80091f4:	d130      	bne.n	8009258 <UART_SetConfig+0x4c8>
 80091f6:	4b73      	ldr	r3, [pc, #460]	@ (80093c4 <UART_SetConfig+0x634>)
 80091f8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80091fa:	f003 0307 	and.w	r3, r3, #7
 80091fe:	2b05      	cmp	r3, #5
 8009200:	d826      	bhi.n	8009250 <UART_SetConfig+0x4c0>
 8009202:	a201      	add	r2, pc, #4	@ (adr r2, 8009208 <UART_SetConfig+0x478>)
 8009204:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009208:	08009221 	.word	0x08009221
 800920c:	08009229 	.word	0x08009229
 8009210:	08009231 	.word	0x08009231
 8009214:	08009239 	.word	0x08009239
 8009218:	08009241 	.word	0x08009241
 800921c:	08009249 	.word	0x08009249
 8009220:	2300      	movs	r3, #0
 8009222:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009226:	e18a      	b.n	800953e <UART_SetConfig+0x7ae>
 8009228:	2304      	movs	r3, #4
 800922a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800922e:	e186      	b.n	800953e <UART_SetConfig+0x7ae>
 8009230:	2308      	movs	r3, #8
 8009232:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009236:	e182      	b.n	800953e <UART_SetConfig+0x7ae>
 8009238:	2310      	movs	r3, #16
 800923a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800923e:	e17e      	b.n	800953e <UART_SetConfig+0x7ae>
 8009240:	2320      	movs	r3, #32
 8009242:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009246:	e17a      	b.n	800953e <UART_SetConfig+0x7ae>
 8009248:	2340      	movs	r3, #64	@ 0x40
 800924a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800924e:	e176      	b.n	800953e <UART_SetConfig+0x7ae>
 8009250:	2380      	movs	r3, #128	@ 0x80
 8009252:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009256:	e172      	b.n	800953e <UART_SetConfig+0x7ae>
 8009258:	697b      	ldr	r3, [r7, #20]
 800925a:	681b      	ldr	r3, [r3, #0]
 800925c:	4a5b      	ldr	r2, [pc, #364]	@ (80093cc <UART_SetConfig+0x63c>)
 800925e:	4293      	cmp	r3, r2
 8009260:	d130      	bne.n	80092c4 <UART_SetConfig+0x534>
 8009262:	4b58      	ldr	r3, [pc, #352]	@ (80093c4 <UART_SetConfig+0x634>)
 8009264:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8009266:	f003 0307 	and.w	r3, r3, #7
 800926a:	2b05      	cmp	r3, #5
 800926c:	d826      	bhi.n	80092bc <UART_SetConfig+0x52c>
 800926e:	a201      	add	r2, pc, #4	@ (adr r2, 8009274 <UART_SetConfig+0x4e4>)
 8009270:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009274:	0800928d 	.word	0x0800928d
 8009278:	08009295 	.word	0x08009295
 800927c:	0800929d 	.word	0x0800929d
 8009280:	080092a5 	.word	0x080092a5
 8009284:	080092ad 	.word	0x080092ad
 8009288:	080092b5 	.word	0x080092b5
 800928c:	2300      	movs	r3, #0
 800928e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009292:	e154      	b.n	800953e <UART_SetConfig+0x7ae>
 8009294:	2304      	movs	r3, #4
 8009296:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800929a:	e150      	b.n	800953e <UART_SetConfig+0x7ae>
 800929c:	2308      	movs	r3, #8
 800929e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80092a2:	e14c      	b.n	800953e <UART_SetConfig+0x7ae>
 80092a4:	2310      	movs	r3, #16
 80092a6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80092aa:	e148      	b.n	800953e <UART_SetConfig+0x7ae>
 80092ac:	2320      	movs	r3, #32
 80092ae:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80092b2:	e144      	b.n	800953e <UART_SetConfig+0x7ae>
 80092b4:	2340      	movs	r3, #64	@ 0x40
 80092b6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80092ba:	e140      	b.n	800953e <UART_SetConfig+0x7ae>
 80092bc:	2380      	movs	r3, #128	@ 0x80
 80092be:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80092c2:	e13c      	b.n	800953e <UART_SetConfig+0x7ae>
 80092c4:	697b      	ldr	r3, [r7, #20]
 80092c6:	681b      	ldr	r3, [r3, #0]
 80092c8:	4a41      	ldr	r2, [pc, #260]	@ (80093d0 <UART_SetConfig+0x640>)
 80092ca:	4293      	cmp	r3, r2
 80092cc:	f040 8082 	bne.w	80093d4 <UART_SetConfig+0x644>
 80092d0:	4b3c      	ldr	r3, [pc, #240]	@ (80093c4 <UART_SetConfig+0x634>)
 80092d2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80092d4:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80092d8:	2b28      	cmp	r3, #40	@ 0x28
 80092da:	d86d      	bhi.n	80093b8 <UART_SetConfig+0x628>
 80092dc:	a201      	add	r2, pc, #4	@ (adr r2, 80092e4 <UART_SetConfig+0x554>)
 80092de:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80092e2:	bf00      	nop
 80092e4:	08009389 	.word	0x08009389
 80092e8:	080093b9 	.word	0x080093b9
 80092ec:	080093b9 	.word	0x080093b9
 80092f0:	080093b9 	.word	0x080093b9
 80092f4:	080093b9 	.word	0x080093b9
 80092f8:	080093b9 	.word	0x080093b9
 80092fc:	080093b9 	.word	0x080093b9
 8009300:	080093b9 	.word	0x080093b9
 8009304:	08009391 	.word	0x08009391
 8009308:	080093b9 	.word	0x080093b9
 800930c:	080093b9 	.word	0x080093b9
 8009310:	080093b9 	.word	0x080093b9
 8009314:	080093b9 	.word	0x080093b9
 8009318:	080093b9 	.word	0x080093b9
 800931c:	080093b9 	.word	0x080093b9
 8009320:	080093b9 	.word	0x080093b9
 8009324:	08009399 	.word	0x08009399
 8009328:	080093b9 	.word	0x080093b9
 800932c:	080093b9 	.word	0x080093b9
 8009330:	080093b9 	.word	0x080093b9
 8009334:	080093b9 	.word	0x080093b9
 8009338:	080093b9 	.word	0x080093b9
 800933c:	080093b9 	.word	0x080093b9
 8009340:	080093b9 	.word	0x080093b9
 8009344:	080093a1 	.word	0x080093a1
 8009348:	080093b9 	.word	0x080093b9
 800934c:	080093b9 	.word	0x080093b9
 8009350:	080093b9 	.word	0x080093b9
 8009354:	080093b9 	.word	0x080093b9
 8009358:	080093b9 	.word	0x080093b9
 800935c:	080093b9 	.word	0x080093b9
 8009360:	080093b9 	.word	0x080093b9
 8009364:	080093a9 	.word	0x080093a9
 8009368:	080093b9 	.word	0x080093b9
 800936c:	080093b9 	.word	0x080093b9
 8009370:	080093b9 	.word	0x080093b9
 8009374:	080093b9 	.word	0x080093b9
 8009378:	080093b9 	.word	0x080093b9
 800937c:	080093b9 	.word	0x080093b9
 8009380:	080093b9 	.word	0x080093b9
 8009384:	080093b1 	.word	0x080093b1
 8009388:	2301      	movs	r3, #1
 800938a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800938e:	e0d6      	b.n	800953e <UART_SetConfig+0x7ae>
 8009390:	2304      	movs	r3, #4
 8009392:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009396:	e0d2      	b.n	800953e <UART_SetConfig+0x7ae>
 8009398:	2308      	movs	r3, #8
 800939a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800939e:	e0ce      	b.n	800953e <UART_SetConfig+0x7ae>
 80093a0:	2310      	movs	r3, #16
 80093a2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80093a6:	e0ca      	b.n	800953e <UART_SetConfig+0x7ae>
 80093a8:	2320      	movs	r3, #32
 80093aa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80093ae:	e0c6      	b.n	800953e <UART_SetConfig+0x7ae>
 80093b0:	2340      	movs	r3, #64	@ 0x40
 80093b2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80093b6:	e0c2      	b.n	800953e <UART_SetConfig+0x7ae>
 80093b8:	2380      	movs	r3, #128	@ 0x80
 80093ba:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80093be:	e0be      	b.n	800953e <UART_SetConfig+0x7ae>
 80093c0:	40011400 	.word	0x40011400
 80093c4:	58024400 	.word	0x58024400
 80093c8:	40007800 	.word	0x40007800
 80093cc:	40007c00 	.word	0x40007c00
 80093d0:	40011800 	.word	0x40011800
 80093d4:	697b      	ldr	r3, [r7, #20]
 80093d6:	681b      	ldr	r3, [r3, #0]
 80093d8:	4aad      	ldr	r2, [pc, #692]	@ (8009690 <UART_SetConfig+0x900>)
 80093da:	4293      	cmp	r3, r2
 80093dc:	d176      	bne.n	80094cc <UART_SetConfig+0x73c>
 80093de:	4bad      	ldr	r3, [pc, #692]	@ (8009694 <UART_SetConfig+0x904>)
 80093e0:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80093e2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80093e6:	2b28      	cmp	r3, #40	@ 0x28
 80093e8:	d86c      	bhi.n	80094c4 <UART_SetConfig+0x734>
 80093ea:	a201      	add	r2, pc, #4	@ (adr r2, 80093f0 <UART_SetConfig+0x660>)
 80093ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80093f0:	08009495 	.word	0x08009495
 80093f4:	080094c5 	.word	0x080094c5
 80093f8:	080094c5 	.word	0x080094c5
 80093fc:	080094c5 	.word	0x080094c5
 8009400:	080094c5 	.word	0x080094c5
 8009404:	080094c5 	.word	0x080094c5
 8009408:	080094c5 	.word	0x080094c5
 800940c:	080094c5 	.word	0x080094c5
 8009410:	0800949d 	.word	0x0800949d
 8009414:	080094c5 	.word	0x080094c5
 8009418:	080094c5 	.word	0x080094c5
 800941c:	080094c5 	.word	0x080094c5
 8009420:	080094c5 	.word	0x080094c5
 8009424:	080094c5 	.word	0x080094c5
 8009428:	080094c5 	.word	0x080094c5
 800942c:	080094c5 	.word	0x080094c5
 8009430:	080094a5 	.word	0x080094a5
 8009434:	080094c5 	.word	0x080094c5
 8009438:	080094c5 	.word	0x080094c5
 800943c:	080094c5 	.word	0x080094c5
 8009440:	080094c5 	.word	0x080094c5
 8009444:	080094c5 	.word	0x080094c5
 8009448:	080094c5 	.word	0x080094c5
 800944c:	080094c5 	.word	0x080094c5
 8009450:	080094ad 	.word	0x080094ad
 8009454:	080094c5 	.word	0x080094c5
 8009458:	080094c5 	.word	0x080094c5
 800945c:	080094c5 	.word	0x080094c5
 8009460:	080094c5 	.word	0x080094c5
 8009464:	080094c5 	.word	0x080094c5
 8009468:	080094c5 	.word	0x080094c5
 800946c:	080094c5 	.word	0x080094c5
 8009470:	080094b5 	.word	0x080094b5
 8009474:	080094c5 	.word	0x080094c5
 8009478:	080094c5 	.word	0x080094c5
 800947c:	080094c5 	.word	0x080094c5
 8009480:	080094c5 	.word	0x080094c5
 8009484:	080094c5 	.word	0x080094c5
 8009488:	080094c5 	.word	0x080094c5
 800948c:	080094c5 	.word	0x080094c5
 8009490:	080094bd 	.word	0x080094bd
 8009494:	2301      	movs	r3, #1
 8009496:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800949a:	e050      	b.n	800953e <UART_SetConfig+0x7ae>
 800949c:	2304      	movs	r3, #4
 800949e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80094a2:	e04c      	b.n	800953e <UART_SetConfig+0x7ae>
 80094a4:	2308      	movs	r3, #8
 80094a6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80094aa:	e048      	b.n	800953e <UART_SetConfig+0x7ae>
 80094ac:	2310      	movs	r3, #16
 80094ae:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80094b2:	e044      	b.n	800953e <UART_SetConfig+0x7ae>
 80094b4:	2320      	movs	r3, #32
 80094b6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80094ba:	e040      	b.n	800953e <UART_SetConfig+0x7ae>
 80094bc:	2340      	movs	r3, #64	@ 0x40
 80094be:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80094c2:	e03c      	b.n	800953e <UART_SetConfig+0x7ae>
 80094c4:	2380      	movs	r3, #128	@ 0x80
 80094c6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 80094ca:	e038      	b.n	800953e <UART_SetConfig+0x7ae>
 80094cc:	697b      	ldr	r3, [r7, #20]
 80094ce:	681b      	ldr	r3, [r3, #0]
 80094d0:	4a71      	ldr	r2, [pc, #452]	@ (8009698 <UART_SetConfig+0x908>)
 80094d2:	4293      	cmp	r3, r2
 80094d4:	d130      	bne.n	8009538 <UART_SetConfig+0x7a8>
 80094d6:	4b6f      	ldr	r3, [pc, #444]	@ (8009694 <UART_SetConfig+0x904>)
 80094d8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80094da:	f003 0307 	and.w	r3, r3, #7
 80094de:	2b05      	cmp	r3, #5
 80094e0:	d826      	bhi.n	8009530 <UART_SetConfig+0x7a0>
 80094e2:	a201      	add	r2, pc, #4	@ (adr r2, 80094e8 <UART_SetConfig+0x758>)
 80094e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80094e8:	08009501 	.word	0x08009501
 80094ec:	08009509 	.word	0x08009509
 80094f0:	08009511 	.word	0x08009511
 80094f4:	08009519 	.word	0x08009519
 80094f8:	08009521 	.word	0x08009521
 80094fc:	08009529 	.word	0x08009529
 8009500:	2302      	movs	r3, #2
 8009502:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009506:	e01a      	b.n	800953e <UART_SetConfig+0x7ae>
 8009508:	2304      	movs	r3, #4
 800950a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800950e:	e016      	b.n	800953e <UART_SetConfig+0x7ae>
 8009510:	2308      	movs	r3, #8
 8009512:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009516:	e012      	b.n	800953e <UART_SetConfig+0x7ae>
 8009518:	2310      	movs	r3, #16
 800951a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800951e:	e00e      	b.n	800953e <UART_SetConfig+0x7ae>
 8009520:	2320      	movs	r3, #32
 8009522:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009526:	e00a      	b.n	800953e <UART_SetConfig+0x7ae>
 8009528:	2340      	movs	r3, #64	@ 0x40
 800952a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800952e:	e006      	b.n	800953e <UART_SetConfig+0x7ae>
 8009530:	2380      	movs	r3, #128	@ 0x80
 8009532:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 8009536:	e002      	b.n	800953e <UART_SetConfig+0x7ae>
 8009538:	2380      	movs	r3, #128	@ 0x80
 800953a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800953e:	697b      	ldr	r3, [r7, #20]
 8009540:	681b      	ldr	r3, [r3, #0]
 8009542:	4a55      	ldr	r2, [pc, #340]	@ (8009698 <UART_SetConfig+0x908>)
 8009544:	4293      	cmp	r3, r2
 8009546:	f040 80f8 	bne.w	800973a <UART_SetConfig+0x9aa>
 800954a:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 800954e:	2b20      	cmp	r3, #32
 8009550:	dc46      	bgt.n	80095e0 <UART_SetConfig+0x850>
 8009552:	2b02      	cmp	r3, #2
 8009554:	db75      	blt.n	8009642 <UART_SetConfig+0x8b2>
 8009556:	3b02      	subs	r3, #2
 8009558:	2b1e      	cmp	r3, #30
 800955a:	d872      	bhi.n	8009642 <UART_SetConfig+0x8b2>
 800955c:	a201      	add	r2, pc, #4	@ (adr r2, 8009564 <UART_SetConfig+0x7d4>)
 800955e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009562:	bf00      	nop
 8009564:	080095e7 	.word	0x080095e7
 8009568:	08009643 	.word	0x08009643
 800956c:	080095ef 	.word	0x080095ef
 8009570:	08009643 	.word	0x08009643
 8009574:	08009643 	.word	0x08009643
 8009578:	08009643 	.word	0x08009643
 800957c:	080095ff 	.word	0x080095ff
 8009580:	08009643 	.word	0x08009643
 8009584:	08009643 	.word	0x08009643
 8009588:	08009643 	.word	0x08009643
 800958c:	08009643 	.word	0x08009643
 8009590:	08009643 	.word	0x08009643
 8009594:	08009643 	.word	0x08009643
 8009598:	08009643 	.word	0x08009643
 800959c:	0800960f 	.word	0x0800960f
 80095a0:	08009643 	.word	0x08009643
 80095a4:	08009643 	.word	0x08009643
 80095a8:	08009643 	.word	0x08009643
 80095ac:	08009643 	.word	0x08009643
 80095b0:	08009643 	.word	0x08009643
 80095b4:	08009643 	.word	0x08009643
 80095b8:	08009643 	.word	0x08009643
 80095bc:	08009643 	.word	0x08009643
 80095c0:	08009643 	.word	0x08009643
 80095c4:	08009643 	.word	0x08009643
 80095c8:	08009643 	.word	0x08009643
 80095cc:	08009643 	.word	0x08009643
 80095d0:	08009643 	.word	0x08009643
 80095d4:	08009643 	.word	0x08009643
 80095d8:	08009643 	.word	0x08009643
 80095dc:	08009635 	.word	0x08009635
 80095e0:	2b40      	cmp	r3, #64	@ 0x40
 80095e2:	d02a      	beq.n	800963a <UART_SetConfig+0x8aa>
 80095e4:	e02d      	b.n	8009642 <UART_SetConfig+0x8b2>
 80095e6:	f7fd fb39 	bl	8006c5c <HAL_RCCEx_GetD3PCLK1Freq>
 80095ea:	63f8      	str	r0, [r7, #60]	@ 0x3c
 80095ec:	e02f      	b.n	800964e <UART_SetConfig+0x8be>
 80095ee:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80095f2:	4618      	mov	r0, r3
 80095f4:	f7fd fb48 	bl	8006c88 <HAL_RCCEx_GetPLL2ClockFreq>
 80095f8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80095fa:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80095fc:	e027      	b.n	800964e <UART_SetConfig+0x8be>
 80095fe:	f107 0318 	add.w	r3, r7, #24
 8009602:	4618      	mov	r0, r3
 8009604:	f7fd fc94 	bl	8006f30 <HAL_RCCEx_GetPLL3ClockFreq>
 8009608:	69fb      	ldr	r3, [r7, #28]
 800960a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800960c:	e01f      	b.n	800964e <UART_SetConfig+0x8be>
 800960e:	4b21      	ldr	r3, [pc, #132]	@ (8009694 <UART_SetConfig+0x904>)
 8009610:	681b      	ldr	r3, [r3, #0]
 8009612:	f003 0320 	and.w	r3, r3, #32
 8009616:	2b00      	cmp	r3, #0
 8009618:	d009      	beq.n	800962e <UART_SetConfig+0x89e>
 800961a:	4b1e      	ldr	r3, [pc, #120]	@ (8009694 <UART_SetConfig+0x904>)
 800961c:	681b      	ldr	r3, [r3, #0]
 800961e:	08db      	lsrs	r3, r3, #3
 8009620:	f003 0303 	and.w	r3, r3, #3
 8009624:	4a1d      	ldr	r2, [pc, #116]	@ (800969c <UART_SetConfig+0x90c>)
 8009626:	fa22 f303 	lsr.w	r3, r2, r3
 800962a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800962c:	e00f      	b.n	800964e <UART_SetConfig+0x8be>
 800962e:	4b1b      	ldr	r3, [pc, #108]	@ (800969c <UART_SetConfig+0x90c>)
 8009630:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009632:	e00c      	b.n	800964e <UART_SetConfig+0x8be>
 8009634:	4b1a      	ldr	r3, [pc, #104]	@ (80096a0 <UART_SetConfig+0x910>)
 8009636:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009638:	e009      	b.n	800964e <UART_SetConfig+0x8be>
 800963a:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800963e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009640:	e005      	b.n	800964e <UART_SetConfig+0x8be>
 8009642:	2300      	movs	r3, #0
 8009644:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009646:	2301      	movs	r3, #1
 8009648:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 800964c:	bf00      	nop
 800964e:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009650:	2b00      	cmp	r3, #0
 8009652:	f000 81ee 	beq.w	8009a32 <UART_SetConfig+0xca2>
 8009656:	697b      	ldr	r3, [r7, #20]
 8009658:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800965a:	4a12      	ldr	r2, [pc, #72]	@ (80096a4 <UART_SetConfig+0x914>)
 800965c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8009660:	461a      	mov	r2, r3
 8009662:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009664:	fbb3 f3f2 	udiv	r3, r3, r2
 8009668:	633b      	str	r3, [r7, #48]	@ 0x30
 800966a:	697b      	ldr	r3, [r7, #20]
 800966c:	685a      	ldr	r2, [r3, #4]
 800966e:	4613      	mov	r3, r2
 8009670:	005b      	lsls	r3, r3, #1
 8009672:	4413      	add	r3, r2
 8009674:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009676:	429a      	cmp	r2, r3
 8009678:	d305      	bcc.n	8009686 <UART_SetConfig+0x8f6>
 800967a:	697b      	ldr	r3, [r7, #20]
 800967c:	685b      	ldr	r3, [r3, #4]
 800967e:	031b      	lsls	r3, r3, #12
 8009680:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009682:	429a      	cmp	r2, r3
 8009684:	d910      	bls.n	80096a8 <UART_SetConfig+0x918>
 8009686:	2301      	movs	r3, #1
 8009688:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 800968c:	e1d1      	b.n	8009a32 <UART_SetConfig+0xca2>
 800968e:	bf00      	nop
 8009690:	40011c00 	.word	0x40011c00
 8009694:	58024400 	.word	0x58024400
 8009698:	58000c00 	.word	0x58000c00
 800969c:	03d09000 	.word	0x03d09000
 80096a0:	003d0900 	.word	0x003d0900
 80096a4:	0800de40 	.word	0x0800de40
 80096a8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80096aa:	2200      	movs	r2, #0
 80096ac:	60bb      	str	r3, [r7, #8]
 80096ae:	60fa      	str	r2, [r7, #12]
 80096b0:	697b      	ldr	r3, [r7, #20]
 80096b2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80096b4:	4ac0      	ldr	r2, [pc, #768]	@ (80099b8 <UART_SetConfig+0xc28>)
 80096b6:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80096ba:	b29b      	uxth	r3, r3
 80096bc:	2200      	movs	r2, #0
 80096be:	603b      	str	r3, [r7, #0]
 80096c0:	607a      	str	r2, [r7, #4]
 80096c2:	e9d7 2300 	ldrd	r2, r3, [r7]
 80096c6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80096ca:	f7f6 fe89 	bl	80003e0 <__aeabi_uldivmod>
 80096ce:	4602      	mov	r2, r0
 80096d0:	460b      	mov	r3, r1
 80096d2:	4610      	mov	r0, r2
 80096d4:	4619      	mov	r1, r3
 80096d6:	f04f 0200 	mov.w	r2, #0
 80096da:	f04f 0300 	mov.w	r3, #0
 80096de:	020b      	lsls	r3, r1, #8
 80096e0:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 80096e4:	0202      	lsls	r2, r0, #8
 80096e6:	6979      	ldr	r1, [r7, #20]
 80096e8:	6849      	ldr	r1, [r1, #4]
 80096ea:	0849      	lsrs	r1, r1, #1
 80096ec:	2000      	movs	r0, #0
 80096ee:	460c      	mov	r4, r1
 80096f0:	4605      	mov	r5, r0
 80096f2:	eb12 0804 	adds.w	r8, r2, r4
 80096f6:	eb43 0905 	adc.w	r9, r3, r5
 80096fa:	697b      	ldr	r3, [r7, #20]
 80096fc:	685b      	ldr	r3, [r3, #4]
 80096fe:	2200      	movs	r2, #0
 8009700:	469a      	mov	sl, r3
 8009702:	4693      	mov	fp, r2
 8009704:	4652      	mov	r2, sl
 8009706:	465b      	mov	r3, fp
 8009708:	4640      	mov	r0, r8
 800970a:	4649      	mov	r1, r9
 800970c:	f7f6 fe68 	bl	80003e0 <__aeabi_uldivmod>
 8009710:	4602      	mov	r2, r0
 8009712:	460b      	mov	r3, r1
 8009714:	4613      	mov	r3, r2
 8009716:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009718:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800971a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800971e:	d308      	bcc.n	8009732 <UART_SetConfig+0x9a2>
 8009720:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009722:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8009726:	d204      	bcs.n	8009732 <UART_SetConfig+0x9a2>
 8009728:	697b      	ldr	r3, [r7, #20]
 800972a:	681b      	ldr	r3, [r3, #0]
 800972c:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800972e:	60da      	str	r2, [r3, #12]
 8009730:	e17f      	b.n	8009a32 <UART_SetConfig+0xca2>
 8009732:	2301      	movs	r3, #1
 8009734:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8009738:	e17b      	b.n	8009a32 <UART_SetConfig+0xca2>
 800973a:	697b      	ldr	r3, [r7, #20]
 800973c:	69db      	ldr	r3, [r3, #28]
 800973e:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8009742:	f040 80bd 	bne.w	80098c0 <UART_SetConfig+0xb30>
 8009746:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 800974a:	2b20      	cmp	r3, #32
 800974c:	dc48      	bgt.n	80097e0 <UART_SetConfig+0xa50>
 800974e:	2b00      	cmp	r3, #0
 8009750:	db7b      	blt.n	800984a <UART_SetConfig+0xaba>
 8009752:	2b20      	cmp	r3, #32
 8009754:	d879      	bhi.n	800984a <UART_SetConfig+0xaba>
 8009756:	a201      	add	r2, pc, #4	@ (adr r2, 800975c <UART_SetConfig+0x9cc>)
 8009758:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800975c:	080097e7 	.word	0x080097e7
 8009760:	080097ef 	.word	0x080097ef
 8009764:	0800984b 	.word	0x0800984b
 8009768:	0800984b 	.word	0x0800984b
 800976c:	080097f7 	.word	0x080097f7
 8009770:	0800984b 	.word	0x0800984b
 8009774:	0800984b 	.word	0x0800984b
 8009778:	0800984b 	.word	0x0800984b
 800977c:	08009807 	.word	0x08009807
 8009780:	0800984b 	.word	0x0800984b
 8009784:	0800984b 	.word	0x0800984b
 8009788:	0800984b 	.word	0x0800984b
 800978c:	0800984b 	.word	0x0800984b
 8009790:	0800984b 	.word	0x0800984b
 8009794:	0800984b 	.word	0x0800984b
 8009798:	0800984b 	.word	0x0800984b
 800979c:	08009817 	.word	0x08009817
 80097a0:	0800984b 	.word	0x0800984b
 80097a4:	0800984b 	.word	0x0800984b
 80097a8:	0800984b 	.word	0x0800984b
 80097ac:	0800984b 	.word	0x0800984b
 80097b0:	0800984b 	.word	0x0800984b
 80097b4:	0800984b 	.word	0x0800984b
 80097b8:	0800984b 	.word	0x0800984b
 80097bc:	0800984b 	.word	0x0800984b
 80097c0:	0800984b 	.word	0x0800984b
 80097c4:	0800984b 	.word	0x0800984b
 80097c8:	0800984b 	.word	0x0800984b
 80097cc:	0800984b 	.word	0x0800984b
 80097d0:	0800984b 	.word	0x0800984b
 80097d4:	0800984b 	.word	0x0800984b
 80097d8:	0800984b 	.word	0x0800984b
 80097dc:	0800983d 	.word	0x0800983d
 80097e0:	2b40      	cmp	r3, #64	@ 0x40
 80097e2:	d02e      	beq.n	8009842 <UART_SetConfig+0xab2>
 80097e4:	e031      	b.n	800984a <UART_SetConfig+0xaba>
 80097e6:	f7fc f86d 	bl	80058c4 <HAL_RCC_GetPCLK1Freq>
 80097ea:	63f8      	str	r0, [r7, #60]	@ 0x3c
 80097ec:	e033      	b.n	8009856 <UART_SetConfig+0xac6>
 80097ee:	f7fc f87f 	bl	80058f0 <HAL_RCC_GetPCLK2Freq>
 80097f2:	63f8      	str	r0, [r7, #60]	@ 0x3c
 80097f4:	e02f      	b.n	8009856 <UART_SetConfig+0xac6>
 80097f6:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80097fa:	4618      	mov	r0, r3
 80097fc:	f7fd fa44 	bl	8006c88 <HAL_RCCEx_GetPLL2ClockFreq>
 8009800:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009802:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009804:	e027      	b.n	8009856 <UART_SetConfig+0xac6>
 8009806:	f107 0318 	add.w	r3, r7, #24
 800980a:	4618      	mov	r0, r3
 800980c:	f7fd fb90 	bl	8006f30 <HAL_RCCEx_GetPLL3ClockFreq>
 8009810:	69fb      	ldr	r3, [r7, #28]
 8009812:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009814:	e01f      	b.n	8009856 <UART_SetConfig+0xac6>
 8009816:	4b69      	ldr	r3, [pc, #420]	@ (80099bc <UART_SetConfig+0xc2c>)
 8009818:	681b      	ldr	r3, [r3, #0]
 800981a:	f003 0320 	and.w	r3, r3, #32
 800981e:	2b00      	cmp	r3, #0
 8009820:	d009      	beq.n	8009836 <UART_SetConfig+0xaa6>
 8009822:	4b66      	ldr	r3, [pc, #408]	@ (80099bc <UART_SetConfig+0xc2c>)
 8009824:	681b      	ldr	r3, [r3, #0]
 8009826:	08db      	lsrs	r3, r3, #3
 8009828:	f003 0303 	and.w	r3, r3, #3
 800982c:	4a64      	ldr	r2, [pc, #400]	@ (80099c0 <UART_SetConfig+0xc30>)
 800982e:	fa22 f303 	lsr.w	r3, r2, r3
 8009832:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009834:	e00f      	b.n	8009856 <UART_SetConfig+0xac6>
 8009836:	4b62      	ldr	r3, [pc, #392]	@ (80099c0 <UART_SetConfig+0xc30>)
 8009838:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800983a:	e00c      	b.n	8009856 <UART_SetConfig+0xac6>
 800983c:	4b61      	ldr	r3, [pc, #388]	@ (80099c4 <UART_SetConfig+0xc34>)
 800983e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009840:	e009      	b.n	8009856 <UART_SetConfig+0xac6>
 8009842:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8009846:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009848:	e005      	b.n	8009856 <UART_SetConfig+0xac6>
 800984a:	2300      	movs	r3, #0
 800984c:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800984e:	2301      	movs	r3, #1
 8009850:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8009854:	bf00      	nop
 8009856:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009858:	2b00      	cmp	r3, #0
 800985a:	f000 80ea 	beq.w	8009a32 <UART_SetConfig+0xca2>
 800985e:	697b      	ldr	r3, [r7, #20]
 8009860:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8009862:	4a55      	ldr	r2, [pc, #340]	@ (80099b8 <UART_SetConfig+0xc28>)
 8009864:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8009868:	461a      	mov	r2, r3
 800986a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800986c:	fbb3 f3f2 	udiv	r3, r3, r2
 8009870:	005a      	lsls	r2, r3, #1
 8009872:	697b      	ldr	r3, [r7, #20]
 8009874:	685b      	ldr	r3, [r3, #4]
 8009876:	085b      	lsrs	r3, r3, #1
 8009878:	441a      	add	r2, r3
 800987a:	697b      	ldr	r3, [r7, #20]
 800987c:	685b      	ldr	r3, [r3, #4]
 800987e:	fbb2 f3f3 	udiv	r3, r2, r3
 8009882:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009884:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009886:	2b0f      	cmp	r3, #15
 8009888:	d916      	bls.n	80098b8 <UART_SetConfig+0xb28>
 800988a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800988c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8009890:	d212      	bcs.n	80098b8 <UART_SetConfig+0xb28>
 8009892:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009894:	b29b      	uxth	r3, r3
 8009896:	f023 030f 	bic.w	r3, r3, #15
 800989a:	86fb      	strh	r3, [r7, #54]	@ 0x36
 800989c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800989e:	085b      	lsrs	r3, r3, #1
 80098a0:	b29b      	uxth	r3, r3
 80098a2:	f003 0307 	and.w	r3, r3, #7
 80098a6:	b29a      	uxth	r2, r3
 80098a8:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 80098aa:	4313      	orrs	r3, r2
 80098ac:	86fb      	strh	r3, [r7, #54]	@ 0x36
 80098ae:	697b      	ldr	r3, [r7, #20]
 80098b0:	681b      	ldr	r3, [r3, #0]
 80098b2:	8efa      	ldrh	r2, [r7, #54]	@ 0x36
 80098b4:	60da      	str	r2, [r3, #12]
 80098b6:	e0bc      	b.n	8009a32 <UART_SetConfig+0xca2>
 80098b8:	2301      	movs	r3, #1
 80098ba:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 80098be:	e0b8      	b.n	8009a32 <UART_SetConfig+0xca2>
 80098c0:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 80098c4:	2b20      	cmp	r3, #32
 80098c6:	dc4b      	bgt.n	8009960 <UART_SetConfig+0xbd0>
 80098c8:	2b00      	cmp	r3, #0
 80098ca:	f2c0 8087 	blt.w	80099dc <UART_SetConfig+0xc4c>
 80098ce:	2b20      	cmp	r3, #32
 80098d0:	f200 8084 	bhi.w	80099dc <UART_SetConfig+0xc4c>
 80098d4:	a201      	add	r2, pc, #4	@ (adr r2, 80098dc <UART_SetConfig+0xb4c>)
 80098d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80098da:	bf00      	nop
 80098dc:	08009967 	.word	0x08009967
 80098e0:	0800996f 	.word	0x0800996f
 80098e4:	080099dd 	.word	0x080099dd
 80098e8:	080099dd 	.word	0x080099dd
 80098ec:	08009977 	.word	0x08009977
 80098f0:	080099dd 	.word	0x080099dd
 80098f4:	080099dd 	.word	0x080099dd
 80098f8:	080099dd 	.word	0x080099dd
 80098fc:	08009987 	.word	0x08009987
 8009900:	080099dd 	.word	0x080099dd
 8009904:	080099dd 	.word	0x080099dd
 8009908:	080099dd 	.word	0x080099dd
 800990c:	080099dd 	.word	0x080099dd
 8009910:	080099dd 	.word	0x080099dd
 8009914:	080099dd 	.word	0x080099dd
 8009918:	080099dd 	.word	0x080099dd
 800991c:	08009997 	.word	0x08009997
 8009920:	080099dd 	.word	0x080099dd
 8009924:	080099dd 	.word	0x080099dd
 8009928:	080099dd 	.word	0x080099dd
 800992c:	080099dd 	.word	0x080099dd
 8009930:	080099dd 	.word	0x080099dd
 8009934:	080099dd 	.word	0x080099dd
 8009938:	080099dd 	.word	0x080099dd
 800993c:	080099dd 	.word	0x080099dd
 8009940:	080099dd 	.word	0x080099dd
 8009944:	080099dd 	.word	0x080099dd
 8009948:	080099dd 	.word	0x080099dd
 800994c:	080099dd 	.word	0x080099dd
 8009950:	080099dd 	.word	0x080099dd
 8009954:	080099dd 	.word	0x080099dd
 8009958:	080099dd 	.word	0x080099dd
 800995c:	080099cf 	.word	0x080099cf
 8009960:	2b40      	cmp	r3, #64	@ 0x40
 8009962:	d037      	beq.n	80099d4 <UART_SetConfig+0xc44>
 8009964:	e03a      	b.n	80099dc <UART_SetConfig+0xc4c>
 8009966:	f7fb ffad 	bl	80058c4 <HAL_RCC_GetPCLK1Freq>
 800996a:	63f8      	str	r0, [r7, #60]	@ 0x3c
 800996c:	e03c      	b.n	80099e8 <UART_SetConfig+0xc58>
 800996e:	f7fb ffbf 	bl	80058f0 <HAL_RCC_GetPCLK2Freq>
 8009972:	63f8      	str	r0, [r7, #60]	@ 0x3c
 8009974:	e038      	b.n	80099e8 <UART_SetConfig+0xc58>
 8009976:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800997a:	4618      	mov	r0, r3
 800997c:	f7fd f984 	bl	8006c88 <HAL_RCCEx_GetPLL2ClockFreq>
 8009980:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009982:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009984:	e030      	b.n	80099e8 <UART_SetConfig+0xc58>
 8009986:	f107 0318 	add.w	r3, r7, #24
 800998a:	4618      	mov	r0, r3
 800998c:	f7fd fad0 	bl	8006f30 <HAL_RCCEx_GetPLL3ClockFreq>
 8009990:	69fb      	ldr	r3, [r7, #28]
 8009992:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009994:	e028      	b.n	80099e8 <UART_SetConfig+0xc58>
 8009996:	4b09      	ldr	r3, [pc, #36]	@ (80099bc <UART_SetConfig+0xc2c>)
 8009998:	681b      	ldr	r3, [r3, #0]
 800999a:	f003 0320 	and.w	r3, r3, #32
 800999e:	2b00      	cmp	r3, #0
 80099a0:	d012      	beq.n	80099c8 <UART_SetConfig+0xc38>
 80099a2:	4b06      	ldr	r3, [pc, #24]	@ (80099bc <UART_SetConfig+0xc2c>)
 80099a4:	681b      	ldr	r3, [r3, #0]
 80099a6:	08db      	lsrs	r3, r3, #3
 80099a8:	f003 0303 	and.w	r3, r3, #3
 80099ac:	4a04      	ldr	r2, [pc, #16]	@ (80099c0 <UART_SetConfig+0xc30>)
 80099ae:	fa22 f303 	lsr.w	r3, r2, r3
 80099b2:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80099b4:	e018      	b.n	80099e8 <UART_SetConfig+0xc58>
 80099b6:	bf00      	nop
 80099b8:	0800de40 	.word	0x0800de40
 80099bc:	58024400 	.word	0x58024400
 80099c0:	03d09000 	.word	0x03d09000
 80099c4:	003d0900 	.word	0x003d0900
 80099c8:	4b24      	ldr	r3, [pc, #144]	@ (8009a5c <UART_SetConfig+0xccc>)
 80099ca:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80099cc:	e00c      	b.n	80099e8 <UART_SetConfig+0xc58>
 80099ce:	4b24      	ldr	r3, [pc, #144]	@ (8009a60 <UART_SetConfig+0xcd0>)
 80099d0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80099d2:	e009      	b.n	80099e8 <UART_SetConfig+0xc58>
 80099d4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80099d8:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80099da:	e005      	b.n	80099e8 <UART_SetConfig+0xc58>
 80099dc:	2300      	movs	r3, #0
 80099de:	63fb      	str	r3, [r7, #60]	@ 0x3c
 80099e0:	2301      	movs	r3, #1
 80099e2:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 80099e6:	bf00      	nop
 80099e8:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80099ea:	2b00      	cmp	r3, #0
 80099ec:	d021      	beq.n	8009a32 <UART_SetConfig+0xca2>
 80099ee:	697b      	ldr	r3, [r7, #20]
 80099f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80099f2:	4a1c      	ldr	r2, [pc, #112]	@ (8009a64 <UART_SetConfig+0xcd4>)
 80099f4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80099f8:	461a      	mov	r2, r3
 80099fa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 80099fc:	fbb3 f2f2 	udiv	r2, r3, r2
 8009a00:	697b      	ldr	r3, [r7, #20]
 8009a02:	685b      	ldr	r3, [r3, #4]
 8009a04:	085b      	lsrs	r3, r3, #1
 8009a06:	441a      	add	r2, r3
 8009a08:	697b      	ldr	r3, [r7, #20]
 8009a0a:	685b      	ldr	r3, [r3, #4]
 8009a0c:	fbb2 f3f3 	udiv	r3, r2, r3
 8009a10:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009a12:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a14:	2b0f      	cmp	r3, #15
 8009a16:	d909      	bls.n	8009a2c <UART_SetConfig+0xc9c>
 8009a18:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a1a:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8009a1e:	d205      	bcs.n	8009a2c <UART_SetConfig+0xc9c>
 8009a20:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009a22:	b29a      	uxth	r2, r3
 8009a24:	697b      	ldr	r3, [r7, #20]
 8009a26:	681b      	ldr	r3, [r3, #0]
 8009a28:	60da      	str	r2, [r3, #12]
 8009a2a:	e002      	b.n	8009a32 <UART_SetConfig+0xca2>
 8009a2c:	2301      	movs	r3, #1
 8009a2e:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 8009a32:	697b      	ldr	r3, [r7, #20]
 8009a34:	2201      	movs	r2, #1
 8009a36:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 8009a3a:	697b      	ldr	r3, [r7, #20]
 8009a3c:	2201      	movs	r2, #1
 8009a3e:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 8009a42:	697b      	ldr	r3, [r7, #20]
 8009a44:	2200      	movs	r2, #0
 8009a46:	675a      	str	r2, [r3, #116]	@ 0x74
 8009a48:	697b      	ldr	r3, [r7, #20]
 8009a4a:	2200      	movs	r2, #0
 8009a4c:	679a      	str	r2, [r3, #120]	@ 0x78
 8009a4e:	f897 3042 	ldrb.w	r3, [r7, #66]	@ 0x42
 8009a52:	4618      	mov	r0, r3
 8009a54:	3748      	adds	r7, #72	@ 0x48
 8009a56:	46bd      	mov	sp, r7
 8009a58:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8009a5c:	03d09000 	.word	0x03d09000
 8009a60:	003d0900 	.word	0x003d0900
 8009a64:	0800de40 	.word	0x0800de40

08009a68 <UART_AdvFeatureConfig>:
 8009a68:	b480      	push	{r7}
 8009a6a:	b083      	sub	sp, #12
 8009a6c:	af00      	add	r7, sp, #0
 8009a6e:	6078      	str	r0, [r7, #4]
 8009a70:	687b      	ldr	r3, [r7, #4]
 8009a72:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009a74:	f003 0308 	and.w	r3, r3, #8
 8009a78:	2b00      	cmp	r3, #0
 8009a7a:	d00a      	beq.n	8009a92 <UART_AdvFeatureConfig+0x2a>
 8009a7c:	687b      	ldr	r3, [r7, #4]
 8009a7e:	681b      	ldr	r3, [r3, #0]
 8009a80:	685b      	ldr	r3, [r3, #4]
 8009a82:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 8009a86:	687b      	ldr	r3, [r7, #4]
 8009a88:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8009a8a:	687b      	ldr	r3, [r7, #4]
 8009a8c:	681b      	ldr	r3, [r3, #0]
 8009a8e:	430a      	orrs	r2, r1
 8009a90:	605a      	str	r2, [r3, #4]
 8009a92:	687b      	ldr	r3, [r7, #4]
 8009a94:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009a96:	f003 0301 	and.w	r3, r3, #1
 8009a9a:	2b00      	cmp	r3, #0
 8009a9c:	d00a      	beq.n	8009ab4 <UART_AdvFeatureConfig+0x4c>
 8009a9e:	687b      	ldr	r3, [r7, #4]
 8009aa0:	681b      	ldr	r3, [r3, #0]
 8009aa2:	685b      	ldr	r3, [r3, #4]
 8009aa4:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 8009aa8:	687b      	ldr	r3, [r7, #4]
 8009aaa:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8009aac:	687b      	ldr	r3, [r7, #4]
 8009aae:	681b      	ldr	r3, [r3, #0]
 8009ab0:	430a      	orrs	r2, r1
 8009ab2:	605a      	str	r2, [r3, #4]
 8009ab4:	687b      	ldr	r3, [r7, #4]
 8009ab6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009ab8:	f003 0302 	and.w	r3, r3, #2
 8009abc:	2b00      	cmp	r3, #0
 8009abe:	d00a      	beq.n	8009ad6 <UART_AdvFeatureConfig+0x6e>
 8009ac0:	687b      	ldr	r3, [r7, #4]
 8009ac2:	681b      	ldr	r3, [r3, #0]
 8009ac4:	685b      	ldr	r3, [r3, #4]
 8009ac6:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8009aca:	687b      	ldr	r3, [r7, #4]
 8009acc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8009ace:	687b      	ldr	r3, [r7, #4]
 8009ad0:	681b      	ldr	r3, [r3, #0]
 8009ad2:	430a      	orrs	r2, r1
 8009ad4:	605a      	str	r2, [r3, #4]
 8009ad6:	687b      	ldr	r3, [r7, #4]
 8009ad8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009ada:	f003 0304 	and.w	r3, r3, #4
 8009ade:	2b00      	cmp	r3, #0
 8009ae0:	d00a      	beq.n	8009af8 <UART_AdvFeatureConfig+0x90>
 8009ae2:	687b      	ldr	r3, [r7, #4]
 8009ae4:	681b      	ldr	r3, [r3, #0]
 8009ae6:	685b      	ldr	r3, [r3, #4]
 8009ae8:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 8009aec:	687b      	ldr	r3, [r7, #4]
 8009aee:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8009af0:	687b      	ldr	r3, [r7, #4]
 8009af2:	681b      	ldr	r3, [r3, #0]
 8009af4:	430a      	orrs	r2, r1
 8009af6:	605a      	str	r2, [r3, #4]
 8009af8:	687b      	ldr	r3, [r7, #4]
 8009afa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009afc:	f003 0310 	and.w	r3, r3, #16
 8009b00:	2b00      	cmp	r3, #0
 8009b02:	d00a      	beq.n	8009b1a <UART_AdvFeatureConfig+0xb2>
 8009b04:	687b      	ldr	r3, [r7, #4]
 8009b06:	681b      	ldr	r3, [r3, #0]
 8009b08:	689b      	ldr	r3, [r3, #8]
 8009b0a:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 8009b0e:	687b      	ldr	r3, [r7, #4]
 8009b10:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8009b12:	687b      	ldr	r3, [r7, #4]
 8009b14:	681b      	ldr	r3, [r3, #0]
 8009b16:	430a      	orrs	r2, r1
 8009b18:	609a      	str	r2, [r3, #8]
 8009b1a:	687b      	ldr	r3, [r7, #4]
 8009b1c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009b1e:	f003 0320 	and.w	r3, r3, #32
 8009b22:	2b00      	cmp	r3, #0
 8009b24:	d00a      	beq.n	8009b3c <UART_AdvFeatureConfig+0xd4>
 8009b26:	687b      	ldr	r3, [r7, #4]
 8009b28:	681b      	ldr	r3, [r3, #0]
 8009b2a:	689b      	ldr	r3, [r3, #8]
 8009b2c:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 8009b30:	687b      	ldr	r3, [r7, #4]
 8009b32:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8009b34:	687b      	ldr	r3, [r7, #4]
 8009b36:	681b      	ldr	r3, [r3, #0]
 8009b38:	430a      	orrs	r2, r1
 8009b3a:	609a      	str	r2, [r3, #8]
 8009b3c:	687b      	ldr	r3, [r7, #4]
 8009b3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009b40:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009b44:	2b00      	cmp	r3, #0
 8009b46:	d01a      	beq.n	8009b7e <UART_AdvFeatureConfig+0x116>
 8009b48:	687b      	ldr	r3, [r7, #4]
 8009b4a:	681b      	ldr	r3, [r3, #0]
 8009b4c:	685b      	ldr	r3, [r3, #4]
 8009b4e:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 8009b52:	687b      	ldr	r3, [r7, #4]
 8009b54:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8009b56:	687b      	ldr	r3, [r7, #4]
 8009b58:	681b      	ldr	r3, [r3, #0]
 8009b5a:	430a      	orrs	r2, r1
 8009b5c:	605a      	str	r2, [r3, #4]
 8009b5e:	687b      	ldr	r3, [r7, #4]
 8009b60:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8009b62:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8009b66:	d10a      	bne.n	8009b7e <UART_AdvFeatureConfig+0x116>
 8009b68:	687b      	ldr	r3, [r7, #4]
 8009b6a:	681b      	ldr	r3, [r3, #0]
 8009b6c:	685b      	ldr	r3, [r3, #4]
 8009b6e:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 8009b72:	687b      	ldr	r3, [r7, #4]
 8009b74:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 8009b76:	687b      	ldr	r3, [r7, #4]
 8009b78:	681b      	ldr	r3, [r3, #0]
 8009b7a:	430a      	orrs	r2, r1
 8009b7c:	605a      	str	r2, [r3, #4]
 8009b7e:	687b      	ldr	r3, [r7, #4]
 8009b80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009b82:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8009b86:	2b00      	cmp	r3, #0
 8009b88:	d00a      	beq.n	8009ba0 <UART_AdvFeatureConfig+0x138>
 8009b8a:	687b      	ldr	r3, [r7, #4]
 8009b8c:	681b      	ldr	r3, [r3, #0]
 8009b8e:	685b      	ldr	r3, [r3, #4]
 8009b90:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 8009b94:	687b      	ldr	r3, [r7, #4]
 8009b96:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 8009b98:	687b      	ldr	r3, [r7, #4]
 8009b9a:	681b      	ldr	r3, [r3, #0]
 8009b9c:	430a      	orrs	r2, r1
 8009b9e:	605a      	str	r2, [r3, #4]
 8009ba0:	bf00      	nop
 8009ba2:	370c      	adds	r7, #12
 8009ba4:	46bd      	mov	sp, r7
 8009ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009baa:	4770      	bx	lr

08009bac <UART_CheckIdleState>:
 8009bac:	b580      	push	{r7, lr}
 8009bae:	b098      	sub	sp, #96	@ 0x60
 8009bb0:	af02      	add	r7, sp, #8
 8009bb2:	6078      	str	r0, [r7, #4]
 8009bb4:	687b      	ldr	r3, [r7, #4]
 8009bb6:	2200      	movs	r2, #0
 8009bb8:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009bbc:	f7f9 f80c 	bl	8002bd8 <HAL_GetTick>
 8009bc0:	6578      	str	r0, [r7, #84]	@ 0x54
 8009bc2:	687b      	ldr	r3, [r7, #4]
 8009bc4:	681b      	ldr	r3, [r3, #0]
 8009bc6:	681b      	ldr	r3, [r3, #0]
 8009bc8:	f003 0308 	and.w	r3, r3, #8
 8009bcc:	2b08      	cmp	r3, #8
 8009bce:	d12f      	bne.n	8009c30 <UART_CheckIdleState+0x84>
 8009bd0:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8009bd4:	9300      	str	r3, [sp, #0]
 8009bd6:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8009bd8:	2200      	movs	r2, #0
 8009bda:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 8009bde:	6878      	ldr	r0, [r7, #4]
 8009be0:	f000 f88e 	bl	8009d00 <UART_WaitOnFlagUntilTimeout>
 8009be4:	4603      	mov	r3, r0
 8009be6:	2b00      	cmp	r3, #0
 8009be8:	d022      	beq.n	8009c30 <UART_CheckIdleState+0x84>
 8009bea:	687b      	ldr	r3, [r7, #4]
 8009bec:	681b      	ldr	r3, [r3, #0]
 8009bee:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009bf0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009bf2:	e853 3f00 	ldrex	r3, [r3]
 8009bf6:	637b      	str	r3, [r7, #52]	@ 0x34
 8009bf8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009bfa:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8009bfe:	653b      	str	r3, [r7, #80]	@ 0x50
 8009c00:	687b      	ldr	r3, [r7, #4]
 8009c02:	681b      	ldr	r3, [r3, #0]
 8009c04:	461a      	mov	r2, r3
 8009c06:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8009c08:	647b      	str	r3, [r7, #68]	@ 0x44
 8009c0a:	643a      	str	r2, [r7, #64]	@ 0x40
 8009c0c:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 8009c0e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8009c10:	e841 2300 	strex	r3, r2, [r1]
 8009c14:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009c16:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009c18:	2b00      	cmp	r3, #0
 8009c1a:	d1e6      	bne.n	8009bea <UART_CheckIdleState+0x3e>
 8009c1c:	687b      	ldr	r3, [r7, #4]
 8009c1e:	2220      	movs	r2, #32
 8009c20:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009c24:	687b      	ldr	r3, [r7, #4]
 8009c26:	2200      	movs	r2, #0
 8009c28:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009c2c:	2303      	movs	r3, #3
 8009c2e:	e063      	b.n	8009cf8 <UART_CheckIdleState+0x14c>
 8009c30:	687b      	ldr	r3, [r7, #4]
 8009c32:	681b      	ldr	r3, [r3, #0]
 8009c34:	681b      	ldr	r3, [r3, #0]
 8009c36:	f003 0304 	and.w	r3, r3, #4
 8009c3a:	2b04      	cmp	r3, #4
 8009c3c:	d149      	bne.n	8009cd2 <UART_CheckIdleState+0x126>
 8009c3e:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 8009c42:	9300      	str	r3, [sp, #0]
 8009c44:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8009c46:	2200      	movs	r2, #0
 8009c48:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 8009c4c:	6878      	ldr	r0, [r7, #4]
 8009c4e:	f000 f857 	bl	8009d00 <UART_WaitOnFlagUntilTimeout>
 8009c52:	4603      	mov	r3, r0
 8009c54:	2b00      	cmp	r3, #0
 8009c56:	d03c      	beq.n	8009cd2 <UART_CheckIdleState+0x126>
 8009c58:	687b      	ldr	r3, [r7, #4]
 8009c5a:	681b      	ldr	r3, [r3, #0]
 8009c5c:	627b      	str	r3, [r7, #36]	@ 0x24
 8009c5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009c60:	e853 3f00 	ldrex	r3, [r3]
 8009c64:	623b      	str	r3, [r7, #32]
 8009c66:	6a3b      	ldr	r3, [r7, #32]
 8009c68:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8009c6c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8009c6e:	687b      	ldr	r3, [r7, #4]
 8009c70:	681b      	ldr	r3, [r3, #0]
 8009c72:	461a      	mov	r2, r3
 8009c74:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8009c76:	633b      	str	r3, [r7, #48]	@ 0x30
 8009c78:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8009c7a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8009c7c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009c7e:	e841 2300 	strex	r3, r2, [r1]
 8009c82:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009c84:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009c86:	2b00      	cmp	r3, #0
 8009c88:	d1e6      	bne.n	8009c58 <UART_CheckIdleState+0xac>
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	681b      	ldr	r3, [r3, #0]
 8009c8e:	3308      	adds	r3, #8
 8009c90:	613b      	str	r3, [r7, #16]
 8009c92:	693b      	ldr	r3, [r7, #16]
 8009c94:	e853 3f00 	ldrex	r3, [r3]
 8009c98:	60fb      	str	r3, [r7, #12]
 8009c9a:	68fb      	ldr	r3, [r7, #12]
 8009c9c:	f023 0301 	bic.w	r3, r3, #1
 8009ca0:	64bb      	str	r3, [r7, #72]	@ 0x48
 8009ca2:	687b      	ldr	r3, [r7, #4]
 8009ca4:	681b      	ldr	r3, [r3, #0]
 8009ca6:	3308      	adds	r3, #8
 8009ca8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8009caa:	61fa      	str	r2, [r7, #28]
 8009cac:	61bb      	str	r3, [r7, #24]
 8009cae:	69b9      	ldr	r1, [r7, #24]
 8009cb0:	69fa      	ldr	r2, [r7, #28]
 8009cb2:	e841 2300 	strex	r3, r2, [r1]
 8009cb6:	617b      	str	r3, [r7, #20]
 8009cb8:	697b      	ldr	r3, [r7, #20]
 8009cba:	2b00      	cmp	r3, #0
 8009cbc:	d1e5      	bne.n	8009c8a <UART_CheckIdleState+0xde>
 8009cbe:	687b      	ldr	r3, [r7, #4]
 8009cc0:	2220      	movs	r2, #32
 8009cc2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8009cc6:	687b      	ldr	r3, [r7, #4]
 8009cc8:	2200      	movs	r2, #0
 8009cca:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009cce:	2303      	movs	r3, #3
 8009cd0:	e012      	b.n	8009cf8 <UART_CheckIdleState+0x14c>
 8009cd2:	687b      	ldr	r3, [r7, #4]
 8009cd4:	2220      	movs	r2, #32
 8009cd6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8009cda:	687b      	ldr	r3, [r7, #4]
 8009cdc:	2220      	movs	r2, #32
 8009cde:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8009ce2:	687b      	ldr	r3, [r7, #4]
 8009ce4:	2200      	movs	r2, #0
 8009ce6:	66da      	str	r2, [r3, #108]	@ 0x6c
 8009ce8:	687b      	ldr	r3, [r7, #4]
 8009cea:	2200      	movs	r2, #0
 8009cec:	671a      	str	r2, [r3, #112]	@ 0x70
 8009cee:	687b      	ldr	r3, [r7, #4]
 8009cf0:	2200      	movs	r2, #0
 8009cf2:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009cf6:	2300      	movs	r3, #0
 8009cf8:	4618      	mov	r0, r3
 8009cfa:	3758      	adds	r7, #88	@ 0x58
 8009cfc:	46bd      	mov	sp, r7
 8009cfe:	bd80      	pop	{r7, pc}

08009d00 <UART_WaitOnFlagUntilTimeout>:
 8009d00:	b580      	push	{r7, lr}
 8009d02:	b084      	sub	sp, #16
 8009d04:	af00      	add	r7, sp, #0
 8009d06:	60f8      	str	r0, [r7, #12]
 8009d08:	60b9      	str	r1, [r7, #8]
 8009d0a:	603b      	str	r3, [r7, #0]
 8009d0c:	4613      	mov	r3, r2
 8009d0e:	71fb      	strb	r3, [r7, #7]
 8009d10:	e04f      	b.n	8009db2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8009d12:	69bb      	ldr	r3, [r7, #24]
 8009d14:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8009d18:	d04b      	beq.n	8009db2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8009d1a:	f7f8 ff5d 	bl	8002bd8 <HAL_GetTick>
 8009d1e:	4602      	mov	r2, r0
 8009d20:	683b      	ldr	r3, [r7, #0]
 8009d22:	1ad3      	subs	r3, r2, r3
 8009d24:	69ba      	ldr	r2, [r7, #24]
 8009d26:	429a      	cmp	r2, r3
 8009d28:	d302      	bcc.n	8009d30 <UART_WaitOnFlagUntilTimeout+0x30>
 8009d2a:	69bb      	ldr	r3, [r7, #24]
 8009d2c:	2b00      	cmp	r3, #0
 8009d2e:	d101      	bne.n	8009d34 <UART_WaitOnFlagUntilTimeout+0x34>
 8009d30:	2303      	movs	r3, #3
 8009d32:	e04e      	b.n	8009dd2 <UART_WaitOnFlagUntilTimeout+0xd2>
 8009d34:	68fb      	ldr	r3, [r7, #12]
 8009d36:	681b      	ldr	r3, [r3, #0]
 8009d38:	681b      	ldr	r3, [r3, #0]
 8009d3a:	f003 0304 	and.w	r3, r3, #4
 8009d3e:	2b00      	cmp	r3, #0
 8009d40:	d037      	beq.n	8009db2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8009d42:	68bb      	ldr	r3, [r7, #8]
 8009d44:	2b80      	cmp	r3, #128	@ 0x80
 8009d46:	d034      	beq.n	8009db2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8009d48:	68bb      	ldr	r3, [r7, #8]
 8009d4a:	2b40      	cmp	r3, #64	@ 0x40
 8009d4c:	d031      	beq.n	8009db2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8009d4e:	68fb      	ldr	r3, [r7, #12]
 8009d50:	681b      	ldr	r3, [r3, #0]
 8009d52:	69db      	ldr	r3, [r3, #28]
 8009d54:	f003 0308 	and.w	r3, r3, #8
 8009d58:	2b08      	cmp	r3, #8
 8009d5a:	d110      	bne.n	8009d7e <UART_WaitOnFlagUntilTimeout+0x7e>
 8009d5c:	68fb      	ldr	r3, [r7, #12]
 8009d5e:	681b      	ldr	r3, [r3, #0]
 8009d60:	2208      	movs	r2, #8
 8009d62:	621a      	str	r2, [r3, #32]
 8009d64:	68f8      	ldr	r0, [r7, #12]
 8009d66:	f000 f95b 	bl	800a020 <UART_EndRxTransfer>
 8009d6a:	68fb      	ldr	r3, [r7, #12]
 8009d6c:	2208      	movs	r2, #8
 8009d6e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009d72:	68fb      	ldr	r3, [r7, #12]
 8009d74:	2200      	movs	r2, #0
 8009d76:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009d7a:	2301      	movs	r3, #1
 8009d7c:	e029      	b.n	8009dd2 <UART_WaitOnFlagUntilTimeout+0xd2>
 8009d7e:	68fb      	ldr	r3, [r7, #12]
 8009d80:	681b      	ldr	r3, [r3, #0]
 8009d82:	69db      	ldr	r3, [r3, #28]
 8009d84:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8009d88:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8009d8c:	d111      	bne.n	8009db2 <UART_WaitOnFlagUntilTimeout+0xb2>
 8009d8e:	68fb      	ldr	r3, [r7, #12]
 8009d90:	681b      	ldr	r3, [r3, #0]
 8009d92:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8009d96:	621a      	str	r2, [r3, #32]
 8009d98:	68f8      	ldr	r0, [r7, #12]
 8009d9a:	f000 f941 	bl	800a020 <UART_EndRxTransfer>
 8009d9e:	68fb      	ldr	r3, [r7, #12]
 8009da0:	2220      	movs	r2, #32
 8009da2:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009da6:	68fb      	ldr	r3, [r7, #12]
 8009da8:	2200      	movs	r2, #0
 8009daa:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 8009dae:	2303      	movs	r3, #3
 8009db0:	e00f      	b.n	8009dd2 <UART_WaitOnFlagUntilTimeout+0xd2>
 8009db2:	68fb      	ldr	r3, [r7, #12]
 8009db4:	681b      	ldr	r3, [r3, #0]
 8009db6:	69da      	ldr	r2, [r3, #28]
 8009db8:	68bb      	ldr	r3, [r7, #8]
 8009dba:	4013      	ands	r3, r2
 8009dbc:	68ba      	ldr	r2, [r7, #8]
 8009dbe:	429a      	cmp	r2, r3
 8009dc0:	bf0c      	ite	eq
 8009dc2:	2301      	moveq	r3, #1
 8009dc4:	2300      	movne	r3, #0
 8009dc6:	b2db      	uxtb	r3, r3
 8009dc8:	461a      	mov	r2, r3
 8009dca:	79fb      	ldrb	r3, [r7, #7]
 8009dcc:	429a      	cmp	r2, r3
 8009dce:	d0a0      	beq.n	8009d12 <UART_WaitOnFlagUntilTimeout+0x12>
 8009dd0:	2300      	movs	r3, #0
 8009dd2:	4618      	mov	r0, r3
 8009dd4:	3710      	adds	r7, #16
 8009dd6:	46bd      	mov	sp, r7
 8009dd8:	bd80      	pop	{r7, pc}
	...

08009ddc <UART_Start_Receive_IT>:
 8009ddc:	b480      	push	{r7}
 8009dde:	b0a3      	sub	sp, #140	@ 0x8c
 8009de0:	af00      	add	r7, sp, #0
 8009de2:	60f8      	str	r0, [r7, #12]
 8009de4:	60b9      	str	r1, [r7, #8]
 8009de6:	4613      	mov	r3, r2
 8009de8:	80fb      	strh	r3, [r7, #6]
 8009dea:	68fb      	ldr	r3, [r7, #12]
 8009dec:	68ba      	ldr	r2, [r7, #8]
 8009dee:	659a      	str	r2, [r3, #88]	@ 0x58
 8009df0:	68fb      	ldr	r3, [r7, #12]
 8009df2:	88fa      	ldrh	r2, [r7, #6]
 8009df4:	f8a3 205c 	strh.w	r2, [r3, #92]	@ 0x5c
 8009df8:	68fb      	ldr	r3, [r7, #12]
 8009dfa:	88fa      	ldrh	r2, [r7, #6]
 8009dfc:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 8009e00:	68fb      	ldr	r3, [r7, #12]
 8009e02:	2200      	movs	r2, #0
 8009e04:	675a      	str	r2, [r3, #116]	@ 0x74
 8009e06:	68fb      	ldr	r3, [r7, #12]
 8009e08:	689b      	ldr	r3, [r3, #8]
 8009e0a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8009e0e:	d10e      	bne.n	8009e2e <UART_Start_Receive_IT+0x52>
 8009e10:	68fb      	ldr	r3, [r7, #12]
 8009e12:	691b      	ldr	r3, [r3, #16]
 8009e14:	2b00      	cmp	r3, #0
 8009e16:	d105      	bne.n	8009e24 <UART_Start_Receive_IT+0x48>
 8009e18:	68fb      	ldr	r3, [r7, #12]
 8009e1a:	f240 12ff 	movw	r2, #511	@ 0x1ff
 8009e1e:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 8009e22:	e02d      	b.n	8009e80 <UART_Start_Receive_IT+0xa4>
 8009e24:	68fb      	ldr	r3, [r7, #12]
 8009e26:	22ff      	movs	r2, #255	@ 0xff
 8009e28:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 8009e2c:	e028      	b.n	8009e80 <UART_Start_Receive_IT+0xa4>
 8009e2e:	68fb      	ldr	r3, [r7, #12]
 8009e30:	689b      	ldr	r3, [r3, #8]
 8009e32:	2b00      	cmp	r3, #0
 8009e34:	d10d      	bne.n	8009e52 <UART_Start_Receive_IT+0x76>
 8009e36:	68fb      	ldr	r3, [r7, #12]
 8009e38:	691b      	ldr	r3, [r3, #16]
 8009e3a:	2b00      	cmp	r3, #0
 8009e3c:	d104      	bne.n	8009e48 <UART_Start_Receive_IT+0x6c>
 8009e3e:	68fb      	ldr	r3, [r7, #12]
 8009e40:	22ff      	movs	r2, #255	@ 0xff
 8009e42:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 8009e46:	e01b      	b.n	8009e80 <UART_Start_Receive_IT+0xa4>
 8009e48:	68fb      	ldr	r3, [r7, #12]
 8009e4a:	227f      	movs	r2, #127	@ 0x7f
 8009e4c:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 8009e50:	e016      	b.n	8009e80 <UART_Start_Receive_IT+0xa4>
 8009e52:	68fb      	ldr	r3, [r7, #12]
 8009e54:	689b      	ldr	r3, [r3, #8]
 8009e56:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8009e5a:	d10d      	bne.n	8009e78 <UART_Start_Receive_IT+0x9c>
 8009e5c:	68fb      	ldr	r3, [r7, #12]
 8009e5e:	691b      	ldr	r3, [r3, #16]
 8009e60:	2b00      	cmp	r3, #0
 8009e62:	d104      	bne.n	8009e6e <UART_Start_Receive_IT+0x92>
 8009e64:	68fb      	ldr	r3, [r7, #12]
 8009e66:	227f      	movs	r2, #127	@ 0x7f
 8009e68:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 8009e6c:	e008      	b.n	8009e80 <UART_Start_Receive_IT+0xa4>
 8009e6e:	68fb      	ldr	r3, [r7, #12]
 8009e70:	223f      	movs	r2, #63	@ 0x3f
 8009e72:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 8009e76:	e003      	b.n	8009e80 <UART_Start_Receive_IT+0xa4>
 8009e78:	68fb      	ldr	r3, [r7, #12]
 8009e7a:	2200      	movs	r2, #0
 8009e7c:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
 8009e80:	68fb      	ldr	r3, [r7, #12]
 8009e82:	2200      	movs	r2, #0
 8009e84:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 8009e88:	68fb      	ldr	r3, [r7, #12]
 8009e8a:	2222      	movs	r2, #34	@ 0x22
 8009e8c:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 8009e90:	68fb      	ldr	r3, [r7, #12]
 8009e92:	681b      	ldr	r3, [r3, #0]
 8009e94:	3308      	adds	r3, #8
 8009e96:	667b      	str	r3, [r7, #100]	@ 0x64
 8009e98:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8009e9a:	e853 3f00 	ldrex	r3, [r3]
 8009e9e:	663b      	str	r3, [r7, #96]	@ 0x60
 8009ea0:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 8009ea2:	f043 0301 	orr.w	r3, r3, #1
 8009ea6:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8009eaa:	68fb      	ldr	r3, [r7, #12]
 8009eac:	681b      	ldr	r3, [r3, #0]
 8009eae:	3308      	adds	r3, #8
 8009eb0:	f8d7 2084 	ldr.w	r2, [r7, #132]	@ 0x84
 8009eb4:	673a      	str	r2, [r7, #112]	@ 0x70
 8009eb6:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8009eb8:	6ef9      	ldr	r1, [r7, #108]	@ 0x6c
 8009eba:	6f3a      	ldr	r2, [r7, #112]	@ 0x70
 8009ebc:	e841 2300 	strex	r3, r2, [r1]
 8009ec0:	66bb      	str	r3, [r7, #104]	@ 0x68
 8009ec2:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8009ec4:	2b00      	cmp	r3, #0
 8009ec6:	d1e3      	bne.n	8009e90 <UART_Start_Receive_IT+0xb4>
 8009ec8:	68fb      	ldr	r3, [r7, #12]
 8009eca:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8009ecc:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8009ed0:	d14f      	bne.n	8009f72 <UART_Start_Receive_IT+0x196>
 8009ed2:	68fb      	ldr	r3, [r7, #12]
 8009ed4:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 8009ed8:	88fa      	ldrh	r2, [r7, #6]
 8009eda:	429a      	cmp	r2, r3
 8009edc:	d349      	bcc.n	8009f72 <UART_Start_Receive_IT+0x196>
 8009ede:	68fb      	ldr	r3, [r7, #12]
 8009ee0:	689b      	ldr	r3, [r3, #8]
 8009ee2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8009ee6:	d107      	bne.n	8009ef8 <UART_Start_Receive_IT+0x11c>
 8009ee8:	68fb      	ldr	r3, [r7, #12]
 8009eea:	691b      	ldr	r3, [r3, #16]
 8009eec:	2b00      	cmp	r3, #0
 8009eee:	d103      	bne.n	8009ef8 <UART_Start_Receive_IT+0x11c>
 8009ef0:	68fb      	ldr	r3, [r7, #12]
 8009ef2:	4a47      	ldr	r2, [pc, #284]	@ (800a010 <UART_Start_Receive_IT+0x234>)
 8009ef4:	675a      	str	r2, [r3, #116]	@ 0x74
 8009ef6:	e002      	b.n	8009efe <UART_Start_Receive_IT+0x122>
 8009ef8:	68fb      	ldr	r3, [r7, #12]
 8009efa:	4a46      	ldr	r2, [pc, #280]	@ (800a014 <UART_Start_Receive_IT+0x238>)
 8009efc:	675a      	str	r2, [r3, #116]	@ 0x74
 8009efe:	68fb      	ldr	r3, [r7, #12]
 8009f00:	691b      	ldr	r3, [r3, #16]
 8009f02:	2b00      	cmp	r3, #0
 8009f04:	d01a      	beq.n	8009f3c <UART_Start_Receive_IT+0x160>
 8009f06:	68fb      	ldr	r3, [r7, #12]
 8009f08:	681b      	ldr	r3, [r3, #0]
 8009f0a:	653b      	str	r3, [r7, #80]	@ 0x50
 8009f0c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8009f0e:	e853 3f00 	ldrex	r3, [r3]
 8009f12:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8009f14:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 8009f16:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8009f1a:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 8009f1e:	68fb      	ldr	r3, [r7, #12]
 8009f20:	681b      	ldr	r3, [r3, #0]
 8009f22:	461a      	mov	r2, r3
 8009f24:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 8009f28:	65fb      	str	r3, [r7, #92]	@ 0x5c
 8009f2a:	65ba      	str	r2, [r7, #88]	@ 0x58
 8009f2c:	6db9      	ldr	r1, [r7, #88]	@ 0x58
 8009f2e:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 8009f30:	e841 2300 	strex	r3, r2, [r1]
 8009f34:	657b      	str	r3, [r7, #84]	@ 0x54
 8009f36:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 8009f38:	2b00      	cmp	r3, #0
 8009f3a:	d1e4      	bne.n	8009f06 <UART_Start_Receive_IT+0x12a>
 8009f3c:	68fb      	ldr	r3, [r7, #12]
 8009f3e:	681b      	ldr	r3, [r3, #0]
 8009f40:	3308      	adds	r3, #8
 8009f42:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8009f44:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8009f46:	e853 3f00 	ldrex	r3, [r3]
 8009f4a:	63bb      	str	r3, [r7, #56]	@ 0x38
 8009f4c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8009f4e:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8009f52:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8009f54:	68fb      	ldr	r3, [r7, #12]
 8009f56:	681b      	ldr	r3, [r3, #0]
 8009f58:	3308      	adds	r3, #8
 8009f5a:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 8009f5c:	64ba      	str	r2, [r7, #72]	@ 0x48
 8009f5e:	647b      	str	r3, [r7, #68]	@ 0x44
 8009f60:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 8009f62:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8009f64:	e841 2300 	strex	r3, r2, [r1]
 8009f68:	643b      	str	r3, [r7, #64]	@ 0x40
 8009f6a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8009f6c:	2b00      	cmp	r3, #0
 8009f6e:	d1e5      	bne.n	8009f3c <UART_Start_Receive_IT+0x160>
 8009f70:	e046      	b.n	800a000 <UART_Start_Receive_IT+0x224>
 8009f72:	68fb      	ldr	r3, [r7, #12]
 8009f74:	689b      	ldr	r3, [r3, #8]
 8009f76:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8009f7a:	d107      	bne.n	8009f8c <UART_Start_Receive_IT+0x1b0>
 8009f7c:	68fb      	ldr	r3, [r7, #12]
 8009f7e:	691b      	ldr	r3, [r3, #16]
 8009f80:	2b00      	cmp	r3, #0
 8009f82:	d103      	bne.n	8009f8c <UART_Start_Receive_IT+0x1b0>
 8009f84:	68fb      	ldr	r3, [r7, #12]
 8009f86:	4a24      	ldr	r2, [pc, #144]	@ (800a018 <UART_Start_Receive_IT+0x23c>)
 8009f88:	675a      	str	r2, [r3, #116]	@ 0x74
 8009f8a:	e002      	b.n	8009f92 <UART_Start_Receive_IT+0x1b6>
 8009f8c:	68fb      	ldr	r3, [r7, #12]
 8009f8e:	4a23      	ldr	r2, [pc, #140]	@ (800a01c <UART_Start_Receive_IT+0x240>)
 8009f90:	675a      	str	r2, [r3, #116]	@ 0x74
 8009f92:	68fb      	ldr	r3, [r7, #12]
 8009f94:	691b      	ldr	r3, [r3, #16]
 8009f96:	2b00      	cmp	r3, #0
 8009f98:	d019      	beq.n	8009fce <UART_Start_Receive_IT+0x1f2>
 8009f9a:	68fb      	ldr	r3, [r7, #12]
 8009f9c:	681b      	ldr	r3, [r3, #0]
 8009f9e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009fa0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009fa2:	e853 3f00 	ldrex	r3, [r3]
 8009fa6:	627b      	str	r3, [r7, #36]	@ 0x24
 8009fa8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009faa:	f443 7390 	orr.w	r3, r3, #288	@ 0x120
 8009fae:	677b      	str	r3, [r7, #116]	@ 0x74
 8009fb0:	68fb      	ldr	r3, [r7, #12]
 8009fb2:	681b      	ldr	r3, [r3, #0]
 8009fb4:	461a      	mov	r2, r3
 8009fb6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 8009fb8:	637b      	str	r3, [r7, #52]	@ 0x34
 8009fba:	633a      	str	r2, [r7, #48]	@ 0x30
 8009fbc:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8009fbe:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8009fc0:	e841 2300 	strex	r3, r2, [r1]
 8009fc4:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8009fc6:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009fc8:	2b00      	cmp	r3, #0
 8009fca:	d1e6      	bne.n	8009f9a <UART_Start_Receive_IT+0x1be>
 8009fcc:	e018      	b.n	800a000 <UART_Start_Receive_IT+0x224>
 8009fce:	68fb      	ldr	r3, [r7, #12]
 8009fd0:	681b      	ldr	r3, [r3, #0]
 8009fd2:	617b      	str	r3, [r7, #20]
 8009fd4:	697b      	ldr	r3, [r7, #20]
 8009fd6:	e853 3f00 	ldrex	r3, [r3]
 8009fda:	613b      	str	r3, [r7, #16]
 8009fdc:	693b      	ldr	r3, [r7, #16]
 8009fde:	f043 0320 	orr.w	r3, r3, #32
 8009fe2:	67bb      	str	r3, [r7, #120]	@ 0x78
 8009fe4:	68fb      	ldr	r3, [r7, #12]
 8009fe6:	681b      	ldr	r3, [r3, #0]
 8009fe8:	461a      	mov	r2, r3
 8009fea:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 8009fec:	623b      	str	r3, [r7, #32]
 8009fee:	61fa      	str	r2, [r7, #28]
 8009ff0:	69f9      	ldr	r1, [r7, #28]
 8009ff2:	6a3a      	ldr	r2, [r7, #32]
 8009ff4:	e841 2300 	strex	r3, r2, [r1]
 8009ff8:	61bb      	str	r3, [r7, #24]
 8009ffa:	69bb      	ldr	r3, [r7, #24]
 8009ffc:	2b00      	cmp	r3, #0
 8009ffe:	d1e6      	bne.n	8009fce <UART_Start_Receive_IT+0x1f2>
 800a000:	2300      	movs	r3, #0
 800a002:	4618      	mov	r0, r3
 800a004:	378c      	adds	r7, #140	@ 0x8c
 800a006:	46bd      	mov	sp, r7
 800a008:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a00c:	4770      	bx	lr
 800a00e:	bf00      	nop
 800a010:	0800a83d 	.word	0x0800a83d
 800a014:	0800a4d9 	.word	0x0800a4d9
 800a018:	0800a321 	.word	0x0800a321
 800a01c:	0800a169 	.word	0x0800a169

0800a020 <UART_EndRxTransfer>:
 800a020:	b480      	push	{r7}
 800a022:	b095      	sub	sp, #84	@ 0x54
 800a024:	af00      	add	r7, sp, #0
 800a026:	6078      	str	r0, [r7, #4]
 800a028:	687b      	ldr	r3, [r7, #4]
 800a02a:	681b      	ldr	r3, [r3, #0]
 800a02c:	637b      	str	r3, [r7, #52]	@ 0x34
 800a02e:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a030:	e853 3f00 	ldrex	r3, [r3]
 800a034:	633b      	str	r3, [r7, #48]	@ 0x30
 800a036:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a038:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800a03c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800a03e:	687b      	ldr	r3, [r7, #4]
 800a040:	681b      	ldr	r3, [r3, #0]
 800a042:	461a      	mov	r2, r3
 800a044:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a046:	643b      	str	r3, [r7, #64]	@ 0x40
 800a048:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800a04a:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800a04c:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800a04e:	e841 2300 	strex	r3, r2, [r1]
 800a052:	63bb      	str	r3, [r7, #56]	@ 0x38
 800a054:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a056:	2b00      	cmp	r3, #0
 800a058:	d1e6      	bne.n	800a028 <UART_EndRxTransfer+0x8>
 800a05a:	687b      	ldr	r3, [r7, #4]
 800a05c:	681b      	ldr	r3, [r3, #0]
 800a05e:	3308      	adds	r3, #8
 800a060:	623b      	str	r3, [r7, #32]
 800a062:	6a3b      	ldr	r3, [r7, #32]
 800a064:	e853 3f00 	ldrex	r3, [r3]
 800a068:	61fb      	str	r3, [r7, #28]
 800a06a:	69fa      	ldr	r2, [r7, #28]
 800a06c:	4b1e      	ldr	r3, [pc, #120]	@ (800a0e8 <UART_EndRxTransfer+0xc8>)
 800a06e:	4013      	ands	r3, r2
 800a070:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a072:	687b      	ldr	r3, [r7, #4]
 800a074:	681b      	ldr	r3, [r3, #0]
 800a076:	3308      	adds	r3, #8
 800a078:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800a07a:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800a07c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a07e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800a080:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a082:	e841 2300 	strex	r3, r2, [r1]
 800a086:	627b      	str	r3, [r7, #36]	@ 0x24
 800a088:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a08a:	2b00      	cmp	r3, #0
 800a08c:	d1e5      	bne.n	800a05a <UART_EndRxTransfer+0x3a>
 800a08e:	687b      	ldr	r3, [r7, #4]
 800a090:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800a092:	2b01      	cmp	r3, #1
 800a094:	d118      	bne.n	800a0c8 <UART_EndRxTransfer+0xa8>
 800a096:	687b      	ldr	r3, [r7, #4]
 800a098:	681b      	ldr	r3, [r3, #0]
 800a09a:	60fb      	str	r3, [r7, #12]
 800a09c:	68fb      	ldr	r3, [r7, #12]
 800a09e:	e853 3f00 	ldrex	r3, [r3]
 800a0a2:	60bb      	str	r3, [r7, #8]
 800a0a4:	68bb      	ldr	r3, [r7, #8]
 800a0a6:	f023 0310 	bic.w	r3, r3, #16
 800a0aa:	647b      	str	r3, [r7, #68]	@ 0x44
 800a0ac:	687b      	ldr	r3, [r7, #4]
 800a0ae:	681b      	ldr	r3, [r3, #0]
 800a0b0:	461a      	mov	r2, r3
 800a0b2:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800a0b4:	61bb      	str	r3, [r7, #24]
 800a0b6:	617a      	str	r2, [r7, #20]
 800a0b8:	6979      	ldr	r1, [r7, #20]
 800a0ba:	69ba      	ldr	r2, [r7, #24]
 800a0bc:	e841 2300 	strex	r3, r2, [r1]
 800a0c0:	613b      	str	r3, [r7, #16]
 800a0c2:	693b      	ldr	r3, [r7, #16]
 800a0c4:	2b00      	cmp	r3, #0
 800a0c6:	d1e6      	bne.n	800a096 <UART_EndRxTransfer+0x76>
 800a0c8:	687b      	ldr	r3, [r7, #4]
 800a0ca:	2220      	movs	r2, #32
 800a0cc:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800a0d0:	687b      	ldr	r3, [r7, #4]
 800a0d2:	2200      	movs	r2, #0
 800a0d4:	66da      	str	r2, [r3, #108]	@ 0x6c
 800a0d6:	687b      	ldr	r3, [r7, #4]
 800a0d8:	2200      	movs	r2, #0
 800a0da:	675a      	str	r2, [r3, #116]	@ 0x74
 800a0dc:	bf00      	nop
 800a0de:	3754      	adds	r7, #84	@ 0x54
 800a0e0:	46bd      	mov	sp, r7
 800a0e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0e6:	4770      	bx	lr
 800a0e8:	effffffe 	.word	0xeffffffe

0800a0ec <UART_DMAAbortOnError>:
 800a0ec:	b580      	push	{r7, lr}
 800a0ee:	b084      	sub	sp, #16
 800a0f0:	af00      	add	r7, sp, #0
 800a0f2:	6078      	str	r0, [r7, #4]
 800a0f4:	687b      	ldr	r3, [r7, #4]
 800a0f6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800a0f8:	60fb      	str	r3, [r7, #12]
 800a0fa:	68fb      	ldr	r3, [r7, #12]
 800a0fc:	2200      	movs	r2, #0
 800a0fe:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800a102:	68f8      	ldr	r0, [r7, #12]
 800a104:	f7fe fe2e 	bl	8008d64 <HAL_UART_ErrorCallback>
 800a108:	bf00      	nop
 800a10a:	3710      	adds	r7, #16
 800a10c:	46bd      	mov	sp, r7
 800a10e:	bd80      	pop	{r7, pc}

0800a110 <UART_EndTransmit_IT>:
 800a110:	b580      	push	{r7, lr}
 800a112:	b088      	sub	sp, #32
 800a114:	af00      	add	r7, sp, #0
 800a116:	6078      	str	r0, [r7, #4]
 800a118:	687b      	ldr	r3, [r7, #4]
 800a11a:	681b      	ldr	r3, [r3, #0]
 800a11c:	60fb      	str	r3, [r7, #12]
 800a11e:	68fb      	ldr	r3, [r7, #12]
 800a120:	e853 3f00 	ldrex	r3, [r3]
 800a124:	60bb      	str	r3, [r7, #8]
 800a126:	68bb      	ldr	r3, [r7, #8]
 800a128:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800a12c:	61fb      	str	r3, [r7, #28]
 800a12e:	687b      	ldr	r3, [r7, #4]
 800a130:	681b      	ldr	r3, [r3, #0]
 800a132:	461a      	mov	r2, r3
 800a134:	69fb      	ldr	r3, [r7, #28]
 800a136:	61bb      	str	r3, [r7, #24]
 800a138:	617a      	str	r2, [r7, #20]
 800a13a:	6979      	ldr	r1, [r7, #20]
 800a13c:	69ba      	ldr	r2, [r7, #24]
 800a13e:	e841 2300 	strex	r3, r2, [r1]
 800a142:	613b      	str	r3, [r7, #16]
 800a144:	693b      	ldr	r3, [r7, #16]
 800a146:	2b00      	cmp	r3, #0
 800a148:	d1e6      	bne.n	800a118 <UART_EndTransmit_IT+0x8>
 800a14a:	687b      	ldr	r3, [r7, #4]
 800a14c:	2220      	movs	r2, #32
 800a14e:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800a152:	687b      	ldr	r3, [r7, #4]
 800a154:	2200      	movs	r2, #0
 800a156:	679a      	str	r2, [r3, #120]	@ 0x78
 800a158:	6878      	ldr	r0, [r7, #4]
 800a15a:	f7fe fdf9 	bl	8008d50 <HAL_UART_TxCpltCallback>
 800a15e:	bf00      	nop
 800a160:	3720      	adds	r7, #32
 800a162:	46bd      	mov	sp, r7
 800a164:	bd80      	pop	{r7, pc}
	...

0800a168 <UART_RxISR_8BIT>:
 800a168:	b580      	push	{r7, lr}
 800a16a:	b09c      	sub	sp, #112	@ 0x70
 800a16c:	af00      	add	r7, sp, #0
 800a16e:	6078      	str	r0, [r7, #4]
 800a170:	687b      	ldr	r3, [r7, #4]
 800a172:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 800a176:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 800a17a:	687b      	ldr	r3, [r7, #4]
 800a17c:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800a180:	2b22      	cmp	r3, #34	@ 0x22
 800a182:	f040 80be 	bne.w	800a302 <UART_RxISR_8BIT+0x19a>
 800a186:	687b      	ldr	r3, [r7, #4]
 800a188:	681b      	ldr	r3, [r3, #0]
 800a18a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a18c:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 800a190:	f8b7 306c 	ldrh.w	r3, [r7, #108]	@ 0x6c
 800a194:	b2d9      	uxtb	r1, r3
 800a196:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 800a19a:	b2da      	uxtb	r2, r3
 800a19c:	687b      	ldr	r3, [r7, #4]
 800a19e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a1a0:	400a      	ands	r2, r1
 800a1a2:	b2d2      	uxtb	r2, r2
 800a1a4:	701a      	strb	r2, [r3, #0]
 800a1a6:	687b      	ldr	r3, [r7, #4]
 800a1a8:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a1aa:	1c5a      	adds	r2, r3, #1
 800a1ac:	687b      	ldr	r3, [r7, #4]
 800a1ae:	659a      	str	r2, [r3, #88]	@ 0x58
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a1b6:	b29b      	uxth	r3, r3
 800a1b8:	3b01      	subs	r3, #1
 800a1ba:	b29a      	uxth	r2, r3
 800a1bc:	687b      	ldr	r3, [r7, #4]
 800a1be:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800a1c2:	687b      	ldr	r3, [r7, #4]
 800a1c4:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a1c8:	b29b      	uxth	r3, r3
 800a1ca:	2b00      	cmp	r3, #0
 800a1cc:	f040 80a1 	bne.w	800a312 <UART_RxISR_8BIT+0x1aa>
 800a1d0:	687b      	ldr	r3, [r7, #4]
 800a1d2:	681b      	ldr	r3, [r3, #0]
 800a1d4:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800a1d6:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a1d8:	e853 3f00 	ldrex	r3, [r3]
 800a1dc:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a1de:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800a1e0:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800a1e4:	66bb      	str	r3, [r7, #104]	@ 0x68
 800a1e6:	687b      	ldr	r3, [r7, #4]
 800a1e8:	681b      	ldr	r3, [r3, #0]
 800a1ea:	461a      	mov	r2, r3
 800a1ec:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800a1ee:	65bb      	str	r3, [r7, #88]	@ 0x58
 800a1f0:	657a      	str	r2, [r7, #84]	@ 0x54
 800a1f2:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800a1f4:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800a1f6:	e841 2300 	strex	r3, r2, [r1]
 800a1fa:	653b      	str	r3, [r7, #80]	@ 0x50
 800a1fc:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800a1fe:	2b00      	cmp	r3, #0
 800a200:	d1e6      	bne.n	800a1d0 <UART_RxISR_8BIT+0x68>
 800a202:	687b      	ldr	r3, [r7, #4]
 800a204:	681b      	ldr	r3, [r3, #0]
 800a206:	3308      	adds	r3, #8
 800a208:	63bb      	str	r3, [r7, #56]	@ 0x38
 800a20a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a20c:	e853 3f00 	ldrex	r3, [r3]
 800a210:	637b      	str	r3, [r7, #52]	@ 0x34
 800a212:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a214:	f023 0301 	bic.w	r3, r3, #1
 800a218:	667b      	str	r3, [r7, #100]	@ 0x64
 800a21a:	687b      	ldr	r3, [r7, #4]
 800a21c:	681b      	ldr	r3, [r3, #0]
 800a21e:	3308      	adds	r3, #8
 800a220:	6e7a      	ldr	r2, [r7, #100]	@ 0x64
 800a222:	647a      	str	r2, [r7, #68]	@ 0x44
 800a224:	643b      	str	r3, [r7, #64]	@ 0x40
 800a226:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800a228:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800a22a:	e841 2300 	strex	r3, r2, [r1]
 800a22e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a230:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800a232:	2b00      	cmp	r3, #0
 800a234:	d1e5      	bne.n	800a202 <UART_RxISR_8BIT+0x9a>
 800a236:	687b      	ldr	r3, [r7, #4]
 800a238:	2220      	movs	r2, #32
 800a23a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	2200      	movs	r2, #0
 800a242:	675a      	str	r2, [r3, #116]	@ 0x74
 800a244:	687b      	ldr	r3, [r7, #4]
 800a246:	2200      	movs	r2, #0
 800a248:	671a      	str	r2, [r3, #112]	@ 0x70
 800a24a:	687b      	ldr	r3, [r7, #4]
 800a24c:	681b      	ldr	r3, [r3, #0]
 800a24e:	4a33      	ldr	r2, [pc, #204]	@ (800a31c <UART_RxISR_8BIT+0x1b4>)
 800a250:	4293      	cmp	r3, r2
 800a252:	d01f      	beq.n	800a294 <UART_RxISR_8BIT+0x12c>
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	681b      	ldr	r3, [r3, #0]
 800a258:	685b      	ldr	r3, [r3, #4]
 800a25a:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800a25e:	2b00      	cmp	r3, #0
 800a260:	d018      	beq.n	800a294 <UART_RxISR_8BIT+0x12c>
 800a262:	687b      	ldr	r3, [r7, #4]
 800a264:	681b      	ldr	r3, [r3, #0]
 800a266:	627b      	str	r3, [r7, #36]	@ 0x24
 800a268:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a26a:	e853 3f00 	ldrex	r3, [r3]
 800a26e:	623b      	str	r3, [r7, #32]
 800a270:	6a3b      	ldr	r3, [r7, #32]
 800a272:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800a276:	663b      	str	r3, [r7, #96]	@ 0x60
 800a278:	687b      	ldr	r3, [r7, #4]
 800a27a:	681b      	ldr	r3, [r3, #0]
 800a27c:	461a      	mov	r2, r3
 800a27e:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800a280:	633b      	str	r3, [r7, #48]	@ 0x30
 800a282:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800a284:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800a286:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800a288:	e841 2300 	strex	r3, r2, [r1]
 800a28c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a28e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800a290:	2b00      	cmp	r3, #0
 800a292:	d1e6      	bne.n	800a262 <UART_RxISR_8BIT+0xfa>
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800a298:	2b01      	cmp	r3, #1
 800a29a:	d12e      	bne.n	800a2fa <UART_RxISR_8BIT+0x192>
 800a29c:	687b      	ldr	r3, [r7, #4]
 800a29e:	2200      	movs	r2, #0
 800a2a0:	66da      	str	r2, [r3, #108]	@ 0x6c
 800a2a2:	687b      	ldr	r3, [r7, #4]
 800a2a4:	681b      	ldr	r3, [r3, #0]
 800a2a6:	613b      	str	r3, [r7, #16]
 800a2a8:	693b      	ldr	r3, [r7, #16]
 800a2aa:	e853 3f00 	ldrex	r3, [r3]
 800a2ae:	60fb      	str	r3, [r7, #12]
 800a2b0:	68fb      	ldr	r3, [r7, #12]
 800a2b2:	f023 0310 	bic.w	r3, r3, #16
 800a2b6:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800a2b8:	687b      	ldr	r3, [r7, #4]
 800a2ba:	681b      	ldr	r3, [r3, #0]
 800a2bc:	461a      	mov	r2, r3
 800a2be:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800a2c0:	61fb      	str	r3, [r7, #28]
 800a2c2:	61ba      	str	r2, [r7, #24]
 800a2c4:	69b9      	ldr	r1, [r7, #24]
 800a2c6:	69fa      	ldr	r2, [r7, #28]
 800a2c8:	e841 2300 	strex	r3, r2, [r1]
 800a2cc:	617b      	str	r3, [r7, #20]
 800a2ce:	697b      	ldr	r3, [r7, #20]
 800a2d0:	2b00      	cmp	r3, #0
 800a2d2:	d1e6      	bne.n	800a2a2 <UART_RxISR_8BIT+0x13a>
 800a2d4:	687b      	ldr	r3, [r7, #4]
 800a2d6:	681b      	ldr	r3, [r3, #0]
 800a2d8:	69db      	ldr	r3, [r3, #28]
 800a2da:	f003 0310 	and.w	r3, r3, #16
 800a2de:	2b10      	cmp	r3, #16
 800a2e0:	d103      	bne.n	800a2ea <UART_RxISR_8BIT+0x182>
 800a2e2:	687b      	ldr	r3, [r7, #4]
 800a2e4:	681b      	ldr	r3, [r3, #0]
 800a2e6:	2210      	movs	r2, #16
 800a2e8:	621a      	str	r2, [r3, #32]
 800a2ea:	687b      	ldr	r3, [r7, #4]
 800a2ec:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800a2f0:	4619      	mov	r1, r3
 800a2f2:	6878      	ldr	r0, [r7, #4]
 800a2f4:	f7fe fd40 	bl	8008d78 <HAL_UARTEx_RxEventCallback>
 800a2f8:	e00b      	b.n	800a312 <UART_RxISR_8BIT+0x1aa>
 800a2fa:	6878      	ldr	r0, [r7, #4]
 800a2fc:	f7f6 faf0 	bl	80008e0 <HAL_UART_RxCpltCallback>
 800a300:	e007      	b.n	800a312 <UART_RxISR_8BIT+0x1aa>
 800a302:	687b      	ldr	r3, [r7, #4]
 800a304:	681b      	ldr	r3, [r3, #0]
 800a306:	699a      	ldr	r2, [r3, #24]
 800a308:	687b      	ldr	r3, [r7, #4]
 800a30a:	681b      	ldr	r3, [r3, #0]
 800a30c:	f042 0208 	orr.w	r2, r2, #8
 800a310:	619a      	str	r2, [r3, #24]
 800a312:	bf00      	nop
 800a314:	3770      	adds	r7, #112	@ 0x70
 800a316:	46bd      	mov	sp, r7
 800a318:	bd80      	pop	{r7, pc}
 800a31a:	bf00      	nop
 800a31c:	58000c00 	.word	0x58000c00

0800a320 <UART_RxISR_16BIT>:
 800a320:	b580      	push	{r7, lr}
 800a322:	b09c      	sub	sp, #112	@ 0x70
 800a324:	af00      	add	r7, sp, #0
 800a326:	6078      	str	r0, [r7, #4]
 800a328:	687b      	ldr	r3, [r7, #4]
 800a32a:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 800a32e:	f8a7 306e 	strh.w	r3, [r7, #110]	@ 0x6e
 800a332:	687b      	ldr	r3, [r7, #4]
 800a334:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800a338:	2b22      	cmp	r3, #34	@ 0x22
 800a33a:	f040 80be 	bne.w	800a4ba <UART_RxISR_16BIT+0x19a>
 800a33e:	687b      	ldr	r3, [r7, #4]
 800a340:	681b      	ldr	r3, [r3, #0]
 800a342:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a344:	f8a7 306c 	strh.w	r3, [r7, #108]	@ 0x6c
 800a348:	687b      	ldr	r3, [r7, #4]
 800a34a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a34c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800a34e:	f8b7 206c 	ldrh.w	r2, [r7, #108]	@ 0x6c
 800a352:	f8b7 306e 	ldrh.w	r3, [r7, #110]	@ 0x6e
 800a356:	4013      	ands	r3, r2
 800a358:	b29a      	uxth	r2, r3
 800a35a:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800a35c:	801a      	strh	r2, [r3, #0]
 800a35e:	687b      	ldr	r3, [r7, #4]
 800a360:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a362:	1c9a      	adds	r2, r3, #2
 800a364:	687b      	ldr	r3, [r7, #4]
 800a366:	659a      	str	r2, [r3, #88]	@ 0x58
 800a368:	687b      	ldr	r3, [r7, #4]
 800a36a:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a36e:	b29b      	uxth	r3, r3
 800a370:	3b01      	subs	r3, #1
 800a372:	b29a      	uxth	r2, r3
 800a374:	687b      	ldr	r3, [r7, #4]
 800a376:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800a37a:	687b      	ldr	r3, [r7, #4]
 800a37c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a380:	b29b      	uxth	r3, r3
 800a382:	2b00      	cmp	r3, #0
 800a384:	f040 80a1 	bne.w	800a4ca <UART_RxISR_16BIT+0x1aa>
 800a388:	687b      	ldr	r3, [r7, #4]
 800a38a:	681b      	ldr	r3, [r3, #0]
 800a38c:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a38e:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800a390:	e853 3f00 	ldrex	r3, [r3]
 800a394:	647b      	str	r3, [r7, #68]	@ 0x44
 800a396:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800a398:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800a39c:	667b      	str	r3, [r7, #100]	@ 0x64
 800a39e:	687b      	ldr	r3, [r7, #4]
 800a3a0:	681b      	ldr	r3, [r3, #0]
 800a3a2:	461a      	mov	r2, r3
 800a3a4:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800a3a6:	657b      	str	r3, [r7, #84]	@ 0x54
 800a3a8:	653a      	str	r2, [r7, #80]	@ 0x50
 800a3aa:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800a3ac:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 800a3ae:	e841 2300 	strex	r3, r2, [r1]
 800a3b2:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800a3b4:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a3b6:	2b00      	cmp	r3, #0
 800a3b8:	d1e6      	bne.n	800a388 <UART_RxISR_16BIT+0x68>
 800a3ba:	687b      	ldr	r3, [r7, #4]
 800a3bc:	681b      	ldr	r3, [r3, #0]
 800a3be:	3308      	adds	r3, #8
 800a3c0:	637b      	str	r3, [r7, #52]	@ 0x34
 800a3c2:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a3c4:	e853 3f00 	ldrex	r3, [r3]
 800a3c8:	633b      	str	r3, [r7, #48]	@ 0x30
 800a3ca:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a3cc:	f023 0301 	bic.w	r3, r3, #1
 800a3d0:	663b      	str	r3, [r7, #96]	@ 0x60
 800a3d2:	687b      	ldr	r3, [r7, #4]
 800a3d4:	681b      	ldr	r3, [r3, #0]
 800a3d6:	3308      	adds	r3, #8
 800a3d8:	6e3a      	ldr	r2, [r7, #96]	@ 0x60
 800a3da:	643a      	str	r2, [r7, #64]	@ 0x40
 800a3dc:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800a3de:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800a3e0:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800a3e2:	e841 2300 	strex	r3, r2, [r1]
 800a3e6:	63bb      	str	r3, [r7, #56]	@ 0x38
 800a3e8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a3ea:	2b00      	cmp	r3, #0
 800a3ec:	d1e5      	bne.n	800a3ba <UART_RxISR_16BIT+0x9a>
 800a3ee:	687b      	ldr	r3, [r7, #4]
 800a3f0:	2220      	movs	r2, #32
 800a3f2:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800a3f6:	687b      	ldr	r3, [r7, #4]
 800a3f8:	2200      	movs	r2, #0
 800a3fa:	675a      	str	r2, [r3, #116]	@ 0x74
 800a3fc:	687b      	ldr	r3, [r7, #4]
 800a3fe:	2200      	movs	r2, #0
 800a400:	671a      	str	r2, [r3, #112]	@ 0x70
 800a402:	687b      	ldr	r3, [r7, #4]
 800a404:	681b      	ldr	r3, [r3, #0]
 800a406:	4a33      	ldr	r2, [pc, #204]	@ (800a4d4 <UART_RxISR_16BIT+0x1b4>)
 800a408:	4293      	cmp	r3, r2
 800a40a:	d01f      	beq.n	800a44c <UART_RxISR_16BIT+0x12c>
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	681b      	ldr	r3, [r3, #0]
 800a410:	685b      	ldr	r3, [r3, #4]
 800a412:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800a416:	2b00      	cmp	r3, #0
 800a418:	d018      	beq.n	800a44c <UART_RxISR_16BIT+0x12c>
 800a41a:	687b      	ldr	r3, [r7, #4]
 800a41c:	681b      	ldr	r3, [r3, #0]
 800a41e:	623b      	str	r3, [r7, #32]
 800a420:	6a3b      	ldr	r3, [r7, #32]
 800a422:	e853 3f00 	ldrex	r3, [r3]
 800a426:	61fb      	str	r3, [r7, #28]
 800a428:	69fb      	ldr	r3, [r7, #28]
 800a42a:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800a42e:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800a430:	687b      	ldr	r3, [r7, #4]
 800a432:	681b      	ldr	r3, [r3, #0]
 800a434:	461a      	mov	r2, r3
 800a436:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800a438:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a43a:	62ba      	str	r2, [r7, #40]	@ 0x28
 800a43c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800a43e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a440:	e841 2300 	strex	r3, r2, [r1]
 800a444:	627b      	str	r3, [r7, #36]	@ 0x24
 800a446:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a448:	2b00      	cmp	r3, #0
 800a44a:	d1e6      	bne.n	800a41a <UART_RxISR_16BIT+0xfa>
 800a44c:	687b      	ldr	r3, [r7, #4]
 800a44e:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800a450:	2b01      	cmp	r3, #1
 800a452:	d12e      	bne.n	800a4b2 <UART_RxISR_16BIT+0x192>
 800a454:	687b      	ldr	r3, [r7, #4]
 800a456:	2200      	movs	r2, #0
 800a458:	66da      	str	r2, [r3, #108]	@ 0x6c
 800a45a:	687b      	ldr	r3, [r7, #4]
 800a45c:	681b      	ldr	r3, [r3, #0]
 800a45e:	60fb      	str	r3, [r7, #12]
 800a460:	68fb      	ldr	r3, [r7, #12]
 800a462:	e853 3f00 	ldrex	r3, [r3]
 800a466:	60bb      	str	r3, [r7, #8]
 800a468:	68bb      	ldr	r3, [r7, #8]
 800a46a:	f023 0310 	bic.w	r3, r3, #16
 800a46e:	65bb      	str	r3, [r7, #88]	@ 0x58
 800a470:	687b      	ldr	r3, [r7, #4]
 800a472:	681b      	ldr	r3, [r3, #0]
 800a474:	461a      	mov	r2, r3
 800a476:	6dbb      	ldr	r3, [r7, #88]	@ 0x58
 800a478:	61bb      	str	r3, [r7, #24]
 800a47a:	617a      	str	r2, [r7, #20]
 800a47c:	6979      	ldr	r1, [r7, #20]
 800a47e:	69ba      	ldr	r2, [r7, #24]
 800a480:	e841 2300 	strex	r3, r2, [r1]
 800a484:	613b      	str	r3, [r7, #16]
 800a486:	693b      	ldr	r3, [r7, #16]
 800a488:	2b00      	cmp	r3, #0
 800a48a:	d1e6      	bne.n	800a45a <UART_RxISR_16BIT+0x13a>
 800a48c:	687b      	ldr	r3, [r7, #4]
 800a48e:	681b      	ldr	r3, [r3, #0]
 800a490:	69db      	ldr	r3, [r3, #28]
 800a492:	f003 0310 	and.w	r3, r3, #16
 800a496:	2b10      	cmp	r3, #16
 800a498:	d103      	bne.n	800a4a2 <UART_RxISR_16BIT+0x182>
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	681b      	ldr	r3, [r3, #0]
 800a49e:	2210      	movs	r2, #16
 800a4a0:	621a      	str	r2, [r3, #32]
 800a4a2:	687b      	ldr	r3, [r7, #4]
 800a4a4:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800a4a8:	4619      	mov	r1, r3
 800a4aa:	6878      	ldr	r0, [r7, #4]
 800a4ac:	f7fe fc64 	bl	8008d78 <HAL_UARTEx_RxEventCallback>
 800a4b0:	e00b      	b.n	800a4ca <UART_RxISR_16BIT+0x1aa>
 800a4b2:	6878      	ldr	r0, [r7, #4]
 800a4b4:	f7f6 fa14 	bl	80008e0 <HAL_UART_RxCpltCallback>
 800a4b8:	e007      	b.n	800a4ca <UART_RxISR_16BIT+0x1aa>
 800a4ba:	687b      	ldr	r3, [r7, #4]
 800a4bc:	681b      	ldr	r3, [r3, #0]
 800a4be:	699a      	ldr	r2, [r3, #24]
 800a4c0:	687b      	ldr	r3, [r7, #4]
 800a4c2:	681b      	ldr	r3, [r3, #0]
 800a4c4:	f042 0208 	orr.w	r2, r2, #8
 800a4c8:	619a      	str	r2, [r3, #24]
 800a4ca:	bf00      	nop
 800a4cc:	3770      	adds	r7, #112	@ 0x70
 800a4ce:	46bd      	mov	sp, r7
 800a4d0:	bd80      	pop	{r7, pc}
 800a4d2:	bf00      	nop
 800a4d4:	58000c00 	.word	0x58000c00

0800a4d8 <UART_RxISR_8BIT_FIFOEN>:
 800a4d8:	b580      	push	{r7, lr}
 800a4da:	b0ac      	sub	sp, #176	@ 0xb0
 800a4dc:	af00      	add	r7, sp, #0
 800a4de:	6078      	str	r0, [r7, #4]
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 800a4e6:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	681b      	ldr	r3, [r3, #0]
 800a4ee:	69db      	ldr	r3, [r3, #28]
 800a4f0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800a4f4:	687b      	ldr	r3, [r7, #4]
 800a4f6:	681b      	ldr	r3, [r3, #0]
 800a4f8:	681b      	ldr	r3, [r3, #0]
 800a4fa:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 800a4fe:	687b      	ldr	r3, [r7, #4]
 800a500:	681b      	ldr	r3, [r3, #0]
 800a502:	689b      	ldr	r3, [r3, #8]
 800a504:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800a50e:	2b22      	cmp	r3, #34	@ 0x22
 800a510:	f040 8181 	bne.w	800a816 <UART_RxISR_8BIT_FIFOEN+0x33e>
 800a514:	687b      	ldr	r3, [r7, #4]
 800a516:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800a51a:	f8a7 309e 	strh.w	r3, [r7, #158]	@ 0x9e
 800a51e:	e124      	b.n	800a76a <UART_RxISR_8BIT_FIFOEN+0x292>
 800a520:	687b      	ldr	r3, [r7, #4]
 800a522:	681b      	ldr	r3, [r3, #0]
 800a524:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a526:	f8a7 309c 	strh.w	r3, [r7, #156]	@ 0x9c
 800a52a:	f8b7 309c 	ldrh.w	r3, [r7, #156]	@ 0x9c
 800a52e:	b2d9      	uxtb	r1, r3
 800a530:	f8b7 30aa 	ldrh.w	r3, [r7, #170]	@ 0xaa
 800a534:	b2da      	uxtb	r2, r3
 800a536:	687b      	ldr	r3, [r7, #4]
 800a538:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a53a:	400a      	ands	r2, r1
 800a53c:	b2d2      	uxtb	r2, r2
 800a53e:	701a      	strb	r2, [r3, #0]
 800a540:	687b      	ldr	r3, [r7, #4]
 800a542:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a544:	1c5a      	adds	r2, r3, #1
 800a546:	687b      	ldr	r3, [r7, #4]
 800a548:	659a      	str	r2, [r3, #88]	@ 0x58
 800a54a:	687b      	ldr	r3, [r7, #4]
 800a54c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a550:	b29b      	uxth	r3, r3
 800a552:	3b01      	subs	r3, #1
 800a554:	b29a      	uxth	r2, r3
 800a556:	687b      	ldr	r3, [r7, #4]
 800a558:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800a55c:	687b      	ldr	r3, [r7, #4]
 800a55e:	681b      	ldr	r3, [r3, #0]
 800a560:	69db      	ldr	r3, [r3, #28]
 800a562:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800a566:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a56a:	f003 0307 	and.w	r3, r3, #7
 800a56e:	2b00      	cmp	r3, #0
 800a570:	d053      	beq.n	800a61a <UART_RxISR_8BIT_FIFOEN+0x142>
 800a572:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a576:	f003 0301 	and.w	r3, r3, #1
 800a57a:	2b00      	cmp	r3, #0
 800a57c:	d011      	beq.n	800a5a2 <UART_RxISR_8BIT_FIFOEN+0xca>
 800a57e:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800a582:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800a586:	2b00      	cmp	r3, #0
 800a588:	d00b      	beq.n	800a5a2 <UART_RxISR_8BIT_FIFOEN+0xca>
 800a58a:	687b      	ldr	r3, [r7, #4]
 800a58c:	681b      	ldr	r3, [r3, #0]
 800a58e:	2201      	movs	r2, #1
 800a590:	621a      	str	r2, [r3, #32]
 800a592:	687b      	ldr	r3, [r7, #4]
 800a594:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a598:	f043 0201 	orr.w	r2, r3, #1
 800a59c:	687b      	ldr	r3, [r7, #4]
 800a59e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a5a2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a5a6:	f003 0302 	and.w	r3, r3, #2
 800a5aa:	2b00      	cmp	r3, #0
 800a5ac:	d011      	beq.n	800a5d2 <UART_RxISR_8BIT_FIFOEN+0xfa>
 800a5ae:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800a5b2:	f003 0301 	and.w	r3, r3, #1
 800a5b6:	2b00      	cmp	r3, #0
 800a5b8:	d00b      	beq.n	800a5d2 <UART_RxISR_8BIT_FIFOEN+0xfa>
 800a5ba:	687b      	ldr	r3, [r7, #4]
 800a5bc:	681b      	ldr	r3, [r3, #0]
 800a5be:	2202      	movs	r2, #2
 800a5c0:	621a      	str	r2, [r3, #32]
 800a5c2:	687b      	ldr	r3, [r7, #4]
 800a5c4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a5c8:	f043 0204 	orr.w	r2, r3, #4
 800a5cc:	687b      	ldr	r3, [r7, #4]
 800a5ce:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a5d2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a5d6:	f003 0304 	and.w	r3, r3, #4
 800a5da:	2b00      	cmp	r3, #0
 800a5dc:	d011      	beq.n	800a602 <UART_RxISR_8BIT_FIFOEN+0x12a>
 800a5de:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800a5e2:	f003 0301 	and.w	r3, r3, #1
 800a5e6:	2b00      	cmp	r3, #0
 800a5e8:	d00b      	beq.n	800a602 <UART_RxISR_8BIT_FIFOEN+0x12a>
 800a5ea:	687b      	ldr	r3, [r7, #4]
 800a5ec:	681b      	ldr	r3, [r3, #0]
 800a5ee:	2204      	movs	r2, #4
 800a5f0:	621a      	str	r2, [r3, #32]
 800a5f2:	687b      	ldr	r3, [r7, #4]
 800a5f4:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a5f8:	f043 0202 	orr.w	r2, r3, #2
 800a5fc:	687b      	ldr	r3, [r7, #4]
 800a5fe:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a602:	687b      	ldr	r3, [r7, #4]
 800a604:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a608:	2b00      	cmp	r3, #0
 800a60a:	d006      	beq.n	800a61a <UART_RxISR_8BIT_FIFOEN+0x142>
 800a60c:	6878      	ldr	r0, [r7, #4]
 800a60e:	f7fe fba9 	bl	8008d64 <HAL_UART_ErrorCallback>
 800a612:	687b      	ldr	r3, [r7, #4]
 800a614:	2200      	movs	r2, #0
 800a616:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a61a:	687b      	ldr	r3, [r7, #4]
 800a61c:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a620:	b29b      	uxth	r3, r3
 800a622:	2b00      	cmp	r3, #0
 800a624:	f040 80a1 	bne.w	800a76a <UART_RxISR_8BIT_FIFOEN+0x292>
 800a628:	687b      	ldr	r3, [r7, #4]
 800a62a:	681b      	ldr	r3, [r3, #0]
 800a62c:	673b      	str	r3, [r7, #112]	@ 0x70
 800a62e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800a630:	e853 3f00 	ldrex	r3, [r3]
 800a634:	66fb      	str	r3, [r7, #108]	@ 0x6c
 800a636:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800a638:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800a63c:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800a640:	687b      	ldr	r3, [r7, #4]
 800a642:	681b      	ldr	r3, [r3, #0]
 800a644:	461a      	mov	r2, r3
 800a646:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800a64a:	67fb      	str	r3, [r7, #124]	@ 0x7c
 800a64c:	67ba      	str	r2, [r7, #120]	@ 0x78
 800a64e:	6fb9      	ldr	r1, [r7, #120]	@ 0x78
 800a650:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 800a652:	e841 2300 	strex	r3, r2, [r1]
 800a656:	677b      	str	r3, [r7, #116]	@ 0x74
 800a658:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800a65a:	2b00      	cmp	r3, #0
 800a65c:	d1e4      	bne.n	800a628 <UART_RxISR_8BIT_FIFOEN+0x150>
 800a65e:	687b      	ldr	r3, [r7, #4]
 800a660:	681b      	ldr	r3, [r3, #0]
 800a662:	3308      	adds	r3, #8
 800a664:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800a666:	6dfb      	ldr	r3, [r7, #92]	@ 0x5c
 800a668:	e853 3f00 	ldrex	r3, [r3]
 800a66c:	65bb      	str	r3, [r7, #88]	@ 0x58
 800a66e:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800a670:	4b6f      	ldr	r3, [pc, #444]	@ (800a830 <UART_RxISR_8BIT_FIFOEN+0x358>)
 800a672:	4013      	ands	r3, r2
 800a674:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800a678:	687b      	ldr	r3, [r7, #4]
 800a67a:	681b      	ldr	r3, [r3, #0]
 800a67c:	3308      	adds	r3, #8
 800a67e:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 800a682:	66ba      	str	r2, [r7, #104]	@ 0x68
 800a684:	667b      	str	r3, [r7, #100]	@ 0x64
 800a686:	6e79      	ldr	r1, [r7, #100]	@ 0x64
 800a688:	6eba      	ldr	r2, [r7, #104]	@ 0x68
 800a68a:	e841 2300 	strex	r3, r2, [r1]
 800a68e:	663b      	str	r3, [r7, #96]	@ 0x60
 800a690:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800a692:	2b00      	cmp	r3, #0
 800a694:	d1e3      	bne.n	800a65e <UART_RxISR_8BIT_FIFOEN+0x186>
 800a696:	687b      	ldr	r3, [r7, #4]
 800a698:	2220      	movs	r2, #32
 800a69a:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800a69e:	687b      	ldr	r3, [r7, #4]
 800a6a0:	2200      	movs	r2, #0
 800a6a2:	675a      	str	r2, [r3, #116]	@ 0x74
 800a6a4:	687b      	ldr	r3, [r7, #4]
 800a6a6:	2200      	movs	r2, #0
 800a6a8:	671a      	str	r2, [r3, #112]	@ 0x70
 800a6aa:	687b      	ldr	r3, [r7, #4]
 800a6ac:	681b      	ldr	r3, [r3, #0]
 800a6ae:	4a61      	ldr	r2, [pc, #388]	@ (800a834 <UART_RxISR_8BIT_FIFOEN+0x35c>)
 800a6b0:	4293      	cmp	r3, r2
 800a6b2:	d021      	beq.n	800a6f8 <UART_RxISR_8BIT_FIFOEN+0x220>
 800a6b4:	687b      	ldr	r3, [r7, #4]
 800a6b6:	681b      	ldr	r3, [r3, #0]
 800a6b8:	685b      	ldr	r3, [r3, #4]
 800a6ba:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800a6be:	2b00      	cmp	r3, #0
 800a6c0:	d01a      	beq.n	800a6f8 <UART_RxISR_8BIT_FIFOEN+0x220>
 800a6c2:	687b      	ldr	r3, [r7, #4]
 800a6c4:	681b      	ldr	r3, [r3, #0]
 800a6c6:	64bb      	str	r3, [r7, #72]	@ 0x48
 800a6c8:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800a6ca:	e853 3f00 	ldrex	r3, [r3]
 800a6ce:	647b      	str	r3, [r7, #68]	@ 0x44
 800a6d0:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800a6d2:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800a6d6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800a6da:	687b      	ldr	r3, [r7, #4]
 800a6dc:	681b      	ldr	r3, [r3, #0]
 800a6de:	461a      	mov	r2, r3
 800a6e0:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800a6e4:	657b      	str	r3, [r7, #84]	@ 0x54
 800a6e6:	653a      	str	r2, [r7, #80]	@ 0x50
 800a6e8:	6d39      	ldr	r1, [r7, #80]	@ 0x50
 800a6ea:	6d7a      	ldr	r2, [r7, #84]	@ 0x54
 800a6ec:	e841 2300 	strex	r3, r2, [r1]
 800a6f0:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800a6f2:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800a6f4:	2b00      	cmp	r3, #0
 800a6f6:	d1e4      	bne.n	800a6c2 <UART_RxISR_8BIT_FIFOEN+0x1ea>
 800a6f8:	687b      	ldr	r3, [r7, #4]
 800a6fa:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800a6fc:	2b01      	cmp	r3, #1
 800a6fe:	d130      	bne.n	800a762 <UART_RxISR_8BIT_FIFOEN+0x28a>
 800a700:	687b      	ldr	r3, [r7, #4]
 800a702:	2200      	movs	r2, #0
 800a704:	66da      	str	r2, [r3, #108]	@ 0x6c
 800a706:	687b      	ldr	r3, [r7, #4]
 800a708:	681b      	ldr	r3, [r3, #0]
 800a70a:	637b      	str	r3, [r7, #52]	@ 0x34
 800a70c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800a70e:	e853 3f00 	ldrex	r3, [r3]
 800a712:	633b      	str	r3, [r7, #48]	@ 0x30
 800a714:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800a716:	f023 0310 	bic.w	r3, r3, #16
 800a71a:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 800a71e:	687b      	ldr	r3, [r7, #4]
 800a720:	681b      	ldr	r3, [r3, #0]
 800a722:	461a      	mov	r2, r3
 800a724:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800a728:	643b      	str	r3, [r7, #64]	@ 0x40
 800a72a:	63fa      	str	r2, [r7, #60]	@ 0x3c
 800a72c:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800a72e:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800a730:	e841 2300 	strex	r3, r2, [r1]
 800a734:	63bb      	str	r3, [r7, #56]	@ 0x38
 800a736:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800a738:	2b00      	cmp	r3, #0
 800a73a:	d1e4      	bne.n	800a706 <UART_RxISR_8BIT_FIFOEN+0x22e>
 800a73c:	687b      	ldr	r3, [r7, #4]
 800a73e:	681b      	ldr	r3, [r3, #0]
 800a740:	69db      	ldr	r3, [r3, #28]
 800a742:	f003 0310 	and.w	r3, r3, #16
 800a746:	2b10      	cmp	r3, #16
 800a748:	d103      	bne.n	800a752 <UART_RxISR_8BIT_FIFOEN+0x27a>
 800a74a:	687b      	ldr	r3, [r7, #4]
 800a74c:	681b      	ldr	r3, [r3, #0]
 800a74e:	2210      	movs	r2, #16
 800a750:	621a      	str	r2, [r3, #32]
 800a752:	687b      	ldr	r3, [r7, #4]
 800a754:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800a758:	4619      	mov	r1, r3
 800a75a:	6878      	ldr	r0, [r7, #4]
 800a75c:	f7fe fb0c 	bl	8008d78 <HAL_UARTEx_RxEventCallback>
 800a760:	e00e      	b.n	800a780 <UART_RxISR_8BIT_FIFOEN+0x2a8>
 800a762:	6878      	ldr	r0, [r7, #4]
 800a764:	f7f6 f8bc 	bl	80008e0 <HAL_UART_RxCpltCallback>
 800a768:	e00a      	b.n	800a780 <UART_RxISR_8BIT_FIFOEN+0x2a8>
 800a76a:	f8b7 309e 	ldrh.w	r3, [r7, #158]	@ 0x9e
 800a76e:	2b00      	cmp	r3, #0
 800a770:	d006      	beq.n	800a780 <UART_RxISR_8BIT_FIFOEN+0x2a8>
 800a772:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a776:	f003 0320 	and.w	r3, r3, #32
 800a77a:	2b00      	cmp	r3, #0
 800a77c:	f47f aed0 	bne.w	800a520 <UART_RxISR_8BIT_FIFOEN+0x48>
 800a780:	687b      	ldr	r3, [r7, #4]
 800a782:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a786:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
 800a78a:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 800a78e:	2b00      	cmp	r3, #0
 800a790:	d049      	beq.n	800a826 <UART_RxISR_8BIT_FIFOEN+0x34e>
 800a792:	687b      	ldr	r3, [r7, #4]
 800a794:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800a798:	f8b7 208a 	ldrh.w	r2, [r7, #138]	@ 0x8a
 800a79c:	429a      	cmp	r2, r3
 800a79e:	d242      	bcs.n	800a826 <UART_RxISR_8BIT_FIFOEN+0x34e>
 800a7a0:	687b      	ldr	r3, [r7, #4]
 800a7a2:	681b      	ldr	r3, [r3, #0]
 800a7a4:	3308      	adds	r3, #8
 800a7a6:	623b      	str	r3, [r7, #32]
 800a7a8:	6a3b      	ldr	r3, [r7, #32]
 800a7aa:	e853 3f00 	ldrex	r3, [r3]
 800a7ae:	61fb      	str	r3, [r7, #28]
 800a7b0:	69fb      	ldr	r3, [r7, #28]
 800a7b2:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800a7b6:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800a7ba:	687b      	ldr	r3, [r7, #4]
 800a7bc:	681b      	ldr	r3, [r3, #0]
 800a7be:	3308      	adds	r3, #8
 800a7c0:	f8d7 2084 	ldr.w	r2, [r7, #132]	@ 0x84
 800a7c4:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800a7c6:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a7c8:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800a7ca:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800a7cc:	e841 2300 	strex	r3, r2, [r1]
 800a7d0:	627b      	str	r3, [r7, #36]	@ 0x24
 800a7d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800a7d4:	2b00      	cmp	r3, #0
 800a7d6:	d1e3      	bne.n	800a7a0 <UART_RxISR_8BIT_FIFOEN+0x2c8>
 800a7d8:	687b      	ldr	r3, [r7, #4]
 800a7da:	4a17      	ldr	r2, [pc, #92]	@ (800a838 <UART_RxISR_8BIT_FIFOEN+0x360>)
 800a7dc:	675a      	str	r2, [r3, #116]	@ 0x74
 800a7de:	687b      	ldr	r3, [r7, #4]
 800a7e0:	681b      	ldr	r3, [r3, #0]
 800a7e2:	60fb      	str	r3, [r7, #12]
 800a7e4:	68fb      	ldr	r3, [r7, #12]
 800a7e6:	e853 3f00 	ldrex	r3, [r3]
 800a7ea:	60bb      	str	r3, [r7, #8]
 800a7ec:	68bb      	ldr	r3, [r7, #8]
 800a7ee:	f043 0320 	orr.w	r3, r3, #32
 800a7f2:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800a7f6:	687b      	ldr	r3, [r7, #4]
 800a7f8:	681b      	ldr	r3, [r3, #0]
 800a7fa:	461a      	mov	r2, r3
 800a7fc:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800a800:	61bb      	str	r3, [r7, #24]
 800a802:	617a      	str	r2, [r7, #20]
 800a804:	6979      	ldr	r1, [r7, #20]
 800a806:	69ba      	ldr	r2, [r7, #24]
 800a808:	e841 2300 	strex	r3, r2, [r1]
 800a80c:	613b      	str	r3, [r7, #16]
 800a80e:	693b      	ldr	r3, [r7, #16]
 800a810:	2b00      	cmp	r3, #0
 800a812:	d1e4      	bne.n	800a7de <UART_RxISR_8BIT_FIFOEN+0x306>
 800a814:	e007      	b.n	800a826 <UART_RxISR_8BIT_FIFOEN+0x34e>
 800a816:	687b      	ldr	r3, [r7, #4]
 800a818:	681b      	ldr	r3, [r3, #0]
 800a81a:	699a      	ldr	r2, [r3, #24]
 800a81c:	687b      	ldr	r3, [r7, #4]
 800a81e:	681b      	ldr	r3, [r3, #0]
 800a820:	f042 0208 	orr.w	r2, r2, #8
 800a824:	619a      	str	r2, [r3, #24]
 800a826:	bf00      	nop
 800a828:	37b0      	adds	r7, #176	@ 0xb0
 800a82a:	46bd      	mov	sp, r7
 800a82c:	bd80      	pop	{r7, pc}
 800a82e:	bf00      	nop
 800a830:	effffffe 	.word	0xeffffffe
 800a834:	58000c00 	.word	0x58000c00
 800a838:	0800a169 	.word	0x0800a169

0800a83c <UART_RxISR_16BIT_FIFOEN>:
 800a83c:	b580      	push	{r7, lr}
 800a83e:	b0ae      	sub	sp, #184	@ 0xb8
 800a840:	af00      	add	r7, sp, #0
 800a842:	6078      	str	r0, [r7, #4]
 800a844:	687b      	ldr	r3, [r7, #4]
 800a846:	f8b3 3060 	ldrh.w	r3, [r3, #96]	@ 0x60
 800a84a:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 800a84e:	687b      	ldr	r3, [r7, #4]
 800a850:	681b      	ldr	r3, [r3, #0]
 800a852:	69db      	ldr	r3, [r3, #28]
 800a854:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800a858:	687b      	ldr	r3, [r7, #4]
 800a85a:	681b      	ldr	r3, [r3, #0]
 800a85c:	681b      	ldr	r3, [r3, #0]
 800a85e:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800a862:	687b      	ldr	r3, [r7, #4]
 800a864:	681b      	ldr	r3, [r3, #0]
 800a866:	689b      	ldr	r3, [r3, #8]
 800a868:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800a86c:	687b      	ldr	r3, [r7, #4]
 800a86e:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800a872:	2b22      	cmp	r3, #34	@ 0x22
 800a874:	f040 8185 	bne.w	800ab82 <UART_RxISR_16BIT_FIFOEN+0x346>
 800a878:	687b      	ldr	r3, [r7, #4]
 800a87a:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800a87e:	f8a7 30a6 	strh.w	r3, [r7, #166]	@ 0xa6
 800a882:	e128      	b.n	800aad6 <UART_RxISR_16BIT_FIFOEN+0x29a>
 800a884:	687b      	ldr	r3, [r7, #4]
 800a886:	681b      	ldr	r3, [r3, #0]
 800a888:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800a88a:	f8a7 30a4 	strh.w	r3, [r7, #164]	@ 0xa4
 800a88e:	687b      	ldr	r3, [r7, #4]
 800a890:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a892:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 800a896:	f8b7 20a4 	ldrh.w	r2, [r7, #164]	@ 0xa4
 800a89a:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 800a89e:	4013      	ands	r3, r2
 800a8a0:	b29a      	uxth	r2, r3
 800a8a2:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800a8a6:	801a      	strh	r2, [r3, #0]
 800a8a8:	687b      	ldr	r3, [r7, #4]
 800a8aa:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800a8ac:	1c9a      	adds	r2, r3, #2
 800a8ae:	687b      	ldr	r3, [r7, #4]
 800a8b0:	659a      	str	r2, [r3, #88]	@ 0x58
 800a8b2:	687b      	ldr	r3, [r7, #4]
 800a8b4:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a8b8:	b29b      	uxth	r3, r3
 800a8ba:	3b01      	subs	r3, #1
 800a8bc:	b29a      	uxth	r2, r3
 800a8be:	687b      	ldr	r3, [r7, #4]
 800a8c0:	f8a3 205e 	strh.w	r2, [r3, #94]	@ 0x5e
 800a8c4:	687b      	ldr	r3, [r7, #4]
 800a8c6:	681b      	ldr	r3, [r3, #0]
 800a8c8:	69db      	ldr	r3, [r3, #28]
 800a8ca:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800a8ce:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800a8d2:	f003 0307 	and.w	r3, r3, #7
 800a8d6:	2b00      	cmp	r3, #0
 800a8d8:	d053      	beq.n	800a982 <UART_RxISR_16BIT_FIFOEN+0x146>
 800a8da:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800a8de:	f003 0301 	and.w	r3, r3, #1
 800a8e2:	2b00      	cmp	r3, #0
 800a8e4:	d011      	beq.n	800a90a <UART_RxISR_16BIT_FIFOEN+0xce>
 800a8e6:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800a8ea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 800a8ee:	2b00      	cmp	r3, #0
 800a8f0:	d00b      	beq.n	800a90a <UART_RxISR_16BIT_FIFOEN+0xce>
 800a8f2:	687b      	ldr	r3, [r7, #4]
 800a8f4:	681b      	ldr	r3, [r3, #0]
 800a8f6:	2201      	movs	r2, #1
 800a8f8:	621a      	str	r2, [r3, #32]
 800a8fa:	687b      	ldr	r3, [r7, #4]
 800a8fc:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a900:	f043 0201 	orr.w	r2, r3, #1
 800a904:	687b      	ldr	r3, [r7, #4]
 800a906:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a90a:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800a90e:	f003 0302 	and.w	r3, r3, #2
 800a912:	2b00      	cmp	r3, #0
 800a914:	d011      	beq.n	800a93a <UART_RxISR_16BIT_FIFOEN+0xfe>
 800a916:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a91a:	f003 0301 	and.w	r3, r3, #1
 800a91e:	2b00      	cmp	r3, #0
 800a920:	d00b      	beq.n	800a93a <UART_RxISR_16BIT_FIFOEN+0xfe>
 800a922:	687b      	ldr	r3, [r7, #4]
 800a924:	681b      	ldr	r3, [r3, #0]
 800a926:	2202      	movs	r2, #2
 800a928:	621a      	str	r2, [r3, #32]
 800a92a:	687b      	ldr	r3, [r7, #4]
 800a92c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a930:	f043 0204 	orr.w	r2, r3, #4
 800a934:	687b      	ldr	r3, [r7, #4]
 800a936:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a93a:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800a93e:	f003 0304 	and.w	r3, r3, #4
 800a942:	2b00      	cmp	r3, #0
 800a944:	d011      	beq.n	800a96a <UART_RxISR_16BIT_FIFOEN+0x12e>
 800a946:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800a94a:	f003 0301 	and.w	r3, r3, #1
 800a94e:	2b00      	cmp	r3, #0
 800a950:	d00b      	beq.n	800a96a <UART_RxISR_16BIT_FIFOEN+0x12e>
 800a952:	687b      	ldr	r3, [r7, #4]
 800a954:	681b      	ldr	r3, [r3, #0]
 800a956:	2204      	movs	r2, #4
 800a958:	621a      	str	r2, [r3, #32]
 800a95a:	687b      	ldr	r3, [r7, #4]
 800a95c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a960:	f043 0202 	orr.w	r2, r3, #2
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a96a:	687b      	ldr	r3, [r7, #4]
 800a96c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 800a970:	2b00      	cmp	r3, #0
 800a972:	d006      	beq.n	800a982 <UART_RxISR_16BIT_FIFOEN+0x146>
 800a974:	6878      	ldr	r0, [r7, #4]
 800a976:	f7fe f9f5 	bl	8008d64 <HAL_UART_ErrorCallback>
 800a97a:	687b      	ldr	r3, [r7, #4]
 800a97c:	2200      	movs	r2, #0
 800a97e:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
 800a982:	687b      	ldr	r3, [r7, #4]
 800a984:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800a988:	b29b      	uxth	r3, r3
 800a98a:	2b00      	cmp	r3, #0
 800a98c:	f040 80a3 	bne.w	800aad6 <UART_RxISR_16BIT_FIFOEN+0x29a>
 800a990:	687b      	ldr	r3, [r7, #4]
 800a992:	681b      	ldr	r3, [r3, #0]
 800a994:	677b      	str	r3, [r7, #116]	@ 0x74
 800a996:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800a998:	e853 3f00 	ldrex	r3, [r3]
 800a99c:	673b      	str	r3, [r7, #112]	@ 0x70
 800a99e:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800a9a0:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800a9a4:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800a9a8:	687b      	ldr	r3, [r7, #4]
 800a9aa:	681b      	ldr	r3, [r3, #0]
 800a9ac:	461a      	mov	r2, r3
 800a9ae:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800a9b2:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800a9b6:	67fa      	str	r2, [r7, #124]	@ 0x7c
 800a9b8:	6ff9      	ldr	r1, [r7, #124]	@ 0x7c
 800a9ba:	f8d7 2080 	ldr.w	r2, [r7, #128]	@ 0x80
 800a9be:	e841 2300 	strex	r3, r2, [r1]
 800a9c2:	67bb      	str	r3, [r7, #120]	@ 0x78
 800a9c4:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800a9c6:	2b00      	cmp	r3, #0
 800a9c8:	d1e2      	bne.n	800a990 <UART_RxISR_16BIT_FIFOEN+0x154>
 800a9ca:	687b      	ldr	r3, [r7, #4]
 800a9cc:	681b      	ldr	r3, [r3, #0]
 800a9ce:	3308      	adds	r3, #8
 800a9d0:	663b      	str	r3, [r7, #96]	@ 0x60
 800a9d2:	6e3b      	ldr	r3, [r7, #96]	@ 0x60
 800a9d4:	e853 3f00 	ldrex	r3, [r3]
 800a9d8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 800a9da:	6dfa      	ldr	r2, [r7, #92]	@ 0x5c
 800a9dc:	4b6f      	ldr	r3, [pc, #444]	@ (800ab9c <UART_RxISR_16BIT_FIFOEN+0x360>)
 800a9de:	4013      	ands	r3, r2
 800a9e0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800a9e4:	687b      	ldr	r3, [r7, #4]
 800a9e6:	681b      	ldr	r3, [r3, #0]
 800a9e8:	3308      	adds	r3, #8
 800a9ea:	f8d7 2098 	ldr.w	r2, [r7, #152]	@ 0x98
 800a9ee:	66fa      	str	r2, [r7, #108]	@ 0x6c
 800a9f0:	66bb      	str	r3, [r7, #104]	@ 0x68
 800a9f2:	6eb9      	ldr	r1, [r7, #104]	@ 0x68
 800a9f4:	6efa      	ldr	r2, [r7, #108]	@ 0x6c
 800a9f6:	e841 2300 	strex	r3, r2, [r1]
 800a9fa:	667b      	str	r3, [r7, #100]	@ 0x64
 800a9fc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800a9fe:	2b00      	cmp	r3, #0
 800aa00:	d1e3      	bne.n	800a9ca <UART_RxISR_16BIT_FIFOEN+0x18e>
 800aa02:	687b      	ldr	r3, [r7, #4]
 800aa04:	2220      	movs	r2, #32
 800aa06:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
 800aa0a:	687b      	ldr	r3, [r7, #4]
 800aa0c:	2200      	movs	r2, #0
 800aa0e:	675a      	str	r2, [r3, #116]	@ 0x74
 800aa10:	687b      	ldr	r3, [r7, #4]
 800aa12:	2200      	movs	r2, #0
 800aa14:	671a      	str	r2, [r3, #112]	@ 0x70
 800aa16:	687b      	ldr	r3, [r7, #4]
 800aa18:	681b      	ldr	r3, [r3, #0]
 800aa1a:	4a61      	ldr	r2, [pc, #388]	@ (800aba0 <UART_RxISR_16BIT_FIFOEN+0x364>)
 800aa1c:	4293      	cmp	r3, r2
 800aa1e:	d021      	beq.n	800aa64 <UART_RxISR_16BIT_FIFOEN+0x228>
 800aa20:	687b      	ldr	r3, [r7, #4]
 800aa22:	681b      	ldr	r3, [r3, #0]
 800aa24:	685b      	ldr	r3, [r3, #4]
 800aa26:	f403 0300 	and.w	r3, r3, #8388608	@ 0x800000
 800aa2a:	2b00      	cmp	r3, #0
 800aa2c:	d01a      	beq.n	800aa64 <UART_RxISR_16BIT_FIFOEN+0x228>
 800aa2e:	687b      	ldr	r3, [r7, #4]
 800aa30:	681b      	ldr	r3, [r3, #0]
 800aa32:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800aa34:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800aa36:	e853 3f00 	ldrex	r3, [r3]
 800aa3a:	64bb      	str	r3, [r7, #72]	@ 0x48
 800aa3c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800aa3e:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800aa42:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 800aa46:	687b      	ldr	r3, [r7, #4]
 800aa48:	681b      	ldr	r3, [r3, #0]
 800aa4a:	461a      	mov	r2, r3
 800aa4c:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800aa50:	65bb      	str	r3, [r7, #88]	@ 0x58
 800aa52:	657a      	str	r2, [r7, #84]	@ 0x54
 800aa54:	6d79      	ldr	r1, [r7, #84]	@ 0x54
 800aa56:	6dba      	ldr	r2, [r7, #88]	@ 0x58
 800aa58:	e841 2300 	strex	r3, r2, [r1]
 800aa5c:	653b      	str	r3, [r7, #80]	@ 0x50
 800aa5e:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800aa60:	2b00      	cmp	r3, #0
 800aa62:	d1e4      	bne.n	800aa2e <UART_RxISR_16BIT_FIFOEN+0x1f2>
 800aa64:	687b      	ldr	r3, [r7, #4]
 800aa66:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800aa68:	2b01      	cmp	r3, #1
 800aa6a:	d130      	bne.n	800aace <UART_RxISR_16BIT_FIFOEN+0x292>
 800aa6c:	687b      	ldr	r3, [r7, #4]
 800aa6e:	2200      	movs	r2, #0
 800aa70:	66da      	str	r2, [r3, #108]	@ 0x6c
 800aa72:	687b      	ldr	r3, [r7, #4]
 800aa74:	681b      	ldr	r3, [r3, #0]
 800aa76:	63bb      	str	r3, [r7, #56]	@ 0x38
 800aa78:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800aa7a:	e853 3f00 	ldrex	r3, [r3]
 800aa7e:	637b      	str	r3, [r7, #52]	@ 0x34
 800aa80:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800aa82:	f023 0310 	bic.w	r3, r3, #16
 800aa86:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800aa8a:	687b      	ldr	r3, [r7, #4]
 800aa8c:	681b      	ldr	r3, [r3, #0]
 800aa8e:	461a      	mov	r2, r3
 800aa90:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800aa94:	647b      	str	r3, [r7, #68]	@ 0x44
 800aa96:	643a      	str	r2, [r7, #64]	@ 0x40
 800aa98:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800aa9a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800aa9c:	e841 2300 	strex	r3, r2, [r1]
 800aaa0:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800aaa2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800aaa4:	2b00      	cmp	r3, #0
 800aaa6:	d1e4      	bne.n	800aa72 <UART_RxISR_16BIT_FIFOEN+0x236>
 800aaa8:	687b      	ldr	r3, [r7, #4]
 800aaaa:	681b      	ldr	r3, [r3, #0]
 800aaac:	69db      	ldr	r3, [r3, #28]
 800aaae:	f003 0310 	and.w	r3, r3, #16
 800aab2:	2b10      	cmp	r3, #16
 800aab4:	d103      	bne.n	800aabe <UART_RxISR_16BIT_FIFOEN+0x282>
 800aab6:	687b      	ldr	r3, [r7, #4]
 800aab8:	681b      	ldr	r3, [r3, #0]
 800aaba:	2210      	movs	r2, #16
 800aabc:	621a      	str	r2, [r3, #32]
 800aabe:	687b      	ldr	r3, [r7, #4]
 800aac0:	f8b3 305c 	ldrh.w	r3, [r3, #92]	@ 0x5c
 800aac4:	4619      	mov	r1, r3
 800aac6:	6878      	ldr	r0, [r7, #4]
 800aac8:	f7fe f956 	bl	8008d78 <HAL_UARTEx_RxEventCallback>
 800aacc:	e00e      	b.n	800aaec <UART_RxISR_16BIT_FIFOEN+0x2b0>
 800aace:	6878      	ldr	r0, [r7, #4]
 800aad0:	f7f5 ff06 	bl	80008e0 <HAL_UART_RxCpltCallback>
 800aad4:	e00a      	b.n	800aaec <UART_RxISR_16BIT_FIFOEN+0x2b0>
 800aad6:	f8b7 30a6 	ldrh.w	r3, [r7, #166]	@ 0xa6
 800aada:	2b00      	cmp	r3, #0
 800aadc:	d006      	beq.n	800aaec <UART_RxISR_16BIT_FIFOEN+0x2b0>
 800aade:	f8d7 30b4 	ldr.w	r3, [r7, #180]	@ 0xb4
 800aae2:	f003 0320 	and.w	r3, r3, #32
 800aae6:	2b00      	cmp	r3, #0
 800aae8:	f47f aecc 	bne.w	800a884 <UART_RxISR_16BIT_FIFOEN+0x48>
 800aaec:	687b      	ldr	r3, [r7, #4]
 800aaee:	f8b3 305e 	ldrh.w	r3, [r3, #94]	@ 0x5e
 800aaf2:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
 800aaf6:	f8b7 308e 	ldrh.w	r3, [r7, #142]	@ 0x8e
 800aafa:	2b00      	cmp	r3, #0
 800aafc:	d049      	beq.n	800ab92 <UART_RxISR_16BIT_FIFOEN+0x356>
 800aafe:	687b      	ldr	r3, [r7, #4]
 800ab00:	f8b3 3068 	ldrh.w	r3, [r3, #104]	@ 0x68
 800ab04:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800ab08:	429a      	cmp	r2, r3
 800ab0a:	d242      	bcs.n	800ab92 <UART_RxISR_16BIT_FIFOEN+0x356>
 800ab0c:	687b      	ldr	r3, [r7, #4]
 800ab0e:	681b      	ldr	r3, [r3, #0]
 800ab10:	3308      	adds	r3, #8
 800ab12:	627b      	str	r3, [r7, #36]	@ 0x24
 800ab14:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ab16:	e853 3f00 	ldrex	r3, [r3]
 800ab1a:	623b      	str	r3, [r7, #32]
 800ab1c:	6a3b      	ldr	r3, [r7, #32]
 800ab1e:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 800ab22:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800ab26:	687b      	ldr	r3, [r7, #4]
 800ab28:	681b      	ldr	r3, [r3, #0]
 800ab2a:	3308      	adds	r3, #8
 800ab2c:	f8d7 2088 	ldr.w	r2, [r7, #136]	@ 0x88
 800ab30:	633a      	str	r2, [r7, #48]	@ 0x30
 800ab32:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800ab34:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800ab36:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800ab38:	e841 2300 	strex	r3, r2, [r1]
 800ab3c:	62bb      	str	r3, [r7, #40]	@ 0x28
 800ab3e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800ab40:	2b00      	cmp	r3, #0
 800ab42:	d1e3      	bne.n	800ab0c <UART_RxISR_16BIT_FIFOEN+0x2d0>
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	4a17      	ldr	r2, [pc, #92]	@ (800aba4 <UART_RxISR_16BIT_FIFOEN+0x368>)
 800ab48:	675a      	str	r2, [r3, #116]	@ 0x74
 800ab4a:	687b      	ldr	r3, [r7, #4]
 800ab4c:	681b      	ldr	r3, [r3, #0]
 800ab4e:	613b      	str	r3, [r7, #16]
 800ab50:	693b      	ldr	r3, [r7, #16]
 800ab52:	e853 3f00 	ldrex	r3, [r3]
 800ab56:	60fb      	str	r3, [r7, #12]
 800ab58:	68fb      	ldr	r3, [r7, #12]
 800ab5a:	f043 0320 	orr.w	r3, r3, #32
 800ab5e:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 800ab62:	687b      	ldr	r3, [r7, #4]
 800ab64:	681b      	ldr	r3, [r3, #0]
 800ab66:	461a      	mov	r2, r3
 800ab68:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800ab6c:	61fb      	str	r3, [r7, #28]
 800ab6e:	61ba      	str	r2, [r7, #24]
 800ab70:	69b9      	ldr	r1, [r7, #24]
 800ab72:	69fa      	ldr	r2, [r7, #28]
 800ab74:	e841 2300 	strex	r3, r2, [r1]
 800ab78:	617b      	str	r3, [r7, #20]
 800ab7a:	697b      	ldr	r3, [r7, #20]
 800ab7c:	2b00      	cmp	r3, #0
 800ab7e:	d1e4      	bne.n	800ab4a <UART_RxISR_16BIT_FIFOEN+0x30e>
 800ab80:	e007      	b.n	800ab92 <UART_RxISR_16BIT_FIFOEN+0x356>
 800ab82:	687b      	ldr	r3, [r7, #4]
 800ab84:	681b      	ldr	r3, [r3, #0]
 800ab86:	699a      	ldr	r2, [r3, #24]
 800ab88:	687b      	ldr	r3, [r7, #4]
 800ab8a:	681b      	ldr	r3, [r3, #0]
 800ab8c:	f042 0208 	orr.w	r2, r2, #8
 800ab90:	619a      	str	r2, [r3, #24]
 800ab92:	bf00      	nop
 800ab94:	37b8      	adds	r7, #184	@ 0xb8
 800ab96:	46bd      	mov	sp, r7
 800ab98:	bd80      	pop	{r7, pc}
 800ab9a:	bf00      	nop
 800ab9c:	effffffe 	.word	0xeffffffe
 800aba0:	58000c00 	.word	0x58000c00
 800aba4:	0800a321 	.word	0x0800a321

0800aba8 <HAL_UARTEx_WakeupCallback>:
 800aba8:	b480      	push	{r7}
 800abaa:	b083      	sub	sp, #12
 800abac:	af00      	add	r7, sp, #0
 800abae:	6078      	str	r0, [r7, #4]
 800abb0:	bf00      	nop
 800abb2:	370c      	adds	r7, #12
 800abb4:	46bd      	mov	sp, r7
 800abb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abba:	4770      	bx	lr

0800abbc <HAL_UARTEx_RxFifoFullCallback>:
 800abbc:	b480      	push	{r7}
 800abbe:	b083      	sub	sp, #12
 800abc0:	af00      	add	r7, sp, #0
 800abc2:	6078      	str	r0, [r7, #4]
 800abc4:	bf00      	nop
 800abc6:	370c      	adds	r7, #12
 800abc8:	46bd      	mov	sp, r7
 800abca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abce:	4770      	bx	lr

0800abd0 <HAL_UARTEx_TxFifoEmptyCallback>:
 800abd0:	b480      	push	{r7}
 800abd2:	b083      	sub	sp, #12
 800abd4:	af00      	add	r7, sp, #0
 800abd6:	6078      	str	r0, [r7, #4]
 800abd8:	bf00      	nop
 800abda:	370c      	adds	r7, #12
 800abdc:	46bd      	mov	sp, r7
 800abde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800abe2:	4770      	bx	lr

0800abe4 <HAL_UARTEx_DisableFifoMode>:
 800abe4:	b480      	push	{r7}
 800abe6:	b085      	sub	sp, #20
 800abe8:	af00      	add	r7, sp, #0
 800abea:	6078      	str	r0, [r7, #4]
 800abec:	687b      	ldr	r3, [r7, #4]
 800abee:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800abf2:	2b01      	cmp	r3, #1
 800abf4:	d101      	bne.n	800abfa <HAL_UARTEx_DisableFifoMode+0x16>
 800abf6:	2302      	movs	r3, #2
 800abf8:	e027      	b.n	800ac4a <HAL_UARTEx_DisableFifoMode+0x66>
 800abfa:	687b      	ldr	r3, [r7, #4]
 800abfc:	2201      	movs	r2, #1
 800abfe:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800ac02:	687b      	ldr	r3, [r7, #4]
 800ac04:	2224      	movs	r2, #36	@ 0x24
 800ac06:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800ac0a:	687b      	ldr	r3, [r7, #4]
 800ac0c:	681b      	ldr	r3, [r3, #0]
 800ac0e:	681b      	ldr	r3, [r3, #0]
 800ac10:	60fb      	str	r3, [r7, #12]
 800ac12:	687b      	ldr	r3, [r7, #4]
 800ac14:	681b      	ldr	r3, [r3, #0]
 800ac16:	681a      	ldr	r2, [r3, #0]
 800ac18:	687b      	ldr	r3, [r7, #4]
 800ac1a:	681b      	ldr	r3, [r3, #0]
 800ac1c:	f022 0201 	bic.w	r2, r2, #1
 800ac20:	601a      	str	r2, [r3, #0]
 800ac22:	68fb      	ldr	r3, [r7, #12]
 800ac24:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 800ac28:	60fb      	str	r3, [r7, #12]
 800ac2a:	687b      	ldr	r3, [r7, #4]
 800ac2c:	2200      	movs	r2, #0
 800ac2e:	665a      	str	r2, [r3, #100]	@ 0x64
 800ac30:	687b      	ldr	r3, [r7, #4]
 800ac32:	681b      	ldr	r3, [r3, #0]
 800ac34:	68fa      	ldr	r2, [r7, #12]
 800ac36:	601a      	str	r2, [r3, #0]
 800ac38:	687b      	ldr	r3, [r7, #4]
 800ac3a:	2220      	movs	r2, #32
 800ac3c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800ac40:	687b      	ldr	r3, [r7, #4]
 800ac42:	2200      	movs	r2, #0
 800ac44:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800ac48:	2300      	movs	r3, #0
 800ac4a:	4618      	mov	r0, r3
 800ac4c:	3714      	adds	r7, #20
 800ac4e:	46bd      	mov	sp, r7
 800ac50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac54:	4770      	bx	lr

0800ac56 <HAL_UARTEx_SetTxFifoThreshold>:
 800ac56:	b580      	push	{r7, lr}
 800ac58:	b084      	sub	sp, #16
 800ac5a:	af00      	add	r7, sp, #0
 800ac5c:	6078      	str	r0, [r7, #4]
 800ac5e:	6039      	str	r1, [r7, #0]
 800ac60:	687b      	ldr	r3, [r7, #4]
 800ac62:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800ac66:	2b01      	cmp	r3, #1
 800ac68:	d101      	bne.n	800ac6e <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800ac6a:	2302      	movs	r3, #2
 800ac6c:	e02d      	b.n	800acca <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800ac6e:	687b      	ldr	r3, [r7, #4]
 800ac70:	2201      	movs	r2, #1
 800ac72:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800ac76:	687b      	ldr	r3, [r7, #4]
 800ac78:	2224      	movs	r2, #36	@ 0x24
 800ac7a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800ac7e:	687b      	ldr	r3, [r7, #4]
 800ac80:	681b      	ldr	r3, [r3, #0]
 800ac82:	681b      	ldr	r3, [r3, #0]
 800ac84:	60fb      	str	r3, [r7, #12]
 800ac86:	687b      	ldr	r3, [r7, #4]
 800ac88:	681b      	ldr	r3, [r3, #0]
 800ac8a:	681a      	ldr	r2, [r3, #0]
 800ac8c:	687b      	ldr	r3, [r7, #4]
 800ac8e:	681b      	ldr	r3, [r3, #0]
 800ac90:	f022 0201 	bic.w	r2, r2, #1
 800ac94:	601a      	str	r2, [r3, #0]
 800ac96:	687b      	ldr	r3, [r7, #4]
 800ac98:	681b      	ldr	r3, [r3, #0]
 800ac9a:	689b      	ldr	r3, [r3, #8]
 800ac9c:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 800aca0:	687b      	ldr	r3, [r7, #4]
 800aca2:	681b      	ldr	r3, [r3, #0]
 800aca4:	683a      	ldr	r2, [r7, #0]
 800aca6:	430a      	orrs	r2, r1
 800aca8:	609a      	str	r2, [r3, #8]
 800acaa:	6878      	ldr	r0, [r7, #4]
 800acac:	f000 f850 	bl	800ad50 <UARTEx_SetNbDataToProcess>
 800acb0:	687b      	ldr	r3, [r7, #4]
 800acb2:	681b      	ldr	r3, [r3, #0]
 800acb4:	68fa      	ldr	r2, [r7, #12]
 800acb6:	601a      	str	r2, [r3, #0]
 800acb8:	687b      	ldr	r3, [r7, #4]
 800acba:	2220      	movs	r2, #32
 800acbc:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800acc0:	687b      	ldr	r3, [r7, #4]
 800acc2:	2200      	movs	r2, #0
 800acc4:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800acc8:	2300      	movs	r3, #0
 800acca:	4618      	mov	r0, r3
 800accc:	3710      	adds	r7, #16
 800acce:	46bd      	mov	sp, r7
 800acd0:	bd80      	pop	{r7, pc}

0800acd2 <HAL_UARTEx_SetRxFifoThreshold>:
 800acd2:	b580      	push	{r7, lr}
 800acd4:	b084      	sub	sp, #16
 800acd6:	af00      	add	r7, sp, #0
 800acd8:	6078      	str	r0, [r7, #4]
 800acda:	6039      	str	r1, [r7, #0]
 800acdc:	687b      	ldr	r3, [r7, #4]
 800acde:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800ace2:	2b01      	cmp	r3, #1
 800ace4:	d101      	bne.n	800acea <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800ace6:	2302      	movs	r3, #2
 800ace8:	e02d      	b.n	800ad46 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800acea:	687b      	ldr	r3, [r7, #4]
 800acec:	2201      	movs	r2, #1
 800acee:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800acf2:	687b      	ldr	r3, [r7, #4]
 800acf4:	2224      	movs	r2, #36	@ 0x24
 800acf6:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800acfa:	687b      	ldr	r3, [r7, #4]
 800acfc:	681b      	ldr	r3, [r3, #0]
 800acfe:	681b      	ldr	r3, [r3, #0]
 800ad00:	60fb      	str	r3, [r7, #12]
 800ad02:	687b      	ldr	r3, [r7, #4]
 800ad04:	681b      	ldr	r3, [r3, #0]
 800ad06:	681a      	ldr	r2, [r3, #0]
 800ad08:	687b      	ldr	r3, [r7, #4]
 800ad0a:	681b      	ldr	r3, [r3, #0]
 800ad0c:	f022 0201 	bic.w	r2, r2, #1
 800ad10:	601a      	str	r2, [r3, #0]
 800ad12:	687b      	ldr	r3, [r7, #4]
 800ad14:	681b      	ldr	r3, [r3, #0]
 800ad16:	689b      	ldr	r3, [r3, #8]
 800ad18:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 800ad1c:	687b      	ldr	r3, [r7, #4]
 800ad1e:	681b      	ldr	r3, [r3, #0]
 800ad20:	683a      	ldr	r2, [r7, #0]
 800ad22:	430a      	orrs	r2, r1
 800ad24:	609a      	str	r2, [r3, #8]
 800ad26:	6878      	ldr	r0, [r7, #4]
 800ad28:	f000 f812 	bl	800ad50 <UARTEx_SetNbDataToProcess>
 800ad2c:	687b      	ldr	r3, [r7, #4]
 800ad2e:	681b      	ldr	r3, [r3, #0]
 800ad30:	68fa      	ldr	r2, [r7, #12]
 800ad32:	601a      	str	r2, [r3, #0]
 800ad34:	687b      	ldr	r3, [r7, #4]
 800ad36:	2220      	movs	r2, #32
 800ad38:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 800ad3c:	687b      	ldr	r3, [r7, #4]
 800ad3e:	2200      	movs	r2, #0
 800ad40:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84
 800ad44:	2300      	movs	r3, #0
 800ad46:	4618      	mov	r0, r3
 800ad48:	3710      	adds	r7, #16
 800ad4a:	46bd      	mov	sp, r7
 800ad4c:	bd80      	pop	{r7, pc}
	...

0800ad50 <UARTEx_SetNbDataToProcess>:
 800ad50:	b480      	push	{r7}
 800ad52:	b085      	sub	sp, #20
 800ad54:	af00      	add	r7, sp, #0
 800ad56:	6078      	str	r0, [r7, #4]
 800ad58:	687b      	ldr	r3, [r7, #4]
 800ad5a:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800ad5c:	2b00      	cmp	r3, #0
 800ad5e:	d108      	bne.n	800ad72 <UARTEx_SetNbDataToProcess+0x22>
 800ad60:	687b      	ldr	r3, [r7, #4]
 800ad62:	2201      	movs	r2, #1
 800ad64:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800ad68:	687b      	ldr	r3, [r7, #4]
 800ad6a:	2201      	movs	r2, #1
 800ad6c:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800ad70:	e031      	b.n	800add6 <UARTEx_SetNbDataToProcess+0x86>
 800ad72:	2310      	movs	r3, #16
 800ad74:	73fb      	strb	r3, [r7, #15]
 800ad76:	2310      	movs	r3, #16
 800ad78:	73bb      	strb	r3, [r7, #14]
 800ad7a:	687b      	ldr	r3, [r7, #4]
 800ad7c:	681b      	ldr	r3, [r3, #0]
 800ad7e:	689b      	ldr	r3, [r3, #8]
 800ad80:	0e5b      	lsrs	r3, r3, #25
 800ad82:	b2db      	uxtb	r3, r3
 800ad84:	f003 0307 	and.w	r3, r3, #7
 800ad88:	737b      	strb	r3, [r7, #13]
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	681b      	ldr	r3, [r3, #0]
 800ad8e:	689b      	ldr	r3, [r3, #8]
 800ad90:	0f5b      	lsrs	r3, r3, #29
 800ad92:	b2db      	uxtb	r3, r3
 800ad94:	f003 0307 	and.w	r3, r3, #7
 800ad98:	733b      	strb	r3, [r7, #12]
 800ad9a:	7bbb      	ldrb	r3, [r7, #14]
 800ad9c:	7b3a      	ldrb	r2, [r7, #12]
 800ad9e:	4911      	ldr	r1, [pc, #68]	@ (800ade4 <UARTEx_SetNbDataToProcess+0x94>)
 800ada0:	5c8a      	ldrb	r2, [r1, r2]
 800ada2:	fb02 f303 	mul.w	r3, r2, r3
 800ada6:	7b3a      	ldrb	r2, [r7, #12]
 800ada8:	490f      	ldr	r1, [pc, #60]	@ (800ade8 <UARTEx_SetNbDataToProcess+0x98>)
 800adaa:	5c8a      	ldrb	r2, [r1, r2]
 800adac:	fb93 f3f2 	sdiv	r3, r3, r2
 800adb0:	b29a      	uxth	r2, r3
 800adb2:	687b      	ldr	r3, [r7, #4]
 800adb4:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
 800adb8:	7bfb      	ldrb	r3, [r7, #15]
 800adba:	7b7a      	ldrb	r2, [r7, #13]
 800adbc:	4909      	ldr	r1, [pc, #36]	@ (800ade4 <UARTEx_SetNbDataToProcess+0x94>)
 800adbe:	5c8a      	ldrb	r2, [r1, r2]
 800adc0:	fb02 f303 	mul.w	r3, r2, r3
 800adc4:	7b7a      	ldrb	r2, [r7, #13]
 800adc6:	4908      	ldr	r1, [pc, #32]	@ (800ade8 <UARTEx_SetNbDataToProcess+0x98>)
 800adc8:	5c8a      	ldrb	r2, [r1, r2]
 800adca:	fb93 f3f2 	sdiv	r3, r3, r2
 800adce:	b29a      	uxth	r2, r3
 800add0:	687b      	ldr	r3, [r7, #4]
 800add2:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
 800add6:	bf00      	nop
 800add8:	3714      	adds	r7, #20
 800adda:	46bd      	mov	sp, r7
 800addc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ade0:	4770      	bx	lr
 800ade2:	bf00      	nop
 800ade4:	0800de58 	.word	0x0800de58
 800ade8:	0800de60 	.word	0x0800de60

0800adec <__cvt>:
 800adec:	b5f0      	push	{r4, r5, r6, r7, lr}
 800adee:	ed2d 8b02 	vpush	{d8}
 800adf2:	eeb0 8b40 	vmov.f64	d8, d0
 800adf6:	b085      	sub	sp, #20
 800adf8:	4617      	mov	r7, r2
 800adfa:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 800adfc:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800adfe:	ee18 2a90 	vmov	r2, s17
 800ae02:	f025 0520 	bic.w	r5, r5, #32
 800ae06:	2a00      	cmp	r2, #0
 800ae08:	bfb6      	itet	lt
 800ae0a:	222d      	movlt	r2, #45	@ 0x2d
 800ae0c:	2200      	movge	r2, #0
 800ae0e:	eeb1 8b40 	vneglt.f64	d8, d0
 800ae12:	2d46      	cmp	r5, #70	@ 0x46
 800ae14:	460c      	mov	r4, r1
 800ae16:	701a      	strb	r2, [r3, #0]
 800ae18:	d004      	beq.n	800ae24 <__cvt+0x38>
 800ae1a:	2d45      	cmp	r5, #69	@ 0x45
 800ae1c:	d100      	bne.n	800ae20 <__cvt+0x34>
 800ae1e:	3401      	adds	r4, #1
 800ae20:	2102      	movs	r1, #2
 800ae22:	e000      	b.n	800ae26 <__cvt+0x3a>
 800ae24:	2103      	movs	r1, #3
 800ae26:	ab03      	add	r3, sp, #12
 800ae28:	9301      	str	r3, [sp, #4]
 800ae2a:	ab02      	add	r3, sp, #8
 800ae2c:	9300      	str	r3, [sp, #0]
 800ae2e:	4622      	mov	r2, r4
 800ae30:	4633      	mov	r3, r6
 800ae32:	eeb0 0b48 	vmov.f64	d0, d8
 800ae36:	f000 fe17 	bl	800ba68 <_dtoa_r>
 800ae3a:	2d47      	cmp	r5, #71	@ 0x47
 800ae3c:	d114      	bne.n	800ae68 <__cvt+0x7c>
 800ae3e:	07fb      	lsls	r3, r7, #31
 800ae40:	d50a      	bpl.n	800ae58 <__cvt+0x6c>
 800ae42:	1902      	adds	r2, r0, r4
 800ae44:	eeb5 8b40 	vcmp.f64	d8, #0.0
 800ae48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ae4c:	bf08      	it	eq
 800ae4e:	9203      	streq	r2, [sp, #12]
 800ae50:	2130      	movs	r1, #48	@ 0x30
 800ae52:	9b03      	ldr	r3, [sp, #12]
 800ae54:	4293      	cmp	r3, r2
 800ae56:	d319      	bcc.n	800ae8c <__cvt+0xa0>
 800ae58:	9b03      	ldr	r3, [sp, #12]
 800ae5a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800ae5c:	1a1b      	subs	r3, r3, r0
 800ae5e:	6013      	str	r3, [r2, #0]
 800ae60:	b005      	add	sp, #20
 800ae62:	ecbd 8b02 	vpop	{d8}
 800ae66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ae68:	2d46      	cmp	r5, #70	@ 0x46
 800ae6a:	eb00 0204 	add.w	r2, r0, r4
 800ae6e:	d1e9      	bne.n	800ae44 <__cvt+0x58>
 800ae70:	7803      	ldrb	r3, [r0, #0]
 800ae72:	2b30      	cmp	r3, #48	@ 0x30
 800ae74:	d107      	bne.n	800ae86 <__cvt+0x9a>
 800ae76:	eeb5 8b40 	vcmp.f64	d8, #0.0
 800ae7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ae7e:	bf1c      	itt	ne
 800ae80:	f1c4 0401 	rsbne	r4, r4, #1
 800ae84:	6034      	strne	r4, [r6, #0]
 800ae86:	6833      	ldr	r3, [r6, #0]
 800ae88:	441a      	add	r2, r3
 800ae8a:	e7db      	b.n	800ae44 <__cvt+0x58>
 800ae8c:	1c5c      	adds	r4, r3, #1
 800ae8e:	9403      	str	r4, [sp, #12]
 800ae90:	7019      	strb	r1, [r3, #0]
 800ae92:	e7de      	b.n	800ae52 <__cvt+0x66>

0800ae94 <__exponent>:
 800ae94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ae96:	2900      	cmp	r1, #0
 800ae98:	bfba      	itte	lt
 800ae9a:	4249      	neglt	r1, r1
 800ae9c:	232d      	movlt	r3, #45	@ 0x2d
 800ae9e:	232b      	movge	r3, #43	@ 0x2b
 800aea0:	2909      	cmp	r1, #9
 800aea2:	7002      	strb	r2, [r0, #0]
 800aea4:	7043      	strb	r3, [r0, #1]
 800aea6:	dd29      	ble.n	800aefc <__exponent+0x68>
 800aea8:	f10d 0307 	add.w	r3, sp, #7
 800aeac:	461d      	mov	r5, r3
 800aeae:	270a      	movs	r7, #10
 800aeb0:	461a      	mov	r2, r3
 800aeb2:	fbb1 f6f7 	udiv	r6, r1, r7
 800aeb6:	fb07 1416 	mls	r4, r7, r6, r1
 800aeba:	3430      	adds	r4, #48	@ 0x30
 800aebc:	f802 4c01 	strb.w	r4, [r2, #-1]
 800aec0:	460c      	mov	r4, r1
 800aec2:	2c63      	cmp	r4, #99	@ 0x63
 800aec4:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 800aec8:	4631      	mov	r1, r6
 800aeca:	dcf1      	bgt.n	800aeb0 <__exponent+0x1c>
 800aecc:	3130      	adds	r1, #48	@ 0x30
 800aece:	1e94      	subs	r4, r2, #2
 800aed0:	f803 1c01 	strb.w	r1, [r3, #-1]
 800aed4:	1c41      	adds	r1, r0, #1
 800aed6:	4623      	mov	r3, r4
 800aed8:	42ab      	cmp	r3, r5
 800aeda:	d30a      	bcc.n	800aef2 <__exponent+0x5e>
 800aedc:	f10d 0309 	add.w	r3, sp, #9
 800aee0:	1a9b      	subs	r3, r3, r2
 800aee2:	42ac      	cmp	r4, r5
 800aee4:	bf88      	it	hi
 800aee6:	2300      	movhi	r3, #0
 800aee8:	3302      	adds	r3, #2
 800aeea:	4403      	add	r3, r0
 800aeec:	1a18      	subs	r0, r3, r0
 800aeee:	b003      	add	sp, #12
 800aef0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800aef2:	f813 6b01 	ldrb.w	r6, [r3], #1
 800aef6:	f801 6f01 	strb.w	r6, [r1, #1]!
 800aefa:	e7ed      	b.n	800aed8 <__exponent+0x44>
 800aefc:	2330      	movs	r3, #48	@ 0x30
 800aefe:	3130      	adds	r1, #48	@ 0x30
 800af00:	7083      	strb	r3, [r0, #2]
 800af02:	70c1      	strb	r1, [r0, #3]
 800af04:	1d03      	adds	r3, r0, #4
 800af06:	e7f1      	b.n	800aeec <__exponent+0x58>

0800af08 <_printf_float>:
 800af08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af0c:	b08d      	sub	sp, #52	@ 0x34
 800af0e:	460c      	mov	r4, r1
 800af10:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 800af14:	4616      	mov	r6, r2
 800af16:	461f      	mov	r7, r3
 800af18:	4605      	mov	r5, r0
 800af1a:	f000 fd0b 	bl	800b934 <_localeconv_r>
 800af1e:	f8d0 b000 	ldr.w	fp, [r0]
 800af22:	4658      	mov	r0, fp
 800af24:	f7f5 fa54 	bl	80003d0 <strlen>
 800af28:	2300      	movs	r3, #0
 800af2a:	930a      	str	r3, [sp, #40]	@ 0x28
 800af2c:	f8d8 3000 	ldr.w	r3, [r8]
 800af30:	f894 9018 	ldrb.w	r9, [r4, #24]
 800af34:	6822      	ldr	r2, [r4, #0]
 800af36:	9005      	str	r0, [sp, #20]
 800af38:	3307      	adds	r3, #7
 800af3a:	f023 0307 	bic.w	r3, r3, #7
 800af3e:	f103 0108 	add.w	r1, r3, #8
 800af42:	f8c8 1000 	str.w	r1, [r8]
 800af46:	ed93 0b00 	vldr	d0, [r3]
 800af4a:	ed9f 6b97 	vldr	d6, [pc, #604]	@ 800b1a8 <_printf_float+0x2a0>
 800af4e:	eeb0 7bc0 	vabs.f64	d7, d0
 800af52:	eeb4 7b46 	vcmp.f64	d7, d6
 800af56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af5a:	ed84 0b12 	vstr	d0, [r4, #72]	@ 0x48
 800af5e:	dd24      	ble.n	800afaa <_printf_float+0xa2>
 800af60:	eeb5 0bc0 	vcmpe.f64	d0, #0.0
 800af64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af68:	d502      	bpl.n	800af70 <_printf_float+0x68>
 800af6a:	232d      	movs	r3, #45	@ 0x2d
 800af6c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800af70:	498f      	ldr	r1, [pc, #572]	@ (800b1b0 <_printf_float+0x2a8>)
 800af72:	4b90      	ldr	r3, [pc, #576]	@ (800b1b4 <_printf_float+0x2ac>)
 800af74:	f1b9 0f47 	cmp.w	r9, #71	@ 0x47
 800af78:	bf8c      	ite	hi
 800af7a:	4688      	movhi	r8, r1
 800af7c:	4698      	movls	r8, r3
 800af7e:	f022 0204 	bic.w	r2, r2, #4
 800af82:	2303      	movs	r3, #3
 800af84:	6123      	str	r3, [r4, #16]
 800af86:	6022      	str	r2, [r4, #0]
 800af88:	f04f 0a00 	mov.w	sl, #0
 800af8c:	9700      	str	r7, [sp, #0]
 800af8e:	4633      	mov	r3, r6
 800af90:	aa0b      	add	r2, sp, #44	@ 0x2c
 800af92:	4621      	mov	r1, r4
 800af94:	4628      	mov	r0, r5
 800af96:	f000 f9d1 	bl	800b33c <_printf_common>
 800af9a:	3001      	adds	r0, #1
 800af9c:	f040 8089 	bne.w	800b0b2 <_printf_float+0x1aa>
 800afa0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800afa4:	b00d      	add	sp, #52	@ 0x34
 800afa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800afaa:	eeb4 0b40 	vcmp.f64	d0, d0
 800afae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800afb2:	d709      	bvc.n	800afc8 <_printf_float+0xc0>
 800afb4:	ee10 3a90 	vmov	r3, s1
 800afb8:	2b00      	cmp	r3, #0
 800afba:	bfbc      	itt	lt
 800afbc:	232d      	movlt	r3, #45	@ 0x2d
 800afbe:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 800afc2:	497d      	ldr	r1, [pc, #500]	@ (800b1b8 <_printf_float+0x2b0>)
 800afc4:	4b7d      	ldr	r3, [pc, #500]	@ (800b1bc <_printf_float+0x2b4>)
 800afc6:	e7d5      	b.n	800af74 <_printf_float+0x6c>
 800afc8:	6863      	ldr	r3, [r4, #4]
 800afca:	1c59      	adds	r1, r3, #1
 800afcc:	f009 0adf 	and.w	sl, r9, #223	@ 0xdf
 800afd0:	d139      	bne.n	800b046 <_printf_float+0x13e>
 800afd2:	2306      	movs	r3, #6
 800afd4:	6063      	str	r3, [r4, #4]
 800afd6:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800afda:	2300      	movs	r3, #0
 800afdc:	6022      	str	r2, [r4, #0]
 800afde:	9303      	str	r3, [sp, #12]
 800afe0:	ab0a      	add	r3, sp, #40	@ 0x28
 800afe2:	e9cd 9301 	strd	r9, r3, [sp, #4]
 800afe6:	ab09      	add	r3, sp, #36	@ 0x24
 800afe8:	9300      	str	r3, [sp, #0]
 800afea:	6861      	ldr	r1, [r4, #4]
 800afec:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 800aff0:	4628      	mov	r0, r5
 800aff2:	f7ff fefb 	bl	800adec <__cvt>
 800aff6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800affa:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800affc:	4680      	mov	r8, r0
 800affe:	d129      	bne.n	800b054 <_printf_float+0x14c>
 800b000:	1cc8      	adds	r0, r1, #3
 800b002:	db02      	blt.n	800b00a <_printf_float+0x102>
 800b004:	6863      	ldr	r3, [r4, #4]
 800b006:	4299      	cmp	r1, r3
 800b008:	dd41      	ble.n	800b08e <_printf_float+0x186>
 800b00a:	f1a9 0902 	sub.w	r9, r9, #2
 800b00e:	fa5f f989 	uxtb.w	r9, r9
 800b012:	3901      	subs	r1, #1
 800b014:	464a      	mov	r2, r9
 800b016:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 800b01a:	9109      	str	r1, [sp, #36]	@ 0x24
 800b01c:	f7ff ff3a 	bl	800ae94 <__exponent>
 800b020:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800b022:	1813      	adds	r3, r2, r0
 800b024:	2a01      	cmp	r2, #1
 800b026:	4682      	mov	sl, r0
 800b028:	6123      	str	r3, [r4, #16]
 800b02a:	dc02      	bgt.n	800b032 <_printf_float+0x12a>
 800b02c:	6822      	ldr	r2, [r4, #0]
 800b02e:	07d2      	lsls	r2, r2, #31
 800b030:	d501      	bpl.n	800b036 <_printf_float+0x12e>
 800b032:	3301      	adds	r3, #1
 800b034:	6123      	str	r3, [r4, #16]
 800b036:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 800b03a:	2b00      	cmp	r3, #0
 800b03c:	d0a6      	beq.n	800af8c <_printf_float+0x84>
 800b03e:	232d      	movs	r3, #45	@ 0x2d
 800b040:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b044:	e7a2      	b.n	800af8c <_printf_float+0x84>
 800b046:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 800b04a:	d1c4      	bne.n	800afd6 <_printf_float+0xce>
 800b04c:	2b00      	cmp	r3, #0
 800b04e:	d1c2      	bne.n	800afd6 <_printf_float+0xce>
 800b050:	2301      	movs	r3, #1
 800b052:	e7bf      	b.n	800afd4 <_printf_float+0xcc>
 800b054:	f1b9 0f65 	cmp.w	r9, #101	@ 0x65
 800b058:	d9db      	bls.n	800b012 <_printf_float+0x10a>
 800b05a:	f1b9 0f66 	cmp.w	r9, #102	@ 0x66
 800b05e:	d118      	bne.n	800b092 <_printf_float+0x18a>
 800b060:	2900      	cmp	r1, #0
 800b062:	6863      	ldr	r3, [r4, #4]
 800b064:	dd0b      	ble.n	800b07e <_printf_float+0x176>
 800b066:	6121      	str	r1, [r4, #16]
 800b068:	b913      	cbnz	r3, 800b070 <_printf_float+0x168>
 800b06a:	6822      	ldr	r2, [r4, #0]
 800b06c:	07d0      	lsls	r0, r2, #31
 800b06e:	d502      	bpl.n	800b076 <_printf_float+0x16e>
 800b070:	3301      	adds	r3, #1
 800b072:	440b      	add	r3, r1
 800b074:	6123      	str	r3, [r4, #16]
 800b076:	65a1      	str	r1, [r4, #88]	@ 0x58
 800b078:	f04f 0a00 	mov.w	sl, #0
 800b07c:	e7db      	b.n	800b036 <_printf_float+0x12e>
 800b07e:	b913      	cbnz	r3, 800b086 <_printf_float+0x17e>
 800b080:	6822      	ldr	r2, [r4, #0]
 800b082:	07d2      	lsls	r2, r2, #31
 800b084:	d501      	bpl.n	800b08a <_printf_float+0x182>
 800b086:	3302      	adds	r3, #2
 800b088:	e7f4      	b.n	800b074 <_printf_float+0x16c>
 800b08a:	2301      	movs	r3, #1
 800b08c:	e7f2      	b.n	800b074 <_printf_float+0x16c>
 800b08e:	f04f 0967 	mov.w	r9, #103	@ 0x67
 800b092:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800b094:	4299      	cmp	r1, r3
 800b096:	db05      	blt.n	800b0a4 <_printf_float+0x19c>
 800b098:	6823      	ldr	r3, [r4, #0]
 800b09a:	6121      	str	r1, [r4, #16]
 800b09c:	07d8      	lsls	r0, r3, #31
 800b09e:	d5ea      	bpl.n	800b076 <_printf_float+0x16e>
 800b0a0:	1c4b      	adds	r3, r1, #1
 800b0a2:	e7e7      	b.n	800b074 <_printf_float+0x16c>
 800b0a4:	2900      	cmp	r1, #0
 800b0a6:	bfd4      	ite	le
 800b0a8:	f1c1 0202 	rsble	r2, r1, #2
 800b0ac:	2201      	movgt	r2, #1
 800b0ae:	4413      	add	r3, r2
 800b0b0:	e7e0      	b.n	800b074 <_printf_float+0x16c>
 800b0b2:	6823      	ldr	r3, [r4, #0]
 800b0b4:	055a      	lsls	r2, r3, #21
 800b0b6:	d407      	bmi.n	800b0c8 <_printf_float+0x1c0>
 800b0b8:	6923      	ldr	r3, [r4, #16]
 800b0ba:	4642      	mov	r2, r8
 800b0bc:	4631      	mov	r1, r6
 800b0be:	4628      	mov	r0, r5
 800b0c0:	47b8      	blx	r7
 800b0c2:	3001      	adds	r0, #1
 800b0c4:	d12a      	bne.n	800b11c <_printf_float+0x214>
 800b0c6:	e76b      	b.n	800afa0 <_printf_float+0x98>
 800b0c8:	f1b9 0f65 	cmp.w	r9, #101	@ 0x65
 800b0cc:	f240 80e0 	bls.w	800b290 <_printf_float+0x388>
 800b0d0:	ed94 7b12 	vldr	d7, [r4, #72]	@ 0x48
 800b0d4:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800b0d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b0dc:	d133      	bne.n	800b146 <_printf_float+0x23e>
 800b0de:	4a38      	ldr	r2, [pc, #224]	@ (800b1c0 <_printf_float+0x2b8>)
 800b0e0:	2301      	movs	r3, #1
 800b0e2:	4631      	mov	r1, r6
 800b0e4:	4628      	mov	r0, r5
 800b0e6:	47b8      	blx	r7
 800b0e8:	3001      	adds	r0, #1
 800b0ea:	f43f af59 	beq.w	800afa0 <_printf_float+0x98>
 800b0ee:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 800b0f2:	4543      	cmp	r3, r8
 800b0f4:	db02      	blt.n	800b0fc <_printf_float+0x1f4>
 800b0f6:	6823      	ldr	r3, [r4, #0]
 800b0f8:	07d8      	lsls	r0, r3, #31
 800b0fa:	d50f      	bpl.n	800b11c <_printf_float+0x214>
 800b0fc:	9b05      	ldr	r3, [sp, #20]
 800b0fe:	465a      	mov	r2, fp
 800b100:	4631      	mov	r1, r6
 800b102:	4628      	mov	r0, r5
 800b104:	47b8      	blx	r7
 800b106:	3001      	adds	r0, #1
 800b108:	f43f af4a 	beq.w	800afa0 <_printf_float+0x98>
 800b10c:	f04f 0900 	mov.w	r9, #0
 800b110:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800b114:	f104 0a1a 	add.w	sl, r4, #26
 800b118:	45c8      	cmp	r8, r9
 800b11a:	dc09      	bgt.n	800b130 <_printf_float+0x228>
 800b11c:	6823      	ldr	r3, [r4, #0]
 800b11e:	079b      	lsls	r3, r3, #30
 800b120:	f100 8107 	bmi.w	800b332 <_printf_float+0x42a>
 800b124:	68e0      	ldr	r0, [r4, #12]
 800b126:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800b128:	4298      	cmp	r0, r3
 800b12a:	bfb8      	it	lt
 800b12c:	4618      	movlt	r0, r3
 800b12e:	e739      	b.n	800afa4 <_printf_float+0x9c>
 800b130:	2301      	movs	r3, #1
 800b132:	4652      	mov	r2, sl
 800b134:	4631      	mov	r1, r6
 800b136:	4628      	mov	r0, r5
 800b138:	47b8      	blx	r7
 800b13a:	3001      	adds	r0, #1
 800b13c:	f43f af30 	beq.w	800afa0 <_printf_float+0x98>
 800b140:	f109 0901 	add.w	r9, r9, #1
 800b144:	e7e8      	b.n	800b118 <_printf_float+0x210>
 800b146:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b148:	2b00      	cmp	r3, #0
 800b14a:	dc3b      	bgt.n	800b1c4 <_printf_float+0x2bc>
 800b14c:	4a1c      	ldr	r2, [pc, #112]	@ (800b1c0 <_printf_float+0x2b8>)
 800b14e:	2301      	movs	r3, #1
 800b150:	4631      	mov	r1, r6
 800b152:	4628      	mov	r0, r5
 800b154:	47b8      	blx	r7
 800b156:	3001      	adds	r0, #1
 800b158:	f43f af22 	beq.w	800afa0 <_printf_float+0x98>
 800b15c:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 800b160:	ea59 0303 	orrs.w	r3, r9, r3
 800b164:	d102      	bne.n	800b16c <_printf_float+0x264>
 800b166:	6823      	ldr	r3, [r4, #0]
 800b168:	07d9      	lsls	r1, r3, #31
 800b16a:	d5d7      	bpl.n	800b11c <_printf_float+0x214>
 800b16c:	9b05      	ldr	r3, [sp, #20]
 800b16e:	465a      	mov	r2, fp
 800b170:	4631      	mov	r1, r6
 800b172:	4628      	mov	r0, r5
 800b174:	47b8      	blx	r7
 800b176:	3001      	adds	r0, #1
 800b178:	f43f af12 	beq.w	800afa0 <_printf_float+0x98>
 800b17c:	f04f 0a00 	mov.w	sl, #0
 800b180:	f104 0b1a 	add.w	fp, r4, #26
 800b184:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b186:	425b      	negs	r3, r3
 800b188:	4553      	cmp	r3, sl
 800b18a:	dc01      	bgt.n	800b190 <_printf_float+0x288>
 800b18c:	464b      	mov	r3, r9
 800b18e:	e794      	b.n	800b0ba <_printf_float+0x1b2>
 800b190:	2301      	movs	r3, #1
 800b192:	465a      	mov	r2, fp
 800b194:	4631      	mov	r1, r6
 800b196:	4628      	mov	r0, r5
 800b198:	47b8      	blx	r7
 800b19a:	3001      	adds	r0, #1
 800b19c:	f43f af00 	beq.w	800afa0 <_printf_float+0x98>
 800b1a0:	f10a 0a01 	add.w	sl, sl, #1
 800b1a4:	e7ee      	b.n	800b184 <_printf_float+0x27c>
 800b1a6:	bf00      	nop
 800b1a8:	ffffffff 	.word	0xffffffff
 800b1ac:	7fefffff 	.word	0x7fefffff
 800b1b0:	0800de6c 	.word	0x0800de6c
 800b1b4:	0800de68 	.word	0x0800de68
 800b1b8:	0800de74 	.word	0x0800de74
 800b1bc:	0800de70 	.word	0x0800de70
 800b1c0:	0800de78 	.word	0x0800de78
 800b1c4:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800b1c6:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 800b1ca:	4553      	cmp	r3, sl
 800b1cc:	bfa8      	it	ge
 800b1ce:	4653      	movge	r3, sl
 800b1d0:	2b00      	cmp	r3, #0
 800b1d2:	4699      	mov	r9, r3
 800b1d4:	dc37      	bgt.n	800b246 <_printf_float+0x33e>
 800b1d6:	2300      	movs	r3, #0
 800b1d8:	9307      	str	r3, [sp, #28]
 800b1da:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b1de:	f104 021a 	add.w	r2, r4, #26
 800b1e2:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 800b1e4:	9907      	ldr	r1, [sp, #28]
 800b1e6:	9306      	str	r3, [sp, #24]
 800b1e8:	eba3 0309 	sub.w	r3, r3, r9
 800b1ec:	428b      	cmp	r3, r1
 800b1ee:	dc31      	bgt.n	800b254 <_printf_float+0x34c>
 800b1f0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b1f2:	459a      	cmp	sl, r3
 800b1f4:	dc3b      	bgt.n	800b26e <_printf_float+0x366>
 800b1f6:	6823      	ldr	r3, [r4, #0]
 800b1f8:	07da      	lsls	r2, r3, #31
 800b1fa:	d438      	bmi.n	800b26e <_printf_float+0x366>
 800b1fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b1fe:	ebaa 0903 	sub.w	r9, sl, r3
 800b202:	9b06      	ldr	r3, [sp, #24]
 800b204:	ebaa 0303 	sub.w	r3, sl, r3
 800b208:	4599      	cmp	r9, r3
 800b20a:	bfa8      	it	ge
 800b20c:	4699      	movge	r9, r3
 800b20e:	f1b9 0f00 	cmp.w	r9, #0
 800b212:	dc34      	bgt.n	800b27e <_printf_float+0x376>
 800b214:	f04f 0800 	mov.w	r8, #0
 800b218:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800b21c:	f104 0b1a 	add.w	fp, r4, #26
 800b220:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800b222:	ebaa 0303 	sub.w	r3, sl, r3
 800b226:	eba3 0309 	sub.w	r3, r3, r9
 800b22a:	4543      	cmp	r3, r8
 800b22c:	f77f af76 	ble.w	800b11c <_printf_float+0x214>
 800b230:	2301      	movs	r3, #1
 800b232:	465a      	mov	r2, fp
 800b234:	4631      	mov	r1, r6
 800b236:	4628      	mov	r0, r5
 800b238:	47b8      	blx	r7
 800b23a:	3001      	adds	r0, #1
 800b23c:	f43f aeb0 	beq.w	800afa0 <_printf_float+0x98>
 800b240:	f108 0801 	add.w	r8, r8, #1
 800b244:	e7ec      	b.n	800b220 <_printf_float+0x318>
 800b246:	4642      	mov	r2, r8
 800b248:	4631      	mov	r1, r6
 800b24a:	4628      	mov	r0, r5
 800b24c:	47b8      	blx	r7
 800b24e:	3001      	adds	r0, #1
 800b250:	d1c1      	bne.n	800b1d6 <_printf_float+0x2ce>
 800b252:	e6a5      	b.n	800afa0 <_printf_float+0x98>
 800b254:	2301      	movs	r3, #1
 800b256:	4631      	mov	r1, r6
 800b258:	4628      	mov	r0, r5
 800b25a:	9206      	str	r2, [sp, #24]
 800b25c:	47b8      	blx	r7
 800b25e:	3001      	adds	r0, #1
 800b260:	f43f ae9e 	beq.w	800afa0 <_printf_float+0x98>
 800b264:	9b07      	ldr	r3, [sp, #28]
 800b266:	9a06      	ldr	r2, [sp, #24]
 800b268:	3301      	adds	r3, #1
 800b26a:	9307      	str	r3, [sp, #28]
 800b26c:	e7b9      	b.n	800b1e2 <_printf_float+0x2da>
 800b26e:	9b05      	ldr	r3, [sp, #20]
 800b270:	465a      	mov	r2, fp
 800b272:	4631      	mov	r1, r6
 800b274:	4628      	mov	r0, r5
 800b276:	47b8      	blx	r7
 800b278:	3001      	adds	r0, #1
 800b27a:	d1bf      	bne.n	800b1fc <_printf_float+0x2f4>
 800b27c:	e690      	b.n	800afa0 <_printf_float+0x98>
 800b27e:	9a06      	ldr	r2, [sp, #24]
 800b280:	464b      	mov	r3, r9
 800b282:	4442      	add	r2, r8
 800b284:	4631      	mov	r1, r6
 800b286:	4628      	mov	r0, r5
 800b288:	47b8      	blx	r7
 800b28a:	3001      	adds	r0, #1
 800b28c:	d1c2      	bne.n	800b214 <_printf_float+0x30c>
 800b28e:	e687      	b.n	800afa0 <_printf_float+0x98>
 800b290:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 800b294:	f1b9 0f01 	cmp.w	r9, #1
 800b298:	dc01      	bgt.n	800b29e <_printf_float+0x396>
 800b29a:	07db      	lsls	r3, r3, #31
 800b29c:	d536      	bpl.n	800b30c <_printf_float+0x404>
 800b29e:	2301      	movs	r3, #1
 800b2a0:	4642      	mov	r2, r8
 800b2a2:	4631      	mov	r1, r6
 800b2a4:	4628      	mov	r0, r5
 800b2a6:	47b8      	blx	r7
 800b2a8:	3001      	adds	r0, #1
 800b2aa:	f43f ae79 	beq.w	800afa0 <_printf_float+0x98>
 800b2ae:	9b05      	ldr	r3, [sp, #20]
 800b2b0:	465a      	mov	r2, fp
 800b2b2:	4631      	mov	r1, r6
 800b2b4:	4628      	mov	r0, r5
 800b2b6:	47b8      	blx	r7
 800b2b8:	3001      	adds	r0, #1
 800b2ba:	f43f ae71 	beq.w	800afa0 <_printf_float+0x98>
 800b2be:	ed94 7b12 	vldr	d7, [r4, #72]	@ 0x48
 800b2c2:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800b2c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2ca:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
 800b2ce:	d018      	beq.n	800b302 <_printf_float+0x3fa>
 800b2d0:	464b      	mov	r3, r9
 800b2d2:	f108 0201 	add.w	r2, r8, #1
 800b2d6:	4631      	mov	r1, r6
 800b2d8:	4628      	mov	r0, r5
 800b2da:	47b8      	blx	r7
 800b2dc:	3001      	adds	r0, #1
 800b2de:	d10c      	bne.n	800b2fa <_printf_float+0x3f2>
 800b2e0:	e65e      	b.n	800afa0 <_printf_float+0x98>
 800b2e2:	2301      	movs	r3, #1
 800b2e4:	465a      	mov	r2, fp
 800b2e6:	4631      	mov	r1, r6
 800b2e8:	4628      	mov	r0, r5
 800b2ea:	47b8      	blx	r7
 800b2ec:	3001      	adds	r0, #1
 800b2ee:	f43f ae57 	beq.w	800afa0 <_printf_float+0x98>
 800b2f2:	f108 0801 	add.w	r8, r8, #1
 800b2f6:	45c8      	cmp	r8, r9
 800b2f8:	dbf3      	blt.n	800b2e2 <_printf_float+0x3da>
 800b2fa:	4653      	mov	r3, sl
 800b2fc:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 800b300:	e6dc      	b.n	800b0bc <_printf_float+0x1b4>
 800b302:	f04f 0800 	mov.w	r8, #0
 800b306:	f104 0b1a 	add.w	fp, r4, #26
 800b30a:	e7f4      	b.n	800b2f6 <_printf_float+0x3ee>
 800b30c:	2301      	movs	r3, #1
 800b30e:	4642      	mov	r2, r8
 800b310:	e7e1      	b.n	800b2d6 <_printf_float+0x3ce>
 800b312:	2301      	movs	r3, #1
 800b314:	464a      	mov	r2, r9
 800b316:	4631      	mov	r1, r6
 800b318:	4628      	mov	r0, r5
 800b31a:	47b8      	blx	r7
 800b31c:	3001      	adds	r0, #1
 800b31e:	f43f ae3f 	beq.w	800afa0 <_printf_float+0x98>
 800b322:	f108 0801 	add.w	r8, r8, #1
 800b326:	68e3      	ldr	r3, [r4, #12]
 800b328:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 800b32a:	1a5b      	subs	r3, r3, r1
 800b32c:	4543      	cmp	r3, r8
 800b32e:	dcf0      	bgt.n	800b312 <_printf_float+0x40a>
 800b330:	e6f8      	b.n	800b124 <_printf_float+0x21c>
 800b332:	f04f 0800 	mov.w	r8, #0
 800b336:	f104 0919 	add.w	r9, r4, #25
 800b33a:	e7f4      	b.n	800b326 <_printf_float+0x41e>

0800b33c <_printf_common>:
 800b33c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800b340:	4616      	mov	r6, r2
 800b342:	4698      	mov	r8, r3
 800b344:	688a      	ldr	r2, [r1, #8]
 800b346:	690b      	ldr	r3, [r1, #16]
 800b348:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800b34c:	4293      	cmp	r3, r2
 800b34e:	bfb8      	it	lt
 800b350:	4613      	movlt	r3, r2
 800b352:	6033      	str	r3, [r6, #0]
 800b354:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 800b358:	4607      	mov	r7, r0
 800b35a:	460c      	mov	r4, r1
 800b35c:	b10a      	cbz	r2, 800b362 <_printf_common+0x26>
 800b35e:	3301      	adds	r3, #1
 800b360:	6033      	str	r3, [r6, #0]
 800b362:	6823      	ldr	r3, [r4, #0]
 800b364:	0699      	lsls	r1, r3, #26
 800b366:	bf42      	ittt	mi
 800b368:	6833      	ldrmi	r3, [r6, #0]
 800b36a:	3302      	addmi	r3, #2
 800b36c:	6033      	strmi	r3, [r6, #0]
 800b36e:	6825      	ldr	r5, [r4, #0]
 800b370:	f015 0506 	ands.w	r5, r5, #6
 800b374:	d106      	bne.n	800b384 <_printf_common+0x48>
 800b376:	f104 0a19 	add.w	sl, r4, #25
 800b37a:	68e3      	ldr	r3, [r4, #12]
 800b37c:	6832      	ldr	r2, [r6, #0]
 800b37e:	1a9b      	subs	r3, r3, r2
 800b380:	42ab      	cmp	r3, r5
 800b382:	dc26      	bgt.n	800b3d2 <_printf_common+0x96>
 800b384:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 800b388:	6822      	ldr	r2, [r4, #0]
 800b38a:	3b00      	subs	r3, #0
 800b38c:	bf18      	it	ne
 800b38e:	2301      	movne	r3, #1
 800b390:	0692      	lsls	r2, r2, #26
 800b392:	d42b      	bmi.n	800b3ec <_printf_common+0xb0>
 800b394:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 800b398:	4641      	mov	r1, r8
 800b39a:	4638      	mov	r0, r7
 800b39c:	47c8      	blx	r9
 800b39e:	3001      	adds	r0, #1
 800b3a0:	d01e      	beq.n	800b3e0 <_printf_common+0xa4>
 800b3a2:	6823      	ldr	r3, [r4, #0]
 800b3a4:	6922      	ldr	r2, [r4, #16]
 800b3a6:	f003 0306 	and.w	r3, r3, #6
 800b3aa:	2b04      	cmp	r3, #4
 800b3ac:	bf02      	ittt	eq
 800b3ae:	68e5      	ldreq	r5, [r4, #12]
 800b3b0:	6833      	ldreq	r3, [r6, #0]
 800b3b2:	1aed      	subeq	r5, r5, r3
 800b3b4:	68a3      	ldr	r3, [r4, #8]
 800b3b6:	bf0c      	ite	eq
 800b3b8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800b3bc:	2500      	movne	r5, #0
 800b3be:	4293      	cmp	r3, r2
 800b3c0:	bfc4      	itt	gt
 800b3c2:	1a9b      	subgt	r3, r3, r2
 800b3c4:	18ed      	addgt	r5, r5, r3
 800b3c6:	2600      	movs	r6, #0
 800b3c8:	341a      	adds	r4, #26
 800b3ca:	42b5      	cmp	r5, r6
 800b3cc:	d11a      	bne.n	800b404 <_printf_common+0xc8>
 800b3ce:	2000      	movs	r0, #0
 800b3d0:	e008      	b.n	800b3e4 <_printf_common+0xa8>
 800b3d2:	2301      	movs	r3, #1
 800b3d4:	4652      	mov	r2, sl
 800b3d6:	4641      	mov	r1, r8
 800b3d8:	4638      	mov	r0, r7
 800b3da:	47c8      	blx	r9
 800b3dc:	3001      	adds	r0, #1
 800b3de:	d103      	bne.n	800b3e8 <_printf_common+0xac>
 800b3e0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800b3e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b3e8:	3501      	adds	r5, #1
 800b3ea:	e7c6      	b.n	800b37a <_printf_common+0x3e>
 800b3ec:	18e1      	adds	r1, r4, r3
 800b3ee:	1c5a      	adds	r2, r3, #1
 800b3f0:	2030      	movs	r0, #48	@ 0x30
 800b3f2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 800b3f6:	4422      	add	r2, r4
 800b3f8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 800b3fc:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800b400:	3302      	adds	r3, #2
 800b402:	e7c7      	b.n	800b394 <_printf_common+0x58>
 800b404:	2301      	movs	r3, #1
 800b406:	4622      	mov	r2, r4
 800b408:	4641      	mov	r1, r8
 800b40a:	4638      	mov	r0, r7
 800b40c:	47c8      	blx	r9
 800b40e:	3001      	adds	r0, #1
 800b410:	d0e6      	beq.n	800b3e0 <_printf_common+0xa4>
 800b412:	3601      	adds	r6, #1
 800b414:	e7d9      	b.n	800b3ca <_printf_common+0x8e>
	...

0800b418 <_printf_i>:
 800b418:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800b41c:	7e0f      	ldrb	r7, [r1, #24]
 800b41e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800b420:	2f78      	cmp	r7, #120	@ 0x78
 800b422:	4691      	mov	r9, r2
 800b424:	4680      	mov	r8, r0
 800b426:	460c      	mov	r4, r1
 800b428:	469a      	mov	sl, r3
 800b42a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800b42e:	d807      	bhi.n	800b440 <_printf_i+0x28>
 800b430:	2f62      	cmp	r7, #98	@ 0x62
 800b432:	d80a      	bhi.n	800b44a <_printf_i+0x32>
 800b434:	2f00      	cmp	r7, #0
 800b436:	f000 80d1 	beq.w	800b5dc <_printf_i+0x1c4>
 800b43a:	2f58      	cmp	r7, #88	@ 0x58
 800b43c:	f000 80b8 	beq.w	800b5b0 <_printf_i+0x198>
 800b440:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800b444:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 800b448:	e03a      	b.n	800b4c0 <_printf_i+0xa8>
 800b44a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800b44e:	2b15      	cmp	r3, #21
 800b450:	d8f6      	bhi.n	800b440 <_printf_i+0x28>
 800b452:	a101      	add	r1, pc, #4	@ (adr r1, 800b458 <_printf_i+0x40>)
 800b454:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800b458:	0800b4b1 	.word	0x0800b4b1
 800b45c:	0800b4c5 	.word	0x0800b4c5
 800b460:	0800b441 	.word	0x0800b441
 800b464:	0800b441 	.word	0x0800b441
 800b468:	0800b441 	.word	0x0800b441
 800b46c:	0800b441 	.word	0x0800b441
 800b470:	0800b4c5 	.word	0x0800b4c5
 800b474:	0800b441 	.word	0x0800b441
 800b478:	0800b441 	.word	0x0800b441
 800b47c:	0800b441 	.word	0x0800b441
 800b480:	0800b441 	.word	0x0800b441
 800b484:	0800b5c3 	.word	0x0800b5c3
 800b488:	0800b4ef 	.word	0x0800b4ef
 800b48c:	0800b57d 	.word	0x0800b57d
 800b490:	0800b441 	.word	0x0800b441
 800b494:	0800b441 	.word	0x0800b441
 800b498:	0800b5e5 	.word	0x0800b5e5
 800b49c:	0800b441 	.word	0x0800b441
 800b4a0:	0800b4ef 	.word	0x0800b4ef
 800b4a4:	0800b441 	.word	0x0800b441
 800b4a8:	0800b441 	.word	0x0800b441
 800b4ac:	0800b585 	.word	0x0800b585
 800b4b0:	6833      	ldr	r3, [r6, #0]
 800b4b2:	1d1a      	adds	r2, r3, #4
 800b4b4:	681b      	ldr	r3, [r3, #0]
 800b4b6:	6032      	str	r2, [r6, #0]
 800b4b8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 800b4bc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 800b4c0:	2301      	movs	r3, #1
 800b4c2:	e09c      	b.n	800b5fe <_printf_i+0x1e6>
 800b4c4:	6833      	ldr	r3, [r6, #0]
 800b4c6:	6820      	ldr	r0, [r4, #0]
 800b4c8:	1d19      	adds	r1, r3, #4
 800b4ca:	6031      	str	r1, [r6, #0]
 800b4cc:	0606      	lsls	r6, r0, #24
 800b4ce:	d501      	bpl.n	800b4d4 <_printf_i+0xbc>
 800b4d0:	681d      	ldr	r5, [r3, #0]
 800b4d2:	e003      	b.n	800b4dc <_printf_i+0xc4>
 800b4d4:	0645      	lsls	r5, r0, #25
 800b4d6:	d5fb      	bpl.n	800b4d0 <_printf_i+0xb8>
 800b4d8:	f9b3 5000 	ldrsh.w	r5, [r3]
 800b4dc:	2d00      	cmp	r5, #0
 800b4de:	da03      	bge.n	800b4e8 <_printf_i+0xd0>
 800b4e0:	232d      	movs	r3, #45	@ 0x2d
 800b4e2:	426d      	negs	r5, r5
 800b4e4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b4e8:	4858      	ldr	r0, [pc, #352]	@ (800b64c <_printf_i+0x234>)
 800b4ea:	230a      	movs	r3, #10
 800b4ec:	e011      	b.n	800b512 <_printf_i+0xfa>
 800b4ee:	6821      	ldr	r1, [r4, #0]
 800b4f0:	6833      	ldr	r3, [r6, #0]
 800b4f2:	0608      	lsls	r0, r1, #24
 800b4f4:	f853 5b04 	ldr.w	r5, [r3], #4
 800b4f8:	d402      	bmi.n	800b500 <_printf_i+0xe8>
 800b4fa:	0649      	lsls	r1, r1, #25
 800b4fc:	bf48      	it	mi
 800b4fe:	b2ad      	uxthmi	r5, r5
 800b500:	2f6f      	cmp	r7, #111	@ 0x6f
 800b502:	4852      	ldr	r0, [pc, #328]	@ (800b64c <_printf_i+0x234>)
 800b504:	6033      	str	r3, [r6, #0]
 800b506:	bf14      	ite	ne
 800b508:	230a      	movne	r3, #10
 800b50a:	2308      	moveq	r3, #8
 800b50c:	2100      	movs	r1, #0
 800b50e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800b512:	6866      	ldr	r6, [r4, #4]
 800b514:	60a6      	str	r6, [r4, #8]
 800b516:	2e00      	cmp	r6, #0
 800b518:	db05      	blt.n	800b526 <_printf_i+0x10e>
 800b51a:	6821      	ldr	r1, [r4, #0]
 800b51c:	432e      	orrs	r6, r5
 800b51e:	f021 0104 	bic.w	r1, r1, #4
 800b522:	6021      	str	r1, [r4, #0]
 800b524:	d04b      	beq.n	800b5be <_printf_i+0x1a6>
 800b526:	4616      	mov	r6, r2
 800b528:	fbb5 f1f3 	udiv	r1, r5, r3
 800b52c:	fb03 5711 	mls	r7, r3, r1, r5
 800b530:	5dc7      	ldrb	r7, [r0, r7]
 800b532:	f806 7d01 	strb.w	r7, [r6, #-1]!
 800b536:	462f      	mov	r7, r5
 800b538:	42bb      	cmp	r3, r7
 800b53a:	460d      	mov	r5, r1
 800b53c:	d9f4      	bls.n	800b528 <_printf_i+0x110>
 800b53e:	2b08      	cmp	r3, #8
 800b540:	d10b      	bne.n	800b55a <_printf_i+0x142>
 800b542:	6823      	ldr	r3, [r4, #0]
 800b544:	07df      	lsls	r7, r3, #31
 800b546:	d508      	bpl.n	800b55a <_printf_i+0x142>
 800b548:	6923      	ldr	r3, [r4, #16]
 800b54a:	6861      	ldr	r1, [r4, #4]
 800b54c:	4299      	cmp	r1, r3
 800b54e:	bfde      	ittt	le
 800b550:	2330      	movle	r3, #48	@ 0x30
 800b552:	f806 3c01 	strble.w	r3, [r6, #-1]
 800b556:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 800b55a:	1b92      	subs	r2, r2, r6
 800b55c:	6122      	str	r2, [r4, #16]
 800b55e:	f8cd a000 	str.w	sl, [sp]
 800b562:	464b      	mov	r3, r9
 800b564:	aa03      	add	r2, sp, #12
 800b566:	4621      	mov	r1, r4
 800b568:	4640      	mov	r0, r8
 800b56a:	f7ff fee7 	bl	800b33c <_printf_common>
 800b56e:	3001      	adds	r0, #1
 800b570:	d14a      	bne.n	800b608 <_printf_i+0x1f0>
 800b572:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800b576:	b004      	add	sp, #16
 800b578:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800b57c:	6823      	ldr	r3, [r4, #0]
 800b57e:	f043 0320 	orr.w	r3, r3, #32
 800b582:	6023      	str	r3, [r4, #0]
 800b584:	4832      	ldr	r0, [pc, #200]	@ (800b650 <_printf_i+0x238>)
 800b586:	2778      	movs	r7, #120	@ 0x78
 800b588:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800b58c:	6823      	ldr	r3, [r4, #0]
 800b58e:	6831      	ldr	r1, [r6, #0]
 800b590:	061f      	lsls	r7, r3, #24
 800b592:	f851 5b04 	ldr.w	r5, [r1], #4
 800b596:	d402      	bmi.n	800b59e <_printf_i+0x186>
 800b598:	065f      	lsls	r7, r3, #25
 800b59a:	bf48      	it	mi
 800b59c:	b2ad      	uxthmi	r5, r5
 800b59e:	6031      	str	r1, [r6, #0]
 800b5a0:	07d9      	lsls	r1, r3, #31
 800b5a2:	bf44      	itt	mi
 800b5a4:	f043 0320 	orrmi.w	r3, r3, #32
 800b5a8:	6023      	strmi	r3, [r4, #0]
 800b5aa:	b11d      	cbz	r5, 800b5b4 <_printf_i+0x19c>
 800b5ac:	2310      	movs	r3, #16
 800b5ae:	e7ad      	b.n	800b50c <_printf_i+0xf4>
 800b5b0:	4826      	ldr	r0, [pc, #152]	@ (800b64c <_printf_i+0x234>)
 800b5b2:	e7e9      	b.n	800b588 <_printf_i+0x170>
 800b5b4:	6823      	ldr	r3, [r4, #0]
 800b5b6:	f023 0320 	bic.w	r3, r3, #32
 800b5ba:	6023      	str	r3, [r4, #0]
 800b5bc:	e7f6      	b.n	800b5ac <_printf_i+0x194>
 800b5be:	4616      	mov	r6, r2
 800b5c0:	e7bd      	b.n	800b53e <_printf_i+0x126>
 800b5c2:	6833      	ldr	r3, [r6, #0]
 800b5c4:	6825      	ldr	r5, [r4, #0]
 800b5c6:	6961      	ldr	r1, [r4, #20]
 800b5c8:	1d18      	adds	r0, r3, #4
 800b5ca:	6030      	str	r0, [r6, #0]
 800b5cc:	062e      	lsls	r6, r5, #24
 800b5ce:	681b      	ldr	r3, [r3, #0]
 800b5d0:	d501      	bpl.n	800b5d6 <_printf_i+0x1be>
 800b5d2:	6019      	str	r1, [r3, #0]
 800b5d4:	e002      	b.n	800b5dc <_printf_i+0x1c4>
 800b5d6:	0668      	lsls	r0, r5, #25
 800b5d8:	d5fb      	bpl.n	800b5d2 <_printf_i+0x1ba>
 800b5da:	8019      	strh	r1, [r3, #0]
 800b5dc:	2300      	movs	r3, #0
 800b5de:	6123      	str	r3, [r4, #16]
 800b5e0:	4616      	mov	r6, r2
 800b5e2:	e7bc      	b.n	800b55e <_printf_i+0x146>
 800b5e4:	6833      	ldr	r3, [r6, #0]
 800b5e6:	1d1a      	adds	r2, r3, #4
 800b5e8:	6032      	str	r2, [r6, #0]
 800b5ea:	681e      	ldr	r6, [r3, #0]
 800b5ec:	6862      	ldr	r2, [r4, #4]
 800b5ee:	2100      	movs	r1, #0
 800b5f0:	4630      	mov	r0, r6
 800b5f2:	f7f4 fe9d 	bl	8000330 <memchr>
 800b5f6:	b108      	cbz	r0, 800b5fc <_printf_i+0x1e4>
 800b5f8:	1b80      	subs	r0, r0, r6
 800b5fa:	6060      	str	r0, [r4, #4]
 800b5fc:	6863      	ldr	r3, [r4, #4]
 800b5fe:	6123      	str	r3, [r4, #16]
 800b600:	2300      	movs	r3, #0
 800b602:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 800b606:	e7aa      	b.n	800b55e <_printf_i+0x146>
 800b608:	6923      	ldr	r3, [r4, #16]
 800b60a:	4632      	mov	r2, r6
 800b60c:	4649      	mov	r1, r9
 800b60e:	4640      	mov	r0, r8
 800b610:	47d0      	blx	sl
 800b612:	3001      	adds	r0, #1
 800b614:	d0ad      	beq.n	800b572 <_printf_i+0x15a>
 800b616:	6823      	ldr	r3, [r4, #0]
 800b618:	079b      	lsls	r3, r3, #30
 800b61a:	d413      	bmi.n	800b644 <_printf_i+0x22c>
 800b61c:	68e0      	ldr	r0, [r4, #12]
 800b61e:	9b03      	ldr	r3, [sp, #12]
 800b620:	4298      	cmp	r0, r3
 800b622:	bfb8      	it	lt
 800b624:	4618      	movlt	r0, r3
 800b626:	e7a6      	b.n	800b576 <_printf_i+0x15e>
 800b628:	2301      	movs	r3, #1
 800b62a:	4632      	mov	r2, r6
 800b62c:	4649      	mov	r1, r9
 800b62e:	4640      	mov	r0, r8
 800b630:	47d0      	blx	sl
 800b632:	3001      	adds	r0, #1
 800b634:	d09d      	beq.n	800b572 <_printf_i+0x15a>
 800b636:	3501      	adds	r5, #1
 800b638:	68e3      	ldr	r3, [r4, #12]
 800b63a:	9903      	ldr	r1, [sp, #12]
 800b63c:	1a5b      	subs	r3, r3, r1
 800b63e:	42ab      	cmp	r3, r5
 800b640:	dcf2      	bgt.n	800b628 <_printf_i+0x210>
 800b642:	e7eb      	b.n	800b61c <_printf_i+0x204>
 800b644:	2500      	movs	r5, #0
 800b646:	f104 0619 	add.w	r6, r4, #25
 800b64a:	e7f5      	b.n	800b638 <_printf_i+0x220>
 800b64c:	0800de7a 	.word	0x0800de7a
 800b650:	0800de8b 	.word	0x0800de8b

0800b654 <std>:
 800b654:	2300      	movs	r3, #0
 800b656:	b510      	push	{r4, lr}
 800b658:	4604      	mov	r4, r0
 800b65a:	e9c0 3300 	strd	r3, r3, [r0]
 800b65e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b662:	6083      	str	r3, [r0, #8]
 800b664:	8181      	strh	r1, [r0, #12]
 800b666:	6643      	str	r3, [r0, #100]	@ 0x64
 800b668:	81c2      	strh	r2, [r0, #14]
 800b66a:	6183      	str	r3, [r0, #24]
 800b66c:	4619      	mov	r1, r3
 800b66e:	2208      	movs	r2, #8
 800b670:	305c      	adds	r0, #92	@ 0x5c
 800b672:	f000 f929 	bl	800b8c8 <memset>
 800b676:	4b0d      	ldr	r3, [pc, #52]	@ (800b6ac <std+0x58>)
 800b678:	6263      	str	r3, [r4, #36]	@ 0x24
 800b67a:	4b0d      	ldr	r3, [pc, #52]	@ (800b6b0 <std+0x5c>)
 800b67c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800b67e:	4b0d      	ldr	r3, [pc, #52]	@ (800b6b4 <std+0x60>)
 800b680:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800b682:	4b0d      	ldr	r3, [pc, #52]	@ (800b6b8 <std+0x64>)
 800b684:	6323      	str	r3, [r4, #48]	@ 0x30
 800b686:	4b0d      	ldr	r3, [pc, #52]	@ (800b6bc <std+0x68>)
 800b688:	6224      	str	r4, [r4, #32]
 800b68a:	429c      	cmp	r4, r3
 800b68c:	d006      	beq.n	800b69c <std+0x48>
 800b68e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800b692:	4294      	cmp	r4, r2
 800b694:	d002      	beq.n	800b69c <std+0x48>
 800b696:	33d0      	adds	r3, #208	@ 0xd0
 800b698:	429c      	cmp	r4, r3
 800b69a:	d105      	bne.n	800b6a8 <std+0x54>
 800b69c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 800b6a0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b6a4:	f000 b942 	b.w	800b92c <__retarget_lock_init_recursive>
 800b6a8:	bd10      	pop	{r4, pc}
 800b6aa:	bf00      	nop
 800b6ac:	0800d161 	.word	0x0800d161
 800b6b0:	0800d183 	.word	0x0800d183
 800b6b4:	0800d1bb 	.word	0x0800d1bb
 800b6b8:	0800d1df 	.word	0x0800d1df
 800b6bc:	240008ec 	.word	0x240008ec

0800b6c0 <stdio_exit_handler>:
 800b6c0:	4a02      	ldr	r2, [pc, #8]	@ (800b6cc <stdio_exit_handler+0xc>)
 800b6c2:	4903      	ldr	r1, [pc, #12]	@ (800b6d0 <stdio_exit_handler+0x10>)
 800b6c4:	4803      	ldr	r0, [pc, #12]	@ (800b6d4 <stdio_exit_handler+0x14>)
 800b6c6:	f000 b869 	b.w	800b79c <_fwalk_sglue>
 800b6ca:	bf00      	nop
 800b6cc:	24000018 	.word	0x24000018
 800b6d0:	0800ca05 	.word	0x0800ca05
 800b6d4:	24000028 	.word	0x24000028

0800b6d8 <cleanup_stdio>:
 800b6d8:	6841      	ldr	r1, [r0, #4]
 800b6da:	4b0c      	ldr	r3, [pc, #48]	@ (800b70c <cleanup_stdio+0x34>)
 800b6dc:	4299      	cmp	r1, r3
 800b6de:	b510      	push	{r4, lr}
 800b6e0:	4604      	mov	r4, r0
 800b6e2:	d001      	beq.n	800b6e8 <cleanup_stdio+0x10>
 800b6e4:	f001 f98e 	bl	800ca04 <_fflush_r>
 800b6e8:	68a1      	ldr	r1, [r4, #8]
 800b6ea:	4b09      	ldr	r3, [pc, #36]	@ (800b710 <cleanup_stdio+0x38>)
 800b6ec:	4299      	cmp	r1, r3
 800b6ee:	d002      	beq.n	800b6f6 <cleanup_stdio+0x1e>
 800b6f0:	4620      	mov	r0, r4
 800b6f2:	f001 f987 	bl	800ca04 <_fflush_r>
 800b6f6:	68e1      	ldr	r1, [r4, #12]
 800b6f8:	4b06      	ldr	r3, [pc, #24]	@ (800b714 <cleanup_stdio+0x3c>)
 800b6fa:	4299      	cmp	r1, r3
 800b6fc:	d004      	beq.n	800b708 <cleanup_stdio+0x30>
 800b6fe:	4620      	mov	r0, r4
 800b700:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b704:	f001 b97e 	b.w	800ca04 <_fflush_r>
 800b708:	bd10      	pop	{r4, pc}
 800b70a:	bf00      	nop
 800b70c:	240008ec 	.word	0x240008ec
 800b710:	24000954 	.word	0x24000954
 800b714:	240009bc 	.word	0x240009bc

0800b718 <global_stdio_init.part.0>:
 800b718:	b510      	push	{r4, lr}
 800b71a:	4b0b      	ldr	r3, [pc, #44]	@ (800b748 <global_stdio_init.part.0+0x30>)
 800b71c:	4c0b      	ldr	r4, [pc, #44]	@ (800b74c <global_stdio_init.part.0+0x34>)
 800b71e:	4a0c      	ldr	r2, [pc, #48]	@ (800b750 <global_stdio_init.part.0+0x38>)
 800b720:	601a      	str	r2, [r3, #0]
 800b722:	4620      	mov	r0, r4
 800b724:	2200      	movs	r2, #0
 800b726:	2104      	movs	r1, #4
 800b728:	f7ff ff94 	bl	800b654 <std>
 800b72c:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 800b730:	2201      	movs	r2, #1
 800b732:	2109      	movs	r1, #9
 800b734:	f7ff ff8e 	bl	800b654 <std>
 800b738:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 800b73c:	2202      	movs	r2, #2
 800b73e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b742:	2112      	movs	r1, #18
 800b744:	f7ff bf86 	b.w	800b654 <std>
 800b748:	24000a24 	.word	0x24000a24
 800b74c:	240008ec 	.word	0x240008ec
 800b750:	0800b6c1 	.word	0x0800b6c1

0800b754 <__sfp_lock_acquire>:
 800b754:	4801      	ldr	r0, [pc, #4]	@ (800b75c <__sfp_lock_acquire+0x8>)
 800b756:	f000 b8ea 	b.w	800b92e <__retarget_lock_acquire_recursive>
 800b75a:	bf00      	nop
 800b75c:	24000a29 	.word	0x24000a29

0800b760 <__sfp_lock_release>:
 800b760:	4801      	ldr	r0, [pc, #4]	@ (800b768 <__sfp_lock_release+0x8>)
 800b762:	f000 b8e5 	b.w	800b930 <__retarget_lock_release_recursive>
 800b766:	bf00      	nop
 800b768:	24000a29 	.word	0x24000a29

0800b76c <__sinit>:
 800b76c:	b510      	push	{r4, lr}
 800b76e:	4604      	mov	r4, r0
 800b770:	f7ff fff0 	bl	800b754 <__sfp_lock_acquire>
 800b774:	6a23      	ldr	r3, [r4, #32]
 800b776:	b11b      	cbz	r3, 800b780 <__sinit+0x14>
 800b778:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b77c:	f7ff bff0 	b.w	800b760 <__sfp_lock_release>
 800b780:	4b04      	ldr	r3, [pc, #16]	@ (800b794 <__sinit+0x28>)
 800b782:	6223      	str	r3, [r4, #32]
 800b784:	4b04      	ldr	r3, [pc, #16]	@ (800b798 <__sinit+0x2c>)
 800b786:	681b      	ldr	r3, [r3, #0]
 800b788:	2b00      	cmp	r3, #0
 800b78a:	d1f5      	bne.n	800b778 <__sinit+0xc>
 800b78c:	f7ff ffc4 	bl	800b718 <global_stdio_init.part.0>
 800b790:	e7f2      	b.n	800b778 <__sinit+0xc>
 800b792:	bf00      	nop
 800b794:	0800b6d9 	.word	0x0800b6d9
 800b798:	24000a24 	.word	0x24000a24

0800b79c <_fwalk_sglue>:
 800b79c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b7a0:	4607      	mov	r7, r0
 800b7a2:	4688      	mov	r8, r1
 800b7a4:	4614      	mov	r4, r2
 800b7a6:	2600      	movs	r6, #0
 800b7a8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800b7ac:	f1b9 0901 	subs.w	r9, r9, #1
 800b7b0:	d505      	bpl.n	800b7be <_fwalk_sglue+0x22>
 800b7b2:	6824      	ldr	r4, [r4, #0]
 800b7b4:	2c00      	cmp	r4, #0
 800b7b6:	d1f7      	bne.n	800b7a8 <_fwalk_sglue+0xc>
 800b7b8:	4630      	mov	r0, r6
 800b7ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b7be:	89ab      	ldrh	r3, [r5, #12]
 800b7c0:	2b01      	cmp	r3, #1
 800b7c2:	d907      	bls.n	800b7d4 <_fwalk_sglue+0x38>
 800b7c4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800b7c8:	3301      	adds	r3, #1
 800b7ca:	d003      	beq.n	800b7d4 <_fwalk_sglue+0x38>
 800b7cc:	4629      	mov	r1, r5
 800b7ce:	4638      	mov	r0, r7
 800b7d0:	47c0      	blx	r8
 800b7d2:	4306      	orrs	r6, r0
 800b7d4:	3568      	adds	r5, #104	@ 0x68
 800b7d6:	e7e9      	b.n	800b7ac <_fwalk_sglue+0x10>

0800b7d8 <iprintf>:
 800b7d8:	b40f      	push	{r0, r1, r2, r3}
 800b7da:	b507      	push	{r0, r1, r2, lr}
 800b7dc:	4906      	ldr	r1, [pc, #24]	@ (800b7f8 <iprintf+0x20>)
 800b7de:	ab04      	add	r3, sp, #16
 800b7e0:	6808      	ldr	r0, [r1, #0]
 800b7e2:	f853 2b04 	ldr.w	r2, [r3], #4
 800b7e6:	6881      	ldr	r1, [r0, #8]
 800b7e8:	9301      	str	r3, [sp, #4]
 800b7ea:	f000 fec5 	bl	800c578 <_vfiprintf_r>
 800b7ee:	b003      	add	sp, #12
 800b7f0:	f85d eb04 	ldr.w	lr, [sp], #4
 800b7f4:	b004      	add	sp, #16
 800b7f6:	4770      	bx	lr
 800b7f8:	24000024 	.word	0x24000024

0800b7fc <putchar>:
 800b7fc:	4b02      	ldr	r3, [pc, #8]	@ (800b808 <putchar+0xc>)
 800b7fe:	4601      	mov	r1, r0
 800b800:	6818      	ldr	r0, [r3, #0]
 800b802:	6882      	ldr	r2, [r0, #8]
 800b804:	f001 bde6 	b.w	800d3d4 <_putc_r>
 800b808:	24000024 	.word	0x24000024

0800b80c <_puts_r>:
 800b80c:	6a03      	ldr	r3, [r0, #32]
 800b80e:	b570      	push	{r4, r5, r6, lr}
 800b810:	6884      	ldr	r4, [r0, #8]
 800b812:	4605      	mov	r5, r0
 800b814:	460e      	mov	r6, r1
 800b816:	b90b      	cbnz	r3, 800b81c <_puts_r+0x10>
 800b818:	f7ff ffa8 	bl	800b76c <__sinit>
 800b81c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800b81e:	07db      	lsls	r3, r3, #31
 800b820:	d405      	bmi.n	800b82e <_puts_r+0x22>
 800b822:	89a3      	ldrh	r3, [r4, #12]
 800b824:	0598      	lsls	r0, r3, #22
 800b826:	d402      	bmi.n	800b82e <_puts_r+0x22>
 800b828:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800b82a:	f000 f880 	bl	800b92e <__retarget_lock_acquire_recursive>
 800b82e:	89a3      	ldrh	r3, [r4, #12]
 800b830:	0719      	lsls	r1, r3, #28
 800b832:	d502      	bpl.n	800b83a <_puts_r+0x2e>
 800b834:	6923      	ldr	r3, [r4, #16]
 800b836:	2b00      	cmp	r3, #0
 800b838:	d135      	bne.n	800b8a6 <_puts_r+0x9a>
 800b83a:	4621      	mov	r1, r4
 800b83c:	4628      	mov	r0, r5
 800b83e:	f001 fd11 	bl	800d264 <__swsetup_r>
 800b842:	b380      	cbz	r0, 800b8a6 <_puts_r+0x9a>
 800b844:	f04f 35ff 	mov.w	r5, #4294967295	@ 0xffffffff
 800b848:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800b84a:	07da      	lsls	r2, r3, #31
 800b84c:	d405      	bmi.n	800b85a <_puts_r+0x4e>
 800b84e:	89a3      	ldrh	r3, [r4, #12]
 800b850:	059b      	lsls	r3, r3, #22
 800b852:	d402      	bmi.n	800b85a <_puts_r+0x4e>
 800b854:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800b856:	f000 f86b 	bl	800b930 <__retarget_lock_release_recursive>
 800b85a:	4628      	mov	r0, r5
 800b85c:	bd70      	pop	{r4, r5, r6, pc}
 800b85e:	2b00      	cmp	r3, #0
 800b860:	da04      	bge.n	800b86c <_puts_r+0x60>
 800b862:	69a2      	ldr	r2, [r4, #24]
 800b864:	429a      	cmp	r2, r3
 800b866:	dc17      	bgt.n	800b898 <_puts_r+0x8c>
 800b868:	290a      	cmp	r1, #10
 800b86a:	d015      	beq.n	800b898 <_puts_r+0x8c>
 800b86c:	6823      	ldr	r3, [r4, #0]
 800b86e:	1c5a      	adds	r2, r3, #1
 800b870:	6022      	str	r2, [r4, #0]
 800b872:	7019      	strb	r1, [r3, #0]
 800b874:	68a3      	ldr	r3, [r4, #8]
 800b876:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800b87a:	3b01      	subs	r3, #1
 800b87c:	60a3      	str	r3, [r4, #8]
 800b87e:	2900      	cmp	r1, #0
 800b880:	d1ed      	bne.n	800b85e <_puts_r+0x52>
 800b882:	2b00      	cmp	r3, #0
 800b884:	da11      	bge.n	800b8aa <_puts_r+0x9e>
 800b886:	4622      	mov	r2, r4
 800b888:	210a      	movs	r1, #10
 800b88a:	4628      	mov	r0, r5
 800b88c:	f001 fcab 	bl	800d1e6 <__swbuf_r>
 800b890:	3001      	adds	r0, #1
 800b892:	d0d7      	beq.n	800b844 <_puts_r+0x38>
 800b894:	250a      	movs	r5, #10
 800b896:	e7d7      	b.n	800b848 <_puts_r+0x3c>
 800b898:	4622      	mov	r2, r4
 800b89a:	4628      	mov	r0, r5
 800b89c:	f001 fca3 	bl	800d1e6 <__swbuf_r>
 800b8a0:	3001      	adds	r0, #1
 800b8a2:	d1e7      	bne.n	800b874 <_puts_r+0x68>
 800b8a4:	e7ce      	b.n	800b844 <_puts_r+0x38>
 800b8a6:	3e01      	subs	r6, #1
 800b8a8:	e7e4      	b.n	800b874 <_puts_r+0x68>
 800b8aa:	6823      	ldr	r3, [r4, #0]
 800b8ac:	1c5a      	adds	r2, r3, #1
 800b8ae:	6022      	str	r2, [r4, #0]
 800b8b0:	220a      	movs	r2, #10
 800b8b2:	701a      	strb	r2, [r3, #0]
 800b8b4:	e7ee      	b.n	800b894 <_puts_r+0x88>
	...

0800b8b8 <puts>:
 800b8b8:	4b02      	ldr	r3, [pc, #8]	@ (800b8c4 <puts+0xc>)
 800b8ba:	4601      	mov	r1, r0
 800b8bc:	6818      	ldr	r0, [r3, #0]
 800b8be:	f7ff bfa5 	b.w	800b80c <_puts_r>
 800b8c2:	bf00      	nop
 800b8c4:	24000024 	.word	0x24000024

0800b8c8 <memset>:
 800b8c8:	4402      	add	r2, r0
 800b8ca:	4603      	mov	r3, r0
 800b8cc:	4293      	cmp	r3, r2
 800b8ce:	d100      	bne.n	800b8d2 <memset+0xa>
 800b8d0:	4770      	bx	lr
 800b8d2:	f803 1b01 	strb.w	r1, [r3], #1
 800b8d6:	e7f9      	b.n	800b8cc <memset+0x4>

0800b8d8 <__errno>:
 800b8d8:	4b01      	ldr	r3, [pc, #4]	@ (800b8e0 <__errno+0x8>)
 800b8da:	6818      	ldr	r0, [r3, #0]
 800b8dc:	4770      	bx	lr
 800b8de:	bf00      	nop
 800b8e0:	24000024 	.word	0x24000024

0800b8e4 <__libc_init_array>:
 800b8e4:	b570      	push	{r4, r5, r6, lr}
 800b8e6:	4d0d      	ldr	r5, [pc, #52]	@ (800b91c <__libc_init_array+0x38>)
 800b8e8:	4c0d      	ldr	r4, [pc, #52]	@ (800b920 <__libc_init_array+0x3c>)
 800b8ea:	1b64      	subs	r4, r4, r5
 800b8ec:	10a4      	asrs	r4, r4, #2
 800b8ee:	2600      	movs	r6, #0
 800b8f0:	42a6      	cmp	r6, r4
 800b8f2:	d109      	bne.n	800b908 <__libc_init_array+0x24>
 800b8f4:	4d0b      	ldr	r5, [pc, #44]	@ (800b924 <__libc_init_array+0x40>)
 800b8f6:	4c0c      	ldr	r4, [pc, #48]	@ (800b928 <__libc_init_array+0x44>)
 800b8f8:	f002 f840 	bl	800d97c <_init>
 800b8fc:	1b64      	subs	r4, r4, r5
 800b8fe:	10a4      	asrs	r4, r4, #2
 800b900:	2600      	movs	r6, #0
 800b902:	42a6      	cmp	r6, r4
 800b904:	d105      	bne.n	800b912 <__libc_init_array+0x2e>
 800b906:	bd70      	pop	{r4, r5, r6, pc}
 800b908:	f855 3b04 	ldr.w	r3, [r5], #4
 800b90c:	4798      	blx	r3
 800b90e:	3601      	adds	r6, #1
 800b910:	e7ee      	b.n	800b8f0 <__libc_init_array+0xc>
 800b912:	f855 3b04 	ldr.w	r3, [r5], #4
 800b916:	4798      	blx	r3
 800b918:	3601      	adds	r6, #1
 800b91a:	e7f2      	b.n	800b902 <__libc_init_array+0x1e>
 800b91c:	0800e1f8 	.word	0x0800e1f8
 800b920:	0800e1f8 	.word	0x0800e1f8
 800b924:	0800e1f8 	.word	0x0800e1f8
 800b928:	0800e1fc 	.word	0x0800e1fc

0800b92c <__retarget_lock_init_recursive>:
 800b92c:	4770      	bx	lr

0800b92e <__retarget_lock_acquire_recursive>:
 800b92e:	4770      	bx	lr

0800b930 <__retarget_lock_release_recursive>:
 800b930:	4770      	bx	lr
	...

0800b934 <_localeconv_r>:
 800b934:	4800      	ldr	r0, [pc, #0]	@ (800b938 <_localeconv_r+0x4>)
 800b936:	4770      	bx	lr
 800b938:	24000164 	.word	0x24000164

0800b93c <memcpy>:
 800b93c:	440a      	add	r2, r1
 800b93e:	4291      	cmp	r1, r2
 800b940:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 800b944:	d100      	bne.n	800b948 <memcpy+0xc>
 800b946:	4770      	bx	lr
 800b948:	b510      	push	{r4, lr}
 800b94a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b94e:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b952:	4291      	cmp	r1, r2
 800b954:	d1f9      	bne.n	800b94a <memcpy+0xe>
 800b956:	bd10      	pop	{r4, pc}

0800b958 <quorem>:
 800b958:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b95c:	6903      	ldr	r3, [r0, #16]
 800b95e:	690c      	ldr	r4, [r1, #16]
 800b960:	42a3      	cmp	r3, r4
 800b962:	4607      	mov	r7, r0
 800b964:	db7e      	blt.n	800ba64 <quorem+0x10c>
 800b966:	3c01      	subs	r4, #1
 800b968:	f101 0814 	add.w	r8, r1, #20
 800b96c:	00a3      	lsls	r3, r4, #2
 800b96e:	f100 0514 	add.w	r5, r0, #20
 800b972:	9300      	str	r3, [sp, #0]
 800b974:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800b978:	9301      	str	r3, [sp, #4]
 800b97a:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800b97e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800b982:	3301      	adds	r3, #1
 800b984:	429a      	cmp	r2, r3
 800b986:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800b98a:	fbb2 f6f3 	udiv	r6, r2, r3
 800b98e:	d32e      	bcc.n	800b9ee <quorem+0x96>
 800b990:	f04f 0a00 	mov.w	sl, #0
 800b994:	46c4      	mov	ip, r8
 800b996:	46ae      	mov	lr, r5
 800b998:	46d3      	mov	fp, sl
 800b99a:	f85c 3b04 	ldr.w	r3, [ip], #4
 800b99e:	b298      	uxth	r0, r3
 800b9a0:	fb06 a000 	mla	r0, r6, r0, sl
 800b9a4:	0c02      	lsrs	r2, r0, #16
 800b9a6:	0c1b      	lsrs	r3, r3, #16
 800b9a8:	fb06 2303 	mla	r3, r6, r3, r2
 800b9ac:	f8de 2000 	ldr.w	r2, [lr]
 800b9b0:	b280      	uxth	r0, r0
 800b9b2:	b292      	uxth	r2, r2
 800b9b4:	1a12      	subs	r2, r2, r0
 800b9b6:	445a      	add	r2, fp
 800b9b8:	f8de 0000 	ldr.w	r0, [lr]
 800b9bc:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800b9c0:	b29b      	uxth	r3, r3
 800b9c2:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 800b9c6:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 800b9ca:	b292      	uxth	r2, r2
 800b9cc:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 800b9d0:	45e1      	cmp	r9, ip
 800b9d2:	f84e 2b04 	str.w	r2, [lr], #4
 800b9d6:	ea4f 4b23 	mov.w	fp, r3, asr #16
 800b9da:	d2de      	bcs.n	800b99a <quorem+0x42>
 800b9dc:	9b00      	ldr	r3, [sp, #0]
 800b9de:	58eb      	ldr	r3, [r5, r3]
 800b9e0:	b92b      	cbnz	r3, 800b9ee <quorem+0x96>
 800b9e2:	9b01      	ldr	r3, [sp, #4]
 800b9e4:	3b04      	subs	r3, #4
 800b9e6:	429d      	cmp	r5, r3
 800b9e8:	461a      	mov	r2, r3
 800b9ea:	d32f      	bcc.n	800ba4c <quorem+0xf4>
 800b9ec:	613c      	str	r4, [r7, #16]
 800b9ee:	4638      	mov	r0, r7
 800b9f0:	f001 faae 	bl	800cf50 <__mcmp>
 800b9f4:	2800      	cmp	r0, #0
 800b9f6:	db25      	blt.n	800ba44 <quorem+0xec>
 800b9f8:	4629      	mov	r1, r5
 800b9fa:	2000      	movs	r0, #0
 800b9fc:	f858 2b04 	ldr.w	r2, [r8], #4
 800ba00:	f8d1 c000 	ldr.w	ip, [r1]
 800ba04:	fa1f fe82 	uxth.w	lr, r2
 800ba08:	fa1f f38c 	uxth.w	r3, ip
 800ba0c:	eba3 030e 	sub.w	r3, r3, lr
 800ba10:	4403      	add	r3, r0
 800ba12:	0c12      	lsrs	r2, r2, #16
 800ba14:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800ba18:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 800ba1c:	b29b      	uxth	r3, r3
 800ba1e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800ba22:	45c1      	cmp	r9, r8
 800ba24:	f841 3b04 	str.w	r3, [r1], #4
 800ba28:	ea4f 4022 	mov.w	r0, r2, asr #16
 800ba2c:	d2e6      	bcs.n	800b9fc <quorem+0xa4>
 800ba2e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800ba32:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800ba36:	b922      	cbnz	r2, 800ba42 <quorem+0xea>
 800ba38:	3b04      	subs	r3, #4
 800ba3a:	429d      	cmp	r5, r3
 800ba3c:	461a      	mov	r2, r3
 800ba3e:	d30b      	bcc.n	800ba58 <quorem+0x100>
 800ba40:	613c      	str	r4, [r7, #16]
 800ba42:	3601      	adds	r6, #1
 800ba44:	4630      	mov	r0, r6
 800ba46:	b003      	add	sp, #12
 800ba48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ba4c:	6812      	ldr	r2, [r2, #0]
 800ba4e:	3b04      	subs	r3, #4
 800ba50:	2a00      	cmp	r2, #0
 800ba52:	d1cb      	bne.n	800b9ec <quorem+0x94>
 800ba54:	3c01      	subs	r4, #1
 800ba56:	e7c6      	b.n	800b9e6 <quorem+0x8e>
 800ba58:	6812      	ldr	r2, [r2, #0]
 800ba5a:	3b04      	subs	r3, #4
 800ba5c:	2a00      	cmp	r2, #0
 800ba5e:	d1ef      	bne.n	800ba40 <quorem+0xe8>
 800ba60:	3c01      	subs	r4, #1
 800ba62:	e7ea      	b.n	800ba3a <quorem+0xe2>
 800ba64:	2000      	movs	r0, #0
 800ba66:	e7ee      	b.n	800ba46 <quorem+0xee>

0800ba68 <_dtoa_r>:
 800ba68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ba6c:	ed2d 8b02 	vpush	{d8}
 800ba70:	69c7      	ldr	r7, [r0, #28]
 800ba72:	b091      	sub	sp, #68	@ 0x44
 800ba74:	ed8d 0b02 	vstr	d0, [sp, #8]
 800ba78:	ec55 4b10 	vmov	r4, r5, d0
 800ba7c:	9e1c      	ldr	r6, [sp, #112]	@ 0x70
 800ba7e:	9107      	str	r1, [sp, #28]
 800ba80:	4681      	mov	r9, r0
 800ba82:	9209      	str	r2, [sp, #36]	@ 0x24
 800ba84:	930d      	str	r3, [sp, #52]	@ 0x34
 800ba86:	b97f      	cbnz	r7, 800baa8 <_dtoa_r+0x40>
 800ba88:	2010      	movs	r0, #16
 800ba8a:	f000 fe8d 	bl	800c7a8 <malloc>
 800ba8e:	4602      	mov	r2, r0
 800ba90:	f8c9 001c 	str.w	r0, [r9, #28]
 800ba94:	b920      	cbnz	r0, 800baa0 <_dtoa_r+0x38>
 800ba96:	4ba0      	ldr	r3, [pc, #640]	@ (800bd18 <_dtoa_r+0x2b0>)
 800ba98:	21ef      	movs	r1, #239	@ 0xef
 800ba9a:	48a0      	ldr	r0, [pc, #640]	@ (800bd1c <_dtoa_r+0x2b4>)
 800ba9c:	f001 fd46 	bl	800d52c <__assert_func>
 800baa0:	e9c0 7701 	strd	r7, r7, [r0, #4]
 800baa4:	6007      	str	r7, [r0, #0]
 800baa6:	60c7      	str	r7, [r0, #12]
 800baa8:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800baac:	6819      	ldr	r1, [r3, #0]
 800baae:	b159      	cbz	r1, 800bac8 <_dtoa_r+0x60>
 800bab0:	685a      	ldr	r2, [r3, #4]
 800bab2:	604a      	str	r2, [r1, #4]
 800bab4:	2301      	movs	r3, #1
 800bab6:	4093      	lsls	r3, r2
 800bab8:	608b      	str	r3, [r1, #8]
 800baba:	4648      	mov	r0, r9
 800babc:	f001 f816 	bl	800caec <_Bfree>
 800bac0:	f8d9 301c 	ldr.w	r3, [r9, #28]
 800bac4:	2200      	movs	r2, #0
 800bac6:	601a      	str	r2, [r3, #0]
 800bac8:	1e2b      	subs	r3, r5, #0
 800baca:	bfbb      	ittet	lt
 800bacc:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 800bad0:	9303      	strlt	r3, [sp, #12]
 800bad2:	2300      	movge	r3, #0
 800bad4:	2201      	movlt	r2, #1
 800bad6:	bfac      	ite	ge
 800bad8:	6033      	strge	r3, [r6, #0]
 800bada:	6032      	strlt	r2, [r6, #0]
 800badc:	4b90      	ldr	r3, [pc, #576]	@ (800bd20 <_dtoa_r+0x2b8>)
 800bade:	9e03      	ldr	r6, [sp, #12]
 800bae0:	43b3      	bics	r3, r6
 800bae2:	d110      	bne.n	800bb06 <_dtoa_r+0x9e>
 800bae4:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800bae6:	f242 730f 	movw	r3, #9999	@ 0x270f
 800baea:	6013      	str	r3, [r2, #0]
 800baec:	f3c6 0313 	ubfx	r3, r6, #0, #20
 800baf0:	4323      	orrs	r3, r4
 800baf2:	f000 84e6 	beq.w	800c4c2 <_dtoa_r+0xa5a>
 800baf6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800baf8:	4f8a      	ldr	r7, [pc, #552]	@ (800bd24 <_dtoa_r+0x2bc>)
 800bafa:	2b00      	cmp	r3, #0
 800bafc:	f000 84e8 	beq.w	800c4d0 <_dtoa_r+0xa68>
 800bb00:	1cfb      	adds	r3, r7, #3
 800bb02:	f000 bce3 	b.w	800c4cc <_dtoa_r+0xa64>
 800bb06:	ed9d 8b02 	vldr	d8, [sp, #8]
 800bb0a:	eeb5 8b40 	vcmp.f64	d8, #0.0
 800bb0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb12:	d10a      	bne.n	800bb2a <_dtoa_r+0xc2>
 800bb14:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800bb16:	2301      	movs	r3, #1
 800bb18:	6013      	str	r3, [r2, #0]
 800bb1a:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800bb1c:	b113      	cbz	r3, 800bb24 <_dtoa_r+0xbc>
 800bb1e:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 800bb20:	4b81      	ldr	r3, [pc, #516]	@ (800bd28 <_dtoa_r+0x2c0>)
 800bb22:	6013      	str	r3, [r2, #0]
 800bb24:	4f81      	ldr	r7, [pc, #516]	@ (800bd2c <_dtoa_r+0x2c4>)
 800bb26:	f000 bcd3 	b.w	800c4d0 <_dtoa_r+0xa68>
 800bb2a:	aa0e      	add	r2, sp, #56	@ 0x38
 800bb2c:	a90f      	add	r1, sp, #60	@ 0x3c
 800bb2e:	4648      	mov	r0, r9
 800bb30:	eeb0 0b48 	vmov.f64	d0, d8
 800bb34:	f001 fabc 	bl	800d0b0 <__d2b>
 800bb38:	f3c6 530a 	ubfx	r3, r6, #20, #11
 800bb3c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800bb3e:	9001      	str	r0, [sp, #4]
 800bb40:	2b00      	cmp	r3, #0
 800bb42:	d045      	beq.n	800bbd0 <_dtoa_r+0x168>
 800bb44:	eeb0 7b48 	vmov.f64	d7, d8
 800bb48:	ee18 1a90 	vmov	r1, s17
 800bb4c:	f3c1 0113 	ubfx	r1, r1, #0, #20
 800bb50:	f041 517f 	orr.w	r1, r1, #1069547520	@ 0x3fc00000
 800bb54:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
 800bb58:	f2a3 33ff 	subw	r3, r3, #1023	@ 0x3ff
 800bb5c:	2500      	movs	r5, #0
 800bb5e:	ee07 1a90 	vmov	s15, r1
 800bb62:	eeb7 6b08 	vmov.f64	d6, #120	@ 0x3fc00000  1.5
 800bb66:	ed9f 5b66 	vldr	d5, [pc, #408]	@ 800bd00 <_dtoa_r+0x298>
 800bb6a:	ee37 7b46 	vsub.f64	d7, d7, d6
 800bb6e:	ed9f 6b66 	vldr	d6, [pc, #408]	@ 800bd08 <_dtoa_r+0x2a0>
 800bb72:	eea7 6b05 	vfma.f64	d6, d7, d5
 800bb76:	ed9f 5b66 	vldr	d5, [pc, #408]	@ 800bd10 <_dtoa_r+0x2a8>
 800bb7a:	ee07 3a90 	vmov	s15, r3
 800bb7e:	eeb8 4be7 	vcvt.f64.s32	d4, s15
 800bb82:	eeb0 7b46 	vmov.f64	d7, d6
 800bb86:	eea4 7b05 	vfma.f64	d7, d4, d5
 800bb8a:	eefd 6bc7 	vcvt.s32.f64	s13, d7
 800bb8e:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 800bb92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb96:	ee16 8a90 	vmov	r8, s13
 800bb9a:	d508      	bpl.n	800bbae <_dtoa_r+0x146>
 800bb9c:	eeb8 6be6 	vcvt.f64.s32	d6, s13
 800bba0:	eeb4 6b47 	vcmp.f64	d6, d7
 800bba4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bba8:	bf18      	it	ne
 800bbaa:	f108 38ff 	addne.w	r8, r8, #4294967295	@ 0xffffffff
 800bbae:	f1b8 0f16 	cmp.w	r8, #22
 800bbb2:	d82b      	bhi.n	800bc0c <_dtoa_r+0x1a4>
 800bbb4:	495e      	ldr	r1, [pc, #376]	@ (800bd30 <_dtoa_r+0x2c8>)
 800bbb6:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
 800bbba:	ed91 7b00 	vldr	d7, [r1]
 800bbbe:	eeb4 8bc7 	vcmpe.f64	d8, d7
 800bbc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbc6:	d501      	bpl.n	800bbcc <_dtoa_r+0x164>
 800bbc8:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 800bbcc:	2100      	movs	r1, #0
 800bbce:	e01e      	b.n	800bc0e <_dtoa_r+0x1a6>
 800bbd0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800bbd2:	4413      	add	r3, r2
 800bbd4:	f203 4132 	addw	r1, r3, #1074	@ 0x432
 800bbd8:	2920      	cmp	r1, #32
 800bbda:	bfc1      	itttt	gt
 800bbdc:	f1c1 0140 	rsbgt	r1, r1, #64	@ 0x40
 800bbe0:	408e      	lslgt	r6, r1
 800bbe2:	f203 4112 	addwgt	r1, r3, #1042	@ 0x412
 800bbe6:	fa24 f101 	lsrgt.w	r1, r4, r1
 800bbea:	bfd6      	itet	le
 800bbec:	f1c1 0120 	rsble	r1, r1, #32
 800bbf0:	4331      	orrgt	r1, r6
 800bbf2:	fa04 f101 	lslle.w	r1, r4, r1
 800bbf6:	ee07 1a90 	vmov	s15, r1
 800bbfa:	eeb8 7b67 	vcvt.f64.u32	d7, s15
 800bbfe:	3b01      	subs	r3, #1
 800bc00:	ee17 1a90 	vmov	r1, s15
 800bc04:	2501      	movs	r5, #1
 800bc06:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
 800bc0a:	e7a8      	b.n	800bb5e <_dtoa_r+0xf6>
 800bc0c:	2101      	movs	r1, #1
 800bc0e:	1ad2      	subs	r2, r2, r3
 800bc10:	1e53      	subs	r3, r2, #1
 800bc12:	9306      	str	r3, [sp, #24]
 800bc14:	bf45      	ittet	mi
 800bc16:	f1c2 0301 	rsbmi	r3, r2, #1
 800bc1a:	9304      	strmi	r3, [sp, #16]
 800bc1c:	2300      	movpl	r3, #0
 800bc1e:	2300      	movmi	r3, #0
 800bc20:	bf4c      	ite	mi
 800bc22:	9306      	strmi	r3, [sp, #24]
 800bc24:	9304      	strpl	r3, [sp, #16]
 800bc26:	f1b8 0f00 	cmp.w	r8, #0
 800bc2a:	910c      	str	r1, [sp, #48]	@ 0x30
 800bc2c:	db18      	blt.n	800bc60 <_dtoa_r+0x1f8>
 800bc2e:	9b06      	ldr	r3, [sp, #24]
 800bc30:	f8cd 8028 	str.w	r8, [sp, #40]	@ 0x28
 800bc34:	4443      	add	r3, r8
 800bc36:	9306      	str	r3, [sp, #24]
 800bc38:	2300      	movs	r3, #0
 800bc3a:	9a07      	ldr	r2, [sp, #28]
 800bc3c:	2a09      	cmp	r2, #9
 800bc3e:	d845      	bhi.n	800bccc <_dtoa_r+0x264>
 800bc40:	2a05      	cmp	r2, #5
 800bc42:	bfc4      	itt	gt
 800bc44:	3a04      	subgt	r2, #4
 800bc46:	9207      	strgt	r2, [sp, #28]
 800bc48:	9a07      	ldr	r2, [sp, #28]
 800bc4a:	f1a2 0202 	sub.w	r2, r2, #2
 800bc4e:	bfcc      	ite	gt
 800bc50:	2400      	movgt	r4, #0
 800bc52:	2401      	movle	r4, #1
 800bc54:	2a03      	cmp	r2, #3
 800bc56:	d844      	bhi.n	800bce2 <_dtoa_r+0x27a>
 800bc58:	e8df f002 	tbb	[pc, r2]
 800bc5c:	0b173634 	.word	0x0b173634
 800bc60:	9b04      	ldr	r3, [sp, #16]
 800bc62:	2200      	movs	r2, #0
 800bc64:	eba3 0308 	sub.w	r3, r3, r8
 800bc68:	9304      	str	r3, [sp, #16]
 800bc6a:	920a      	str	r2, [sp, #40]	@ 0x28
 800bc6c:	f1c8 0300 	rsb	r3, r8, #0
 800bc70:	e7e3      	b.n	800bc3a <_dtoa_r+0x1d2>
 800bc72:	2201      	movs	r2, #1
 800bc74:	9208      	str	r2, [sp, #32]
 800bc76:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800bc78:	eb08 0b02 	add.w	fp, r8, r2
 800bc7c:	f10b 0a01 	add.w	sl, fp, #1
 800bc80:	4652      	mov	r2, sl
 800bc82:	2a01      	cmp	r2, #1
 800bc84:	bfb8      	it	lt
 800bc86:	2201      	movlt	r2, #1
 800bc88:	e006      	b.n	800bc98 <_dtoa_r+0x230>
 800bc8a:	2201      	movs	r2, #1
 800bc8c:	9208      	str	r2, [sp, #32]
 800bc8e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800bc90:	2a00      	cmp	r2, #0
 800bc92:	dd29      	ble.n	800bce8 <_dtoa_r+0x280>
 800bc94:	4693      	mov	fp, r2
 800bc96:	4692      	mov	sl, r2
 800bc98:	f8d9 701c 	ldr.w	r7, [r9, #28]
 800bc9c:	2100      	movs	r1, #0
 800bc9e:	2004      	movs	r0, #4
 800bca0:	f100 0614 	add.w	r6, r0, #20
 800bca4:	4296      	cmp	r6, r2
 800bca6:	d926      	bls.n	800bcf6 <_dtoa_r+0x28e>
 800bca8:	6079      	str	r1, [r7, #4]
 800bcaa:	4648      	mov	r0, r9
 800bcac:	9305      	str	r3, [sp, #20]
 800bcae:	f000 fedd 	bl	800ca6c <_Balloc>
 800bcb2:	9b05      	ldr	r3, [sp, #20]
 800bcb4:	4607      	mov	r7, r0
 800bcb6:	2800      	cmp	r0, #0
 800bcb8:	d13e      	bne.n	800bd38 <_dtoa_r+0x2d0>
 800bcba:	4b1e      	ldr	r3, [pc, #120]	@ (800bd34 <_dtoa_r+0x2cc>)
 800bcbc:	4602      	mov	r2, r0
 800bcbe:	f240 11af 	movw	r1, #431	@ 0x1af
 800bcc2:	e6ea      	b.n	800ba9a <_dtoa_r+0x32>
 800bcc4:	2200      	movs	r2, #0
 800bcc6:	e7e1      	b.n	800bc8c <_dtoa_r+0x224>
 800bcc8:	2200      	movs	r2, #0
 800bcca:	e7d3      	b.n	800bc74 <_dtoa_r+0x20c>
 800bccc:	2401      	movs	r4, #1
 800bcce:	2200      	movs	r2, #0
 800bcd0:	e9cd 2407 	strd	r2, r4, [sp, #28]
 800bcd4:	f04f 3bff 	mov.w	fp, #4294967295	@ 0xffffffff
 800bcd8:	2100      	movs	r1, #0
 800bcda:	46da      	mov	sl, fp
 800bcdc:	2212      	movs	r2, #18
 800bcde:	9109      	str	r1, [sp, #36]	@ 0x24
 800bce0:	e7da      	b.n	800bc98 <_dtoa_r+0x230>
 800bce2:	2201      	movs	r2, #1
 800bce4:	9208      	str	r2, [sp, #32]
 800bce6:	e7f5      	b.n	800bcd4 <_dtoa_r+0x26c>
 800bce8:	f04f 0b01 	mov.w	fp, #1
 800bcec:	46da      	mov	sl, fp
 800bcee:	465a      	mov	r2, fp
 800bcf0:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 800bcf4:	e7d0      	b.n	800bc98 <_dtoa_r+0x230>
 800bcf6:	3101      	adds	r1, #1
 800bcf8:	0040      	lsls	r0, r0, #1
 800bcfa:	e7d1      	b.n	800bca0 <_dtoa_r+0x238>
 800bcfc:	f3af 8000 	nop.w
 800bd00:	636f4361 	.word	0x636f4361
 800bd04:	3fd287a7 	.word	0x3fd287a7
 800bd08:	8b60c8b3 	.word	0x8b60c8b3
 800bd0c:	3fc68a28 	.word	0x3fc68a28
 800bd10:	509f79fb 	.word	0x509f79fb
 800bd14:	3fd34413 	.word	0x3fd34413
 800bd18:	0800dea9 	.word	0x0800dea9
 800bd1c:	0800dec0 	.word	0x0800dec0
 800bd20:	7ff00000 	.word	0x7ff00000
 800bd24:	0800dea5 	.word	0x0800dea5
 800bd28:	0800de79 	.word	0x0800de79
 800bd2c:	0800de78 	.word	0x0800de78
 800bd30:	0800e010 	.word	0x0800e010
 800bd34:	0800df18 	.word	0x0800df18
 800bd38:	f8d9 201c 	ldr.w	r2, [r9, #28]
 800bd3c:	f1ba 0f0e 	cmp.w	sl, #14
 800bd40:	6010      	str	r0, [r2, #0]
 800bd42:	d86e      	bhi.n	800be22 <_dtoa_r+0x3ba>
 800bd44:	2c00      	cmp	r4, #0
 800bd46:	d06c      	beq.n	800be22 <_dtoa_r+0x3ba>
 800bd48:	f1b8 0f00 	cmp.w	r8, #0
 800bd4c:	f340 80b4 	ble.w	800beb8 <_dtoa_r+0x450>
 800bd50:	4ac8      	ldr	r2, [pc, #800]	@ (800c074 <_dtoa_r+0x60c>)
 800bd52:	f008 010f 	and.w	r1, r8, #15
 800bd56:	eb02 02c1 	add.w	r2, r2, r1, lsl #3
 800bd5a:	f418 7f80 	tst.w	r8, #256	@ 0x100
 800bd5e:	ed92 7b00 	vldr	d7, [r2]
 800bd62:	ea4f 1128 	mov.w	r1, r8, asr #4
 800bd66:	f000 809b 	beq.w	800bea0 <_dtoa_r+0x438>
 800bd6a:	4ac3      	ldr	r2, [pc, #780]	@ (800c078 <_dtoa_r+0x610>)
 800bd6c:	ed92 6b08 	vldr	d6, [r2, #32]
 800bd70:	ee88 6b06 	vdiv.f64	d6, d8, d6
 800bd74:	ed8d 6b02 	vstr	d6, [sp, #8]
 800bd78:	f001 010f 	and.w	r1, r1, #15
 800bd7c:	2203      	movs	r2, #3
 800bd7e:	48be      	ldr	r0, [pc, #760]	@ (800c078 <_dtoa_r+0x610>)
 800bd80:	2900      	cmp	r1, #0
 800bd82:	f040 808f 	bne.w	800bea4 <_dtoa_r+0x43c>
 800bd86:	ed9d 6b02 	vldr	d6, [sp, #8]
 800bd8a:	ee86 7b07 	vdiv.f64	d7, d6, d7
 800bd8e:	ed8d 7b02 	vstr	d7, [sp, #8]
 800bd92:	990c      	ldr	r1, [sp, #48]	@ 0x30
 800bd94:	ed9d 7b02 	vldr	d7, [sp, #8]
 800bd98:	2900      	cmp	r1, #0
 800bd9a:	f000 80b3 	beq.w	800bf04 <_dtoa_r+0x49c>
 800bd9e:	eeb7 6b00 	vmov.f64	d6, #112	@ 0x3f800000  1.0
 800bda2:	eeb4 7bc6 	vcmpe.f64	d7, d6
 800bda6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bdaa:	f140 80ab 	bpl.w	800bf04 <_dtoa_r+0x49c>
 800bdae:	f1ba 0f00 	cmp.w	sl, #0
 800bdb2:	f000 80a7 	beq.w	800bf04 <_dtoa_r+0x49c>
 800bdb6:	f1bb 0f00 	cmp.w	fp, #0
 800bdba:	dd30      	ble.n	800be1e <_dtoa_r+0x3b6>
 800bdbc:	eeb2 6b04 	vmov.f64	d6, #36	@ 0x41200000  10.0
 800bdc0:	ee27 7b06 	vmul.f64	d7, d7, d6
 800bdc4:	ed8d 7b02 	vstr	d7, [sp, #8]
 800bdc8:	f108 31ff 	add.w	r1, r8, #4294967295	@ 0xffffffff
 800bdcc:	9105      	str	r1, [sp, #20]
 800bdce:	3201      	adds	r2, #1
 800bdd0:	465c      	mov	r4, fp
 800bdd2:	ed9d 6b02 	vldr	d6, [sp, #8]
 800bdd6:	eeb1 5b0c 	vmov.f64	d5, #28	@ 0x40e00000  7.0
 800bdda:	ee07 2a90 	vmov	s15, r2
 800bdde:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 800bde2:	eea7 5b06 	vfma.f64	d5, d7, d6
 800bde6:	ee15 2a90 	vmov	r2, s11
 800bdea:	ec51 0b15 	vmov	r0, r1, d5
 800bdee:	f1a2 7150 	sub.w	r1, r2, #54525952	@ 0x3400000
 800bdf2:	2c00      	cmp	r4, #0
 800bdf4:	f040 808a 	bne.w	800bf0c <_dtoa_r+0x4a4>
 800bdf8:	eeb1 7b04 	vmov.f64	d7, #20	@ 0x40a00000  5.0
 800bdfc:	ee36 6b47 	vsub.f64	d6, d6, d7
 800be00:	ec41 0b17 	vmov	d7, r0, r1
 800be04:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800be08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be0c:	f300 826a 	bgt.w	800c2e4 <_dtoa_r+0x87c>
 800be10:	eeb1 7b47 	vneg.f64	d7, d7
 800be14:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800be18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be1c:	d423      	bmi.n	800be66 <_dtoa_r+0x3fe>
 800be1e:	ed8d 8b02 	vstr	d8, [sp, #8]
 800be22:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 800be24:	2a00      	cmp	r2, #0
 800be26:	f2c0 8129 	blt.w	800c07c <_dtoa_r+0x614>
 800be2a:	f1b8 0f0e 	cmp.w	r8, #14
 800be2e:	f300 8125 	bgt.w	800c07c <_dtoa_r+0x614>
 800be32:	4b90      	ldr	r3, [pc, #576]	@ (800c074 <_dtoa_r+0x60c>)
 800be34:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 800be38:	ed93 6b00 	vldr	d6, [r3]
 800be3c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800be3e:	2b00      	cmp	r3, #0
 800be40:	f280 80c8 	bge.w	800bfd4 <_dtoa_r+0x56c>
 800be44:	f1ba 0f00 	cmp.w	sl, #0
 800be48:	f300 80c4 	bgt.w	800bfd4 <_dtoa_r+0x56c>
 800be4c:	d10b      	bne.n	800be66 <_dtoa_r+0x3fe>
 800be4e:	eeb1 7b04 	vmov.f64	d7, #20	@ 0x40a00000  5.0
 800be52:	ee26 6b07 	vmul.f64	d6, d6, d7
 800be56:	ed9d 7b02 	vldr	d7, [sp, #8]
 800be5a:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800be5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be62:	f2c0 823c 	blt.w	800c2de <_dtoa_r+0x876>
 800be66:	2400      	movs	r4, #0
 800be68:	4625      	mov	r5, r4
 800be6a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800be6c:	43db      	mvns	r3, r3
 800be6e:	9305      	str	r3, [sp, #20]
 800be70:	463e      	mov	r6, r7
 800be72:	f04f 0800 	mov.w	r8, #0
 800be76:	4621      	mov	r1, r4
 800be78:	4648      	mov	r0, r9
 800be7a:	f000 fe37 	bl	800caec <_Bfree>
 800be7e:	2d00      	cmp	r5, #0
 800be80:	f000 80a2 	beq.w	800bfc8 <_dtoa_r+0x560>
 800be84:	f1b8 0f00 	cmp.w	r8, #0
 800be88:	d005      	beq.n	800be96 <_dtoa_r+0x42e>
 800be8a:	45a8      	cmp	r8, r5
 800be8c:	d003      	beq.n	800be96 <_dtoa_r+0x42e>
 800be8e:	4641      	mov	r1, r8
 800be90:	4648      	mov	r0, r9
 800be92:	f000 fe2b 	bl	800caec <_Bfree>
 800be96:	4629      	mov	r1, r5
 800be98:	4648      	mov	r0, r9
 800be9a:	f000 fe27 	bl	800caec <_Bfree>
 800be9e:	e093      	b.n	800bfc8 <_dtoa_r+0x560>
 800bea0:	2202      	movs	r2, #2
 800bea2:	e76c      	b.n	800bd7e <_dtoa_r+0x316>
 800bea4:	07cc      	lsls	r4, r1, #31
 800bea6:	d504      	bpl.n	800beb2 <_dtoa_r+0x44a>
 800bea8:	ed90 6b00 	vldr	d6, [r0]
 800beac:	3201      	adds	r2, #1
 800beae:	ee27 7b06 	vmul.f64	d7, d7, d6
 800beb2:	1049      	asrs	r1, r1, #1
 800beb4:	3008      	adds	r0, #8
 800beb6:	e763      	b.n	800bd80 <_dtoa_r+0x318>
 800beb8:	d022      	beq.n	800bf00 <_dtoa_r+0x498>
 800beba:	f1c8 0100 	rsb	r1, r8, #0
 800bebe:	4a6d      	ldr	r2, [pc, #436]	@ (800c074 <_dtoa_r+0x60c>)
 800bec0:	f001 000f 	and.w	r0, r1, #15
 800bec4:	eb02 02c0 	add.w	r2, r2, r0, lsl #3
 800bec8:	ed92 7b00 	vldr	d7, [r2]
 800becc:	ee28 7b07 	vmul.f64	d7, d8, d7
 800bed0:	ed8d 7b02 	vstr	d7, [sp, #8]
 800bed4:	4868      	ldr	r0, [pc, #416]	@ (800c078 <_dtoa_r+0x610>)
 800bed6:	1109      	asrs	r1, r1, #4
 800bed8:	2400      	movs	r4, #0
 800beda:	2202      	movs	r2, #2
 800bedc:	b929      	cbnz	r1, 800beea <_dtoa_r+0x482>
 800bede:	2c00      	cmp	r4, #0
 800bee0:	f43f af57 	beq.w	800bd92 <_dtoa_r+0x32a>
 800bee4:	ed8d 7b02 	vstr	d7, [sp, #8]
 800bee8:	e753      	b.n	800bd92 <_dtoa_r+0x32a>
 800beea:	07ce      	lsls	r6, r1, #31
 800beec:	d505      	bpl.n	800befa <_dtoa_r+0x492>
 800beee:	ed90 6b00 	vldr	d6, [r0]
 800bef2:	3201      	adds	r2, #1
 800bef4:	2401      	movs	r4, #1
 800bef6:	ee27 7b06 	vmul.f64	d7, d7, d6
 800befa:	1049      	asrs	r1, r1, #1
 800befc:	3008      	adds	r0, #8
 800befe:	e7ed      	b.n	800bedc <_dtoa_r+0x474>
 800bf00:	2202      	movs	r2, #2
 800bf02:	e746      	b.n	800bd92 <_dtoa_r+0x32a>
 800bf04:	f8cd 8014 	str.w	r8, [sp, #20]
 800bf08:	4654      	mov	r4, sl
 800bf0a:	e762      	b.n	800bdd2 <_dtoa_r+0x36a>
 800bf0c:	4a59      	ldr	r2, [pc, #356]	@ (800c074 <_dtoa_r+0x60c>)
 800bf0e:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
 800bf12:	ed12 4b02 	vldr	d4, [r2, #-8]
 800bf16:	9a08      	ldr	r2, [sp, #32]
 800bf18:	ec41 0b17 	vmov	d7, r0, r1
 800bf1c:	443c      	add	r4, r7
 800bf1e:	b34a      	cbz	r2, 800bf74 <_dtoa_r+0x50c>
 800bf20:	eeb6 3b00 	vmov.f64	d3, #96	@ 0x3f000000  0.5
 800bf24:	eeb7 2b00 	vmov.f64	d2, #112	@ 0x3f800000  1.0
 800bf28:	463e      	mov	r6, r7
 800bf2a:	ee83 5b04 	vdiv.f64	d5, d3, d4
 800bf2e:	eeb2 3b04 	vmov.f64	d3, #36	@ 0x41200000  10.0
 800bf32:	ee35 7b47 	vsub.f64	d7, d5, d7
 800bf36:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 800bf3a:	ee14 2a90 	vmov	r2, s9
 800bf3e:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 800bf42:	3230      	adds	r2, #48	@ 0x30
 800bf44:	ee36 6b45 	vsub.f64	d6, d6, d5
 800bf48:	eeb4 6bc7 	vcmpe.f64	d6, d7
 800bf4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf50:	f806 2b01 	strb.w	r2, [r6], #1
 800bf54:	d438      	bmi.n	800bfc8 <_dtoa_r+0x560>
 800bf56:	ee32 5b46 	vsub.f64	d5, d2, d6
 800bf5a:	eeb4 5bc7 	vcmpe.f64	d5, d7
 800bf5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf62:	d46e      	bmi.n	800c042 <_dtoa_r+0x5da>
 800bf64:	42a6      	cmp	r6, r4
 800bf66:	f43f af5a 	beq.w	800be1e <_dtoa_r+0x3b6>
 800bf6a:	ee27 7b03 	vmul.f64	d7, d7, d3
 800bf6e:	ee26 6b03 	vmul.f64	d6, d6, d3
 800bf72:	e7e0      	b.n	800bf36 <_dtoa_r+0x4ce>
 800bf74:	4621      	mov	r1, r4
 800bf76:	463e      	mov	r6, r7
 800bf78:	ee27 7b04 	vmul.f64	d7, d7, d4
 800bf7c:	eeb2 3b04 	vmov.f64	d3, #36	@ 0x41200000  10.0
 800bf80:	eefd 4bc6 	vcvt.s32.f64	s9, d6
 800bf84:	ee14 2a90 	vmov	r2, s9
 800bf88:	3230      	adds	r2, #48	@ 0x30
 800bf8a:	f806 2b01 	strb.w	r2, [r6], #1
 800bf8e:	42a6      	cmp	r6, r4
 800bf90:	eeb8 5be4 	vcvt.f64.s32	d5, s9
 800bf94:	ee36 6b45 	vsub.f64	d6, d6, d5
 800bf98:	d119      	bne.n	800bfce <_dtoa_r+0x566>
 800bf9a:	eeb6 5b00 	vmov.f64	d5, #96	@ 0x3f000000  0.5
 800bf9e:	ee37 4b05 	vadd.f64	d4, d7, d5
 800bfa2:	eeb4 6bc4 	vcmpe.f64	d6, d4
 800bfa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bfaa:	dc4a      	bgt.n	800c042 <_dtoa_r+0x5da>
 800bfac:	ee35 5b47 	vsub.f64	d5, d5, d7
 800bfb0:	eeb4 6bc5 	vcmpe.f64	d6, d5
 800bfb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bfb8:	f57f af31 	bpl.w	800be1e <_dtoa_r+0x3b6>
 800bfbc:	460e      	mov	r6, r1
 800bfbe:	3901      	subs	r1, #1
 800bfc0:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800bfc4:	2b30      	cmp	r3, #48	@ 0x30
 800bfc6:	d0f9      	beq.n	800bfbc <_dtoa_r+0x554>
 800bfc8:	f8dd 8014 	ldr.w	r8, [sp, #20]
 800bfcc:	e027      	b.n	800c01e <_dtoa_r+0x5b6>
 800bfce:	ee26 6b03 	vmul.f64	d6, d6, d3
 800bfd2:	e7d5      	b.n	800bf80 <_dtoa_r+0x518>
 800bfd4:	ed9d 7b02 	vldr	d7, [sp, #8]
 800bfd8:	eeb2 4b04 	vmov.f64	d4, #36	@ 0x41200000  10.0
 800bfdc:	463e      	mov	r6, r7
 800bfde:	ee87 5b06 	vdiv.f64	d5, d7, d6
 800bfe2:	eebd 5bc5 	vcvt.s32.f64	s10, d5
 800bfe6:	ee15 3a10 	vmov	r3, s10
 800bfea:	3330      	adds	r3, #48	@ 0x30
 800bfec:	f806 3b01 	strb.w	r3, [r6], #1
 800bff0:	1bf3      	subs	r3, r6, r7
 800bff2:	459a      	cmp	sl, r3
 800bff4:	eeb8 3bc5 	vcvt.f64.s32	d3, s10
 800bff8:	eea3 7b46 	vfms.f64	d7, d3, d6
 800bffc:	d132      	bne.n	800c064 <_dtoa_r+0x5fc>
 800bffe:	ee37 7b07 	vadd.f64	d7, d7, d7
 800c002:	eeb4 7bc6 	vcmpe.f64	d7, d6
 800c006:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c00a:	dc18      	bgt.n	800c03e <_dtoa_r+0x5d6>
 800c00c:	eeb4 7b46 	vcmp.f64	d7, d6
 800c010:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c014:	d103      	bne.n	800c01e <_dtoa_r+0x5b6>
 800c016:	ee15 3a10 	vmov	r3, s10
 800c01a:	07db      	lsls	r3, r3, #31
 800c01c:	d40f      	bmi.n	800c03e <_dtoa_r+0x5d6>
 800c01e:	9901      	ldr	r1, [sp, #4]
 800c020:	4648      	mov	r0, r9
 800c022:	f000 fd63 	bl	800caec <_Bfree>
 800c026:	2300      	movs	r3, #0
 800c028:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800c02a:	7033      	strb	r3, [r6, #0]
 800c02c:	f108 0301 	add.w	r3, r8, #1
 800c030:	6013      	str	r3, [r2, #0]
 800c032:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800c034:	2b00      	cmp	r3, #0
 800c036:	f000 824b 	beq.w	800c4d0 <_dtoa_r+0xa68>
 800c03a:	601e      	str	r6, [r3, #0]
 800c03c:	e248      	b.n	800c4d0 <_dtoa_r+0xa68>
 800c03e:	f8cd 8014 	str.w	r8, [sp, #20]
 800c042:	4633      	mov	r3, r6
 800c044:	461e      	mov	r6, r3
 800c046:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c04a:	2a39      	cmp	r2, #57	@ 0x39
 800c04c:	d106      	bne.n	800c05c <_dtoa_r+0x5f4>
 800c04e:	429f      	cmp	r7, r3
 800c050:	d1f8      	bne.n	800c044 <_dtoa_r+0x5dc>
 800c052:	9a05      	ldr	r2, [sp, #20]
 800c054:	3201      	adds	r2, #1
 800c056:	9205      	str	r2, [sp, #20]
 800c058:	2230      	movs	r2, #48	@ 0x30
 800c05a:	703a      	strb	r2, [r7, #0]
 800c05c:	781a      	ldrb	r2, [r3, #0]
 800c05e:	3201      	adds	r2, #1
 800c060:	701a      	strb	r2, [r3, #0]
 800c062:	e7b1      	b.n	800bfc8 <_dtoa_r+0x560>
 800c064:	ee27 7b04 	vmul.f64	d7, d7, d4
 800c068:	eeb5 7b40 	vcmp.f64	d7, #0.0
 800c06c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c070:	d1b5      	bne.n	800bfde <_dtoa_r+0x576>
 800c072:	e7d4      	b.n	800c01e <_dtoa_r+0x5b6>
 800c074:	0800e010 	.word	0x0800e010
 800c078:	0800dfe8 	.word	0x0800dfe8
 800c07c:	9908      	ldr	r1, [sp, #32]
 800c07e:	2900      	cmp	r1, #0
 800c080:	f000 80e9 	beq.w	800c256 <_dtoa_r+0x7ee>
 800c084:	9907      	ldr	r1, [sp, #28]
 800c086:	2901      	cmp	r1, #1
 800c088:	f300 80cb 	bgt.w	800c222 <_dtoa_r+0x7ba>
 800c08c:	2d00      	cmp	r5, #0
 800c08e:	f000 80c4 	beq.w	800c21a <_dtoa_r+0x7b2>
 800c092:	f202 4233 	addw	r2, r2, #1075	@ 0x433
 800c096:	9e04      	ldr	r6, [sp, #16]
 800c098:	461c      	mov	r4, r3
 800c09a:	9305      	str	r3, [sp, #20]
 800c09c:	9b04      	ldr	r3, [sp, #16]
 800c09e:	4413      	add	r3, r2
 800c0a0:	9304      	str	r3, [sp, #16]
 800c0a2:	9b06      	ldr	r3, [sp, #24]
 800c0a4:	2101      	movs	r1, #1
 800c0a6:	4413      	add	r3, r2
 800c0a8:	4648      	mov	r0, r9
 800c0aa:	9306      	str	r3, [sp, #24]
 800c0ac:	f000 fdd2 	bl	800cc54 <__i2b>
 800c0b0:	9b05      	ldr	r3, [sp, #20]
 800c0b2:	4605      	mov	r5, r0
 800c0b4:	b166      	cbz	r6, 800c0d0 <_dtoa_r+0x668>
 800c0b6:	9a06      	ldr	r2, [sp, #24]
 800c0b8:	2a00      	cmp	r2, #0
 800c0ba:	dd09      	ble.n	800c0d0 <_dtoa_r+0x668>
 800c0bc:	42b2      	cmp	r2, r6
 800c0be:	9904      	ldr	r1, [sp, #16]
 800c0c0:	bfa8      	it	ge
 800c0c2:	4632      	movge	r2, r6
 800c0c4:	1a89      	subs	r1, r1, r2
 800c0c6:	9104      	str	r1, [sp, #16]
 800c0c8:	9906      	ldr	r1, [sp, #24]
 800c0ca:	1ab6      	subs	r6, r6, r2
 800c0cc:	1a8a      	subs	r2, r1, r2
 800c0ce:	9206      	str	r2, [sp, #24]
 800c0d0:	b30b      	cbz	r3, 800c116 <_dtoa_r+0x6ae>
 800c0d2:	9a08      	ldr	r2, [sp, #32]
 800c0d4:	2a00      	cmp	r2, #0
 800c0d6:	f000 80c5 	beq.w	800c264 <_dtoa_r+0x7fc>
 800c0da:	2c00      	cmp	r4, #0
 800c0dc:	f000 80bf 	beq.w	800c25e <_dtoa_r+0x7f6>
 800c0e0:	4629      	mov	r1, r5
 800c0e2:	4622      	mov	r2, r4
 800c0e4:	4648      	mov	r0, r9
 800c0e6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c0e8:	f000 fe6c 	bl	800cdc4 <__pow5mult>
 800c0ec:	9a01      	ldr	r2, [sp, #4]
 800c0ee:	4601      	mov	r1, r0
 800c0f0:	4605      	mov	r5, r0
 800c0f2:	4648      	mov	r0, r9
 800c0f4:	f000 fdc4 	bl	800cc80 <__multiply>
 800c0f8:	9901      	ldr	r1, [sp, #4]
 800c0fa:	9005      	str	r0, [sp, #20]
 800c0fc:	4648      	mov	r0, r9
 800c0fe:	f000 fcf5 	bl	800caec <_Bfree>
 800c102:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800c104:	1b1b      	subs	r3, r3, r4
 800c106:	f000 80b0 	beq.w	800c26a <_dtoa_r+0x802>
 800c10a:	9905      	ldr	r1, [sp, #20]
 800c10c:	461a      	mov	r2, r3
 800c10e:	4648      	mov	r0, r9
 800c110:	f000 fe58 	bl	800cdc4 <__pow5mult>
 800c114:	9001      	str	r0, [sp, #4]
 800c116:	2101      	movs	r1, #1
 800c118:	4648      	mov	r0, r9
 800c11a:	f000 fd9b 	bl	800cc54 <__i2b>
 800c11e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c120:	4604      	mov	r4, r0
 800c122:	2b00      	cmp	r3, #0
 800c124:	f000 81da 	beq.w	800c4dc <_dtoa_r+0xa74>
 800c128:	461a      	mov	r2, r3
 800c12a:	4601      	mov	r1, r0
 800c12c:	4648      	mov	r0, r9
 800c12e:	f000 fe49 	bl	800cdc4 <__pow5mult>
 800c132:	9b07      	ldr	r3, [sp, #28]
 800c134:	2b01      	cmp	r3, #1
 800c136:	4604      	mov	r4, r0
 800c138:	f300 80a0 	bgt.w	800c27c <_dtoa_r+0x814>
 800c13c:	9b02      	ldr	r3, [sp, #8]
 800c13e:	2b00      	cmp	r3, #0
 800c140:	f040 8096 	bne.w	800c270 <_dtoa_r+0x808>
 800c144:	9b03      	ldr	r3, [sp, #12]
 800c146:	f3c3 0213 	ubfx	r2, r3, #0, #20
 800c14a:	2a00      	cmp	r2, #0
 800c14c:	f040 8092 	bne.w	800c274 <_dtoa_r+0x80c>
 800c150:	f023 4200 	bic.w	r2, r3, #2147483648	@ 0x80000000
 800c154:	0d12      	lsrs	r2, r2, #20
 800c156:	0512      	lsls	r2, r2, #20
 800c158:	2a00      	cmp	r2, #0
 800c15a:	f000 808d 	beq.w	800c278 <_dtoa_r+0x810>
 800c15e:	9b04      	ldr	r3, [sp, #16]
 800c160:	3301      	adds	r3, #1
 800c162:	9304      	str	r3, [sp, #16]
 800c164:	9b06      	ldr	r3, [sp, #24]
 800c166:	3301      	adds	r3, #1
 800c168:	9306      	str	r3, [sp, #24]
 800c16a:	2301      	movs	r3, #1
 800c16c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c16e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c170:	2b00      	cmp	r3, #0
 800c172:	f000 81b9 	beq.w	800c4e8 <_dtoa_r+0xa80>
 800c176:	6922      	ldr	r2, [r4, #16]
 800c178:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800c17c:	6910      	ldr	r0, [r2, #16]
 800c17e:	f000 fd1d 	bl	800cbbc <__hi0bits>
 800c182:	f1c0 0020 	rsb	r0, r0, #32
 800c186:	9b06      	ldr	r3, [sp, #24]
 800c188:	4418      	add	r0, r3
 800c18a:	f010 001f 	ands.w	r0, r0, #31
 800c18e:	f000 8081 	beq.w	800c294 <_dtoa_r+0x82c>
 800c192:	f1c0 0220 	rsb	r2, r0, #32
 800c196:	2a04      	cmp	r2, #4
 800c198:	dd73      	ble.n	800c282 <_dtoa_r+0x81a>
 800c19a:	9b04      	ldr	r3, [sp, #16]
 800c19c:	f1c0 001c 	rsb	r0, r0, #28
 800c1a0:	4403      	add	r3, r0
 800c1a2:	9304      	str	r3, [sp, #16]
 800c1a4:	9b06      	ldr	r3, [sp, #24]
 800c1a6:	4406      	add	r6, r0
 800c1a8:	4403      	add	r3, r0
 800c1aa:	9306      	str	r3, [sp, #24]
 800c1ac:	9b04      	ldr	r3, [sp, #16]
 800c1ae:	2b00      	cmp	r3, #0
 800c1b0:	dd05      	ble.n	800c1be <_dtoa_r+0x756>
 800c1b2:	9901      	ldr	r1, [sp, #4]
 800c1b4:	461a      	mov	r2, r3
 800c1b6:	4648      	mov	r0, r9
 800c1b8:	f000 fe5e 	bl	800ce78 <__lshift>
 800c1bc:	9001      	str	r0, [sp, #4]
 800c1be:	9b06      	ldr	r3, [sp, #24]
 800c1c0:	2b00      	cmp	r3, #0
 800c1c2:	dd05      	ble.n	800c1d0 <_dtoa_r+0x768>
 800c1c4:	4621      	mov	r1, r4
 800c1c6:	461a      	mov	r2, r3
 800c1c8:	4648      	mov	r0, r9
 800c1ca:	f000 fe55 	bl	800ce78 <__lshift>
 800c1ce:	4604      	mov	r4, r0
 800c1d0:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800c1d2:	2b00      	cmp	r3, #0
 800c1d4:	d060      	beq.n	800c298 <_dtoa_r+0x830>
 800c1d6:	9801      	ldr	r0, [sp, #4]
 800c1d8:	4621      	mov	r1, r4
 800c1da:	f000 feb9 	bl	800cf50 <__mcmp>
 800c1de:	2800      	cmp	r0, #0
 800c1e0:	da5a      	bge.n	800c298 <_dtoa_r+0x830>
 800c1e2:	f108 33ff 	add.w	r3, r8, #4294967295	@ 0xffffffff
 800c1e6:	9305      	str	r3, [sp, #20]
 800c1e8:	9901      	ldr	r1, [sp, #4]
 800c1ea:	2300      	movs	r3, #0
 800c1ec:	220a      	movs	r2, #10
 800c1ee:	4648      	mov	r0, r9
 800c1f0:	f000 fc9e 	bl	800cb30 <__multadd>
 800c1f4:	9b08      	ldr	r3, [sp, #32]
 800c1f6:	9001      	str	r0, [sp, #4]
 800c1f8:	2b00      	cmp	r3, #0
 800c1fa:	f000 8177 	beq.w	800c4ec <_dtoa_r+0xa84>
 800c1fe:	4629      	mov	r1, r5
 800c200:	2300      	movs	r3, #0
 800c202:	220a      	movs	r2, #10
 800c204:	4648      	mov	r0, r9
 800c206:	f000 fc93 	bl	800cb30 <__multadd>
 800c20a:	f1bb 0f00 	cmp.w	fp, #0
 800c20e:	4605      	mov	r5, r0
 800c210:	dc6e      	bgt.n	800c2f0 <_dtoa_r+0x888>
 800c212:	9b07      	ldr	r3, [sp, #28]
 800c214:	2b02      	cmp	r3, #2
 800c216:	dc48      	bgt.n	800c2aa <_dtoa_r+0x842>
 800c218:	e06a      	b.n	800c2f0 <_dtoa_r+0x888>
 800c21a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800c21c:	f1c2 0236 	rsb	r2, r2, #54	@ 0x36
 800c220:	e739      	b.n	800c096 <_dtoa_r+0x62e>
 800c222:	f10a 34ff 	add.w	r4, sl, #4294967295	@ 0xffffffff
 800c226:	42a3      	cmp	r3, r4
 800c228:	db07      	blt.n	800c23a <_dtoa_r+0x7d2>
 800c22a:	f1ba 0f00 	cmp.w	sl, #0
 800c22e:	eba3 0404 	sub.w	r4, r3, r4
 800c232:	db0b      	blt.n	800c24c <_dtoa_r+0x7e4>
 800c234:	9e04      	ldr	r6, [sp, #16]
 800c236:	4652      	mov	r2, sl
 800c238:	e72f      	b.n	800c09a <_dtoa_r+0x632>
 800c23a:	1ae2      	subs	r2, r4, r3
 800c23c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c23e:	9e04      	ldr	r6, [sp, #16]
 800c240:	4413      	add	r3, r2
 800c242:	930a      	str	r3, [sp, #40]	@ 0x28
 800c244:	4652      	mov	r2, sl
 800c246:	4623      	mov	r3, r4
 800c248:	2400      	movs	r4, #0
 800c24a:	e726      	b.n	800c09a <_dtoa_r+0x632>
 800c24c:	9a04      	ldr	r2, [sp, #16]
 800c24e:	eba2 060a 	sub.w	r6, r2, sl
 800c252:	2200      	movs	r2, #0
 800c254:	e721      	b.n	800c09a <_dtoa_r+0x632>
 800c256:	9e04      	ldr	r6, [sp, #16]
 800c258:	9d08      	ldr	r5, [sp, #32]
 800c25a:	461c      	mov	r4, r3
 800c25c:	e72a      	b.n	800c0b4 <_dtoa_r+0x64c>
 800c25e:	9a01      	ldr	r2, [sp, #4]
 800c260:	9205      	str	r2, [sp, #20]
 800c262:	e752      	b.n	800c10a <_dtoa_r+0x6a2>
 800c264:	9901      	ldr	r1, [sp, #4]
 800c266:	461a      	mov	r2, r3
 800c268:	e751      	b.n	800c10e <_dtoa_r+0x6a6>
 800c26a:	9b05      	ldr	r3, [sp, #20]
 800c26c:	9301      	str	r3, [sp, #4]
 800c26e:	e752      	b.n	800c116 <_dtoa_r+0x6ae>
 800c270:	2300      	movs	r3, #0
 800c272:	e77b      	b.n	800c16c <_dtoa_r+0x704>
 800c274:	9b02      	ldr	r3, [sp, #8]
 800c276:	e779      	b.n	800c16c <_dtoa_r+0x704>
 800c278:	920b      	str	r2, [sp, #44]	@ 0x2c
 800c27a:	e778      	b.n	800c16e <_dtoa_r+0x706>
 800c27c:	2300      	movs	r3, #0
 800c27e:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c280:	e779      	b.n	800c176 <_dtoa_r+0x70e>
 800c282:	d093      	beq.n	800c1ac <_dtoa_r+0x744>
 800c284:	9b04      	ldr	r3, [sp, #16]
 800c286:	321c      	adds	r2, #28
 800c288:	4413      	add	r3, r2
 800c28a:	9304      	str	r3, [sp, #16]
 800c28c:	9b06      	ldr	r3, [sp, #24]
 800c28e:	4416      	add	r6, r2
 800c290:	4413      	add	r3, r2
 800c292:	e78a      	b.n	800c1aa <_dtoa_r+0x742>
 800c294:	4602      	mov	r2, r0
 800c296:	e7f5      	b.n	800c284 <_dtoa_r+0x81c>
 800c298:	f1ba 0f00 	cmp.w	sl, #0
 800c29c:	f8cd 8014 	str.w	r8, [sp, #20]
 800c2a0:	46d3      	mov	fp, sl
 800c2a2:	dc21      	bgt.n	800c2e8 <_dtoa_r+0x880>
 800c2a4:	9b07      	ldr	r3, [sp, #28]
 800c2a6:	2b02      	cmp	r3, #2
 800c2a8:	dd1e      	ble.n	800c2e8 <_dtoa_r+0x880>
 800c2aa:	f1bb 0f00 	cmp.w	fp, #0
 800c2ae:	f47f addc 	bne.w	800be6a <_dtoa_r+0x402>
 800c2b2:	4621      	mov	r1, r4
 800c2b4:	465b      	mov	r3, fp
 800c2b6:	2205      	movs	r2, #5
 800c2b8:	4648      	mov	r0, r9
 800c2ba:	f000 fc39 	bl	800cb30 <__multadd>
 800c2be:	4601      	mov	r1, r0
 800c2c0:	4604      	mov	r4, r0
 800c2c2:	9801      	ldr	r0, [sp, #4]
 800c2c4:	f000 fe44 	bl	800cf50 <__mcmp>
 800c2c8:	2800      	cmp	r0, #0
 800c2ca:	f77f adce 	ble.w	800be6a <_dtoa_r+0x402>
 800c2ce:	463e      	mov	r6, r7
 800c2d0:	2331      	movs	r3, #49	@ 0x31
 800c2d2:	f806 3b01 	strb.w	r3, [r6], #1
 800c2d6:	9b05      	ldr	r3, [sp, #20]
 800c2d8:	3301      	adds	r3, #1
 800c2da:	9305      	str	r3, [sp, #20]
 800c2dc:	e5c9      	b.n	800be72 <_dtoa_r+0x40a>
 800c2de:	f8cd 8014 	str.w	r8, [sp, #20]
 800c2e2:	4654      	mov	r4, sl
 800c2e4:	4625      	mov	r5, r4
 800c2e6:	e7f2      	b.n	800c2ce <_dtoa_r+0x866>
 800c2e8:	9b08      	ldr	r3, [sp, #32]
 800c2ea:	2b00      	cmp	r3, #0
 800c2ec:	f000 8102 	beq.w	800c4f4 <_dtoa_r+0xa8c>
 800c2f0:	2e00      	cmp	r6, #0
 800c2f2:	dd05      	ble.n	800c300 <_dtoa_r+0x898>
 800c2f4:	4629      	mov	r1, r5
 800c2f6:	4632      	mov	r2, r6
 800c2f8:	4648      	mov	r0, r9
 800c2fa:	f000 fdbd 	bl	800ce78 <__lshift>
 800c2fe:	4605      	mov	r5, r0
 800c300:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800c302:	2b00      	cmp	r3, #0
 800c304:	d058      	beq.n	800c3b8 <_dtoa_r+0x950>
 800c306:	6869      	ldr	r1, [r5, #4]
 800c308:	4648      	mov	r0, r9
 800c30a:	f000 fbaf 	bl	800ca6c <_Balloc>
 800c30e:	4606      	mov	r6, r0
 800c310:	b928      	cbnz	r0, 800c31e <_dtoa_r+0x8b6>
 800c312:	4b82      	ldr	r3, [pc, #520]	@ (800c51c <_dtoa_r+0xab4>)
 800c314:	4602      	mov	r2, r0
 800c316:	f240 21ef 	movw	r1, #751	@ 0x2ef
 800c31a:	f7ff bbbe 	b.w	800ba9a <_dtoa_r+0x32>
 800c31e:	692a      	ldr	r2, [r5, #16]
 800c320:	3202      	adds	r2, #2
 800c322:	0092      	lsls	r2, r2, #2
 800c324:	f105 010c 	add.w	r1, r5, #12
 800c328:	300c      	adds	r0, #12
 800c32a:	f7ff fb07 	bl	800b93c <memcpy>
 800c32e:	2201      	movs	r2, #1
 800c330:	4631      	mov	r1, r6
 800c332:	4648      	mov	r0, r9
 800c334:	f000 fda0 	bl	800ce78 <__lshift>
 800c338:	1c7b      	adds	r3, r7, #1
 800c33a:	9304      	str	r3, [sp, #16]
 800c33c:	eb07 030b 	add.w	r3, r7, fp
 800c340:	9309      	str	r3, [sp, #36]	@ 0x24
 800c342:	9b02      	ldr	r3, [sp, #8]
 800c344:	f003 0301 	and.w	r3, r3, #1
 800c348:	46a8      	mov	r8, r5
 800c34a:	9308      	str	r3, [sp, #32]
 800c34c:	4605      	mov	r5, r0
 800c34e:	9b04      	ldr	r3, [sp, #16]
 800c350:	9801      	ldr	r0, [sp, #4]
 800c352:	4621      	mov	r1, r4
 800c354:	f103 3bff 	add.w	fp, r3, #4294967295	@ 0xffffffff
 800c358:	f7ff fafe 	bl	800b958 <quorem>
 800c35c:	4641      	mov	r1, r8
 800c35e:	9002      	str	r0, [sp, #8]
 800c360:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 800c364:	9801      	ldr	r0, [sp, #4]
 800c366:	f000 fdf3 	bl	800cf50 <__mcmp>
 800c36a:	462a      	mov	r2, r5
 800c36c:	9006      	str	r0, [sp, #24]
 800c36e:	4621      	mov	r1, r4
 800c370:	4648      	mov	r0, r9
 800c372:	f000 fe09 	bl	800cf88 <__mdiff>
 800c376:	68c2      	ldr	r2, [r0, #12]
 800c378:	4606      	mov	r6, r0
 800c37a:	b9fa      	cbnz	r2, 800c3bc <_dtoa_r+0x954>
 800c37c:	4601      	mov	r1, r0
 800c37e:	9801      	ldr	r0, [sp, #4]
 800c380:	f000 fde6 	bl	800cf50 <__mcmp>
 800c384:	4602      	mov	r2, r0
 800c386:	4631      	mov	r1, r6
 800c388:	4648      	mov	r0, r9
 800c38a:	920a      	str	r2, [sp, #40]	@ 0x28
 800c38c:	f000 fbae 	bl	800caec <_Bfree>
 800c390:	9b07      	ldr	r3, [sp, #28]
 800c392:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800c394:	9e04      	ldr	r6, [sp, #16]
 800c396:	ea42 0103 	orr.w	r1, r2, r3
 800c39a:	9b08      	ldr	r3, [sp, #32]
 800c39c:	4319      	orrs	r1, r3
 800c39e:	d10f      	bne.n	800c3c0 <_dtoa_r+0x958>
 800c3a0:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 800c3a4:	d028      	beq.n	800c3f8 <_dtoa_r+0x990>
 800c3a6:	9b06      	ldr	r3, [sp, #24]
 800c3a8:	2b00      	cmp	r3, #0
 800c3aa:	dd02      	ble.n	800c3b2 <_dtoa_r+0x94a>
 800c3ac:	9b02      	ldr	r3, [sp, #8]
 800c3ae:	f103 0a31 	add.w	sl, r3, #49	@ 0x31
 800c3b2:	f88b a000 	strb.w	sl, [fp]
 800c3b6:	e55e      	b.n	800be76 <_dtoa_r+0x40e>
 800c3b8:	4628      	mov	r0, r5
 800c3ba:	e7bd      	b.n	800c338 <_dtoa_r+0x8d0>
 800c3bc:	2201      	movs	r2, #1
 800c3be:	e7e2      	b.n	800c386 <_dtoa_r+0x91e>
 800c3c0:	9b06      	ldr	r3, [sp, #24]
 800c3c2:	2b00      	cmp	r3, #0
 800c3c4:	db04      	blt.n	800c3d0 <_dtoa_r+0x968>
 800c3c6:	9907      	ldr	r1, [sp, #28]
 800c3c8:	430b      	orrs	r3, r1
 800c3ca:	9908      	ldr	r1, [sp, #32]
 800c3cc:	430b      	orrs	r3, r1
 800c3ce:	d120      	bne.n	800c412 <_dtoa_r+0x9aa>
 800c3d0:	2a00      	cmp	r2, #0
 800c3d2:	ddee      	ble.n	800c3b2 <_dtoa_r+0x94a>
 800c3d4:	9901      	ldr	r1, [sp, #4]
 800c3d6:	2201      	movs	r2, #1
 800c3d8:	4648      	mov	r0, r9
 800c3da:	f000 fd4d 	bl	800ce78 <__lshift>
 800c3de:	4621      	mov	r1, r4
 800c3e0:	9001      	str	r0, [sp, #4]
 800c3e2:	f000 fdb5 	bl	800cf50 <__mcmp>
 800c3e6:	2800      	cmp	r0, #0
 800c3e8:	dc03      	bgt.n	800c3f2 <_dtoa_r+0x98a>
 800c3ea:	d1e2      	bne.n	800c3b2 <_dtoa_r+0x94a>
 800c3ec:	f01a 0f01 	tst.w	sl, #1
 800c3f0:	d0df      	beq.n	800c3b2 <_dtoa_r+0x94a>
 800c3f2:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 800c3f6:	d1d9      	bne.n	800c3ac <_dtoa_r+0x944>
 800c3f8:	2339      	movs	r3, #57	@ 0x39
 800c3fa:	f88b 3000 	strb.w	r3, [fp]
 800c3fe:	4633      	mov	r3, r6
 800c400:	461e      	mov	r6, r3
 800c402:	3b01      	subs	r3, #1
 800c404:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800c408:	2a39      	cmp	r2, #57	@ 0x39
 800c40a:	d052      	beq.n	800c4b2 <_dtoa_r+0xa4a>
 800c40c:	3201      	adds	r2, #1
 800c40e:	701a      	strb	r2, [r3, #0]
 800c410:	e531      	b.n	800be76 <_dtoa_r+0x40e>
 800c412:	2a00      	cmp	r2, #0
 800c414:	dd07      	ble.n	800c426 <_dtoa_r+0x9be>
 800c416:	f1ba 0f39 	cmp.w	sl, #57	@ 0x39
 800c41a:	d0ed      	beq.n	800c3f8 <_dtoa_r+0x990>
 800c41c:	f10a 0301 	add.w	r3, sl, #1
 800c420:	f88b 3000 	strb.w	r3, [fp]
 800c424:	e527      	b.n	800be76 <_dtoa_r+0x40e>
 800c426:	9b04      	ldr	r3, [sp, #16]
 800c428:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c42a:	f803 ac01 	strb.w	sl, [r3, #-1]
 800c42e:	4293      	cmp	r3, r2
 800c430:	d029      	beq.n	800c486 <_dtoa_r+0xa1e>
 800c432:	9901      	ldr	r1, [sp, #4]
 800c434:	2300      	movs	r3, #0
 800c436:	220a      	movs	r2, #10
 800c438:	4648      	mov	r0, r9
 800c43a:	f000 fb79 	bl	800cb30 <__multadd>
 800c43e:	45a8      	cmp	r8, r5
 800c440:	9001      	str	r0, [sp, #4]
 800c442:	f04f 0300 	mov.w	r3, #0
 800c446:	f04f 020a 	mov.w	r2, #10
 800c44a:	4641      	mov	r1, r8
 800c44c:	4648      	mov	r0, r9
 800c44e:	d107      	bne.n	800c460 <_dtoa_r+0x9f8>
 800c450:	f000 fb6e 	bl	800cb30 <__multadd>
 800c454:	4680      	mov	r8, r0
 800c456:	4605      	mov	r5, r0
 800c458:	9b04      	ldr	r3, [sp, #16]
 800c45a:	3301      	adds	r3, #1
 800c45c:	9304      	str	r3, [sp, #16]
 800c45e:	e776      	b.n	800c34e <_dtoa_r+0x8e6>
 800c460:	f000 fb66 	bl	800cb30 <__multadd>
 800c464:	4629      	mov	r1, r5
 800c466:	4680      	mov	r8, r0
 800c468:	2300      	movs	r3, #0
 800c46a:	220a      	movs	r2, #10
 800c46c:	4648      	mov	r0, r9
 800c46e:	f000 fb5f 	bl	800cb30 <__multadd>
 800c472:	4605      	mov	r5, r0
 800c474:	e7f0      	b.n	800c458 <_dtoa_r+0x9f0>
 800c476:	f1bb 0f00 	cmp.w	fp, #0
 800c47a:	bfcc      	ite	gt
 800c47c:	465e      	movgt	r6, fp
 800c47e:	2601      	movle	r6, #1
 800c480:	443e      	add	r6, r7
 800c482:	f04f 0800 	mov.w	r8, #0
 800c486:	9901      	ldr	r1, [sp, #4]
 800c488:	2201      	movs	r2, #1
 800c48a:	4648      	mov	r0, r9
 800c48c:	f000 fcf4 	bl	800ce78 <__lshift>
 800c490:	4621      	mov	r1, r4
 800c492:	9001      	str	r0, [sp, #4]
 800c494:	f000 fd5c 	bl	800cf50 <__mcmp>
 800c498:	2800      	cmp	r0, #0
 800c49a:	dcb0      	bgt.n	800c3fe <_dtoa_r+0x996>
 800c49c:	d102      	bne.n	800c4a4 <_dtoa_r+0xa3c>
 800c49e:	f01a 0f01 	tst.w	sl, #1
 800c4a2:	d1ac      	bne.n	800c3fe <_dtoa_r+0x996>
 800c4a4:	4633      	mov	r3, r6
 800c4a6:	461e      	mov	r6, r3
 800c4a8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c4ac:	2a30      	cmp	r2, #48	@ 0x30
 800c4ae:	d0fa      	beq.n	800c4a6 <_dtoa_r+0xa3e>
 800c4b0:	e4e1      	b.n	800be76 <_dtoa_r+0x40e>
 800c4b2:	429f      	cmp	r7, r3
 800c4b4:	d1a4      	bne.n	800c400 <_dtoa_r+0x998>
 800c4b6:	9b05      	ldr	r3, [sp, #20]
 800c4b8:	3301      	adds	r3, #1
 800c4ba:	9305      	str	r3, [sp, #20]
 800c4bc:	2331      	movs	r3, #49	@ 0x31
 800c4be:	703b      	strb	r3, [r7, #0]
 800c4c0:	e4d9      	b.n	800be76 <_dtoa_r+0x40e>
 800c4c2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800c4c4:	4f16      	ldr	r7, [pc, #88]	@ (800c520 <_dtoa_r+0xab8>)
 800c4c6:	b11b      	cbz	r3, 800c4d0 <_dtoa_r+0xa68>
 800c4c8:	f107 0308 	add.w	r3, r7, #8
 800c4cc:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 800c4ce:	6013      	str	r3, [r2, #0]
 800c4d0:	4638      	mov	r0, r7
 800c4d2:	b011      	add	sp, #68	@ 0x44
 800c4d4:	ecbd 8b02 	vpop	{d8}
 800c4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c4dc:	9b07      	ldr	r3, [sp, #28]
 800c4de:	2b01      	cmp	r3, #1
 800c4e0:	f77f ae2c 	ble.w	800c13c <_dtoa_r+0x6d4>
 800c4e4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800c4e6:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c4e8:	2001      	movs	r0, #1
 800c4ea:	e64c      	b.n	800c186 <_dtoa_r+0x71e>
 800c4ec:	f1bb 0f00 	cmp.w	fp, #0
 800c4f0:	f77f aed8 	ble.w	800c2a4 <_dtoa_r+0x83c>
 800c4f4:	463e      	mov	r6, r7
 800c4f6:	9801      	ldr	r0, [sp, #4]
 800c4f8:	4621      	mov	r1, r4
 800c4fa:	f7ff fa2d 	bl	800b958 <quorem>
 800c4fe:	f100 0a30 	add.w	sl, r0, #48	@ 0x30
 800c502:	f806 ab01 	strb.w	sl, [r6], #1
 800c506:	1bf2      	subs	r2, r6, r7
 800c508:	4593      	cmp	fp, r2
 800c50a:	ddb4      	ble.n	800c476 <_dtoa_r+0xa0e>
 800c50c:	9901      	ldr	r1, [sp, #4]
 800c50e:	2300      	movs	r3, #0
 800c510:	220a      	movs	r2, #10
 800c512:	4648      	mov	r0, r9
 800c514:	f000 fb0c 	bl	800cb30 <__multadd>
 800c518:	9001      	str	r0, [sp, #4]
 800c51a:	e7ec      	b.n	800c4f6 <_dtoa_r+0xa8e>
 800c51c:	0800df18 	.word	0x0800df18
 800c520:	0800de9c 	.word	0x0800de9c

0800c524 <__sfputc_r>:
 800c524:	6893      	ldr	r3, [r2, #8]
 800c526:	3b01      	subs	r3, #1
 800c528:	2b00      	cmp	r3, #0
 800c52a:	b410      	push	{r4}
 800c52c:	6093      	str	r3, [r2, #8]
 800c52e:	da08      	bge.n	800c542 <__sfputc_r+0x1e>
 800c530:	6994      	ldr	r4, [r2, #24]
 800c532:	42a3      	cmp	r3, r4
 800c534:	db01      	blt.n	800c53a <__sfputc_r+0x16>
 800c536:	290a      	cmp	r1, #10
 800c538:	d103      	bne.n	800c542 <__sfputc_r+0x1e>
 800c53a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c53e:	f000 be52 	b.w	800d1e6 <__swbuf_r>
 800c542:	6813      	ldr	r3, [r2, #0]
 800c544:	1c58      	adds	r0, r3, #1
 800c546:	6010      	str	r0, [r2, #0]
 800c548:	7019      	strb	r1, [r3, #0]
 800c54a:	4608      	mov	r0, r1
 800c54c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c550:	4770      	bx	lr

0800c552 <__sfputs_r>:
 800c552:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c554:	4606      	mov	r6, r0
 800c556:	460f      	mov	r7, r1
 800c558:	4614      	mov	r4, r2
 800c55a:	18d5      	adds	r5, r2, r3
 800c55c:	42ac      	cmp	r4, r5
 800c55e:	d101      	bne.n	800c564 <__sfputs_r+0x12>
 800c560:	2000      	movs	r0, #0
 800c562:	e007      	b.n	800c574 <__sfputs_r+0x22>
 800c564:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c568:	463a      	mov	r2, r7
 800c56a:	4630      	mov	r0, r6
 800c56c:	f7ff ffda 	bl	800c524 <__sfputc_r>
 800c570:	1c43      	adds	r3, r0, #1
 800c572:	d1f3      	bne.n	800c55c <__sfputs_r+0xa>
 800c574:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0800c578 <_vfiprintf_r>:
 800c578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c57c:	460d      	mov	r5, r1
 800c57e:	b09d      	sub	sp, #116	@ 0x74
 800c580:	4614      	mov	r4, r2
 800c582:	4698      	mov	r8, r3
 800c584:	4606      	mov	r6, r0
 800c586:	b118      	cbz	r0, 800c590 <_vfiprintf_r+0x18>
 800c588:	6a03      	ldr	r3, [r0, #32]
 800c58a:	b90b      	cbnz	r3, 800c590 <_vfiprintf_r+0x18>
 800c58c:	f7ff f8ee 	bl	800b76c <__sinit>
 800c590:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c592:	07d9      	lsls	r1, r3, #31
 800c594:	d405      	bmi.n	800c5a2 <_vfiprintf_r+0x2a>
 800c596:	89ab      	ldrh	r3, [r5, #12]
 800c598:	059a      	lsls	r2, r3, #22
 800c59a:	d402      	bmi.n	800c5a2 <_vfiprintf_r+0x2a>
 800c59c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c59e:	f7ff f9c6 	bl	800b92e <__retarget_lock_acquire_recursive>
 800c5a2:	89ab      	ldrh	r3, [r5, #12]
 800c5a4:	071b      	lsls	r3, r3, #28
 800c5a6:	d501      	bpl.n	800c5ac <_vfiprintf_r+0x34>
 800c5a8:	692b      	ldr	r3, [r5, #16]
 800c5aa:	b99b      	cbnz	r3, 800c5d4 <_vfiprintf_r+0x5c>
 800c5ac:	4629      	mov	r1, r5
 800c5ae:	4630      	mov	r0, r6
 800c5b0:	f000 fe58 	bl	800d264 <__swsetup_r>
 800c5b4:	b170      	cbz	r0, 800c5d4 <_vfiprintf_r+0x5c>
 800c5b6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c5b8:	07dc      	lsls	r4, r3, #31
 800c5ba:	d504      	bpl.n	800c5c6 <_vfiprintf_r+0x4e>
 800c5bc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800c5c0:	b01d      	add	sp, #116	@ 0x74
 800c5c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c5c6:	89ab      	ldrh	r3, [r5, #12]
 800c5c8:	0598      	lsls	r0, r3, #22
 800c5ca:	d4f7      	bmi.n	800c5bc <_vfiprintf_r+0x44>
 800c5cc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c5ce:	f7ff f9af 	bl	800b930 <__retarget_lock_release_recursive>
 800c5d2:	e7f3      	b.n	800c5bc <_vfiprintf_r+0x44>
 800c5d4:	2300      	movs	r3, #0
 800c5d6:	9309      	str	r3, [sp, #36]	@ 0x24
 800c5d8:	2320      	movs	r3, #32
 800c5da:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 800c5de:	f8cd 800c 	str.w	r8, [sp, #12]
 800c5e2:	2330      	movs	r3, #48	@ 0x30
 800c5e4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 800c794 <_vfiprintf_r+0x21c>
 800c5e8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 800c5ec:	f04f 0901 	mov.w	r9, #1
 800c5f0:	4623      	mov	r3, r4
 800c5f2:	469a      	mov	sl, r3
 800c5f4:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c5f8:	b10a      	cbz	r2, 800c5fe <_vfiprintf_r+0x86>
 800c5fa:	2a25      	cmp	r2, #37	@ 0x25
 800c5fc:	d1f9      	bne.n	800c5f2 <_vfiprintf_r+0x7a>
 800c5fe:	ebba 0b04 	subs.w	fp, sl, r4
 800c602:	d00b      	beq.n	800c61c <_vfiprintf_r+0xa4>
 800c604:	465b      	mov	r3, fp
 800c606:	4622      	mov	r2, r4
 800c608:	4629      	mov	r1, r5
 800c60a:	4630      	mov	r0, r6
 800c60c:	f7ff ffa1 	bl	800c552 <__sfputs_r>
 800c610:	3001      	adds	r0, #1
 800c612:	f000 80a7 	beq.w	800c764 <_vfiprintf_r+0x1ec>
 800c616:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800c618:	445a      	add	r2, fp
 800c61a:	9209      	str	r2, [sp, #36]	@ 0x24
 800c61c:	f89a 3000 	ldrb.w	r3, [sl]
 800c620:	2b00      	cmp	r3, #0
 800c622:	f000 809f 	beq.w	800c764 <_vfiprintf_r+0x1ec>
 800c626:	2300      	movs	r3, #0
 800c628:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800c62c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c630:	f10a 0a01 	add.w	sl, sl, #1
 800c634:	9304      	str	r3, [sp, #16]
 800c636:	9307      	str	r3, [sp, #28]
 800c638:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800c63c:	931a      	str	r3, [sp, #104]	@ 0x68
 800c63e:	4654      	mov	r4, sl
 800c640:	2205      	movs	r2, #5
 800c642:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c646:	4853      	ldr	r0, [pc, #332]	@ (800c794 <_vfiprintf_r+0x21c>)
 800c648:	f7f3 fe72 	bl	8000330 <memchr>
 800c64c:	9a04      	ldr	r2, [sp, #16]
 800c64e:	b9d8      	cbnz	r0, 800c688 <_vfiprintf_r+0x110>
 800c650:	06d1      	lsls	r1, r2, #27
 800c652:	bf44      	itt	mi
 800c654:	2320      	movmi	r3, #32
 800c656:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c65a:	0713      	lsls	r3, r2, #28
 800c65c:	bf44      	itt	mi
 800c65e:	232b      	movmi	r3, #43	@ 0x2b
 800c660:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800c664:	f89a 3000 	ldrb.w	r3, [sl]
 800c668:	2b2a      	cmp	r3, #42	@ 0x2a
 800c66a:	d015      	beq.n	800c698 <_vfiprintf_r+0x120>
 800c66c:	9a07      	ldr	r2, [sp, #28]
 800c66e:	4654      	mov	r4, sl
 800c670:	2000      	movs	r0, #0
 800c672:	f04f 0c0a 	mov.w	ip, #10
 800c676:	4621      	mov	r1, r4
 800c678:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c67c:	3b30      	subs	r3, #48	@ 0x30
 800c67e:	2b09      	cmp	r3, #9
 800c680:	d94b      	bls.n	800c71a <_vfiprintf_r+0x1a2>
 800c682:	b1b0      	cbz	r0, 800c6b2 <_vfiprintf_r+0x13a>
 800c684:	9207      	str	r2, [sp, #28]
 800c686:	e014      	b.n	800c6b2 <_vfiprintf_r+0x13a>
 800c688:	eba0 0308 	sub.w	r3, r0, r8
 800c68c:	fa09 f303 	lsl.w	r3, r9, r3
 800c690:	4313      	orrs	r3, r2
 800c692:	9304      	str	r3, [sp, #16]
 800c694:	46a2      	mov	sl, r4
 800c696:	e7d2      	b.n	800c63e <_vfiprintf_r+0xc6>
 800c698:	9b03      	ldr	r3, [sp, #12]
 800c69a:	1d19      	adds	r1, r3, #4
 800c69c:	681b      	ldr	r3, [r3, #0]
 800c69e:	9103      	str	r1, [sp, #12]
 800c6a0:	2b00      	cmp	r3, #0
 800c6a2:	bfbb      	ittet	lt
 800c6a4:	425b      	neglt	r3, r3
 800c6a6:	f042 0202 	orrlt.w	r2, r2, #2
 800c6aa:	9307      	strge	r3, [sp, #28]
 800c6ac:	9307      	strlt	r3, [sp, #28]
 800c6ae:	bfb8      	it	lt
 800c6b0:	9204      	strlt	r2, [sp, #16]
 800c6b2:	7823      	ldrb	r3, [r4, #0]
 800c6b4:	2b2e      	cmp	r3, #46	@ 0x2e
 800c6b6:	d10a      	bne.n	800c6ce <_vfiprintf_r+0x156>
 800c6b8:	7863      	ldrb	r3, [r4, #1]
 800c6ba:	2b2a      	cmp	r3, #42	@ 0x2a
 800c6bc:	d132      	bne.n	800c724 <_vfiprintf_r+0x1ac>
 800c6be:	9b03      	ldr	r3, [sp, #12]
 800c6c0:	1d1a      	adds	r2, r3, #4
 800c6c2:	681b      	ldr	r3, [r3, #0]
 800c6c4:	9203      	str	r2, [sp, #12]
 800c6c6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800c6ca:	3402      	adds	r4, #2
 800c6cc:	9305      	str	r3, [sp, #20]
 800c6ce:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 800c7a4 <_vfiprintf_r+0x22c>
 800c6d2:	7821      	ldrb	r1, [r4, #0]
 800c6d4:	2203      	movs	r2, #3
 800c6d6:	4650      	mov	r0, sl
 800c6d8:	f7f3 fe2a 	bl	8000330 <memchr>
 800c6dc:	b138      	cbz	r0, 800c6ee <_vfiprintf_r+0x176>
 800c6de:	9b04      	ldr	r3, [sp, #16]
 800c6e0:	eba0 000a 	sub.w	r0, r0, sl
 800c6e4:	2240      	movs	r2, #64	@ 0x40
 800c6e6:	4082      	lsls	r2, r0
 800c6e8:	4313      	orrs	r3, r2
 800c6ea:	3401      	adds	r4, #1
 800c6ec:	9304      	str	r3, [sp, #16]
 800c6ee:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c6f2:	4829      	ldr	r0, [pc, #164]	@ (800c798 <_vfiprintf_r+0x220>)
 800c6f4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 800c6f8:	2206      	movs	r2, #6
 800c6fa:	f7f3 fe19 	bl	8000330 <memchr>
 800c6fe:	2800      	cmp	r0, #0
 800c700:	d03f      	beq.n	800c782 <_vfiprintf_r+0x20a>
 800c702:	4b26      	ldr	r3, [pc, #152]	@ (800c79c <_vfiprintf_r+0x224>)
 800c704:	bb1b      	cbnz	r3, 800c74e <_vfiprintf_r+0x1d6>
 800c706:	9b03      	ldr	r3, [sp, #12]
 800c708:	3307      	adds	r3, #7
 800c70a:	f023 0307 	bic.w	r3, r3, #7
 800c70e:	3308      	adds	r3, #8
 800c710:	9303      	str	r3, [sp, #12]
 800c712:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800c714:	443b      	add	r3, r7
 800c716:	9309      	str	r3, [sp, #36]	@ 0x24
 800c718:	e76a      	b.n	800c5f0 <_vfiprintf_r+0x78>
 800c71a:	fb0c 3202 	mla	r2, ip, r2, r3
 800c71e:	460c      	mov	r4, r1
 800c720:	2001      	movs	r0, #1
 800c722:	e7a8      	b.n	800c676 <_vfiprintf_r+0xfe>
 800c724:	2300      	movs	r3, #0
 800c726:	3401      	adds	r4, #1
 800c728:	9305      	str	r3, [sp, #20]
 800c72a:	4619      	mov	r1, r3
 800c72c:	f04f 0c0a 	mov.w	ip, #10
 800c730:	4620      	mov	r0, r4
 800c732:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c736:	3a30      	subs	r2, #48	@ 0x30
 800c738:	2a09      	cmp	r2, #9
 800c73a:	d903      	bls.n	800c744 <_vfiprintf_r+0x1cc>
 800c73c:	2b00      	cmp	r3, #0
 800c73e:	d0c6      	beq.n	800c6ce <_vfiprintf_r+0x156>
 800c740:	9105      	str	r1, [sp, #20]
 800c742:	e7c4      	b.n	800c6ce <_vfiprintf_r+0x156>
 800c744:	fb0c 2101 	mla	r1, ip, r1, r2
 800c748:	4604      	mov	r4, r0
 800c74a:	2301      	movs	r3, #1
 800c74c:	e7f0      	b.n	800c730 <_vfiprintf_r+0x1b8>
 800c74e:	ab03      	add	r3, sp, #12
 800c750:	9300      	str	r3, [sp, #0]
 800c752:	462a      	mov	r2, r5
 800c754:	4b12      	ldr	r3, [pc, #72]	@ (800c7a0 <_vfiprintf_r+0x228>)
 800c756:	a904      	add	r1, sp, #16
 800c758:	4630      	mov	r0, r6
 800c75a:	f7fe fbd5 	bl	800af08 <_printf_float>
 800c75e:	4607      	mov	r7, r0
 800c760:	1c78      	adds	r0, r7, #1
 800c762:	d1d6      	bne.n	800c712 <_vfiprintf_r+0x19a>
 800c764:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 800c766:	07d9      	lsls	r1, r3, #31
 800c768:	d405      	bmi.n	800c776 <_vfiprintf_r+0x1fe>
 800c76a:	89ab      	ldrh	r3, [r5, #12]
 800c76c:	059a      	lsls	r2, r3, #22
 800c76e:	d402      	bmi.n	800c776 <_vfiprintf_r+0x1fe>
 800c770:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 800c772:	f7ff f8dd 	bl	800b930 <__retarget_lock_release_recursive>
 800c776:	89ab      	ldrh	r3, [r5, #12]
 800c778:	065b      	lsls	r3, r3, #25
 800c77a:	f53f af1f 	bmi.w	800c5bc <_vfiprintf_r+0x44>
 800c77e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800c780:	e71e      	b.n	800c5c0 <_vfiprintf_r+0x48>
 800c782:	ab03      	add	r3, sp, #12
 800c784:	9300      	str	r3, [sp, #0]
 800c786:	462a      	mov	r2, r5
 800c788:	4b05      	ldr	r3, [pc, #20]	@ (800c7a0 <_vfiprintf_r+0x228>)
 800c78a:	a904      	add	r1, sp, #16
 800c78c:	4630      	mov	r0, r6
 800c78e:	f7fe fe43 	bl	800b418 <_printf_i>
 800c792:	e7e4      	b.n	800c75e <_vfiprintf_r+0x1e6>
 800c794:	0800df29 	.word	0x0800df29
 800c798:	0800df33 	.word	0x0800df33
 800c79c:	0800af09 	.word	0x0800af09
 800c7a0:	0800c553 	.word	0x0800c553
 800c7a4:	0800df2f 	.word	0x0800df2f

0800c7a8 <malloc>:
 800c7a8:	4b02      	ldr	r3, [pc, #8]	@ (800c7b4 <malloc+0xc>)
 800c7aa:	4601      	mov	r1, r0
 800c7ac:	6818      	ldr	r0, [r3, #0]
 800c7ae:	f000 b825 	b.w	800c7fc <_malloc_r>
 800c7b2:	bf00      	nop
 800c7b4:	24000024 	.word	0x24000024

0800c7b8 <sbrk_aligned>:
 800c7b8:	b570      	push	{r4, r5, r6, lr}
 800c7ba:	4e0f      	ldr	r6, [pc, #60]	@ (800c7f8 <sbrk_aligned+0x40>)
 800c7bc:	460c      	mov	r4, r1
 800c7be:	6831      	ldr	r1, [r6, #0]
 800c7c0:	4605      	mov	r5, r0
 800c7c2:	b911      	cbnz	r1, 800c7ca <sbrk_aligned+0x12>
 800c7c4:	f000 fe6e 	bl	800d4a4 <_sbrk_r>
 800c7c8:	6030      	str	r0, [r6, #0]
 800c7ca:	4621      	mov	r1, r4
 800c7cc:	4628      	mov	r0, r5
 800c7ce:	f000 fe69 	bl	800d4a4 <_sbrk_r>
 800c7d2:	1c43      	adds	r3, r0, #1
 800c7d4:	d103      	bne.n	800c7de <sbrk_aligned+0x26>
 800c7d6:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 800c7da:	4620      	mov	r0, r4
 800c7dc:	bd70      	pop	{r4, r5, r6, pc}
 800c7de:	1cc4      	adds	r4, r0, #3
 800c7e0:	f024 0403 	bic.w	r4, r4, #3
 800c7e4:	42a0      	cmp	r0, r4
 800c7e6:	d0f8      	beq.n	800c7da <sbrk_aligned+0x22>
 800c7e8:	1a21      	subs	r1, r4, r0
 800c7ea:	4628      	mov	r0, r5
 800c7ec:	f000 fe5a 	bl	800d4a4 <_sbrk_r>
 800c7f0:	3001      	adds	r0, #1
 800c7f2:	d1f2      	bne.n	800c7da <sbrk_aligned+0x22>
 800c7f4:	e7ef      	b.n	800c7d6 <sbrk_aligned+0x1e>
 800c7f6:	bf00      	nop
 800c7f8:	24000a2c 	.word	0x24000a2c

0800c7fc <_malloc_r>:
 800c7fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c800:	1ccd      	adds	r5, r1, #3
 800c802:	f025 0503 	bic.w	r5, r5, #3
 800c806:	3508      	adds	r5, #8
 800c808:	2d0c      	cmp	r5, #12
 800c80a:	bf38      	it	cc
 800c80c:	250c      	movcc	r5, #12
 800c80e:	2d00      	cmp	r5, #0
 800c810:	4606      	mov	r6, r0
 800c812:	db01      	blt.n	800c818 <_malloc_r+0x1c>
 800c814:	42a9      	cmp	r1, r5
 800c816:	d904      	bls.n	800c822 <_malloc_r+0x26>
 800c818:	230c      	movs	r3, #12
 800c81a:	6033      	str	r3, [r6, #0]
 800c81c:	2000      	movs	r0, #0
 800c81e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c822:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 800c8f8 <_malloc_r+0xfc>
 800c826:	f000 f915 	bl	800ca54 <__malloc_lock>
 800c82a:	f8d8 3000 	ldr.w	r3, [r8]
 800c82e:	461c      	mov	r4, r3
 800c830:	bb44      	cbnz	r4, 800c884 <_malloc_r+0x88>
 800c832:	4629      	mov	r1, r5
 800c834:	4630      	mov	r0, r6
 800c836:	f7ff ffbf 	bl	800c7b8 <sbrk_aligned>
 800c83a:	1c43      	adds	r3, r0, #1
 800c83c:	4604      	mov	r4, r0
 800c83e:	d158      	bne.n	800c8f2 <_malloc_r+0xf6>
 800c840:	f8d8 4000 	ldr.w	r4, [r8]
 800c844:	4627      	mov	r7, r4
 800c846:	2f00      	cmp	r7, #0
 800c848:	d143      	bne.n	800c8d2 <_malloc_r+0xd6>
 800c84a:	2c00      	cmp	r4, #0
 800c84c:	d04b      	beq.n	800c8e6 <_malloc_r+0xea>
 800c84e:	6823      	ldr	r3, [r4, #0]
 800c850:	4639      	mov	r1, r7
 800c852:	4630      	mov	r0, r6
 800c854:	eb04 0903 	add.w	r9, r4, r3
 800c858:	f000 fe24 	bl	800d4a4 <_sbrk_r>
 800c85c:	4581      	cmp	r9, r0
 800c85e:	d142      	bne.n	800c8e6 <_malloc_r+0xea>
 800c860:	6821      	ldr	r1, [r4, #0]
 800c862:	1a6d      	subs	r5, r5, r1
 800c864:	4629      	mov	r1, r5
 800c866:	4630      	mov	r0, r6
 800c868:	f7ff ffa6 	bl	800c7b8 <sbrk_aligned>
 800c86c:	3001      	adds	r0, #1
 800c86e:	d03a      	beq.n	800c8e6 <_malloc_r+0xea>
 800c870:	6823      	ldr	r3, [r4, #0]
 800c872:	442b      	add	r3, r5
 800c874:	6023      	str	r3, [r4, #0]
 800c876:	f8d8 3000 	ldr.w	r3, [r8]
 800c87a:	685a      	ldr	r2, [r3, #4]
 800c87c:	bb62      	cbnz	r2, 800c8d8 <_malloc_r+0xdc>
 800c87e:	f8c8 7000 	str.w	r7, [r8]
 800c882:	e00f      	b.n	800c8a4 <_malloc_r+0xa8>
 800c884:	6822      	ldr	r2, [r4, #0]
 800c886:	1b52      	subs	r2, r2, r5
 800c888:	d420      	bmi.n	800c8cc <_malloc_r+0xd0>
 800c88a:	2a0b      	cmp	r2, #11
 800c88c:	d917      	bls.n	800c8be <_malloc_r+0xc2>
 800c88e:	1961      	adds	r1, r4, r5
 800c890:	42a3      	cmp	r3, r4
 800c892:	6025      	str	r5, [r4, #0]
 800c894:	bf18      	it	ne
 800c896:	6059      	strne	r1, [r3, #4]
 800c898:	6863      	ldr	r3, [r4, #4]
 800c89a:	bf08      	it	eq
 800c89c:	f8c8 1000 	streq.w	r1, [r8]
 800c8a0:	5162      	str	r2, [r4, r5]
 800c8a2:	604b      	str	r3, [r1, #4]
 800c8a4:	4630      	mov	r0, r6
 800c8a6:	f000 f8db 	bl	800ca60 <__malloc_unlock>
 800c8aa:	f104 000b 	add.w	r0, r4, #11
 800c8ae:	1d23      	adds	r3, r4, #4
 800c8b0:	f020 0007 	bic.w	r0, r0, #7
 800c8b4:	1ac2      	subs	r2, r0, r3
 800c8b6:	bf1c      	itt	ne
 800c8b8:	1a1b      	subne	r3, r3, r0
 800c8ba:	50a3      	strne	r3, [r4, r2]
 800c8bc:	e7af      	b.n	800c81e <_malloc_r+0x22>
 800c8be:	6862      	ldr	r2, [r4, #4]
 800c8c0:	42a3      	cmp	r3, r4
 800c8c2:	bf0c      	ite	eq
 800c8c4:	f8c8 2000 	streq.w	r2, [r8]
 800c8c8:	605a      	strne	r2, [r3, #4]
 800c8ca:	e7eb      	b.n	800c8a4 <_malloc_r+0xa8>
 800c8cc:	4623      	mov	r3, r4
 800c8ce:	6864      	ldr	r4, [r4, #4]
 800c8d0:	e7ae      	b.n	800c830 <_malloc_r+0x34>
 800c8d2:	463c      	mov	r4, r7
 800c8d4:	687f      	ldr	r7, [r7, #4]
 800c8d6:	e7b6      	b.n	800c846 <_malloc_r+0x4a>
 800c8d8:	461a      	mov	r2, r3
 800c8da:	685b      	ldr	r3, [r3, #4]
 800c8dc:	42a3      	cmp	r3, r4
 800c8de:	d1fb      	bne.n	800c8d8 <_malloc_r+0xdc>
 800c8e0:	2300      	movs	r3, #0
 800c8e2:	6053      	str	r3, [r2, #4]
 800c8e4:	e7de      	b.n	800c8a4 <_malloc_r+0xa8>
 800c8e6:	230c      	movs	r3, #12
 800c8e8:	6033      	str	r3, [r6, #0]
 800c8ea:	4630      	mov	r0, r6
 800c8ec:	f000 f8b8 	bl	800ca60 <__malloc_unlock>
 800c8f0:	e794      	b.n	800c81c <_malloc_r+0x20>
 800c8f2:	6005      	str	r5, [r0, #0]
 800c8f4:	e7d6      	b.n	800c8a4 <_malloc_r+0xa8>
 800c8f6:	bf00      	nop
 800c8f8:	24000a30 	.word	0x24000a30

0800c8fc <__sflush_r>:
 800c8fc:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800c900:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c904:	0716      	lsls	r6, r2, #28
 800c906:	4605      	mov	r5, r0
 800c908:	460c      	mov	r4, r1
 800c90a:	d454      	bmi.n	800c9b6 <__sflush_r+0xba>
 800c90c:	684b      	ldr	r3, [r1, #4]
 800c90e:	2b00      	cmp	r3, #0
 800c910:	dc02      	bgt.n	800c918 <__sflush_r+0x1c>
 800c912:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800c914:	2b00      	cmp	r3, #0
 800c916:	dd48      	ble.n	800c9aa <__sflush_r+0xae>
 800c918:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c91a:	2e00      	cmp	r6, #0
 800c91c:	d045      	beq.n	800c9aa <__sflush_r+0xae>
 800c91e:	2300      	movs	r3, #0
 800c920:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800c924:	682f      	ldr	r7, [r5, #0]
 800c926:	6a21      	ldr	r1, [r4, #32]
 800c928:	602b      	str	r3, [r5, #0]
 800c92a:	d030      	beq.n	800c98e <__sflush_r+0x92>
 800c92c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800c92e:	89a3      	ldrh	r3, [r4, #12]
 800c930:	0759      	lsls	r1, r3, #29
 800c932:	d505      	bpl.n	800c940 <__sflush_r+0x44>
 800c934:	6863      	ldr	r3, [r4, #4]
 800c936:	1ad2      	subs	r2, r2, r3
 800c938:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800c93a:	b10b      	cbz	r3, 800c940 <__sflush_r+0x44>
 800c93c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800c93e:	1ad2      	subs	r2, r2, r3
 800c940:	2300      	movs	r3, #0
 800c942:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800c944:	6a21      	ldr	r1, [r4, #32]
 800c946:	4628      	mov	r0, r5
 800c948:	47b0      	blx	r6
 800c94a:	1c43      	adds	r3, r0, #1
 800c94c:	89a3      	ldrh	r3, [r4, #12]
 800c94e:	d106      	bne.n	800c95e <__sflush_r+0x62>
 800c950:	6829      	ldr	r1, [r5, #0]
 800c952:	291d      	cmp	r1, #29
 800c954:	d82b      	bhi.n	800c9ae <__sflush_r+0xb2>
 800c956:	4a2a      	ldr	r2, [pc, #168]	@ (800ca00 <__sflush_r+0x104>)
 800c958:	40ca      	lsrs	r2, r1
 800c95a:	07d6      	lsls	r6, r2, #31
 800c95c:	d527      	bpl.n	800c9ae <__sflush_r+0xb2>
 800c95e:	2200      	movs	r2, #0
 800c960:	6062      	str	r2, [r4, #4]
 800c962:	04d9      	lsls	r1, r3, #19
 800c964:	6922      	ldr	r2, [r4, #16]
 800c966:	6022      	str	r2, [r4, #0]
 800c968:	d504      	bpl.n	800c974 <__sflush_r+0x78>
 800c96a:	1c42      	adds	r2, r0, #1
 800c96c:	d101      	bne.n	800c972 <__sflush_r+0x76>
 800c96e:	682b      	ldr	r3, [r5, #0]
 800c970:	b903      	cbnz	r3, 800c974 <__sflush_r+0x78>
 800c972:	6560      	str	r0, [r4, #84]	@ 0x54
 800c974:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800c976:	602f      	str	r7, [r5, #0]
 800c978:	b1b9      	cbz	r1, 800c9aa <__sflush_r+0xae>
 800c97a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800c97e:	4299      	cmp	r1, r3
 800c980:	d002      	beq.n	800c988 <__sflush_r+0x8c>
 800c982:	4628      	mov	r0, r5
 800c984:	f000 fe04 	bl	800d590 <_free_r>
 800c988:	2300      	movs	r3, #0
 800c98a:	6363      	str	r3, [r4, #52]	@ 0x34
 800c98c:	e00d      	b.n	800c9aa <__sflush_r+0xae>
 800c98e:	2301      	movs	r3, #1
 800c990:	4628      	mov	r0, r5
 800c992:	47b0      	blx	r6
 800c994:	4602      	mov	r2, r0
 800c996:	1c50      	adds	r0, r2, #1
 800c998:	d1c9      	bne.n	800c92e <__sflush_r+0x32>
 800c99a:	682b      	ldr	r3, [r5, #0]
 800c99c:	2b00      	cmp	r3, #0
 800c99e:	d0c6      	beq.n	800c92e <__sflush_r+0x32>
 800c9a0:	2b1d      	cmp	r3, #29
 800c9a2:	d001      	beq.n	800c9a8 <__sflush_r+0xac>
 800c9a4:	2b16      	cmp	r3, #22
 800c9a6:	d11e      	bne.n	800c9e6 <__sflush_r+0xea>
 800c9a8:	602f      	str	r7, [r5, #0]
 800c9aa:	2000      	movs	r0, #0
 800c9ac:	e022      	b.n	800c9f4 <__sflush_r+0xf8>
 800c9ae:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c9b2:	b21b      	sxth	r3, r3
 800c9b4:	e01b      	b.n	800c9ee <__sflush_r+0xf2>
 800c9b6:	690f      	ldr	r7, [r1, #16]
 800c9b8:	2f00      	cmp	r7, #0
 800c9ba:	d0f6      	beq.n	800c9aa <__sflush_r+0xae>
 800c9bc:	0793      	lsls	r3, r2, #30
 800c9be:	680e      	ldr	r6, [r1, #0]
 800c9c0:	bf08      	it	eq
 800c9c2:	694b      	ldreq	r3, [r1, #20]
 800c9c4:	600f      	str	r7, [r1, #0]
 800c9c6:	bf18      	it	ne
 800c9c8:	2300      	movne	r3, #0
 800c9ca:	eba6 0807 	sub.w	r8, r6, r7
 800c9ce:	608b      	str	r3, [r1, #8]
 800c9d0:	f1b8 0f00 	cmp.w	r8, #0
 800c9d4:	dde9      	ble.n	800c9aa <__sflush_r+0xae>
 800c9d6:	6a21      	ldr	r1, [r4, #32]
 800c9d8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800c9da:	4643      	mov	r3, r8
 800c9dc:	463a      	mov	r2, r7
 800c9de:	4628      	mov	r0, r5
 800c9e0:	47b0      	blx	r6
 800c9e2:	2800      	cmp	r0, #0
 800c9e4:	dc08      	bgt.n	800c9f8 <__sflush_r+0xfc>
 800c9e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c9ea:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800c9ee:	81a3      	strh	r3, [r4, #12]
 800c9f0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800c9f4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c9f8:	4407      	add	r7, r0
 800c9fa:	eba8 0800 	sub.w	r8, r8, r0
 800c9fe:	e7e7      	b.n	800c9d0 <__sflush_r+0xd4>
 800ca00:	20400001 	.word	0x20400001

0800ca04 <_fflush_r>:
 800ca04:	b538      	push	{r3, r4, r5, lr}
 800ca06:	690b      	ldr	r3, [r1, #16]
 800ca08:	4605      	mov	r5, r0
 800ca0a:	460c      	mov	r4, r1
 800ca0c:	b913      	cbnz	r3, 800ca14 <_fflush_r+0x10>
 800ca0e:	2500      	movs	r5, #0
 800ca10:	4628      	mov	r0, r5
 800ca12:	bd38      	pop	{r3, r4, r5, pc}
 800ca14:	b118      	cbz	r0, 800ca1e <_fflush_r+0x1a>
 800ca16:	6a03      	ldr	r3, [r0, #32]
 800ca18:	b90b      	cbnz	r3, 800ca1e <_fflush_r+0x1a>
 800ca1a:	f7fe fea7 	bl	800b76c <__sinit>
 800ca1e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800ca22:	2b00      	cmp	r3, #0
 800ca24:	d0f3      	beq.n	800ca0e <_fflush_r+0xa>
 800ca26:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800ca28:	07d0      	lsls	r0, r2, #31
 800ca2a:	d404      	bmi.n	800ca36 <_fflush_r+0x32>
 800ca2c:	0599      	lsls	r1, r3, #22
 800ca2e:	d402      	bmi.n	800ca36 <_fflush_r+0x32>
 800ca30:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800ca32:	f7fe ff7c 	bl	800b92e <__retarget_lock_acquire_recursive>
 800ca36:	4628      	mov	r0, r5
 800ca38:	4621      	mov	r1, r4
 800ca3a:	f7ff ff5f 	bl	800c8fc <__sflush_r>
 800ca3e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800ca40:	07da      	lsls	r2, r3, #31
 800ca42:	4605      	mov	r5, r0
 800ca44:	d4e4      	bmi.n	800ca10 <_fflush_r+0xc>
 800ca46:	89a3      	ldrh	r3, [r4, #12]
 800ca48:	059b      	lsls	r3, r3, #22
 800ca4a:	d4e1      	bmi.n	800ca10 <_fflush_r+0xc>
 800ca4c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800ca4e:	f7fe ff6f 	bl	800b930 <__retarget_lock_release_recursive>
 800ca52:	e7dd      	b.n	800ca10 <_fflush_r+0xc>

0800ca54 <__malloc_lock>:
 800ca54:	4801      	ldr	r0, [pc, #4]	@ (800ca5c <__malloc_lock+0x8>)
 800ca56:	f7fe bf6a 	b.w	800b92e <__retarget_lock_acquire_recursive>
 800ca5a:	bf00      	nop
 800ca5c:	24000a28 	.word	0x24000a28

0800ca60 <__malloc_unlock>:
 800ca60:	4801      	ldr	r0, [pc, #4]	@ (800ca68 <__malloc_unlock+0x8>)
 800ca62:	f7fe bf65 	b.w	800b930 <__retarget_lock_release_recursive>
 800ca66:	bf00      	nop
 800ca68:	24000a28 	.word	0x24000a28

0800ca6c <_Balloc>:
 800ca6c:	b570      	push	{r4, r5, r6, lr}
 800ca6e:	69c6      	ldr	r6, [r0, #28]
 800ca70:	4604      	mov	r4, r0
 800ca72:	460d      	mov	r5, r1
 800ca74:	b976      	cbnz	r6, 800ca94 <_Balloc+0x28>
 800ca76:	2010      	movs	r0, #16
 800ca78:	f7ff fe96 	bl	800c7a8 <malloc>
 800ca7c:	4602      	mov	r2, r0
 800ca7e:	61e0      	str	r0, [r4, #28]
 800ca80:	b920      	cbnz	r0, 800ca8c <_Balloc+0x20>
 800ca82:	4b18      	ldr	r3, [pc, #96]	@ (800cae4 <_Balloc+0x78>)
 800ca84:	4818      	ldr	r0, [pc, #96]	@ (800cae8 <_Balloc+0x7c>)
 800ca86:	216b      	movs	r1, #107	@ 0x6b
 800ca88:	f000 fd50 	bl	800d52c <__assert_func>
 800ca8c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800ca90:	6006      	str	r6, [r0, #0]
 800ca92:	60c6      	str	r6, [r0, #12]
 800ca94:	69e6      	ldr	r6, [r4, #28]
 800ca96:	68f3      	ldr	r3, [r6, #12]
 800ca98:	b183      	cbz	r3, 800cabc <_Balloc+0x50>
 800ca9a:	69e3      	ldr	r3, [r4, #28]
 800ca9c:	68db      	ldr	r3, [r3, #12]
 800ca9e:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800caa2:	b9b8      	cbnz	r0, 800cad4 <_Balloc+0x68>
 800caa4:	2101      	movs	r1, #1
 800caa6:	fa01 f605 	lsl.w	r6, r1, r5
 800caaa:	1d72      	adds	r2, r6, #5
 800caac:	0092      	lsls	r2, r2, #2
 800caae:	4620      	mov	r0, r4
 800cab0:	f000 fd5a 	bl	800d568 <_calloc_r>
 800cab4:	b160      	cbz	r0, 800cad0 <_Balloc+0x64>
 800cab6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800caba:	e00e      	b.n	800cada <_Balloc+0x6e>
 800cabc:	2221      	movs	r2, #33	@ 0x21
 800cabe:	2104      	movs	r1, #4
 800cac0:	4620      	mov	r0, r4
 800cac2:	f000 fd51 	bl	800d568 <_calloc_r>
 800cac6:	69e3      	ldr	r3, [r4, #28]
 800cac8:	60f0      	str	r0, [r6, #12]
 800caca:	68db      	ldr	r3, [r3, #12]
 800cacc:	2b00      	cmp	r3, #0
 800cace:	d1e4      	bne.n	800ca9a <_Balloc+0x2e>
 800cad0:	2000      	movs	r0, #0
 800cad2:	bd70      	pop	{r4, r5, r6, pc}
 800cad4:	6802      	ldr	r2, [r0, #0]
 800cad6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800cada:	2300      	movs	r3, #0
 800cadc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800cae0:	e7f7      	b.n	800cad2 <_Balloc+0x66>
 800cae2:	bf00      	nop
 800cae4:	0800dea9 	.word	0x0800dea9
 800cae8:	0800df3a 	.word	0x0800df3a

0800caec <_Bfree>:
 800caec:	b570      	push	{r4, r5, r6, lr}
 800caee:	69c6      	ldr	r6, [r0, #28]
 800caf0:	4605      	mov	r5, r0
 800caf2:	460c      	mov	r4, r1
 800caf4:	b976      	cbnz	r6, 800cb14 <_Bfree+0x28>
 800caf6:	2010      	movs	r0, #16
 800caf8:	f7ff fe56 	bl	800c7a8 <malloc>
 800cafc:	4602      	mov	r2, r0
 800cafe:	61e8      	str	r0, [r5, #28]
 800cb00:	b920      	cbnz	r0, 800cb0c <_Bfree+0x20>
 800cb02:	4b09      	ldr	r3, [pc, #36]	@ (800cb28 <_Bfree+0x3c>)
 800cb04:	4809      	ldr	r0, [pc, #36]	@ (800cb2c <_Bfree+0x40>)
 800cb06:	218f      	movs	r1, #143	@ 0x8f
 800cb08:	f000 fd10 	bl	800d52c <__assert_func>
 800cb0c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800cb10:	6006      	str	r6, [r0, #0]
 800cb12:	60c6      	str	r6, [r0, #12]
 800cb14:	b13c      	cbz	r4, 800cb26 <_Bfree+0x3a>
 800cb16:	69eb      	ldr	r3, [r5, #28]
 800cb18:	6862      	ldr	r2, [r4, #4]
 800cb1a:	68db      	ldr	r3, [r3, #12]
 800cb1c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800cb20:	6021      	str	r1, [r4, #0]
 800cb22:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800cb26:	bd70      	pop	{r4, r5, r6, pc}
 800cb28:	0800dea9 	.word	0x0800dea9
 800cb2c:	0800df3a 	.word	0x0800df3a

0800cb30 <__multadd>:
 800cb30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cb34:	690d      	ldr	r5, [r1, #16]
 800cb36:	4607      	mov	r7, r0
 800cb38:	460c      	mov	r4, r1
 800cb3a:	461e      	mov	r6, r3
 800cb3c:	f101 0c14 	add.w	ip, r1, #20
 800cb40:	2000      	movs	r0, #0
 800cb42:	f8dc 3000 	ldr.w	r3, [ip]
 800cb46:	b299      	uxth	r1, r3
 800cb48:	fb02 6101 	mla	r1, r2, r1, r6
 800cb4c:	0c1e      	lsrs	r6, r3, #16
 800cb4e:	0c0b      	lsrs	r3, r1, #16
 800cb50:	fb02 3306 	mla	r3, r2, r6, r3
 800cb54:	b289      	uxth	r1, r1
 800cb56:	3001      	adds	r0, #1
 800cb58:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800cb5c:	4285      	cmp	r5, r0
 800cb5e:	f84c 1b04 	str.w	r1, [ip], #4
 800cb62:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800cb66:	dcec      	bgt.n	800cb42 <__multadd+0x12>
 800cb68:	b30e      	cbz	r6, 800cbae <__multadd+0x7e>
 800cb6a:	68a3      	ldr	r3, [r4, #8]
 800cb6c:	42ab      	cmp	r3, r5
 800cb6e:	dc19      	bgt.n	800cba4 <__multadd+0x74>
 800cb70:	6861      	ldr	r1, [r4, #4]
 800cb72:	4638      	mov	r0, r7
 800cb74:	3101      	adds	r1, #1
 800cb76:	f7ff ff79 	bl	800ca6c <_Balloc>
 800cb7a:	4680      	mov	r8, r0
 800cb7c:	b928      	cbnz	r0, 800cb8a <__multadd+0x5a>
 800cb7e:	4602      	mov	r2, r0
 800cb80:	4b0c      	ldr	r3, [pc, #48]	@ (800cbb4 <__multadd+0x84>)
 800cb82:	480d      	ldr	r0, [pc, #52]	@ (800cbb8 <__multadd+0x88>)
 800cb84:	21ba      	movs	r1, #186	@ 0xba
 800cb86:	f000 fcd1 	bl	800d52c <__assert_func>
 800cb8a:	6922      	ldr	r2, [r4, #16]
 800cb8c:	3202      	adds	r2, #2
 800cb8e:	f104 010c 	add.w	r1, r4, #12
 800cb92:	0092      	lsls	r2, r2, #2
 800cb94:	300c      	adds	r0, #12
 800cb96:	f7fe fed1 	bl	800b93c <memcpy>
 800cb9a:	4621      	mov	r1, r4
 800cb9c:	4638      	mov	r0, r7
 800cb9e:	f7ff ffa5 	bl	800caec <_Bfree>
 800cba2:	4644      	mov	r4, r8
 800cba4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800cba8:	3501      	adds	r5, #1
 800cbaa:	615e      	str	r6, [r3, #20]
 800cbac:	6125      	str	r5, [r4, #16]
 800cbae:	4620      	mov	r0, r4
 800cbb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cbb4:	0800df18 	.word	0x0800df18
 800cbb8:	0800df3a 	.word	0x0800df3a

0800cbbc <__hi0bits>:
 800cbbc:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 800cbc0:	4603      	mov	r3, r0
 800cbc2:	bf36      	itet	cc
 800cbc4:	0403      	lslcc	r3, r0, #16
 800cbc6:	2000      	movcs	r0, #0
 800cbc8:	2010      	movcc	r0, #16
 800cbca:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800cbce:	bf3c      	itt	cc
 800cbd0:	021b      	lslcc	r3, r3, #8
 800cbd2:	3008      	addcc	r0, #8
 800cbd4:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 800cbd8:	bf3c      	itt	cc
 800cbda:	011b      	lslcc	r3, r3, #4
 800cbdc:	3004      	addcc	r0, #4
 800cbde:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800cbe2:	bf3c      	itt	cc
 800cbe4:	009b      	lslcc	r3, r3, #2
 800cbe6:	3002      	addcc	r0, #2
 800cbe8:	2b00      	cmp	r3, #0
 800cbea:	db05      	blt.n	800cbf8 <__hi0bits+0x3c>
 800cbec:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 800cbf0:	f100 0001 	add.w	r0, r0, #1
 800cbf4:	bf08      	it	eq
 800cbf6:	2020      	moveq	r0, #32
 800cbf8:	4770      	bx	lr

0800cbfa <__lo0bits>:
 800cbfa:	6803      	ldr	r3, [r0, #0]
 800cbfc:	4602      	mov	r2, r0
 800cbfe:	f013 0007 	ands.w	r0, r3, #7
 800cc02:	d00b      	beq.n	800cc1c <__lo0bits+0x22>
 800cc04:	07d9      	lsls	r1, r3, #31
 800cc06:	d421      	bmi.n	800cc4c <__lo0bits+0x52>
 800cc08:	0798      	lsls	r0, r3, #30
 800cc0a:	bf49      	itett	mi
 800cc0c:	085b      	lsrmi	r3, r3, #1
 800cc0e:	089b      	lsrpl	r3, r3, #2
 800cc10:	2001      	movmi	r0, #1
 800cc12:	6013      	strmi	r3, [r2, #0]
 800cc14:	bf5c      	itt	pl
 800cc16:	6013      	strpl	r3, [r2, #0]
 800cc18:	2002      	movpl	r0, #2
 800cc1a:	4770      	bx	lr
 800cc1c:	b299      	uxth	r1, r3
 800cc1e:	b909      	cbnz	r1, 800cc24 <__lo0bits+0x2a>
 800cc20:	0c1b      	lsrs	r3, r3, #16
 800cc22:	2010      	movs	r0, #16
 800cc24:	b2d9      	uxtb	r1, r3
 800cc26:	b909      	cbnz	r1, 800cc2c <__lo0bits+0x32>
 800cc28:	3008      	adds	r0, #8
 800cc2a:	0a1b      	lsrs	r3, r3, #8
 800cc2c:	0719      	lsls	r1, r3, #28
 800cc2e:	bf04      	itt	eq
 800cc30:	091b      	lsreq	r3, r3, #4
 800cc32:	3004      	addeq	r0, #4
 800cc34:	0799      	lsls	r1, r3, #30
 800cc36:	bf04      	itt	eq
 800cc38:	089b      	lsreq	r3, r3, #2
 800cc3a:	3002      	addeq	r0, #2
 800cc3c:	07d9      	lsls	r1, r3, #31
 800cc3e:	d403      	bmi.n	800cc48 <__lo0bits+0x4e>
 800cc40:	085b      	lsrs	r3, r3, #1
 800cc42:	f100 0001 	add.w	r0, r0, #1
 800cc46:	d003      	beq.n	800cc50 <__lo0bits+0x56>
 800cc48:	6013      	str	r3, [r2, #0]
 800cc4a:	4770      	bx	lr
 800cc4c:	2000      	movs	r0, #0
 800cc4e:	4770      	bx	lr
 800cc50:	2020      	movs	r0, #32
 800cc52:	4770      	bx	lr

0800cc54 <__i2b>:
 800cc54:	b510      	push	{r4, lr}
 800cc56:	460c      	mov	r4, r1
 800cc58:	2101      	movs	r1, #1
 800cc5a:	f7ff ff07 	bl	800ca6c <_Balloc>
 800cc5e:	4602      	mov	r2, r0
 800cc60:	b928      	cbnz	r0, 800cc6e <__i2b+0x1a>
 800cc62:	4b05      	ldr	r3, [pc, #20]	@ (800cc78 <__i2b+0x24>)
 800cc64:	4805      	ldr	r0, [pc, #20]	@ (800cc7c <__i2b+0x28>)
 800cc66:	f240 1145 	movw	r1, #325	@ 0x145
 800cc6a:	f000 fc5f 	bl	800d52c <__assert_func>
 800cc6e:	2301      	movs	r3, #1
 800cc70:	6144      	str	r4, [r0, #20]
 800cc72:	6103      	str	r3, [r0, #16]
 800cc74:	bd10      	pop	{r4, pc}
 800cc76:	bf00      	nop
 800cc78:	0800df18 	.word	0x0800df18
 800cc7c:	0800df3a 	.word	0x0800df3a

0800cc80 <__multiply>:
 800cc80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cc84:	4617      	mov	r7, r2
 800cc86:	690a      	ldr	r2, [r1, #16]
 800cc88:	693b      	ldr	r3, [r7, #16]
 800cc8a:	429a      	cmp	r2, r3
 800cc8c:	bfa8      	it	ge
 800cc8e:	463b      	movge	r3, r7
 800cc90:	4689      	mov	r9, r1
 800cc92:	bfa4      	itt	ge
 800cc94:	460f      	movge	r7, r1
 800cc96:	4699      	movge	r9, r3
 800cc98:	693d      	ldr	r5, [r7, #16]
 800cc9a:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800cc9e:	68bb      	ldr	r3, [r7, #8]
 800cca0:	6879      	ldr	r1, [r7, #4]
 800cca2:	eb05 060a 	add.w	r6, r5, sl
 800cca6:	42b3      	cmp	r3, r6
 800cca8:	b085      	sub	sp, #20
 800ccaa:	bfb8      	it	lt
 800ccac:	3101      	addlt	r1, #1
 800ccae:	f7ff fedd 	bl	800ca6c <_Balloc>
 800ccb2:	b930      	cbnz	r0, 800ccc2 <__multiply+0x42>
 800ccb4:	4602      	mov	r2, r0
 800ccb6:	4b41      	ldr	r3, [pc, #260]	@ (800cdbc <__multiply+0x13c>)
 800ccb8:	4841      	ldr	r0, [pc, #260]	@ (800cdc0 <__multiply+0x140>)
 800ccba:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 800ccbe:	f000 fc35 	bl	800d52c <__assert_func>
 800ccc2:	f100 0414 	add.w	r4, r0, #20
 800ccc6:	eb04 0e86 	add.w	lr, r4, r6, lsl #2
 800ccca:	4623      	mov	r3, r4
 800cccc:	2200      	movs	r2, #0
 800ccce:	4573      	cmp	r3, lr
 800ccd0:	d320      	bcc.n	800cd14 <__multiply+0x94>
 800ccd2:	f107 0814 	add.w	r8, r7, #20
 800ccd6:	f109 0114 	add.w	r1, r9, #20
 800ccda:	eb08 0585 	add.w	r5, r8, r5, lsl #2
 800ccde:	eb01 038a 	add.w	r3, r1, sl, lsl #2
 800cce2:	9302      	str	r3, [sp, #8]
 800cce4:	1beb      	subs	r3, r5, r7
 800cce6:	3b15      	subs	r3, #21
 800cce8:	f023 0303 	bic.w	r3, r3, #3
 800ccec:	3304      	adds	r3, #4
 800ccee:	3715      	adds	r7, #21
 800ccf0:	42bd      	cmp	r5, r7
 800ccf2:	bf38      	it	cc
 800ccf4:	2304      	movcc	r3, #4
 800ccf6:	9301      	str	r3, [sp, #4]
 800ccf8:	9b02      	ldr	r3, [sp, #8]
 800ccfa:	9103      	str	r1, [sp, #12]
 800ccfc:	428b      	cmp	r3, r1
 800ccfe:	d80c      	bhi.n	800cd1a <__multiply+0x9a>
 800cd00:	2e00      	cmp	r6, #0
 800cd02:	dd03      	ble.n	800cd0c <__multiply+0x8c>
 800cd04:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 800cd08:	2b00      	cmp	r3, #0
 800cd0a:	d055      	beq.n	800cdb8 <__multiply+0x138>
 800cd0c:	6106      	str	r6, [r0, #16]
 800cd0e:	b005      	add	sp, #20
 800cd10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd14:	f843 2b04 	str.w	r2, [r3], #4
 800cd18:	e7d9      	b.n	800ccce <__multiply+0x4e>
 800cd1a:	f8b1 a000 	ldrh.w	sl, [r1]
 800cd1e:	f1ba 0f00 	cmp.w	sl, #0
 800cd22:	d01f      	beq.n	800cd64 <__multiply+0xe4>
 800cd24:	46c4      	mov	ip, r8
 800cd26:	46a1      	mov	r9, r4
 800cd28:	2700      	movs	r7, #0
 800cd2a:	f85c 2b04 	ldr.w	r2, [ip], #4
 800cd2e:	f8d9 3000 	ldr.w	r3, [r9]
 800cd32:	fa1f fb82 	uxth.w	fp, r2
 800cd36:	b29b      	uxth	r3, r3
 800cd38:	fb0a 330b 	mla	r3, sl, fp, r3
 800cd3c:	443b      	add	r3, r7
 800cd3e:	f8d9 7000 	ldr.w	r7, [r9]
 800cd42:	0c12      	lsrs	r2, r2, #16
 800cd44:	0c3f      	lsrs	r7, r7, #16
 800cd46:	fb0a 7202 	mla	r2, sl, r2, r7
 800cd4a:	eb02 4213 	add.w	r2, r2, r3, lsr #16
 800cd4e:	b29b      	uxth	r3, r3
 800cd50:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cd54:	4565      	cmp	r5, ip
 800cd56:	f849 3b04 	str.w	r3, [r9], #4
 800cd5a:	ea4f 4712 	mov.w	r7, r2, lsr #16
 800cd5e:	d8e4      	bhi.n	800cd2a <__multiply+0xaa>
 800cd60:	9b01      	ldr	r3, [sp, #4]
 800cd62:	50e7      	str	r7, [r4, r3]
 800cd64:	9b03      	ldr	r3, [sp, #12]
 800cd66:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 800cd6a:	3104      	adds	r1, #4
 800cd6c:	f1b9 0f00 	cmp.w	r9, #0
 800cd70:	d020      	beq.n	800cdb4 <__multiply+0x134>
 800cd72:	6823      	ldr	r3, [r4, #0]
 800cd74:	4647      	mov	r7, r8
 800cd76:	46a4      	mov	ip, r4
 800cd78:	f04f 0a00 	mov.w	sl, #0
 800cd7c:	f8b7 b000 	ldrh.w	fp, [r7]
 800cd80:	f8bc 2002 	ldrh.w	r2, [ip, #2]
 800cd84:	fb09 220b 	mla	r2, r9, fp, r2
 800cd88:	4452      	add	r2, sl
 800cd8a:	b29b      	uxth	r3, r3
 800cd8c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800cd90:	f84c 3b04 	str.w	r3, [ip], #4
 800cd94:	f857 3b04 	ldr.w	r3, [r7], #4
 800cd98:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800cd9c:	f8bc 3000 	ldrh.w	r3, [ip]
 800cda0:	fb09 330a 	mla	r3, r9, sl, r3
 800cda4:	eb03 4312 	add.w	r3, r3, r2, lsr #16
 800cda8:	42bd      	cmp	r5, r7
 800cdaa:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 800cdae:	d8e5      	bhi.n	800cd7c <__multiply+0xfc>
 800cdb0:	9a01      	ldr	r2, [sp, #4]
 800cdb2:	50a3      	str	r3, [r4, r2]
 800cdb4:	3404      	adds	r4, #4
 800cdb6:	e79f      	b.n	800ccf8 <__multiply+0x78>
 800cdb8:	3e01      	subs	r6, #1
 800cdba:	e7a1      	b.n	800cd00 <__multiply+0x80>
 800cdbc:	0800df18 	.word	0x0800df18
 800cdc0:	0800df3a 	.word	0x0800df3a

0800cdc4 <__pow5mult>:
 800cdc4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800cdc8:	4615      	mov	r5, r2
 800cdca:	f012 0203 	ands.w	r2, r2, #3
 800cdce:	4607      	mov	r7, r0
 800cdd0:	460e      	mov	r6, r1
 800cdd2:	d007      	beq.n	800cde4 <__pow5mult+0x20>
 800cdd4:	4c25      	ldr	r4, [pc, #148]	@ (800ce6c <__pow5mult+0xa8>)
 800cdd6:	3a01      	subs	r2, #1
 800cdd8:	2300      	movs	r3, #0
 800cdda:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800cdde:	f7ff fea7 	bl	800cb30 <__multadd>
 800cde2:	4606      	mov	r6, r0
 800cde4:	10ad      	asrs	r5, r5, #2
 800cde6:	d03d      	beq.n	800ce64 <__pow5mult+0xa0>
 800cde8:	69fc      	ldr	r4, [r7, #28]
 800cdea:	b97c      	cbnz	r4, 800ce0c <__pow5mult+0x48>
 800cdec:	2010      	movs	r0, #16
 800cdee:	f7ff fcdb 	bl	800c7a8 <malloc>
 800cdf2:	4602      	mov	r2, r0
 800cdf4:	61f8      	str	r0, [r7, #28]
 800cdf6:	b928      	cbnz	r0, 800ce04 <__pow5mult+0x40>
 800cdf8:	4b1d      	ldr	r3, [pc, #116]	@ (800ce70 <__pow5mult+0xac>)
 800cdfa:	481e      	ldr	r0, [pc, #120]	@ (800ce74 <__pow5mult+0xb0>)
 800cdfc:	f240 11b3 	movw	r1, #435	@ 0x1b3
 800ce00:	f000 fb94 	bl	800d52c <__assert_func>
 800ce04:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800ce08:	6004      	str	r4, [r0, #0]
 800ce0a:	60c4      	str	r4, [r0, #12]
 800ce0c:	f8d7 801c 	ldr.w	r8, [r7, #28]
 800ce10:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800ce14:	b94c      	cbnz	r4, 800ce2a <__pow5mult+0x66>
 800ce16:	f240 2171 	movw	r1, #625	@ 0x271
 800ce1a:	4638      	mov	r0, r7
 800ce1c:	f7ff ff1a 	bl	800cc54 <__i2b>
 800ce20:	2300      	movs	r3, #0
 800ce22:	f8c8 0008 	str.w	r0, [r8, #8]
 800ce26:	4604      	mov	r4, r0
 800ce28:	6003      	str	r3, [r0, #0]
 800ce2a:	f04f 0900 	mov.w	r9, #0
 800ce2e:	07eb      	lsls	r3, r5, #31
 800ce30:	d50a      	bpl.n	800ce48 <__pow5mult+0x84>
 800ce32:	4631      	mov	r1, r6
 800ce34:	4622      	mov	r2, r4
 800ce36:	4638      	mov	r0, r7
 800ce38:	f7ff ff22 	bl	800cc80 <__multiply>
 800ce3c:	4631      	mov	r1, r6
 800ce3e:	4680      	mov	r8, r0
 800ce40:	4638      	mov	r0, r7
 800ce42:	f7ff fe53 	bl	800caec <_Bfree>
 800ce46:	4646      	mov	r6, r8
 800ce48:	106d      	asrs	r5, r5, #1
 800ce4a:	d00b      	beq.n	800ce64 <__pow5mult+0xa0>
 800ce4c:	6820      	ldr	r0, [r4, #0]
 800ce4e:	b938      	cbnz	r0, 800ce60 <__pow5mult+0x9c>
 800ce50:	4622      	mov	r2, r4
 800ce52:	4621      	mov	r1, r4
 800ce54:	4638      	mov	r0, r7
 800ce56:	f7ff ff13 	bl	800cc80 <__multiply>
 800ce5a:	6020      	str	r0, [r4, #0]
 800ce5c:	f8c0 9000 	str.w	r9, [r0]
 800ce60:	4604      	mov	r4, r0
 800ce62:	e7e4      	b.n	800ce2e <__pow5mult+0x6a>
 800ce64:	4630      	mov	r0, r6
 800ce66:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800ce6a:	bf00      	nop
 800ce6c:	0800dfdc 	.word	0x0800dfdc
 800ce70:	0800dea9 	.word	0x0800dea9
 800ce74:	0800df3a 	.word	0x0800df3a

0800ce78 <__lshift>:
 800ce78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ce7c:	460c      	mov	r4, r1
 800ce7e:	6849      	ldr	r1, [r1, #4]
 800ce80:	6923      	ldr	r3, [r4, #16]
 800ce82:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800ce86:	68a3      	ldr	r3, [r4, #8]
 800ce88:	4607      	mov	r7, r0
 800ce8a:	4691      	mov	r9, r2
 800ce8c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800ce90:	f108 0601 	add.w	r6, r8, #1
 800ce94:	42b3      	cmp	r3, r6
 800ce96:	db0b      	blt.n	800ceb0 <__lshift+0x38>
 800ce98:	4638      	mov	r0, r7
 800ce9a:	f7ff fde7 	bl	800ca6c <_Balloc>
 800ce9e:	4605      	mov	r5, r0
 800cea0:	b948      	cbnz	r0, 800ceb6 <__lshift+0x3e>
 800cea2:	4602      	mov	r2, r0
 800cea4:	4b28      	ldr	r3, [pc, #160]	@ (800cf48 <__lshift+0xd0>)
 800cea6:	4829      	ldr	r0, [pc, #164]	@ (800cf4c <__lshift+0xd4>)
 800cea8:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 800ceac:	f000 fb3e 	bl	800d52c <__assert_func>
 800ceb0:	3101      	adds	r1, #1
 800ceb2:	005b      	lsls	r3, r3, #1
 800ceb4:	e7ee      	b.n	800ce94 <__lshift+0x1c>
 800ceb6:	2300      	movs	r3, #0
 800ceb8:	f100 0114 	add.w	r1, r0, #20
 800cebc:	f100 0210 	add.w	r2, r0, #16
 800cec0:	4618      	mov	r0, r3
 800cec2:	4553      	cmp	r3, sl
 800cec4:	db33      	blt.n	800cf2e <__lshift+0xb6>
 800cec6:	6920      	ldr	r0, [r4, #16]
 800cec8:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800cecc:	f104 0314 	add.w	r3, r4, #20
 800ced0:	f019 091f 	ands.w	r9, r9, #31
 800ced4:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800ced8:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800cedc:	d02b      	beq.n	800cf36 <__lshift+0xbe>
 800cede:	f1c9 0e20 	rsb	lr, r9, #32
 800cee2:	468a      	mov	sl, r1
 800cee4:	2200      	movs	r2, #0
 800cee6:	6818      	ldr	r0, [r3, #0]
 800cee8:	fa00 f009 	lsl.w	r0, r0, r9
 800ceec:	4310      	orrs	r0, r2
 800ceee:	f84a 0b04 	str.w	r0, [sl], #4
 800cef2:	f853 2b04 	ldr.w	r2, [r3], #4
 800cef6:	459c      	cmp	ip, r3
 800cef8:	fa22 f20e 	lsr.w	r2, r2, lr
 800cefc:	d8f3      	bhi.n	800cee6 <__lshift+0x6e>
 800cefe:	ebac 0304 	sub.w	r3, ip, r4
 800cf02:	3b15      	subs	r3, #21
 800cf04:	f023 0303 	bic.w	r3, r3, #3
 800cf08:	3304      	adds	r3, #4
 800cf0a:	f104 0015 	add.w	r0, r4, #21
 800cf0e:	4560      	cmp	r0, ip
 800cf10:	bf88      	it	hi
 800cf12:	2304      	movhi	r3, #4
 800cf14:	50ca      	str	r2, [r1, r3]
 800cf16:	b10a      	cbz	r2, 800cf1c <__lshift+0xa4>
 800cf18:	f108 0602 	add.w	r6, r8, #2
 800cf1c:	3e01      	subs	r6, #1
 800cf1e:	4638      	mov	r0, r7
 800cf20:	612e      	str	r6, [r5, #16]
 800cf22:	4621      	mov	r1, r4
 800cf24:	f7ff fde2 	bl	800caec <_Bfree>
 800cf28:	4628      	mov	r0, r5
 800cf2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cf2e:	f842 0f04 	str.w	r0, [r2, #4]!
 800cf32:	3301      	adds	r3, #1
 800cf34:	e7c5      	b.n	800cec2 <__lshift+0x4a>
 800cf36:	3904      	subs	r1, #4
 800cf38:	f853 2b04 	ldr.w	r2, [r3], #4
 800cf3c:	f841 2f04 	str.w	r2, [r1, #4]!
 800cf40:	459c      	cmp	ip, r3
 800cf42:	d8f9      	bhi.n	800cf38 <__lshift+0xc0>
 800cf44:	e7ea      	b.n	800cf1c <__lshift+0xa4>
 800cf46:	bf00      	nop
 800cf48:	0800df18 	.word	0x0800df18
 800cf4c:	0800df3a 	.word	0x0800df3a

0800cf50 <__mcmp>:
 800cf50:	690a      	ldr	r2, [r1, #16]
 800cf52:	4603      	mov	r3, r0
 800cf54:	6900      	ldr	r0, [r0, #16]
 800cf56:	1a80      	subs	r0, r0, r2
 800cf58:	b530      	push	{r4, r5, lr}
 800cf5a:	d10e      	bne.n	800cf7a <__mcmp+0x2a>
 800cf5c:	3314      	adds	r3, #20
 800cf5e:	3114      	adds	r1, #20
 800cf60:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 800cf64:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 800cf68:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 800cf6c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 800cf70:	4295      	cmp	r5, r2
 800cf72:	d003      	beq.n	800cf7c <__mcmp+0x2c>
 800cf74:	d205      	bcs.n	800cf82 <__mcmp+0x32>
 800cf76:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800cf7a:	bd30      	pop	{r4, r5, pc}
 800cf7c:	42a3      	cmp	r3, r4
 800cf7e:	d3f3      	bcc.n	800cf68 <__mcmp+0x18>
 800cf80:	e7fb      	b.n	800cf7a <__mcmp+0x2a>
 800cf82:	2001      	movs	r0, #1
 800cf84:	e7f9      	b.n	800cf7a <__mcmp+0x2a>
	...

0800cf88 <__mdiff>:
 800cf88:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf8c:	4689      	mov	r9, r1
 800cf8e:	4606      	mov	r6, r0
 800cf90:	4611      	mov	r1, r2
 800cf92:	4648      	mov	r0, r9
 800cf94:	4614      	mov	r4, r2
 800cf96:	f7ff ffdb 	bl	800cf50 <__mcmp>
 800cf9a:	1e05      	subs	r5, r0, #0
 800cf9c:	d112      	bne.n	800cfc4 <__mdiff+0x3c>
 800cf9e:	4629      	mov	r1, r5
 800cfa0:	4630      	mov	r0, r6
 800cfa2:	f7ff fd63 	bl	800ca6c <_Balloc>
 800cfa6:	4602      	mov	r2, r0
 800cfa8:	b928      	cbnz	r0, 800cfb6 <__mdiff+0x2e>
 800cfaa:	4b3f      	ldr	r3, [pc, #252]	@ (800d0a8 <__mdiff+0x120>)
 800cfac:	f240 2137 	movw	r1, #567	@ 0x237
 800cfb0:	483e      	ldr	r0, [pc, #248]	@ (800d0ac <__mdiff+0x124>)
 800cfb2:	f000 fabb 	bl	800d52c <__assert_func>
 800cfb6:	2301      	movs	r3, #1
 800cfb8:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800cfbc:	4610      	mov	r0, r2
 800cfbe:	b003      	add	sp, #12
 800cfc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cfc4:	bfbc      	itt	lt
 800cfc6:	464b      	movlt	r3, r9
 800cfc8:	46a1      	movlt	r9, r4
 800cfca:	4630      	mov	r0, r6
 800cfcc:	f8d9 1004 	ldr.w	r1, [r9, #4]
 800cfd0:	bfba      	itte	lt
 800cfd2:	461c      	movlt	r4, r3
 800cfd4:	2501      	movlt	r5, #1
 800cfd6:	2500      	movge	r5, #0
 800cfd8:	f7ff fd48 	bl	800ca6c <_Balloc>
 800cfdc:	4602      	mov	r2, r0
 800cfde:	b918      	cbnz	r0, 800cfe8 <__mdiff+0x60>
 800cfe0:	4b31      	ldr	r3, [pc, #196]	@ (800d0a8 <__mdiff+0x120>)
 800cfe2:	f240 2145 	movw	r1, #581	@ 0x245
 800cfe6:	e7e3      	b.n	800cfb0 <__mdiff+0x28>
 800cfe8:	f8d9 7010 	ldr.w	r7, [r9, #16]
 800cfec:	6926      	ldr	r6, [r4, #16]
 800cfee:	60c5      	str	r5, [r0, #12]
 800cff0:	f109 0310 	add.w	r3, r9, #16
 800cff4:	f109 0514 	add.w	r5, r9, #20
 800cff8:	f104 0e14 	add.w	lr, r4, #20
 800cffc:	f100 0b14 	add.w	fp, r0, #20
 800d000:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 800d004:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 800d008:	9301      	str	r3, [sp, #4]
 800d00a:	46d9      	mov	r9, fp
 800d00c:	f04f 0c00 	mov.w	ip, #0
 800d010:	9b01      	ldr	r3, [sp, #4]
 800d012:	f85e 0b04 	ldr.w	r0, [lr], #4
 800d016:	f853 af04 	ldr.w	sl, [r3, #4]!
 800d01a:	9301      	str	r3, [sp, #4]
 800d01c:	fa1f f38a 	uxth.w	r3, sl
 800d020:	4619      	mov	r1, r3
 800d022:	b283      	uxth	r3, r0
 800d024:	1acb      	subs	r3, r1, r3
 800d026:	0c00      	lsrs	r0, r0, #16
 800d028:	4463      	add	r3, ip
 800d02a:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 800d02e:	eb00 4023 	add.w	r0, r0, r3, asr #16
 800d032:	b29b      	uxth	r3, r3
 800d034:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 800d038:	4576      	cmp	r6, lr
 800d03a:	f849 3b04 	str.w	r3, [r9], #4
 800d03e:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800d042:	d8e5      	bhi.n	800d010 <__mdiff+0x88>
 800d044:	1b33      	subs	r3, r6, r4
 800d046:	3b15      	subs	r3, #21
 800d048:	f023 0303 	bic.w	r3, r3, #3
 800d04c:	3415      	adds	r4, #21
 800d04e:	3304      	adds	r3, #4
 800d050:	42a6      	cmp	r6, r4
 800d052:	bf38      	it	cc
 800d054:	2304      	movcc	r3, #4
 800d056:	441d      	add	r5, r3
 800d058:	445b      	add	r3, fp
 800d05a:	461e      	mov	r6, r3
 800d05c:	462c      	mov	r4, r5
 800d05e:	4544      	cmp	r4, r8
 800d060:	d30e      	bcc.n	800d080 <__mdiff+0xf8>
 800d062:	f108 0103 	add.w	r1, r8, #3
 800d066:	1b49      	subs	r1, r1, r5
 800d068:	f021 0103 	bic.w	r1, r1, #3
 800d06c:	3d03      	subs	r5, #3
 800d06e:	45a8      	cmp	r8, r5
 800d070:	bf38      	it	cc
 800d072:	2100      	movcc	r1, #0
 800d074:	440b      	add	r3, r1
 800d076:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800d07a:	b191      	cbz	r1, 800d0a2 <__mdiff+0x11a>
 800d07c:	6117      	str	r7, [r2, #16]
 800d07e:	e79d      	b.n	800cfbc <__mdiff+0x34>
 800d080:	f854 1b04 	ldr.w	r1, [r4], #4
 800d084:	46e6      	mov	lr, ip
 800d086:	0c08      	lsrs	r0, r1, #16
 800d088:	fa1c fc81 	uxtah	ip, ip, r1
 800d08c:	4471      	add	r1, lr
 800d08e:	eb00 402c 	add.w	r0, r0, ip, asr #16
 800d092:	b289      	uxth	r1, r1
 800d094:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800d098:	f846 1b04 	str.w	r1, [r6], #4
 800d09c:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800d0a0:	e7dd      	b.n	800d05e <__mdiff+0xd6>
 800d0a2:	3f01      	subs	r7, #1
 800d0a4:	e7e7      	b.n	800d076 <__mdiff+0xee>
 800d0a6:	bf00      	nop
 800d0a8:	0800df18 	.word	0x0800df18
 800d0ac:	0800df3a 	.word	0x0800df3a

0800d0b0 <__d2b>:
 800d0b0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d0b4:	460f      	mov	r7, r1
 800d0b6:	2101      	movs	r1, #1
 800d0b8:	ec59 8b10 	vmov	r8, r9, d0
 800d0bc:	4616      	mov	r6, r2
 800d0be:	f7ff fcd5 	bl	800ca6c <_Balloc>
 800d0c2:	4604      	mov	r4, r0
 800d0c4:	b930      	cbnz	r0, 800d0d4 <__d2b+0x24>
 800d0c6:	4602      	mov	r2, r0
 800d0c8:	4b23      	ldr	r3, [pc, #140]	@ (800d158 <__d2b+0xa8>)
 800d0ca:	4824      	ldr	r0, [pc, #144]	@ (800d15c <__d2b+0xac>)
 800d0cc:	f240 310f 	movw	r1, #783	@ 0x30f
 800d0d0:	f000 fa2c 	bl	800d52c <__assert_func>
 800d0d4:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800d0d8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800d0dc:	b10d      	cbz	r5, 800d0e2 <__d2b+0x32>
 800d0de:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 800d0e2:	9301      	str	r3, [sp, #4]
 800d0e4:	f1b8 0300 	subs.w	r3, r8, #0
 800d0e8:	d023      	beq.n	800d132 <__d2b+0x82>
 800d0ea:	4668      	mov	r0, sp
 800d0ec:	9300      	str	r3, [sp, #0]
 800d0ee:	f7ff fd84 	bl	800cbfa <__lo0bits>
 800d0f2:	e9dd 1200 	ldrd	r1, r2, [sp]
 800d0f6:	b1d0      	cbz	r0, 800d12e <__d2b+0x7e>
 800d0f8:	f1c0 0320 	rsb	r3, r0, #32
 800d0fc:	fa02 f303 	lsl.w	r3, r2, r3
 800d100:	430b      	orrs	r3, r1
 800d102:	40c2      	lsrs	r2, r0
 800d104:	6163      	str	r3, [r4, #20]
 800d106:	9201      	str	r2, [sp, #4]
 800d108:	9b01      	ldr	r3, [sp, #4]
 800d10a:	61a3      	str	r3, [r4, #24]
 800d10c:	2b00      	cmp	r3, #0
 800d10e:	bf0c      	ite	eq
 800d110:	2201      	moveq	r2, #1
 800d112:	2202      	movne	r2, #2
 800d114:	6122      	str	r2, [r4, #16]
 800d116:	b1a5      	cbz	r5, 800d142 <__d2b+0x92>
 800d118:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 800d11c:	4405      	add	r5, r0
 800d11e:	603d      	str	r5, [r7, #0]
 800d120:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 800d124:	6030      	str	r0, [r6, #0]
 800d126:	4620      	mov	r0, r4
 800d128:	b003      	add	sp, #12
 800d12a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d12e:	6161      	str	r1, [r4, #20]
 800d130:	e7ea      	b.n	800d108 <__d2b+0x58>
 800d132:	a801      	add	r0, sp, #4
 800d134:	f7ff fd61 	bl	800cbfa <__lo0bits>
 800d138:	9b01      	ldr	r3, [sp, #4]
 800d13a:	6163      	str	r3, [r4, #20]
 800d13c:	3020      	adds	r0, #32
 800d13e:	2201      	movs	r2, #1
 800d140:	e7e8      	b.n	800d114 <__d2b+0x64>
 800d142:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800d146:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 800d14a:	6038      	str	r0, [r7, #0]
 800d14c:	6918      	ldr	r0, [r3, #16]
 800d14e:	f7ff fd35 	bl	800cbbc <__hi0bits>
 800d152:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800d156:	e7e5      	b.n	800d124 <__d2b+0x74>
 800d158:	0800df18 	.word	0x0800df18
 800d15c:	0800df3a 	.word	0x0800df3a

0800d160 <__sread>:
 800d160:	b510      	push	{r4, lr}
 800d162:	460c      	mov	r4, r1
 800d164:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d168:	f000 f98a 	bl	800d480 <_read_r>
 800d16c:	2800      	cmp	r0, #0
 800d16e:	bfab      	itete	ge
 800d170:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 800d172:	89a3      	ldrhlt	r3, [r4, #12]
 800d174:	181b      	addge	r3, r3, r0
 800d176:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800d17a:	bfac      	ite	ge
 800d17c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800d17e:	81a3      	strhlt	r3, [r4, #12]
 800d180:	bd10      	pop	{r4, pc}

0800d182 <__swrite>:
 800d182:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d186:	461f      	mov	r7, r3
 800d188:	898b      	ldrh	r3, [r1, #12]
 800d18a:	05db      	lsls	r3, r3, #23
 800d18c:	4605      	mov	r5, r0
 800d18e:	460c      	mov	r4, r1
 800d190:	4616      	mov	r6, r2
 800d192:	d505      	bpl.n	800d1a0 <__swrite+0x1e>
 800d194:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d198:	2302      	movs	r3, #2
 800d19a:	2200      	movs	r2, #0
 800d19c:	f000 f95e 	bl	800d45c <_lseek_r>
 800d1a0:	89a3      	ldrh	r3, [r4, #12]
 800d1a2:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800d1a6:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800d1aa:	81a3      	strh	r3, [r4, #12]
 800d1ac:	4632      	mov	r2, r6
 800d1ae:	463b      	mov	r3, r7
 800d1b0:	4628      	mov	r0, r5
 800d1b2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d1b6:	f000 b985 	b.w	800d4c4 <_write_r>

0800d1ba <__sseek>:
 800d1ba:	b510      	push	{r4, lr}
 800d1bc:	460c      	mov	r4, r1
 800d1be:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d1c2:	f000 f94b 	bl	800d45c <_lseek_r>
 800d1c6:	1c43      	adds	r3, r0, #1
 800d1c8:	89a3      	ldrh	r3, [r4, #12]
 800d1ca:	bf15      	itete	ne
 800d1cc:	6560      	strne	r0, [r4, #84]	@ 0x54
 800d1ce:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 800d1d2:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800d1d6:	81a3      	strheq	r3, [r4, #12]
 800d1d8:	bf18      	it	ne
 800d1da:	81a3      	strhne	r3, [r4, #12]
 800d1dc:	bd10      	pop	{r4, pc}

0800d1de <__sclose>:
 800d1de:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d1e2:	f000 b981 	b.w	800d4e8 <_close_r>

0800d1e6 <__swbuf_r>:
 800d1e6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d1e8:	460e      	mov	r6, r1
 800d1ea:	4614      	mov	r4, r2
 800d1ec:	4605      	mov	r5, r0
 800d1ee:	b118      	cbz	r0, 800d1f8 <__swbuf_r+0x12>
 800d1f0:	6a03      	ldr	r3, [r0, #32]
 800d1f2:	b90b      	cbnz	r3, 800d1f8 <__swbuf_r+0x12>
 800d1f4:	f7fe faba 	bl	800b76c <__sinit>
 800d1f8:	69a3      	ldr	r3, [r4, #24]
 800d1fa:	60a3      	str	r3, [r4, #8]
 800d1fc:	89a3      	ldrh	r3, [r4, #12]
 800d1fe:	071a      	lsls	r2, r3, #28
 800d200:	d501      	bpl.n	800d206 <__swbuf_r+0x20>
 800d202:	6923      	ldr	r3, [r4, #16]
 800d204:	b943      	cbnz	r3, 800d218 <__swbuf_r+0x32>
 800d206:	4621      	mov	r1, r4
 800d208:	4628      	mov	r0, r5
 800d20a:	f000 f82b 	bl	800d264 <__swsetup_r>
 800d20e:	b118      	cbz	r0, 800d218 <__swbuf_r+0x32>
 800d210:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 800d214:	4638      	mov	r0, r7
 800d216:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d218:	6823      	ldr	r3, [r4, #0]
 800d21a:	6922      	ldr	r2, [r4, #16]
 800d21c:	1a98      	subs	r0, r3, r2
 800d21e:	6963      	ldr	r3, [r4, #20]
 800d220:	b2f6      	uxtb	r6, r6
 800d222:	4283      	cmp	r3, r0
 800d224:	4637      	mov	r7, r6
 800d226:	dc05      	bgt.n	800d234 <__swbuf_r+0x4e>
 800d228:	4621      	mov	r1, r4
 800d22a:	4628      	mov	r0, r5
 800d22c:	f7ff fbea 	bl	800ca04 <_fflush_r>
 800d230:	2800      	cmp	r0, #0
 800d232:	d1ed      	bne.n	800d210 <__swbuf_r+0x2a>
 800d234:	68a3      	ldr	r3, [r4, #8]
 800d236:	3b01      	subs	r3, #1
 800d238:	60a3      	str	r3, [r4, #8]
 800d23a:	6823      	ldr	r3, [r4, #0]
 800d23c:	1c5a      	adds	r2, r3, #1
 800d23e:	6022      	str	r2, [r4, #0]
 800d240:	701e      	strb	r6, [r3, #0]
 800d242:	6962      	ldr	r2, [r4, #20]
 800d244:	1c43      	adds	r3, r0, #1
 800d246:	429a      	cmp	r2, r3
 800d248:	d004      	beq.n	800d254 <__swbuf_r+0x6e>
 800d24a:	89a3      	ldrh	r3, [r4, #12]
 800d24c:	07db      	lsls	r3, r3, #31
 800d24e:	d5e1      	bpl.n	800d214 <__swbuf_r+0x2e>
 800d250:	2e0a      	cmp	r6, #10
 800d252:	d1df      	bne.n	800d214 <__swbuf_r+0x2e>
 800d254:	4621      	mov	r1, r4
 800d256:	4628      	mov	r0, r5
 800d258:	f7ff fbd4 	bl	800ca04 <_fflush_r>
 800d25c:	2800      	cmp	r0, #0
 800d25e:	d0d9      	beq.n	800d214 <__swbuf_r+0x2e>
 800d260:	e7d6      	b.n	800d210 <__swbuf_r+0x2a>
	...

0800d264 <__swsetup_r>:
 800d264:	b538      	push	{r3, r4, r5, lr}
 800d266:	4b29      	ldr	r3, [pc, #164]	@ (800d30c <__swsetup_r+0xa8>)
 800d268:	4605      	mov	r5, r0
 800d26a:	6818      	ldr	r0, [r3, #0]
 800d26c:	460c      	mov	r4, r1
 800d26e:	b118      	cbz	r0, 800d278 <__swsetup_r+0x14>
 800d270:	6a03      	ldr	r3, [r0, #32]
 800d272:	b90b      	cbnz	r3, 800d278 <__swsetup_r+0x14>
 800d274:	f7fe fa7a 	bl	800b76c <__sinit>
 800d278:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d27c:	0719      	lsls	r1, r3, #28
 800d27e:	d422      	bmi.n	800d2c6 <__swsetup_r+0x62>
 800d280:	06da      	lsls	r2, r3, #27
 800d282:	d407      	bmi.n	800d294 <__swsetup_r+0x30>
 800d284:	2209      	movs	r2, #9
 800d286:	602a      	str	r2, [r5, #0]
 800d288:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800d28c:	81a3      	strh	r3, [r4, #12]
 800d28e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800d292:	e033      	b.n	800d2fc <__swsetup_r+0x98>
 800d294:	0758      	lsls	r0, r3, #29
 800d296:	d512      	bpl.n	800d2be <__swsetup_r+0x5a>
 800d298:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800d29a:	b141      	cbz	r1, 800d2ae <__swsetup_r+0x4a>
 800d29c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 800d2a0:	4299      	cmp	r1, r3
 800d2a2:	d002      	beq.n	800d2aa <__swsetup_r+0x46>
 800d2a4:	4628      	mov	r0, r5
 800d2a6:	f000 f973 	bl	800d590 <_free_r>
 800d2aa:	2300      	movs	r3, #0
 800d2ac:	6363      	str	r3, [r4, #52]	@ 0x34
 800d2ae:	89a3      	ldrh	r3, [r4, #12]
 800d2b0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 800d2b4:	81a3      	strh	r3, [r4, #12]
 800d2b6:	2300      	movs	r3, #0
 800d2b8:	6063      	str	r3, [r4, #4]
 800d2ba:	6923      	ldr	r3, [r4, #16]
 800d2bc:	6023      	str	r3, [r4, #0]
 800d2be:	89a3      	ldrh	r3, [r4, #12]
 800d2c0:	f043 0308 	orr.w	r3, r3, #8
 800d2c4:	81a3      	strh	r3, [r4, #12]
 800d2c6:	6923      	ldr	r3, [r4, #16]
 800d2c8:	b94b      	cbnz	r3, 800d2de <__swsetup_r+0x7a>
 800d2ca:	89a3      	ldrh	r3, [r4, #12]
 800d2cc:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 800d2d0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800d2d4:	d003      	beq.n	800d2de <__swsetup_r+0x7a>
 800d2d6:	4621      	mov	r1, r4
 800d2d8:	4628      	mov	r0, r5
 800d2da:	f000 f83f 	bl	800d35c <__smakebuf_r>
 800d2de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d2e2:	f013 0201 	ands.w	r2, r3, #1
 800d2e6:	d00a      	beq.n	800d2fe <__swsetup_r+0x9a>
 800d2e8:	2200      	movs	r2, #0
 800d2ea:	60a2      	str	r2, [r4, #8]
 800d2ec:	6962      	ldr	r2, [r4, #20]
 800d2ee:	4252      	negs	r2, r2
 800d2f0:	61a2      	str	r2, [r4, #24]
 800d2f2:	6922      	ldr	r2, [r4, #16]
 800d2f4:	b942      	cbnz	r2, 800d308 <__swsetup_r+0xa4>
 800d2f6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800d2fa:	d1c5      	bne.n	800d288 <__swsetup_r+0x24>
 800d2fc:	bd38      	pop	{r3, r4, r5, pc}
 800d2fe:	0799      	lsls	r1, r3, #30
 800d300:	bf58      	it	pl
 800d302:	6962      	ldrpl	r2, [r4, #20]
 800d304:	60a2      	str	r2, [r4, #8]
 800d306:	e7f4      	b.n	800d2f2 <__swsetup_r+0x8e>
 800d308:	2000      	movs	r0, #0
 800d30a:	e7f7      	b.n	800d2fc <__swsetup_r+0x98>
 800d30c:	24000024 	.word	0x24000024

0800d310 <__swhatbuf_r>:
 800d310:	b570      	push	{r4, r5, r6, lr}
 800d312:	460c      	mov	r4, r1
 800d314:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800d318:	2900      	cmp	r1, #0
 800d31a:	b096      	sub	sp, #88	@ 0x58
 800d31c:	4615      	mov	r5, r2
 800d31e:	461e      	mov	r6, r3
 800d320:	da0d      	bge.n	800d33e <__swhatbuf_r+0x2e>
 800d322:	89a3      	ldrh	r3, [r4, #12]
 800d324:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800d328:	f04f 0100 	mov.w	r1, #0
 800d32c:	bf14      	ite	ne
 800d32e:	2340      	movne	r3, #64	@ 0x40
 800d330:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 800d334:	2000      	movs	r0, #0
 800d336:	6031      	str	r1, [r6, #0]
 800d338:	602b      	str	r3, [r5, #0]
 800d33a:	b016      	add	sp, #88	@ 0x58
 800d33c:	bd70      	pop	{r4, r5, r6, pc}
 800d33e:	466a      	mov	r2, sp
 800d340:	f000 f8e2 	bl	800d508 <_fstat_r>
 800d344:	2800      	cmp	r0, #0
 800d346:	dbec      	blt.n	800d322 <__swhatbuf_r+0x12>
 800d348:	9901      	ldr	r1, [sp, #4]
 800d34a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800d34e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800d352:	4259      	negs	r1, r3
 800d354:	4159      	adcs	r1, r3
 800d356:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800d35a:	e7eb      	b.n	800d334 <__swhatbuf_r+0x24>

0800d35c <__smakebuf_r>:
 800d35c:	898b      	ldrh	r3, [r1, #12]
 800d35e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800d360:	079d      	lsls	r5, r3, #30
 800d362:	4606      	mov	r6, r0
 800d364:	460c      	mov	r4, r1
 800d366:	d507      	bpl.n	800d378 <__smakebuf_r+0x1c>
 800d368:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800d36c:	6023      	str	r3, [r4, #0]
 800d36e:	6123      	str	r3, [r4, #16]
 800d370:	2301      	movs	r3, #1
 800d372:	6163      	str	r3, [r4, #20]
 800d374:	b003      	add	sp, #12
 800d376:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d378:	ab01      	add	r3, sp, #4
 800d37a:	466a      	mov	r2, sp
 800d37c:	f7ff ffc8 	bl	800d310 <__swhatbuf_r>
 800d380:	9f00      	ldr	r7, [sp, #0]
 800d382:	4605      	mov	r5, r0
 800d384:	4639      	mov	r1, r7
 800d386:	4630      	mov	r0, r6
 800d388:	f7ff fa38 	bl	800c7fc <_malloc_r>
 800d38c:	b948      	cbnz	r0, 800d3a2 <__smakebuf_r+0x46>
 800d38e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800d392:	059a      	lsls	r2, r3, #22
 800d394:	d4ee      	bmi.n	800d374 <__smakebuf_r+0x18>
 800d396:	f023 0303 	bic.w	r3, r3, #3
 800d39a:	f043 0302 	orr.w	r3, r3, #2
 800d39e:	81a3      	strh	r3, [r4, #12]
 800d3a0:	e7e2      	b.n	800d368 <__smakebuf_r+0xc>
 800d3a2:	89a3      	ldrh	r3, [r4, #12]
 800d3a4:	6020      	str	r0, [r4, #0]
 800d3a6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800d3aa:	81a3      	strh	r3, [r4, #12]
 800d3ac:	9b01      	ldr	r3, [sp, #4]
 800d3ae:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800d3b2:	b15b      	cbz	r3, 800d3cc <__smakebuf_r+0x70>
 800d3b4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800d3b8:	4630      	mov	r0, r6
 800d3ba:	f000 f83f 	bl	800d43c <_isatty_r>
 800d3be:	b128      	cbz	r0, 800d3cc <__smakebuf_r+0x70>
 800d3c0:	89a3      	ldrh	r3, [r4, #12]
 800d3c2:	f023 0303 	bic.w	r3, r3, #3
 800d3c6:	f043 0301 	orr.w	r3, r3, #1
 800d3ca:	81a3      	strh	r3, [r4, #12]
 800d3cc:	89a3      	ldrh	r3, [r4, #12]
 800d3ce:	431d      	orrs	r5, r3
 800d3d0:	81a5      	strh	r5, [r4, #12]
 800d3d2:	e7cf      	b.n	800d374 <__smakebuf_r+0x18>

0800d3d4 <_putc_r>:
 800d3d4:	b570      	push	{r4, r5, r6, lr}
 800d3d6:	460d      	mov	r5, r1
 800d3d8:	4614      	mov	r4, r2
 800d3da:	4606      	mov	r6, r0
 800d3dc:	b118      	cbz	r0, 800d3e6 <_putc_r+0x12>
 800d3de:	6a03      	ldr	r3, [r0, #32]
 800d3e0:	b90b      	cbnz	r3, 800d3e6 <_putc_r+0x12>
 800d3e2:	f7fe f9c3 	bl	800b76c <__sinit>
 800d3e6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800d3e8:	07d8      	lsls	r0, r3, #31
 800d3ea:	d405      	bmi.n	800d3f8 <_putc_r+0x24>
 800d3ec:	89a3      	ldrh	r3, [r4, #12]
 800d3ee:	0599      	lsls	r1, r3, #22
 800d3f0:	d402      	bmi.n	800d3f8 <_putc_r+0x24>
 800d3f2:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800d3f4:	f7fe fa9b 	bl	800b92e <__retarget_lock_acquire_recursive>
 800d3f8:	68a3      	ldr	r3, [r4, #8]
 800d3fa:	3b01      	subs	r3, #1
 800d3fc:	2b00      	cmp	r3, #0
 800d3fe:	60a3      	str	r3, [r4, #8]
 800d400:	da05      	bge.n	800d40e <_putc_r+0x3a>
 800d402:	69a2      	ldr	r2, [r4, #24]
 800d404:	4293      	cmp	r3, r2
 800d406:	db12      	blt.n	800d42e <_putc_r+0x5a>
 800d408:	b2eb      	uxtb	r3, r5
 800d40a:	2b0a      	cmp	r3, #10
 800d40c:	d00f      	beq.n	800d42e <_putc_r+0x5a>
 800d40e:	6823      	ldr	r3, [r4, #0]
 800d410:	1c5a      	adds	r2, r3, #1
 800d412:	6022      	str	r2, [r4, #0]
 800d414:	701d      	strb	r5, [r3, #0]
 800d416:	b2ed      	uxtb	r5, r5
 800d418:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800d41a:	07da      	lsls	r2, r3, #31
 800d41c:	d405      	bmi.n	800d42a <_putc_r+0x56>
 800d41e:	89a3      	ldrh	r3, [r4, #12]
 800d420:	059b      	lsls	r3, r3, #22
 800d422:	d402      	bmi.n	800d42a <_putc_r+0x56>
 800d424:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800d426:	f7fe fa83 	bl	800b930 <__retarget_lock_release_recursive>
 800d42a:	4628      	mov	r0, r5
 800d42c:	bd70      	pop	{r4, r5, r6, pc}
 800d42e:	4629      	mov	r1, r5
 800d430:	4622      	mov	r2, r4
 800d432:	4630      	mov	r0, r6
 800d434:	f7ff fed7 	bl	800d1e6 <__swbuf_r>
 800d438:	4605      	mov	r5, r0
 800d43a:	e7ed      	b.n	800d418 <_putc_r+0x44>

0800d43c <_isatty_r>:
 800d43c:	b538      	push	{r3, r4, r5, lr}
 800d43e:	4d06      	ldr	r5, [pc, #24]	@ (800d458 <_isatty_r+0x1c>)
 800d440:	2300      	movs	r3, #0
 800d442:	4604      	mov	r4, r0
 800d444:	4608      	mov	r0, r1
 800d446:	602b      	str	r3, [r5, #0]
 800d448:	f7f4 fe96 	bl	8002178 <_isatty>
 800d44c:	1c43      	adds	r3, r0, #1
 800d44e:	d102      	bne.n	800d456 <_isatty_r+0x1a>
 800d450:	682b      	ldr	r3, [r5, #0]
 800d452:	b103      	cbz	r3, 800d456 <_isatty_r+0x1a>
 800d454:	6023      	str	r3, [r4, #0]
 800d456:	bd38      	pop	{r3, r4, r5, pc}
 800d458:	24000a34 	.word	0x24000a34

0800d45c <_lseek_r>:
 800d45c:	b538      	push	{r3, r4, r5, lr}
 800d45e:	4d07      	ldr	r5, [pc, #28]	@ (800d47c <_lseek_r+0x20>)
 800d460:	4604      	mov	r4, r0
 800d462:	4608      	mov	r0, r1
 800d464:	4611      	mov	r1, r2
 800d466:	2200      	movs	r2, #0
 800d468:	602a      	str	r2, [r5, #0]
 800d46a:	461a      	mov	r2, r3
 800d46c:	f7f4 fe8f 	bl	800218e <_lseek>
 800d470:	1c43      	adds	r3, r0, #1
 800d472:	d102      	bne.n	800d47a <_lseek_r+0x1e>
 800d474:	682b      	ldr	r3, [r5, #0]
 800d476:	b103      	cbz	r3, 800d47a <_lseek_r+0x1e>
 800d478:	6023      	str	r3, [r4, #0]
 800d47a:	bd38      	pop	{r3, r4, r5, pc}
 800d47c:	24000a34 	.word	0x24000a34

0800d480 <_read_r>:
 800d480:	b538      	push	{r3, r4, r5, lr}
 800d482:	4d07      	ldr	r5, [pc, #28]	@ (800d4a0 <_read_r+0x20>)
 800d484:	4604      	mov	r4, r0
 800d486:	4608      	mov	r0, r1
 800d488:	4611      	mov	r1, r2
 800d48a:	2200      	movs	r2, #0
 800d48c:	602a      	str	r2, [r5, #0]
 800d48e:	461a      	mov	r2, r3
 800d490:	f7f4 fe1d 	bl	80020ce <_read>
 800d494:	1c43      	adds	r3, r0, #1
 800d496:	d102      	bne.n	800d49e <_read_r+0x1e>
 800d498:	682b      	ldr	r3, [r5, #0]
 800d49a:	b103      	cbz	r3, 800d49e <_read_r+0x1e>
 800d49c:	6023      	str	r3, [r4, #0]
 800d49e:	bd38      	pop	{r3, r4, r5, pc}
 800d4a0:	24000a34 	.word	0x24000a34

0800d4a4 <_sbrk_r>:
 800d4a4:	b538      	push	{r3, r4, r5, lr}
 800d4a6:	4d06      	ldr	r5, [pc, #24]	@ (800d4c0 <_sbrk_r+0x1c>)
 800d4a8:	2300      	movs	r3, #0
 800d4aa:	4604      	mov	r4, r0
 800d4ac:	4608      	mov	r0, r1
 800d4ae:	602b      	str	r3, [r5, #0]
 800d4b0:	f7f4 fe7a 	bl	80021a8 <_sbrk>
 800d4b4:	1c43      	adds	r3, r0, #1
 800d4b6:	d102      	bne.n	800d4be <_sbrk_r+0x1a>
 800d4b8:	682b      	ldr	r3, [r5, #0]
 800d4ba:	b103      	cbz	r3, 800d4be <_sbrk_r+0x1a>
 800d4bc:	6023      	str	r3, [r4, #0]
 800d4be:	bd38      	pop	{r3, r4, r5, pc}
 800d4c0:	24000a34 	.word	0x24000a34

0800d4c4 <_write_r>:
 800d4c4:	b538      	push	{r3, r4, r5, lr}
 800d4c6:	4d07      	ldr	r5, [pc, #28]	@ (800d4e4 <_write_r+0x20>)
 800d4c8:	4604      	mov	r4, r0
 800d4ca:	4608      	mov	r0, r1
 800d4cc:	4611      	mov	r1, r2
 800d4ce:	2200      	movs	r2, #0
 800d4d0:	602a      	str	r2, [r5, #0]
 800d4d2:	461a      	mov	r2, r3
 800d4d4:	f7f4 fe18 	bl	8002108 <_write>
 800d4d8:	1c43      	adds	r3, r0, #1
 800d4da:	d102      	bne.n	800d4e2 <_write_r+0x1e>
 800d4dc:	682b      	ldr	r3, [r5, #0]
 800d4de:	b103      	cbz	r3, 800d4e2 <_write_r+0x1e>
 800d4e0:	6023      	str	r3, [r4, #0]
 800d4e2:	bd38      	pop	{r3, r4, r5, pc}
 800d4e4:	24000a34 	.word	0x24000a34

0800d4e8 <_close_r>:
 800d4e8:	b538      	push	{r3, r4, r5, lr}
 800d4ea:	4d06      	ldr	r5, [pc, #24]	@ (800d504 <_close_r+0x1c>)
 800d4ec:	2300      	movs	r3, #0
 800d4ee:	4604      	mov	r4, r0
 800d4f0:	4608      	mov	r0, r1
 800d4f2:	602b      	str	r3, [r5, #0]
 800d4f4:	f7f4 fe24 	bl	8002140 <_close>
 800d4f8:	1c43      	adds	r3, r0, #1
 800d4fa:	d102      	bne.n	800d502 <_close_r+0x1a>
 800d4fc:	682b      	ldr	r3, [r5, #0]
 800d4fe:	b103      	cbz	r3, 800d502 <_close_r+0x1a>
 800d500:	6023      	str	r3, [r4, #0]
 800d502:	bd38      	pop	{r3, r4, r5, pc}
 800d504:	24000a34 	.word	0x24000a34

0800d508 <_fstat_r>:
 800d508:	b538      	push	{r3, r4, r5, lr}
 800d50a:	4d07      	ldr	r5, [pc, #28]	@ (800d528 <_fstat_r+0x20>)
 800d50c:	2300      	movs	r3, #0
 800d50e:	4604      	mov	r4, r0
 800d510:	4608      	mov	r0, r1
 800d512:	4611      	mov	r1, r2
 800d514:	602b      	str	r3, [r5, #0]
 800d516:	f7f4 fe1f 	bl	8002158 <_fstat>
 800d51a:	1c43      	adds	r3, r0, #1
 800d51c:	d102      	bne.n	800d524 <_fstat_r+0x1c>
 800d51e:	682b      	ldr	r3, [r5, #0]
 800d520:	b103      	cbz	r3, 800d524 <_fstat_r+0x1c>
 800d522:	6023      	str	r3, [r4, #0]
 800d524:	bd38      	pop	{r3, r4, r5, pc}
 800d526:	bf00      	nop
 800d528:	24000a34 	.word	0x24000a34

0800d52c <__assert_func>:
 800d52c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d52e:	4614      	mov	r4, r2
 800d530:	461a      	mov	r2, r3
 800d532:	4b09      	ldr	r3, [pc, #36]	@ (800d558 <__assert_func+0x2c>)
 800d534:	681b      	ldr	r3, [r3, #0]
 800d536:	4605      	mov	r5, r0
 800d538:	68d8      	ldr	r0, [r3, #12]
 800d53a:	b14c      	cbz	r4, 800d550 <__assert_func+0x24>
 800d53c:	4b07      	ldr	r3, [pc, #28]	@ (800d55c <__assert_func+0x30>)
 800d53e:	9100      	str	r1, [sp, #0]
 800d540:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800d544:	4906      	ldr	r1, [pc, #24]	@ (800d560 <__assert_func+0x34>)
 800d546:	462b      	mov	r3, r5
 800d548:	f000 f87e 	bl	800d648 <fiprintf>
 800d54c:	f000 f89b 	bl	800d686 <abort>
 800d550:	4b04      	ldr	r3, [pc, #16]	@ (800d564 <__assert_func+0x38>)
 800d552:	461c      	mov	r4, r3
 800d554:	e7f3      	b.n	800d53e <__assert_func+0x12>
 800d556:	bf00      	nop
 800d558:	24000024 	.word	0x24000024
 800d55c:	0800df9d 	.word	0x0800df9d
 800d560:	0800dfaa 	.word	0x0800dfaa
 800d564:	0800dfd8 	.word	0x0800dfd8

0800d568 <_calloc_r>:
 800d568:	b570      	push	{r4, r5, r6, lr}
 800d56a:	fba1 5402 	umull	r5, r4, r1, r2
 800d56e:	b934      	cbnz	r4, 800d57e <_calloc_r+0x16>
 800d570:	4629      	mov	r1, r5
 800d572:	f7ff f943 	bl	800c7fc <_malloc_r>
 800d576:	4606      	mov	r6, r0
 800d578:	b928      	cbnz	r0, 800d586 <_calloc_r+0x1e>
 800d57a:	4630      	mov	r0, r6
 800d57c:	bd70      	pop	{r4, r5, r6, pc}
 800d57e:	220c      	movs	r2, #12
 800d580:	6002      	str	r2, [r0, #0]
 800d582:	2600      	movs	r6, #0
 800d584:	e7f9      	b.n	800d57a <_calloc_r+0x12>
 800d586:	462a      	mov	r2, r5
 800d588:	4621      	mov	r1, r4
 800d58a:	f7fe f99d 	bl	800b8c8 <memset>
 800d58e:	e7f4      	b.n	800d57a <_calloc_r+0x12>

0800d590 <_free_r>:
 800d590:	b538      	push	{r3, r4, r5, lr}
 800d592:	4605      	mov	r5, r0
 800d594:	2900      	cmp	r1, #0
 800d596:	d041      	beq.n	800d61c <_free_r+0x8c>
 800d598:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800d59c:	1f0c      	subs	r4, r1, #4
 800d59e:	2b00      	cmp	r3, #0
 800d5a0:	bfb8      	it	lt
 800d5a2:	18e4      	addlt	r4, r4, r3
 800d5a4:	f7ff fa56 	bl	800ca54 <__malloc_lock>
 800d5a8:	4a1d      	ldr	r2, [pc, #116]	@ (800d620 <_free_r+0x90>)
 800d5aa:	6813      	ldr	r3, [r2, #0]
 800d5ac:	b933      	cbnz	r3, 800d5bc <_free_r+0x2c>
 800d5ae:	6063      	str	r3, [r4, #4]
 800d5b0:	6014      	str	r4, [r2, #0]
 800d5b2:	4628      	mov	r0, r5
 800d5b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d5b8:	f7ff ba52 	b.w	800ca60 <__malloc_unlock>
 800d5bc:	42a3      	cmp	r3, r4
 800d5be:	d908      	bls.n	800d5d2 <_free_r+0x42>
 800d5c0:	6820      	ldr	r0, [r4, #0]
 800d5c2:	1821      	adds	r1, r4, r0
 800d5c4:	428b      	cmp	r3, r1
 800d5c6:	bf01      	itttt	eq
 800d5c8:	6819      	ldreq	r1, [r3, #0]
 800d5ca:	685b      	ldreq	r3, [r3, #4]
 800d5cc:	1809      	addeq	r1, r1, r0
 800d5ce:	6021      	streq	r1, [r4, #0]
 800d5d0:	e7ed      	b.n	800d5ae <_free_r+0x1e>
 800d5d2:	461a      	mov	r2, r3
 800d5d4:	685b      	ldr	r3, [r3, #4]
 800d5d6:	b10b      	cbz	r3, 800d5dc <_free_r+0x4c>
 800d5d8:	42a3      	cmp	r3, r4
 800d5da:	d9fa      	bls.n	800d5d2 <_free_r+0x42>
 800d5dc:	6811      	ldr	r1, [r2, #0]
 800d5de:	1850      	adds	r0, r2, r1
 800d5e0:	42a0      	cmp	r0, r4
 800d5e2:	d10b      	bne.n	800d5fc <_free_r+0x6c>
 800d5e4:	6820      	ldr	r0, [r4, #0]
 800d5e6:	4401      	add	r1, r0
 800d5e8:	1850      	adds	r0, r2, r1
 800d5ea:	4283      	cmp	r3, r0
 800d5ec:	6011      	str	r1, [r2, #0]
 800d5ee:	d1e0      	bne.n	800d5b2 <_free_r+0x22>
 800d5f0:	6818      	ldr	r0, [r3, #0]
 800d5f2:	685b      	ldr	r3, [r3, #4]
 800d5f4:	6053      	str	r3, [r2, #4]
 800d5f6:	4408      	add	r0, r1
 800d5f8:	6010      	str	r0, [r2, #0]
 800d5fa:	e7da      	b.n	800d5b2 <_free_r+0x22>
 800d5fc:	d902      	bls.n	800d604 <_free_r+0x74>
 800d5fe:	230c      	movs	r3, #12
 800d600:	602b      	str	r3, [r5, #0]
 800d602:	e7d6      	b.n	800d5b2 <_free_r+0x22>
 800d604:	6820      	ldr	r0, [r4, #0]
 800d606:	1821      	adds	r1, r4, r0
 800d608:	428b      	cmp	r3, r1
 800d60a:	bf04      	itt	eq
 800d60c:	6819      	ldreq	r1, [r3, #0]
 800d60e:	685b      	ldreq	r3, [r3, #4]
 800d610:	6063      	str	r3, [r4, #4]
 800d612:	bf04      	itt	eq
 800d614:	1809      	addeq	r1, r1, r0
 800d616:	6021      	streq	r1, [r4, #0]
 800d618:	6054      	str	r4, [r2, #4]
 800d61a:	e7ca      	b.n	800d5b2 <_free_r+0x22>
 800d61c:	bd38      	pop	{r3, r4, r5, pc}
 800d61e:	bf00      	nop
 800d620:	24000a30 	.word	0x24000a30

0800d624 <__ascii_mbtowc>:
 800d624:	b082      	sub	sp, #8
 800d626:	b901      	cbnz	r1, 800d62a <__ascii_mbtowc+0x6>
 800d628:	a901      	add	r1, sp, #4
 800d62a:	b142      	cbz	r2, 800d63e <__ascii_mbtowc+0x1a>
 800d62c:	b14b      	cbz	r3, 800d642 <__ascii_mbtowc+0x1e>
 800d62e:	7813      	ldrb	r3, [r2, #0]
 800d630:	600b      	str	r3, [r1, #0]
 800d632:	7812      	ldrb	r2, [r2, #0]
 800d634:	1e10      	subs	r0, r2, #0
 800d636:	bf18      	it	ne
 800d638:	2001      	movne	r0, #1
 800d63a:	b002      	add	sp, #8
 800d63c:	4770      	bx	lr
 800d63e:	4610      	mov	r0, r2
 800d640:	e7fb      	b.n	800d63a <__ascii_mbtowc+0x16>
 800d642:	f06f 0001 	mvn.w	r0, #1
 800d646:	e7f8      	b.n	800d63a <__ascii_mbtowc+0x16>

0800d648 <fiprintf>:
 800d648:	b40e      	push	{r1, r2, r3}
 800d64a:	b503      	push	{r0, r1, lr}
 800d64c:	4601      	mov	r1, r0
 800d64e:	ab03      	add	r3, sp, #12
 800d650:	4805      	ldr	r0, [pc, #20]	@ (800d668 <fiprintf+0x20>)
 800d652:	f853 2b04 	ldr.w	r2, [r3], #4
 800d656:	6800      	ldr	r0, [r0, #0]
 800d658:	9301      	str	r3, [sp, #4]
 800d65a:	f7fe ff8d 	bl	800c578 <_vfiprintf_r>
 800d65e:	b002      	add	sp, #8
 800d660:	f85d eb04 	ldr.w	lr, [sp], #4
 800d664:	b003      	add	sp, #12
 800d666:	4770      	bx	lr
 800d668:	24000024 	.word	0x24000024

0800d66c <__ascii_wctomb>:
 800d66c:	4603      	mov	r3, r0
 800d66e:	4608      	mov	r0, r1
 800d670:	b141      	cbz	r1, 800d684 <__ascii_wctomb+0x18>
 800d672:	2aff      	cmp	r2, #255	@ 0xff
 800d674:	d904      	bls.n	800d680 <__ascii_wctomb+0x14>
 800d676:	228a      	movs	r2, #138	@ 0x8a
 800d678:	601a      	str	r2, [r3, #0]
 800d67a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800d67e:	4770      	bx	lr
 800d680:	700a      	strb	r2, [r1, #0]
 800d682:	2001      	movs	r0, #1
 800d684:	4770      	bx	lr

0800d686 <abort>:
 800d686:	b508      	push	{r3, lr}
 800d688:	2006      	movs	r0, #6
 800d68a:	f000 f82b 	bl	800d6e4 <raise>
 800d68e:	2001      	movs	r0, #1
 800d690:	f7f4 fd12 	bl	80020b8 <_exit>

0800d694 <_raise_r>:
 800d694:	291f      	cmp	r1, #31
 800d696:	b538      	push	{r3, r4, r5, lr}
 800d698:	4605      	mov	r5, r0
 800d69a:	460c      	mov	r4, r1
 800d69c:	d904      	bls.n	800d6a8 <_raise_r+0x14>
 800d69e:	2316      	movs	r3, #22
 800d6a0:	6003      	str	r3, [r0, #0]
 800d6a2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800d6a6:	bd38      	pop	{r3, r4, r5, pc}
 800d6a8:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 800d6aa:	b112      	cbz	r2, 800d6b2 <_raise_r+0x1e>
 800d6ac:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800d6b0:	b94b      	cbnz	r3, 800d6c6 <_raise_r+0x32>
 800d6b2:	4628      	mov	r0, r5
 800d6b4:	f000 f830 	bl	800d718 <_getpid_r>
 800d6b8:	4622      	mov	r2, r4
 800d6ba:	4601      	mov	r1, r0
 800d6bc:	4628      	mov	r0, r5
 800d6be:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d6c2:	f000 b817 	b.w	800d6f4 <_kill_r>
 800d6c6:	2b01      	cmp	r3, #1
 800d6c8:	d00a      	beq.n	800d6e0 <_raise_r+0x4c>
 800d6ca:	1c59      	adds	r1, r3, #1
 800d6cc:	d103      	bne.n	800d6d6 <_raise_r+0x42>
 800d6ce:	2316      	movs	r3, #22
 800d6d0:	6003      	str	r3, [r0, #0]
 800d6d2:	2001      	movs	r0, #1
 800d6d4:	e7e7      	b.n	800d6a6 <_raise_r+0x12>
 800d6d6:	2100      	movs	r1, #0
 800d6d8:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 800d6dc:	4620      	mov	r0, r4
 800d6de:	4798      	blx	r3
 800d6e0:	2000      	movs	r0, #0
 800d6e2:	e7e0      	b.n	800d6a6 <_raise_r+0x12>

0800d6e4 <raise>:
 800d6e4:	4b02      	ldr	r3, [pc, #8]	@ (800d6f0 <raise+0xc>)
 800d6e6:	4601      	mov	r1, r0
 800d6e8:	6818      	ldr	r0, [r3, #0]
 800d6ea:	f7ff bfd3 	b.w	800d694 <_raise_r>
 800d6ee:	bf00      	nop
 800d6f0:	24000024 	.word	0x24000024

0800d6f4 <_kill_r>:
 800d6f4:	b538      	push	{r3, r4, r5, lr}
 800d6f6:	4d07      	ldr	r5, [pc, #28]	@ (800d714 <_kill_r+0x20>)
 800d6f8:	2300      	movs	r3, #0
 800d6fa:	4604      	mov	r4, r0
 800d6fc:	4608      	mov	r0, r1
 800d6fe:	4611      	mov	r1, r2
 800d700:	602b      	str	r3, [r5, #0]
 800d702:	f7f4 fcc9 	bl	8002098 <_kill>
 800d706:	1c43      	adds	r3, r0, #1
 800d708:	d102      	bne.n	800d710 <_kill_r+0x1c>
 800d70a:	682b      	ldr	r3, [r5, #0]
 800d70c:	b103      	cbz	r3, 800d710 <_kill_r+0x1c>
 800d70e:	6023      	str	r3, [r4, #0]
 800d710:	bd38      	pop	{r3, r4, r5, pc}
 800d712:	bf00      	nop
 800d714:	24000a34 	.word	0x24000a34

0800d718 <_getpid_r>:
 800d718:	f7f4 bcb6 	b.w	8002088 <_getpid>
 800d71c:	0000      	movs	r0, r0
	...

0800d720 <fmod>:
 800d720:	b508      	push	{r3, lr}
 800d722:	ed2d 8b04 	vpush	{d8-d9}
 800d726:	eeb0 9b40 	vmov.f64	d9, d0
 800d72a:	eeb0 8b41 	vmov.f64	d8, d1
 800d72e:	f000 f81b 	bl	800d768 <__ieee754_fmod>
 800d732:	eeb4 9b48 	vcmp.f64	d9, d8
 800d736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d73a:	d60c      	bvs.n	800d756 <fmod+0x36>
 800d73c:	ed9f 9b08 	vldr	d9, [pc, #32]	@ 800d760 <fmod+0x40>
 800d740:	eeb4 8b49 	vcmp.f64	d8, d9
 800d744:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d748:	d105      	bne.n	800d756 <fmod+0x36>
 800d74a:	f7fe f8c5 	bl	800b8d8 <__errno>
 800d74e:	ee89 0b09 	vdiv.f64	d0, d9, d9
 800d752:	2321      	movs	r3, #33	@ 0x21
 800d754:	6003      	str	r3, [r0, #0]
 800d756:	ecbd 8b04 	vpop	{d8-d9}
 800d75a:	bd08      	pop	{r3, pc}
 800d75c:	f3af 8000 	nop.w
	...

0800d768 <__ieee754_fmod>:
 800d768:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d76c:	ed8d 1b00 	vstr	d1, [sp]
 800d770:	e9dd 0600 	ldrd	r0, r6, [sp]
 800d774:	f026 4500 	bic.w	r5, r6, #2147483648	@ 0x80000000
 800d778:	ea50 0305 	orrs.w	r3, r0, r5
 800d77c:	4686      	mov	lr, r0
 800d77e:	d00d      	beq.n	800d79c <__ieee754_fmod+0x34>
 800d780:	ee10 ca90 	vmov	ip, s1
 800d784:	4b77      	ldr	r3, [pc, #476]	@ (800d964 <__ieee754_fmod+0x1fc>)
 800d786:	f02c 4800 	bic.w	r8, ip, #2147483648	@ 0x80000000
 800d78a:	4598      	cmp	r8, r3
 800d78c:	d806      	bhi.n	800d79c <__ieee754_fmod+0x34>
 800d78e:	4243      	negs	r3, r0
 800d790:	4a75      	ldr	r2, [pc, #468]	@ (800d968 <__ieee754_fmod+0x200>)
 800d792:	4303      	orrs	r3, r0
 800d794:	ea45 73d3 	orr.w	r3, r5, r3, lsr #31
 800d798:	4293      	cmp	r3, r2
 800d79a:	d908      	bls.n	800d7ae <__ieee754_fmod+0x46>
 800d79c:	ed9d 7b00 	vldr	d7, [sp]
 800d7a0:	ee20 7b07 	vmul.f64	d7, d0, d7
 800d7a4:	ee87 0b07 	vdiv.f64	d0, d7, d7
 800d7a8:	b003      	add	sp, #12
 800d7aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d7ae:	ee10 9a10 	vmov	r9, s0
 800d7b2:	45a8      	cmp	r8, r5
 800d7b4:	464f      	mov	r7, r9
 800d7b6:	f00c 4400 	and.w	r4, ip, #2147483648	@ 0x80000000
 800d7ba:	dc09      	bgt.n	800d7d0 <__ieee754_fmod+0x68>
 800d7bc:	dbf4      	blt.n	800d7a8 <__ieee754_fmod+0x40>
 800d7be:	4548      	cmp	r0, r9
 800d7c0:	d8f2      	bhi.n	800d7a8 <__ieee754_fmod+0x40>
 800d7c2:	d105      	bne.n	800d7d0 <__ieee754_fmod+0x68>
 800d7c4:	4b69      	ldr	r3, [pc, #420]	@ (800d96c <__ieee754_fmod+0x204>)
 800d7c6:	eb03 7314 	add.w	r3, r3, r4, lsr #28
 800d7ca:	ed93 0b00 	vldr	d0, [r3]
 800d7ce:	e7eb      	b.n	800d7a8 <__ieee754_fmod+0x40>
 800d7d0:	4965      	ldr	r1, [pc, #404]	@ (800d968 <__ieee754_fmod+0x200>)
 800d7d2:	ea1c 0f01 	tst.w	ip, r1
 800d7d6:	d14a      	bne.n	800d86e <__ieee754_fmod+0x106>
 800d7d8:	f1b8 0f00 	cmp.w	r8, #0
 800d7dc:	d13f      	bne.n	800d85e <__ieee754_fmod+0xf6>
 800d7de:	4a64      	ldr	r2, [pc, #400]	@ (800d970 <__ieee754_fmod+0x208>)
 800d7e0:	464b      	mov	r3, r9
 800d7e2:	2b00      	cmp	r3, #0
 800d7e4:	dc38      	bgt.n	800d858 <__ieee754_fmod+0xf0>
 800d7e6:	420e      	tst	r6, r1
 800d7e8:	d150      	bne.n	800d88c <__ieee754_fmod+0x124>
 800d7ea:	2d00      	cmp	r5, #0
 800d7ec:	d147      	bne.n	800d87e <__ieee754_fmod+0x116>
 800d7ee:	4b60      	ldr	r3, [pc, #384]	@ (800d970 <__ieee754_fmod+0x208>)
 800d7f0:	4601      	mov	r1, r0
 800d7f2:	2900      	cmp	r1, #0
 800d7f4:	dc40      	bgt.n	800d878 <__ieee754_fmod+0x110>
 800d7f6:	495f      	ldr	r1, [pc, #380]	@ (800d974 <__ieee754_fmod+0x20c>)
 800d7f8:	428a      	cmp	r2, r1
 800d7fa:	db4b      	blt.n	800d894 <__ieee754_fmod+0x12c>
 800d7fc:	f3cc 0113 	ubfx	r1, ip, #0, #20
 800d800:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800d804:	f8df c16c 	ldr.w	ip, [pc, #364]	@ 800d974 <__ieee754_fmod+0x20c>
 800d808:	4563      	cmp	r3, ip
 800d80a:	db58      	blt.n	800d8be <__ieee754_fmod+0x156>
 800d80c:	f3c6 0613 	ubfx	r6, r6, #0, #20
 800d810:	f446 1680 	orr.w	r6, r6, #1048576	@ 0x100000
 800d814:	1ad0      	subs	r0, r2, r3
 800d816:	1b8a      	subs	r2, r1, r6
 800d818:	eba7 050e 	sub.w	r5, r7, lr
 800d81c:	2800      	cmp	r0, #0
 800d81e:	d164      	bne.n	800d8ea <__ieee754_fmod+0x182>
 800d820:	4577      	cmp	r7, lr
 800d822:	bf38      	it	cc
 800d824:	f102 32ff 	addcc.w	r2, r2, #4294967295	@ 0xffffffff
 800d828:	2a00      	cmp	r2, #0
 800d82a:	bfbc      	itt	lt
 800d82c:	463d      	movlt	r5, r7
 800d82e:	460a      	movlt	r2, r1
 800d830:	ea52 0105 	orrs.w	r1, r2, r5
 800d834:	d0c6      	beq.n	800d7c4 <__ieee754_fmod+0x5c>
 800d836:	f5b2 1f80 	cmp.w	r2, #1048576	@ 0x100000
 800d83a:	db6b      	blt.n	800d914 <__ieee754_fmod+0x1ac>
 800d83c:	494d      	ldr	r1, [pc, #308]	@ (800d974 <__ieee754_fmod+0x20c>)
 800d83e:	428b      	cmp	r3, r1
 800d840:	db6e      	blt.n	800d920 <__ieee754_fmod+0x1b8>
 800d842:	f5a2 1280 	sub.w	r2, r2, #1048576	@ 0x100000
 800d846:	4322      	orrs	r2, r4
 800d848:	f203 33ff 	addw	r3, r3, #1023	@ 0x3ff
 800d84c:	ea42 5103 	orr.w	r1, r2, r3, lsl #20
 800d850:	4628      	mov	r0, r5
 800d852:	ec41 0b10 	vmov	d0, r0, r1
 800d856:	e7a7      	b.n	800d7a8 <__ieee754_fmod+0x40>
 800d858:	3a01      	subs	r2, #1
 800d85a:	005b      	lsls	r3, r3, #1
 800d85c:	e7c1      	b.n	800d7e2 <__ieee754_fmod+0x7a>
 800d85e:	4a45      	ldr	r2, [pc, #276]	@ (800d974 <__ieee754_fmod+0x20c>)
 800d860:	ea4f 23c8 	mov.w	r3, r8, lsl #11
 800d864:	2b00      	cmp	r3, #0
 800d866:	ddbe      	ble.n	800d7e6 <__ieee754_fmod+0x7e>
 800d868:	3a01      	subs	r2, #1
 800d86a:	005b      	lsls	r3, r3, #1
 800d86c:	e7fa      	b.n	800d864 <__ieee754_fmod+0xfc>
 800d86e:	ea4f 5228 	mov.w	r2, r8, asr #20
 800d872:	f2a2 32ff 	subw	r2, r2, #1023	@ 0x3ff
 800d876:	e7b6      	b.n	800d7e6 <__ieee754_fmod+0x7e>
 800d878:	3b01      	subs	r3, #1
 800d87a:	0049      	lsls	r1, r1, #1
 800d87c:	e7b9      	b.n	800d7f2 <__ieee754_fmod+0x8a>
 800d87e:	4b3d      	ldr	r3, [pc, #244]	@ (800d974 <__ieee754_fmod+0x20c>)
 800d880:	02e9      	lsls	r1, r5, #11
 800d882:	2900      	cmp	r1, #0
 800d884:	ddb7      	ble.n	800d7f6 <__ieee754_fmod+0x8e>
 800d886:	3b01      	subs	r3, #1
 800d888:	0049      	lsls	r1, r1, #1
 800d88a:	e7fa      	b.n	800d882 <__ieee754_fmod+0x11a>
 800d88c:	152b      	asrs	r3, r5, #20
 800d88e:	f2a3 33ff 	subw	r3, r3, #1023	@ 0x3ff
 800d892:	e7b0      	b.n	800d7f6 <__ieee754_fmod+0x8e>
 800d894:	eba1 0c02 	sub.w	ip, r1, r2
 800d898:	f1bc 0f1f 	cmp.w	ip, #31
 800d89c:	dc09      	bgt.n	800d8b2 <__ieee754_fmod+0x14a>
 800d89e:	f202 411e 	addw	r1, r2, #1054	@ 0x41e
 800d8a2:	fa08 f70c 	lsl.w	r7, r8, ip
 800d8a6:	fa29 f101 	lsr.w	r1, r9, r1
 800d8aa:	4339      	orrs	r1, r7
 800d8ac:	fa09 f70c 	lsl.w	r7, r9, ip
 800d8b0:	e7a8      	b.n	800d804 <__ieee754_fmod+0x9c>
 800d8b2:	4931      	ldr	r1, [pc, #196]	@ (800d978 <__ieee754_fmod+0x210>)
 800d8b4:	1a89      	subs	r1, r1, r2
 800d8b6:	fa09 f101 	lsl.w	r1, r9, r1
 800d8ba:	2700      	movs	r7, #0
 800d8bc:	e7a2      	b.n	800d804 <__ieee754_fmod+0x9c>
 800d8be:	ebac 0c03 	sub.w	ip, ip, r3
 800d8c2:	f1bc 0f1f 	cmp.w	ip, #31
 800d8c6:	dc09      	bgt.n	800d8dc <__ieee754_fmod+0x174>
 800d8c8:	f203 461e 	addw	r6, r3, #1054	@ 0x41e
 800d8cc:	fa05 f50c 	lsl.w	r5, r5, ip
 800d8d0:	fa20 f606 	lsr.w	r6, r0, r6
 800d8d4:	432e      	orrs	r6, r5
 800d8d6:	fa00 fe0c 	lsl.w	lr, r0, ip
 800d8da:	e79b      	b.n	800d814 <__ieee754_fmod+0xac>
 800d8dc:	4e26      	ldr	r6, [pc, #152]	@ (800d978 <__ieee754_fmod+0x210>)
 800d8de:	1af6      	subs	r6, r6, r3
 800d8e0:	fa00 f606 	lsl.w	r6, r0, r6
 800d8e4:	f04f 0e00 	mov.w	lr, #0
 800d8e8:	e794      	b.n	800d814 <__ieee754_fmod+0xac>
 800d8ea:	4577      	cmp	r7, lr
 800d8ec:	bf38      	it	cc
 800d8ee:	f102 32ff 	addcc.w	r2, r2, #4294967295	@ 0xffffffff
 800d8f2:	2a00      	cmp	r2, #0
 800d8f4:	da05      	bge.n	800d902 <__ieee754_fmod+0x19a>
 800d8f6:	0ffa      	lsrs	r2, r7, #31
 800d8f8:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800d8fc:	007f      	lsls	r7, r7, #1
 800d8fe:	3801      	subs	r0, #1
 800d900:	e789      	b.n	800d816 <__ieee754_fmod+0xae>
 800d902:	ea52 0105 	orrs.w	r1, r2, r5
 800d906:	f43f af5d 	beq.w	800d7c4 <__ieee754_fmod+0x5c>
 800d90a:	0fe9      	lsrs	r1, r5, #31
 800d90c:	eb01 0142 	add.w	r1, r1, r2, lsl #1
 800d910:	006f      	lsls	r7, r5, #1
 800d912:	e7f4      	b.n	800d8fe <__ieee754_fmod+0x196>
 800d914:	0fe9      	lsrs	r1, r5, #31
 800d916:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 800d91a:	006d      	lsls	r5, r5, #1
 800d91c:	3b01      	subs	r3, #1
 800d91e:	e78a      	b.n	800d836 <__ieee754_fmod+0xce>
 800d920:	1ac9      	subs	r1, r1, r3
 800d922:	2914      	cmp	r1, #20
 800d924:	dc0a      	bgt.n	800d93c <__ieee754_fmod+0x1d4>
 800d926:	f203 431e 	addw	r3, r3, #1054	@ 0x41e
 800d92a:	fa02 f303 	lsl.w	r3, r2, r3
 800d92e:	40cd      	lsrs	r5, r1
 800d930:	432b      	orrs	r3, r5
 800d932:	410a      	asrs	r2, r1
 800d934:	ea42 0104 	orr.w	r1, r2, r4
 800d938:	4618      	mov	r0, r3
 800d93a:	e78a      	b.n	800d852 <__ieee754_fmod+0xea>
 800d93c:	291f      	cmp	r1, #31
 800d93e:	dc07      	bgt.n	800d950 <__ieee754_fmod+0x1e8>
 800d940:	f203 431e 	addw	r3, r3, #1054	@ 0x41e
 800d944:	40cd      	lsrs	r5, r1
 800d946:	fa02 f303 	lsl.w	r3, r2, r3
 800d94a:	432b      	orrs	r3, r5
 800d94c:	4622      	mov	r2, r4
 800d94e:	e7f1      	b.n	800d934 <__ieee754_fmod+0x1cc>
 800d950:	f1c3 437f 	rsb	r3, r3, #4278190080	@ 0xff000000
 800d954:	f503 037f 	add.w	r3, r3, #16711680	@ 0xff0000
 800d958:	f503 437b 	add.w	r3, r3, #64256	@ 0xfb00
 800d95c:	33e2      	adds	r3, #226	@ 0xe2
 800d95e:	fa42 f303 	asr.w	r3, r2, r3
 800d962:	e7f3      	b.n	800d94c <__ieee754_fmod+0x1e4>
 800d964:	7fefffff 	.word	0x7fefffff
 800d968:	7ff00000 	.word	0x7ff00000
 800d96c:	0800e1e0 	.word	0x0800e1e0
 800d970:	fffffbed 	.word	0xfffffbed
 800d974:	fffffc02 	.word	0xfffffc02
 800d978:	fffffbe2 	.word	0xfffffbe2

0800d97c <_init>:
 800d97c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d97e:	bf00      	nop
 800d980:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d982:	bc08      	pop	{r3}
 800d984:	469e      	mov	lr, r3
 800d986:	4770      	bx	lr

0800d988 <_fini>:
 800d988:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d98a:	bf00      	nop
 800d98c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800d98e:	bc08      	pop	{r3}
 800d990:	469e      	mov	lr, r3
 800d992:	4770      	bx	lr
